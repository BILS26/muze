{"version":3,"sources":["webpack://muze/webpack/universalModuleDefinition","webpack://muze/webpack/bootstrap","webpack://muze/webpack://DataModel/webpack/universalModuleDefinition","webpack://muze/webpack://DataModel/webpack/bootstrap","webpack://muze/webpack://DataModel/src/index.js","webpack://muze/webpack://DataModel/src/enums/data-format.js","webpack://muze/webpack://DataModel/src/enums/dimension-subtype.js","webpack://muze/webpack://DataModel/src/enums/measure-subtype.js","webpack://muze/webpack://DataModel/src/enums/field-type.js","webpack://muze/webpack://DataModel/src/enums/filtering-mode.js","webpack://muze/webpack://DataModel/src/utils/date-time-formatter.js","webpack://muze/webpack://DataModel/src/utils/column-major.js","webpack://muze/webpack://DataModel/src/utils/extend2.js","webpack://muze/webpack://DataModel/src/utils/helper.js","webpack://muze/webpack://DataModel/src/field-store.js","webpack://muze/webpack://DataModel/src/value.js","webpack://muze/webpack://DataModel/src/operator/row-diffset-iterator.js","webpack://muze/webpack://DataModel/src/invalid-aware-types.js","webpack://muze/webpack://DataModel/src/operator/get-common-schema.js","webpack://muze/webpack://DataModel/src/constants/index.js","webpack://muze/webpack://DataModel/src/operator/cross-product.js","webpack://muze/webpack://DataModel/src/operator/merge-sort.js","webpack://muze/webpack://DataModel/src/operator/data-builder.js","webpack://muze/webpack://DataModel/src/operator/difference.js","webpack://muze/webpack://DataModel/src/operator/group-by-function.js","webpack://muze/webpack://DataModel/src/utils/reducer-store.js","webpack://muze/webpack://DataModel/src/operator/natural-join-filter-function.js","webpack://muze/webpack://DataModel/src/operator/union.js","webpack://muze/webpack://DataModel/src/operator/outer-join.js","webpack://muze/webpack://DataModel/src/fields/field/index.js","webpack://muze/webpack://DataModel/src/fields/dimension/index.js","webpack://muze/webpack://DataModel/src/fields/categorical/index.js","webpack://muze/webpack://DataModel/src/fields/temporal/index.js","webpack://muze/webpack://DataModel/src/fields/binned/index.js","webpack://muze/webpack://DataModel/src/fields/measure/index.js","webpack://muze/webpack://DataModel/src/fields/continuous/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/field-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/categorical-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/temporal-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/binned-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/continuous-parser/index.js","webpack://muze/webpack://DataModel/src/fields/partial-field/index.js","webpack://muze/webpack://DataModel/src/field-creator.js","webpack://muze/webpack://DataModel/src/default-config.js","webpack://muze/webpack://DataModel/src/converter/dsv-arr.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/dsv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/csv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/tsv.js","webpack://muze/webpack://DataModel/src/converter/dsv-str.js","webpack://muze/webpack://DataModel/src/converter/flat-json.js","webpack://muze/webpack://DataModel/src/converter/auto-resolver.js","webpack://muze/webpack://DataModel/src/helper.js","webpack://muze/webpack://DataModel/src/relation.js","webpack://muze/webpack://DataModel/src/datamodel.js","webpack://muze/webpack://DataModel/src/operator/group-by.js","webpack://muze/webpack://DataModel/src/operator/bucket-creator.js","webpack://muze/webpack://DataModel/src/stats/index.js","webpack://muze/webpack://DataModel/src/export.js","webpack://muze/webpack://DataModel/src/operator/compose.js","webpack://muze/webpack://DataModel/src/operator/pure-operators.js","webpack://muze/webpack://DataModel/src/operator/natural-join.js","webpack://muze/webpack://hyperdis/webpack/universalModuleDefinition","webpack://muze/webpack://hyperdis/webpack/bootstrap","webpack://muze/webpack://hyperdis/src/utils/set.js","webpack://muze/webpack://hyperdis/src/utils/index.js","webpack://muze/webpack://hyperdis/src/graph-node.js","webpack://muze/webpack://hyperdis/src/electric-node.js","webpack://muze/webpack://hyperdis/src/graph.js","webpack://muze/webpack://hyperdis/src/model.js","webpack://muze/webpack://hyperdis/src/index.js","webpack://muze/(webpack)/buildin/module.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/SmartlabelManager.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/lib.js","webpack://muze/./packages/muze/src/index.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/container-manager.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisector.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisect.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/range.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ticks.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/threshold/sturges.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/map.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/nest.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/set.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/ordinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/band.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/define.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/lab.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/rgb.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/object.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/string.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/value.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/parse.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/date.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/round.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/decompose.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/zoom.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hsl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hcl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/piecewise.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/continuous.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatDecimal.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/exponent.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatSpecifier.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTrim.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatPrefixAuto.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatRounded.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTypes.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatGroup.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatNumerals.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionFixed.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/tickFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionPrefix.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionRound.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/nice.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/log.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/pow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/threshold.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/interval.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/millisecond.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/second.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/minute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/hour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/day.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/week.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/month.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/year.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMinute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcHour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcDay.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcWeek.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMonth.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcYear.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoParse.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/time.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20b.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20c.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/viridis.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/sequential.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Accent.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Dark2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Paired.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set3.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/ramp.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/BrBG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PRGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PiYG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PuOr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdGy.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/Spectral.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","webpack://muze/./packages/muze-utils/src/enums/namespace.js","webpack://muze/./packages/muze-utils/src/enums/reserved-fields.js","webpack://muze/./packages/muze-utils/src/enums/common-props.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/axis.js","webpack://muze/./packages/muze-utils/node_modules/d3-path/src/path.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/arc.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/line.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/area.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/radial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/lineRadial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/diamond.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/star.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/square.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/triangle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/wye.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/noop.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/bundle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRom.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linearClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/monotone.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/natural.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/step.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/stack.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/cubic.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/poly.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/sin.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/bounce.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/back.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/elastic.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/RedBlackTree.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Edge.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Cell.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Beach.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Diagram.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/voronoi.js","webpack://muze/./packages/muze-utils/src/DataSystem/selection.js","webpack://muze/./packages/muze-utils/src/common-utils.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/circle.js","webpack://muze/./packages/muze-utils/src/DataSystem/dataSelect.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol.js","webpack://muze/./packages/muze-utils/src/enums/stack-config.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/diverging.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/expand.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/wiggle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/pie.js","webpack://muze/./packages/muze-utils/src/enums/constants.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespaces.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespace.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/creator.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selector.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selectorAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/matcher.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sparse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/enter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/data.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sort.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/window.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/classed.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/html.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/raise.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/lower.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/insert.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/clone.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/exit.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/order.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/call.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/nodes.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/node.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/size.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/empty.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/each.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/property.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/append.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/datum.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/local.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/sourceEvent.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/mouse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/touch.js","webpack://muze/./packages/muze-utils/node_modules/d3-dispatch/src/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/noevent.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/nodrag.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/event.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/drag.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timer.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timeout.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/schedule.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/tween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/interpolate.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selection.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attrTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/styleTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/delay.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/ease.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/interrupt.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/interrupt.js","webpack://muze/./packages/muze-utils/src/renderer-utils.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/event-list.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/lifecycle-manager.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/index.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/helper.js","webpack://muze/./packages/muze-utils/src/index.js","webpack://muze/./packages/muze-firebolt/src/enums/actions.js","webpack://muze/./packages/muze-firebolt/src/enums/selection.js","webpack://muze/./packages/muze-firebolt/src/selection-set/index.js","webpack://muze/./packages/muze-firebolt/src/selection-set/selection-set.js","webpack://muze/./packages/muze-firebolt/src/helper/index.js","webpack://muze/./packages/muze-firebolt/src/firebolt.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/generic.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/volatile.js","webpack://muze/./packages/muze-firebolt/src/enums/behaviours.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/highlight.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/brush.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/filter.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/persistent.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/select.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-action-config.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-event.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/hover.js","webpack://muze/./packages/muze-firebolt/src/enums/constants.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/click.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/drag.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/longtouch.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/touch-drag.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/props.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/generic-sideeffect.js","webpack://muze/./packages/muze-firebolt/src/side-effects/surrogate.js","webpack://muze/./packages/muze-firebolt/src/side-effects/spawnable.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/helper.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/selection-box-drag.js","webpack://muze/./packages/muze-tooltip/src/constants.js","webpack://muze/./packages/muze-tooltip/src/default-config.js","webpack://muze/./packages/muze-tooltip/src/helper.js","webpack://muze/./packages/muze-tooltip/src/strategy.js","webpack://muze/./packages/muze-tooltip/src/content.js","webpack://muze/./packages/muze-tooltip/src/tooltip.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/strategies.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/helper/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/crossline/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/strategy.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/filter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/anchors/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/persistent-anchors.js","webpack://muze/./packages/muze-firebolt/src/side-effects/brush-anchors.js","webpack://muze/./packages/muze-firebolt/src/behaviour-effect-map.js","webpack://muze/./packages/visual-layer/src/enums/constants.js","webpack://muze/./packages/visual-layer/src/layers/area/default-config.js","webpack://muze/./packages/visual-layer/src/simple-layer/simple-layer.js","webpack://muze/./packages/visual-layer/src/base-layer/props.js","webpack://muze/./packages/muze-axis/src/enums/axis-orientation.js","webpack://muze/./packages/muze-axis/src/enums/scale-type.js","webpack://muze/./packages/muze-axis/src/enums/constants.js","webpack://muze/./packages/muze-axis/src/scale-creator.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/default-config.js","webpack://muze/./packages/muze-axis/src/axis-renderer.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/space-setter.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/helper.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/props.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/simple-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/linear.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/log.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/pow.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/continous-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/band-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/time-axis.js","webpack://muze/./packages/muze-axis/src/color-axis/color-maps.js","webpack://muze/./packages/muze-axis/src/color-axis/defaults.js","webpack://muze/./packages/muze-axis/src/color-axis/props.js","webpack://muze/./packages/muze-axis/src/helper.js","webpack://muze/./packages/muze-axis/src/color-axis/color-strategy.js","webpack://muze/./packages/muze-axis/src/color-axis/color-axis.js","webpack://muze/./packages/muze-axis/src/size-axis/defaults.js","webpack://muze/./packages/muze-axis/src/size-axis/size-strategy.js","webpack://muze/./packages/muze-axis/src/size-axis/props.js","webpack://muze/./packages/muze-axis/src/size-axis/size-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/defaults.js","webpack://muze/./packages/muze-axis/src/shape-axis/props.js","webpack://muze/./packages/muze-axis/src/shape-axis/shape-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/helper.js","webpack://muze/./packages/muze-axis/src/data-type-scale-map.js","webpack://muze/./packages/transform/src/group-transform/index.js","webpack://muze/./packages/transform/src/identity-transform/index.js","webpack://muze/./packages/transform/src/transform-factory/index.js","webpack://muze/./packages/transform/src/enums/transform-type.js","webpack://muze/./packages/transform/src/stack-transform/index.js","webpack://muze/./packages/visual-layer/src/helpers/index.js","webpack://muze/./packages/visual-layer/src/base-layer/listener-map.js","webpack://muze/./packages/visual-layer/src/enums/props.js","webpack://muze/./packages/visual-layer/src/base-layer/default-options.js","webpack://muze/./packages/visual-layer/src/base-layer/base-layer.js","webpack://muze/./packages/visual-layer/src/layers/line/renderer.js","webpack://muze/./packages/visual-layer/src/layers/line/default-config.js","webpack://muze/./packages/visual-layer/src/layers/line/line.js","webpack://muze/./packages/visual-layer/src/layers/area/renderer.js","webpack://muze/./packages/visual-layer/src/layers/area/area.js","webpack://muze/./packages/visual-layer/src/layers/arc/default-config.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc-helper.js","webpack://muze/./packages/visual-layer/src/layers/text/renderer.js","webpack://muze/./packages/visual-layer/src/layers/text/default-config.js","webpack://muze/./packages/visual-layer/src/layers/text/text.js","webpack://muze/./packages/visual-layer/src/layers/point/renderer.js","webpack://muze/./packages/visual-layer/src/layers/point/default-config.js","webpack://muze/./packages/visual-layer/src/layers/point/point.js","webpack://muze/./packages/visual-layer/src/layers/bar/renderer.js","webpack://muze/./packages/visual-layer/src/layers/bar/default-config.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar-helper.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar.js","webpack://muze/./packages/visual-layer/src/layers/tick/default-config.js","webpack://muze/./packages/visual-layer/src/layers/tick/renderer.js","webpack://muze/./packages/visual-layer/src/layers/tick/tick.js","webpack://muze/./packages/visual-layer/src/enums/layer-types.js","webpack://muze/./packages/visual-layer/src/layer-factory/layer-factory.js","webpack://muze/./packages/visual-layer/src/layer-factory/index.js","webpack://muze/./packages/visual-layer/src/defaults.js","webpack://muze/./packages/visual-group/src/enums/constants.js","webpack://muze/./packages/visual-group/src/visual-group/local-options.js","webpack://muze/./packages/visual-group/src/simple-group/simple-group.js","webpack://muze/./packages/visual-group/src/variable/variable.js","webpack://muze/./packages/visual-group/src/variable/composed-vars.js","webpack://muze/./packages/visual-group/src/variable/simple-var.js","webpack://muze/./packages/visual-group/src/encoder/field-sanitizer.js","webpack://muze/./packages/visual-group/src/encoder/visual-encoder.js","webpack://muze/./packages/visual-group/src/enums/scale-maps.js","webpack://muze/./packages/visual-group/src/data-type-scale-map.js","webpack://muze/./packages/visual-group/src/encoder/encoder-helper.js","webpack://muze/./packages/visual-group/src/encoder/cartesian-encoder.js","webpack://muze/./packages/visual-group/src/encoder/polar-encoder.js","webpack://muze/./packages/visual-group/src/encoder/retinal-encoder.js","webpack://muze/./packages/visual-group/src/group-helper/group-utils.js","webpack://muze/./packages/visual-unit/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/visual-unit/src/helper/index.js","webpack://muze/./packages/visual-unit/src/enums/constants.js","webpack://muze/./packages/visual-unit/src/helper/grid-lines.js","webpack://muze/./packages/visual-unit/src/default-config.js","webpack://muze/./packages/visual-unit/src/local-options.js","webpack://muze/./packages/visual-unit/src/enums/reactive-props.js","webpack://muze/./packages/visual-unit/src/listener-map.js","webpack://muze/./packages/visual-unit/src/props.js","webpack://muze/./packages/visual-unit/src/firebolt/helper.js","webpack://muze/./packages/visual-unit/src/firebolt/payload-generator.js","webpack://muze/./packages/visual-unit/src/firebolt/data-propagator.js","webpack://muze/./packages/visual-unit/src/firebolt/index.js","webpack://muze/./packages/visual-unit/src/visual-unit.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-model.js","webpack://muze/./packages/visual-group/src/group-helper/cell-creator.js","webpack://muze/./packages/visual-group/src/group-helper/resolver-props.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-resolver.js","webpack://muze/./packages/visual-group/src/visual-group/value-matrix.js","webpack://muze/./packages/visual-group/src/visual-group/helper.js","webpack://muze/./packages/visual-group/src/visual-group/change-listener.js","webpack://muze/./packages/visual-group/src/visual-group/props.js","webpack://muze/./packages/visual-group/src/visual-group/visual-group.js","webpack://muze/./packages/muze-legend/src/firebolt/behavioural/select.js","webpack://muze/./packages/muze-legend/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/muze-legend/src/firebolt/behaviour-effect-map.js","webpack://muze/./packages/muze-legend/src/enums/behaviours.js","webpack://muze/./packages/muze-legend/src/enums/side-effects.js","webpack://muze/./packages/muze-legend/src/enums/constants.js","webpack://muze/./packages/muze-legend/src/firebolt/helper.js","webpack://muze/./packages/muze-legend/src/firebolt/legend-firebolt.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/drag.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/hover.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/click.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/index.js","webpack://muze/./packages/muze-legend/src/enums/actions.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/selection-box-drag.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/selection-box/index.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/strategies.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/index.js","webpack://muze/./packages/muze-legend/src/legend/props.js","webpack://muze/./packages/muze-legend/src/legend/defaults.js","webpack://muze/./packages/muze-legend/src/legend/legend-helper.js","webpack://muze/./packages/muze-legend/src/legend/simple-legend.js","webpack://muze/./packages/muze-legend/src/legend/position-config.js","webpack://muze/./packages/muze-legend/src/legend/renderer.js","webpack://muze/./packages/muze-legend/src/legend/discrete-legend.js","webpack://muze/./packages/muze-legend/src/legend/gradient-helper.js","webpack://muze/./packages/muze-legend/src/legend/gradient-legend.js","webpack://muze/./packages/muze-legend/src/legend/step-legend.js","webpack://muze/./packages/muze/src/constants.js","webpack://muze/./packages/muze/src/operators.js","webpack://muze/./packages/muze/src/action-model.js","webpack://muze/./packages/muze/src/canvas/defaults.js","webpack://muze/./packages/muze/src/canvas/local-options.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/layoutComponent.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/dummy-component.js","webpack://muze/./packages/muze/src/defaults.js","webpack://muze/./packages/layout/src/tree-layout/constants/defaults.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/definitionModel.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/helper/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/tree/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/layout-model/index.js","webpack://muze/./packages/layout/src/tree-layout/utils/index.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-point.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-parser.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/helper.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/html-data.js","webpack://muze/./packages/layout/src/tree-layout/renderers/renderer.js","webpack://muze/./packages/layout/src/tree-layout/renderers/html-renderer.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/layout-def.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/index.js","webpack://muze/./packages/muze/src/canvas/helper.js","webpack://muze/./packages/muze/src/options.js","webpack://muze/./packages/layout/src/enums/constants.js","webpack://muze/./packages/layout/src/generic-layout/index.js","webpack://muze/./packages/layout/src/grid-layout/defaults.js","webpack://muze/./packages/layout/src/utils/index.js","webpack://muze/./packages/layout/src/visual-matrix/props.js","webpack://muze/./packages/layout/src/visual-matrix/default-config.js","webpack://muze/./packages/layout/src/visual-matrix/visual-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/row-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/column-matrix.js","webpack://muze/./packages/layout/src/grid-layout/computations.js","webpack://muze/./packages/layout/src/grid-layout/view-info-getter.js","webpack://muze/./packages/layout/src/grid-layout/layout.js","webpack://muze/./packages/layout/src/grid-layout/layout-helper.js","webpack://muze/./packages/layout/src/grid-layout/border-helper.js","webpack://muze/./packages/layout/src/grid-layout/span-maker.js","webpack://muze/./packages/muze/src/transaction-support.js","webpack://muze/./packages/muze/src/canvas/component-resolver.js","webpack://muze/./packages/visual-cell/src/enums/constants.js","webpack://muze/./packages/visual-cell/src/enums/cell-type.js","webpack://muze/./packages/visual-cell/src/simple-cell.js","webpack://muze/./packages/visual-cell/src/enums/defaults.js","webpack://muze/./packages/visual-cell/src/props.js","webpack://muze/./packages/visual-cell/src/axis-cell.js","webpack://muze/./packages/visual-cell/src/blank-cell.js","webpack://muze/./packages/visual-cell/src/text-cell.js","webpack://muze/./packages/visual-cell/src/geom-cell.js","webpack://muze/./packages/visual-cell/src/defaults.js","webpack://muze/./packages/visual-cell/src/constants.js","webpack://muze/./packages/visual-cell/src/cell-registry.js","webpack://muze/./packages/muze/src/canvas/title-maker.js","webpack://muze/./packages/muze/src/canvas/legend-maker.js","webpack://muze/./packages/muze/src/canvas/components/muze-chart-component.js","webpack://muze/./packages/muze/src/canvas/components/headerComponent.js","webpack://muze/./packages/muze/src/canvas/components/legendComponent.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/helper.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/props.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/scroll-component.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/horizontal-scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/vertical-scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/matrix-component.js","webpack://muze/./packages/muze/src/canvas/components/grid-component.js","webpack://muze/./packages/muze/src/canvas/component-wrapper-maker.js","webpack://muze/./packages/muze/src/canvas/scroll-manager.js","webpack://muze/./packages/muze/src/canvas/layout-maker.js","webpack://muze/./packages/muze/src/canvas/firebolt/group-firebolt.js","webpack://muze/./packages/muze/src/canvas/firebolt/index.js","webpack://muze/./packages/muze/src/canvas/app-state.js","webpack://muze/./packages/muze/src/canvas/canvas.js","webpack://muze/./packages/muze/src/default-registry.js","webpack://muze/./packages/visual-layer/src/layer-registry.js","webpack://muze/./packages/muze/src/muze.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","e","_typeof","a","default","description","homepage","version","license","main","author","keywords","repository","type","url","contributors","email","dependencies","d3-dsv","devDependencies","babel-cli","babel-core","babel-eslint","babel-loader","babel-plugin-transform-runtime","babel-preset-env","babel-preset-es2015","babel-preset-flow","chai","cross-env","eslint","eslint-config-airbnb","eslint-plugin-import","eslint-plugin-jsx-a11y","eslint-plugin-react","istanbul-instrumenter-loader","jsdoc","json2yaml","karma","karma-chai","karma-chrome-launcher","karma-coverage-istanbul-reporter","karma-mocha","karma-spec-reporter","karma-webpack","marked","mocha","mocha-webpack","transform-runtime","webpack","webpack-cli","webpack-dev-server","scripts","test","ut","utd","build","start","lint","lint-errors","docs","DataModel","data_format","FLAT_JSON","DSV_STR","DSV_ARR","AUTO","dimension_subtype","CATEGORICAL","TEMPORAL","GEO","BINNED","measure_subtype","CONTINUOUS","field_type","MEASURE","DIMENSION","filtering_mode","NORMAL","INVERSE","ALL","convertToNativeDate","date","Date","pad","DateTimeFormatter","format","this","dtParams","nativeDate","RegExp","escape","text","replace","TOKEN_PREFIX","DATETIME_PARAM_SEQUENCE","YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","defaultNumberParser","defVal","val","parsedVal","isFinite","parseInt","defaultRangeParser","range","nVal","toLowerCase","length","getTokenDefinitions","daysDef","short","long","monthsDef","H","index","extract","parser","formatter","getHours","toString","hours","P","M","getMinutes","S","getSeconds","K","getMilliseconds","join","day","getDay","A","getDate","b","month","getMonth","B","y","result","substring","presentDate","presentYear","Math","trunc","getFullYear","year","Y","getTokenFormalNames","definitions","HOUR_12","AMPM_UPPERCASE","AMPM_LOWERCASE","SHORT_DAY","LONG_DAY","DAY_OF_MONTH","DAY_OF_MONTH_CONSTANT_WIDTH","SHORT_MONTH","LONG_MONTH","MONTH_OF_YEAR","SHORT_YEAR","LONG_YEAR","tokenResolver","defaultResolver","arg","targetParam","arguments","hourFormat24","hourFormat12","ampmLower","ampmUpper","amOrpm","isPM","findTokens","tokenPrefix","tokenLiterals","keys","occurrence","forwardChar","indexOf","push","token","formatAs","nDate","formattedStr","String","formattedVal","parse","dateTimeStamp","options","extractTokenValue","dtParamSeq","noBreak","dtParamArr","args","resolverKey","resolverParams","resolverFn","param","resolvedVal","splice","apply","checkIfOnlyYear","unshift","tokenObj","lastOccurrenceIndex","occObj","occIndex","targetText","regexFormat","tokenArr","map","obj","occurrenceLength","extractValues","match","shift","getNativeDate","Number","len","h","store","fields","Array","forEach","fieldIndex","from","OBJECTSTRING","objectToStrFn","objectToStr","arrayToStr","checkCyclicRef","parentArr","bIndex","extend2","obj1","obj2","skipUndef","v","merge","tgtArr","srcArr","item","srcVal","tgtVal","str","cRef","isArray","isCallable","getUniqueId","getTime","round","random","isArrEqual","arr1","arr2","formatNumber","helper_detectDataFormat","data","field_store","createNamespace","fieldArr","dataId","fieldsObj","_cachedFieldsObj","field","getMeasure","measureFields","_cachedMeasure","schema","getDimension","dimensionFields","_cachedDimension","src_value","_classCallCheck","configurable","writable","_value","rowDiffsetIterator","rowDiffset","callback","split","diffStr","diffStsArr","end","InvalidAwareTypes","invalid_aware_types_classCallCheck","config","assign","_invalidAwareValsMap","invalidAwareVals","NULL","NA","NIL","invalid","nil","null","undefined","I","iterator","u","next","done","return","TypeError","getCommonSchema","fs1","fs2","retArr","fs1Arr","DM_DERIVATIVES","JOINS","CROSS","LEFTOUTER","RIGHTOUTER","NATURAL","FULLOUTER","defaultFilterFn","crossProduct","dm1","dm2","filterFn","replaceCommonSchema","jointype","applicableFilterFn","dm1FieldStore","getFieldspace","dm2FieldStore","dm1FieldStoreName","dm2FieldStoreName","commonSchemaList","Error","tmpSchema","_rowDiffset","rowAdded","rowPosition","ii","tuple","userArg","partialField","dm1Fields","prepareJoinData","dm2Fields","detachedRoot","tupleObj","cellVal","iii","datamodel","defSortFn","a1","b1","mergeSort","arr","sortFn","merge_sort_sort","lo","hi","mid","floor","mainArr","auxArr","getSortFn","dataType","sortType","retFunc","groupData","hashMap","Map","groupedData","datum","fieldVal","has","set","createSortingFnArg","groupedDatum","targetFields","targetFieldDetails","label","reduce","acc","idx","difference_difference","hashTable","schemaNameArr","dm1FieldStoreFieldObj","dm2FieldStoreFieldObj","_colIdentifier","sort","prepareDataHelper","dm","addData","hashData","schemaName","fieldName","getFilteredValues","filter","invalid_aware_types","sum","filteredNumber","curr","avg","totalSum","isNaN","fnList","min","filteredValues","max","first","last","count","std","sqrt","mean","pow","num","defaultReducerName","fe","reducer_store_ReducerStore","entries","_this","reducer","_this2","__unregister","delete","Function","reducer_store","de","naturalJoinFilter","commonSchemaArr","retainTuple","union_union","src_export","leftOuterJoin","dataModel1","dataModel2","rightOuterJoin","fields_field","field_classCallCheck","subtype","displayName","we","dimension","_cachedDomain","calculateDataDomain","categorical","hash","Set","domain","add","temporal","temporal_classCallCheck","_cachedMinDiff","sortedData","arrLn","minDiff","POSITIVE_INFINITY","prevDatum","nextDatum","processedCount","_this3","binned","binsArr","bins","measure","unit","defAggFn","numberFormat","continuous","NEGATIVE_INFINITY","field_parser","Me","categorical_parser","isInvalid","getInvalidType","trim","temporal_parser","temporal_parser_classCallCheck","_dtf","binned_parser","matched","parseFloat","continuous_parser","partial_field","partial_field_classCallCheck","_sanitize","createFields","dataColumn","headers","headersObj","header","Ge","dataFormat","Ke","firstRowHeader","columns","column_major","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","JSON","stringify","Ze","delimiter","reFormat","DELIMITER","charCodeAt","parseRows","f","rows","N","eof","eol","j","slice","row","formatRow","formatValue","convert","columnSet","column","concat","formatRows","csv","src_dsv","tsv","nt","fieldSeparator","dsv","dsv_arr","rt","insertionIndex","at","converters","FlatJSON","DSVStr","DSVArr","resp","helper_persistDerivation","model","operation","_model$_derivation","criteriaFn","derivative","op","meta","criteria","_derivation","helper_filterPropagationModel","propModels","filterByMeasure","fns","dataModel","dataObj","getData","fieldsConfig","getFieldsConfig","fieldsSpace","values","def","some","every","propField","valueOf","propModel","clone","select","fn","saveChild","helper_cloneWithSelect","sourceDm","selectFn","selectConfig","cloneConfig","cloned","helper_selectHelper","newRowDiffSet","lastInsertedValue","li","cachedStore","cloneProvider","selectorHelperFn","_iteratorNormalCompletion","checker","getPartialFieldspace","__calculateFieldspace","calculateFieldsConfig","helper_cloneWithProject","projField","allFields","projectionSet","actualProjField","helper_sanitizeUnitSchema","unitSchema","helper_updateData","relation","default_config","converterFn","converter_namespaceObject","it","formattedData","nameSpace","_partialFieldspace","_","_dataFormat","fieldInSchema","applyExistingOperationOnModel","_propModel$","child","derivation","params","groupByString","selectionModel","rejectionModel","_propModel$2","propagateIdentifiers","propModelInf","nonTraversingModel","excludeModels","handlePropagation","_children","propagateToAllDataModels","identifiers","rootModels","propagationInf","propagationNameSpace","propagateToSource","propagationSourceId","sourceId","propagateInterpolatedValues","criterias","persistent","actionCriterias","mutableActions","filteredCriteria","entry","action","sourceActionCriterias","actionInf","actionConf","applyOnSource","models","path","_parent","_ref3","rootModel","propConfig","sourceIdentifiers","rootGroupByModel","groupByModel","inf","propagationModel","filteredModel","reverse","src_relation","relation_classCallCheck","source","Relation","_fieldStoreName","updateData","_propagationNameSpace","immutableActions","_fieldspace","helper_updateFields","partialFieldspace","fieldStoreName","colIdentifier","collID","partialFieldMap","newFields","coll","joinWith","unionWith","differenceWith","defConfig","oDm","retDataModel","getAllFields","jsonData","rowObj","constructor","fieldConfig","normalizedProjField","search","_fieldConfig","fieldDef","removeChild","findIndex","sibling","parent","criteriaQueue","ReferenceError","__proto__","getPrototypeOf","_onPropagation","_sortingDetails","setPrototypeOf","order","withUid","dataGenerated","dataBuilder","fieldStore","sortingDetails","retObj","uids","addUid","columnWise","reqSorting","tmpDataArr","colName","insertInd","sortMeta","fDetails","sortingFn","pop","tmpData","fieldNames","fmtFieldIdx","elem","fIdx","fmtFn","datumIdx","fieldsArr","reducers","newDataModel","group_by_groupBy","existingDataModel","sFieldArr","dimensions","reducerObj","measures","defReducer","defaultReducer","measureName","reducerFn","resolve","fieldStoreObj","dbName","dimensionArr","measureArr","rowCount","rawData","dataInCSVArr","sortedDm","colData","rowsCount","serializedData","rowIdx","colIdx","fieldinst","dependency","replaceVar","depVars","retrieveFn","depFieldIndices","fieldSpec","fs","suppliedFields","computedValues","fieldsData","Ot","addField","addToNameSpace","isMutableAction","payload","getRootGroupByModel","find","sourceNamespace","filterImmutableAction","criteriaModel","eventName","measureFieldName","binFieldName","_createBinnedFieldDat","measureField","buckets","binsCount","binSize","dMin","dMax","ceil","abs","generateBuckets","bucketRanges","binnedData","findBucketRange","leftIdx","rightIdx","midIdx","binField","serialize","getSchema","stats_sum","stats_avg","stats_min","stats_max","stats_first","stats_last","stats_count","sd","Operators","compose","operations","currentDM","frstChild","derivations","addParent","dispose","bin","project","groupBy","calculateVariable","difference","naturalJoin","fullOuterJoin","union","Stats","stats_namespaceObject","enums_namespaceObject","DataFormat","FilteringMode","package_0","Mt","At","makeEntry","sCon","_set","set1","set2","filteredKeys","s1","s2","ForeignSet","isSimpleObject","win","reqAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","getTimeBasedId","__lastTime","__id","flat","res","scheduler","onFinishCallback","queue","animationFrame","listeners","tempQ","unique","fetch","node","namedNode","qualifiedName","seed","fetchAggregator","getUpstreamNodes","list","rec","qname","placedIndex","preArr","postArr","outgoingEdges","resolver","accumulate","nodeDetails","identity","CustomResolver","utils_classCallCheck","dep","_dep","graph_node_classCallCheck","edges","_seed","requireResolve","retriever","history","electricEdges","_edges","retrieveDetails","edge","head","hist","electric_node_classCallCheck","nextFrame","currentFrame","lstnrs","nodes","nFn","qualifiedNodeMap","graph_node","_wholeSet","_propagate","propagationOverride","currentFrameListeners","nextFrameListeners","_schedule","flushTarget","flush","mount","resolveReqList","objn","perv","addDependencies","_node","getDependencies","getResolvedList","prop","props","fnSpec","eNode","_ref","electric_node","addEdges","addElectricNode","changedSet","upstreamNodes","upstreamNode","append","__execUniqueElectricEdges","cfLstnrs","nfLstnrs","toArray","repeatHead","resetPropagationOverride","qnames","_this4","update","resolved","resolveDependencyOrder","resolveMap","neighbour","isRoot","model_classCallCheck","_graph","graph","_lockFlag","_reqQ","mountPoint","_addPropInModel","calculationConfig","customResolver","varName","fetchFn","_customResolver","createNodesFrom","instantCall","_graph$stopPropagatio","propsArr","unsub","createElectricNodeOf","stopPropagation","setPropagationOverride","resetNodeValue","_graph$stopPropagatio2","setProp","getNodeValue","getNodeFromQualifiedName","Model","__webpack_exports__","webpackPolyfill","deprecate","paths","children","_interopRequireDefault","_lib2","require","_containerManager2","slLib","init","doc","document","htmlSplCharSpace"," ","documentSupport","getDocumentSupport","SVG_BBOX_CORRECTION","isWebKit","SmartLabelManager","id","container","useEllipses","wrapper","prevInstance","isBrowserLess","maxCacheLimit","maxDefaultCacheLimit","getElementById","createContainer","innerHTML","testStrAvg","isHeadLess","isIE","offsetHeight","offsetWidth","parentContainerStyle","style","parentContainer","_containerManager","_showNoEllipses","_init","setStyle","textToLines","smartlabel","lines","_calCharDimWithCache","calculateDifference","size","csArr","tw","twi","cachedStyle","asymmetricDifference","maxAdvancedCacheLimit","_container","cache","_advancedCache","advancedCacheKey","_advancedCacheKey","cacheName","fontSize","fontFamily","fontWeight","fontStyle","cacheInitName","repeat","width","height","_getWidthFn","contObj","_containerObj","svgText","bbox","textContent","getBBox","_styleNotSet","setLineHeight","sCont","_context","context","_cache","charCache","_lineHeight","lineHeight","useEllipsesOnOverflow","getSmartText","maxWidth","maxHeight","noWrap","trimStr","tempArr","tmpText","maxWidthWithEll","toolText","oriWidth","oriHeight","newCharIndex","nearestChar","tempChar","getWidth","initialLeft","initialTop","getOriSizeImproveObj","spanArr","x","minWidth","chr","elemRightMostPoint","elemLowestPoint","lastBR","removeFromIndex","removeFromIndexForEllipses","hasHTMLTag","maxStrWidth","lastDash","lastSpace","lastIndexBroken","strWidth","strHeight","oriTextArr","ellipsesStr","ellipsesWidth","dotWidth","characterArr","dashIndex","spaceIndex","lastLineBreak","fastTrim","ws","charAt","smartLabel","oriTextWidth","oriTextHeight","oriText","isTruncated","xmlTagRegEx","ltgtRegex","getOriSize","substr","getNearestBreakIndex","detailObj","tooltext","lastIndexOf","spanAdditionRegx","spanAdditionReplacer","classNameWithTag","classNameWithTagBR","childRetriverFn","childRetriverString","noClassTesting","classNameReg","className","spaceIdx","dashIdx","offsetLeft","offsetTop","parentNode","insertBefore","createElement","classNameBrReg","spanRemovalRegx","error","detailedCalculationFlag","textArr","letter","lSize","cumulativeSize","indiSizeStore","lib","userAgent","navigator","clsNameSpace","containerClass","brReplaceRegex","position","top","whiteSpace","padding","overflow","supportedStyle","font","font-family","font-weight","font-size","line-height","font-style","getElementsByClassName","opera","hasSVG","Boolean","SVGAngle","implementation","hasFeature","containerParent","body","appendChild","setAttribute","getElementsByTagName","sl","charLen","increment","avgWidth","styleObj","fSize","Muze","ContainerManager","maxContainers","svg","containers","rootNode","createElementNS","setAttributeNS","svgRoot","diff","containerObj","keyStr","prev","removeContainer","addContainer","avgCharWidth","display","cObj","ascending","NaN","bisector","compare","ascendingComparator","left","right","ascendingBisect","bisectRight","number","array","src_range","stop","step","e10","e5","e2","src_ticks","ticks","tickIncrement","power","log","LN10","tickStep","step0","step1","quantile","valueof","i0","value0","each","remove","clear","empty","src_nest","sortValues","rollup","nest","sortKeys","depth","createResult","setResult","keyValue","valuesByKey","createObject","setObject","createMap","setMap","sortKey","k","proto","implicit","ordinal","unknown","scale","copy","band","bandwidth","ordinalRange","paddingInner","paddingOuter","align","rescale","sequence","rangeRound","invertExtent","r0","r1","hiIndex","getClosestIndexOf","invert","side","highVal","d1","low","high","extend","definition","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color","exec","Rgb","rgbn","rgba","hsla","g","rgbConvert","rgb","opacity","hex","Hsl","hsl","hslConvert","hsl2rgb","m1","m2","displayable","brighter","darker","deg2rad","PI","rad2deg","Xn","Yn","Zn","t0","t1","t2","t3","labConvert","Lab","Hcl","cos","sin","z","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","hcl","C","D","E","ED","EB","BC_DA","cubehelix","cubehelixConvert","Cubehelix","bl","basis","v0","v1","v2","v3","cosh","sinh","src_constant","linear","hue","constant","gamma","nogamma","exponential","src_rgb","rgbGamma","colorRgb","rgbSpline","spline","colors","rgbBasis","src_number","reA","reB","src_string","am","bm","bs","bi","lastIndex","q","one","zero","cssNode","cssRoot","cssView","svgNode","value_typeof","string","setTime","nb","na","src_round","degrees","translateX","translateY","rotate","skewX","scaleX","scaleY","decompose","atan","interpolateTransform","pxComma","pxParen","degParen","translate","xa","ya","xb","yb","interpolateTransformCss","parseCss","documentElement","defaultView","transform","getComputedStyle","getPropertyValue","interpolateTransformSvg","parseSvg","baseVal","consolidate","matrix","SQRT2","colorHsl","hslLong","colorHcl","cubehelixGamma","colorCubehelix","cubehelixLong","piecewise","interpolate","d3_scale_src_constant","d3_scale_src_number","deinterpolateLinear","bimap","deinterpolate","reinterpolate","d0","polymap","bisect","target","clamp","output","input","interpolateValue","deinterpolateClamp","reinterpolateClamp","interpolateRound","formatDecimal","toExponential","coefficient","src_exponent","re","formatSpecifier","specifier","FormatSpecifier","fill","sign","symbol","comma","precision","prefixExponent","locale","formatPrefix","formatTrim","out","i1","formatRounded","exponent","formatTypes","%","toFixed","toPrecision","X","toUpperCase","src_identity","prefixes","src_locale","group","grouping","thousands","formatGroup","currency","decimal","numerals","formatNumerals","percent","newFormat","prefix","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","Infinity","defaultLocale","formatLocale","src_tickFormat","precisionPrefix","precisionRound","precisionFixed","linearish","tickFormat","nice","interval","x0","x1","pow10","powp","base","exp","logp","log10","log2","reflect","logs","pows","raise","thresholds","threshold","quantiles","quantize","newInterval","floori","offseti","offset","previous","millisecond","durationMinute","durationWeek","second","getUTCSeconds","minute","hour","getTimezoneOffset","setHours","setDate","weekday","sunday","monday","tuesday","wednesday","thursday","friday","saturday","setMonth","setFullYear","utcMinute","setUTCSeconds","getUTCMinutes","utcHour","setUTCMinutes","getUTCHours","utcDay","setUTCHours","setUTCDate","getUTCDate","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","utcYear","setUTCFullYear","localDate","L","utcDate","UTC","newYear","timeFormat","utcFormat","utcParse","pads","-","0","numberRe","percentRe","requoteRe","requote","formatRe","names","formatLookup","parseWeekdayNumberSunday","w","parseWeekdayNumberMonday","parseWeekNumberSunday","U","parseWeekNumberISO","V","parseWeekNumberMonday","W","parseFullYear","parseYear","parseZone","Z","parseMonthNumber","parseDayOfMonth","parseDayOfYear","parseHour24","parseMinutes","parseSeconds","parseMilliseconds","parseMicroseconds","parseLiteralPercent","parseUnixTimestamp","Q","parseUnixTimestampSeconds","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","timeDay","timeYear","formatMilliseconds","formatMicroseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekdayNumberMonday","formatWeekNumberSunday","timeSunday","formatWeekNumberISO","timeThursday","formatWeekdayNumberSunday","formatWeekNumberMonday","timeMonday","formatYear","formatFullYear","formatZone","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","getUTCMilliseconds","formatUTCMicroseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","dow","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","formatLiteralPercent","formatUnixTimestamp","formatUnixTimestampSeconds","locale_dateTime","dateTime","locale_date","locale_time","time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","periodLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatShortWeekday","formatWeekday","formatShortMonth","formatMonth","formatPeriod","utcFormats","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","formatUTCMonth","formatUTCPeriod","parses","parseShortWeekday","parseWeekday","parseShortMonth","parseMonth","parseLocaleDateTime","parseSpecifier","parsePeriod","parseLocaleDate","parseLocaleTime","newParse","newDate","week","toISOString","durationSecond","durationHour","durationDay","durationMonth","durationYear","calendar","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickIntervals","tickInterval","src_time","timeMonth","timeWeek","timeHour","timeMinute","timeSecond","timeMillisecond","src_colors","interpolateCubehelixLong","ramp","sequential","interpolator","d3_scale_chromatic_src_colors","src_ramp","scheme","interpolateRgbBasis","warm","cool","sequential_multi_rainbow","ts","magma","inferno","plasma","UNIT_GLOBAL_NAMESPACE","UNIT_LOCAL_NAMESPACE","LAYER_LOCAL_NAMESPACE","LAYER_GLOBAL_NAMESPACE","GROUP_GLOBAL_NAMESPACE","GROUP_LOCAL_NAMESPACE","CANVAS_LOCAL_NAMESPACE","CANVAS_GLOBAL_NAMESPACE","ReservedFields","ROW_ID","CommonProps","ACTION_INF","ON_LAYER_DRAW","MATRIX_CREATED","d3_axis_src_identity","bottom","epsilon","entering","__axis","axis","orient","tickArguments","tickValues","tickTransform","tickSizeInner","tickSizeOuter","tickPadding","spacing","range0","range1","center","selection","selectAll","tick","tickExit","exit","tickEnter","enter","attr","line","insert","transition","getAttribute","tickSize","pi","tau","tauEpsilon","Path","_x0","_y0","_x1","_y1","moveTo","closePath","lineTo","quadraticCurveTo","y1","bezierCurveTo","x2","y2","arcTo","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","a0","ccw","dx","dy","cw","da","rect","d3_shape_src_constant","halfPi","asin","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","cornerTangents","rc","ox","oy","x11","y11","x10","y10","x00","y00","d2","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","Linear","areaStart","_line","areaEnd","lineStart","_point","lineEnd","point","curve_linear","src_line","pointX","pointY","defined","curve","curveLinear","buffer","defined0","src_area","area","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","src_descending","d3_shape_src_identity","curveRadial","Radial","_curve","radial","symbol_circle","draw","symbol_cross","tan30","tan30_2","diamond","kr","kx","ky","star","square","sqrt3","triangle","wye","noop","that","Basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","BasisOpen","Bundle","beta","_basis","_beta","_x","_y","custom","bundle","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","CardinalOpen","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","alpha","_alpha","x23","y23","curve_catmullRom","catmullRom","CatmullRomClosed","CatmullRomOpen","LinearClosed","slope3","h0","h1","s0","slope2","MonotoneX","MonotoneY","ReflectContext","Natural","controlPoints","_t0","px","py","Step","_t","curve_step","stepBefore","stepAfter","none","series","order_none","stackValue","order_ascending","sums","cubicInOut","polyIn","polyOut","polyInOut","b2","b3","b4","b5","b6","b7","b8","b9","b0","bounceOut","backIn","overshoot","backOut","backInOut","elasticOut","elasticIn","amplitude","period","d3_voronoi_src_constant","elasticInOut","RedBlackTree","RedBlackNode","R","RedBlackRotateLeft","tree","RedBlackRotateRight","RedBlackFirst","after","grandpa","uncle","createEdge","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","ax","ay","connectEdge","fm","fb","lx","ly","rx","ry","fx","fy","cellHalfedgeAngle","cell","site","va","vb","cellHalfedgeStart","cellHalfedgeEnd","firstCircle","circlePool","attachCircle","lArc","rArc","lSite","cSite","rSite","bx","by","epsilon2","ha","hc","circle","Circle","before","circles","detachCircle","beachPool","createBeach","beach","Beach","detachBeach","beaches","removeBeach","disappearing","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","extent","sortCellHalfedges","clipEdges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","cover","dc","v00","v01","v11","v10","polygons","polygon","triangles","e1","links","radius","_found","vx","vy","src_voronoi","voronoi","Selection","_data","_idMap","_dataMap","_mode","_enterdata","_exitdata","newData","idGetter","_idGetter","tempMap","purgedIds","purged","temp","_len","_key","_this5","_len2","_key2","HTMLElement","common_utils_typeof","sanitizeIP","typeObj","nonExistentKeys","checkExistence","getMax","_toConsumableArray","getMin","getDomainFromData","fieldType","domArr","DimensionSubtype","_loop","_fields","_slicedToArray","field0","field1","arr0","firstMin","secondMin","firstMax","secondMax","unionDomain","domains","_ref2","dom","symbolFns","symbolCircle","cross","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolWye","symbolTriangle","easeFns","cubic","easeCubic","bounce","easeBounce","elastic","easeElastic","back","easeBack","poly","easePoly","circleInOut","getNearestValue","filterData","getWindow","getQualifiedClassName","cancelAnimationFrame","cls","defaultValue","getDependencyOrder","dependencyOrder","visited","visit","objectIterator","Voronoi","common_utils_classCallCheck","_voronoi","_voronoiFn","addListenerToNamespace","namespaceInf","namespace","_listeners","getObjProp","Store","propName","propNames","callBack","on","calculatedProp","intSanitizer","transactor","holder","conf","stateProps","addAsMethod","nameSpaceProp","nsProp","compareTo","paramsLen","prevVal","spreadParams","sanitization","typeCheck","typeExpected","preset","oldValues","generateGetterSetters","propInfo","typeChecker","isEqual","oldVal","newVal","arraysEqual","is","ERROR_MSG","INTERFACE_IMPL","mergeRecursive","sink","createSelection","sel","appendObj","idFn","dataSelect","mergedSelection","numberInterpolator","interpolateNumber","piecewiseInterpolator","rgbToHsv","detectColor","col","getDataModelFromRange","selFields","selFn","getDataModelFromIdentifiers","filteredDataModel","dataArr","filteredSchema","include","registerListeners","listenerMap","_len3","_key3","propListenerMap","local","mapObj","propType","listenerFn","listener","isValidValue","getSymbol","stackOrders","_defineProperty","_stackOrders","stackOrderNone","stackOrderAscending","stackOffsets","_stackOffsets","yp","yn","stackOffsetNone","si","sij0","s3","sk","stack","orderNone","offsetNone","oz","kz","sz","sij","ki","d3Stack","pathInterpolators","curveStepAfter","curveStepBefore","curveStep","curveCatmullRom","Symbols","axisLeft","axisRight","axisTop","axisBottom","pie","descending","arcs","pa","cornerRadius","padRadius","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","p0","p1","oc","intersect","x3","y3","x32","y32","kc","lc","centroid","Scales","scaleBand","getSmallestDiff","points","timeFormats","timeDurations","formatTemporal","nearestInterval","getNearestInterval","getValueParser","retrieveNearestGroupByReducers","nearestReducers","getDerivations","groupDerivation","getParent","filteredReducers","_len4","measureFieldNames","_key4","xhtml","src_namespaces","xlink","xml","xmlns","src_namespace","namespaces","space","creator","fullname","creatorFixed","ownerDocument","creatorInherit","uri","namespaceURI","src_selector","selector","querySelector","selectorAll","querySelectorAll","matcher","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","sparse","EnterNode","_next","__data__","keyPrefix","bindIndex","groupLength","dataLength","bindKey","nodeByKeyValue","keyValues","src_window","styleValue","classArray","classList","ClassList","_names","classedAdd","classedRemove","contains","textRemove","htmlRemove","nextSibling","lower","previousSibling","firstChild","constantNull","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","event","mouseenter","mouseleave","filterContextListener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","typename","__on","removeEventListener","capture","onAdd","wrap","addEventListener","customEvent","sourceEvent","dispatchEvent","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","groups","parents","_groups","_parents","subgroups","subnode","subgroup","enterGroup","updateGroup","_enter","_exit","groups0","groups1","m0","merges","group0","group1","compareNode","sortgroups","sortgroup","getAttributeNS","attrRemoveNS","removeAttributeNS","attrRemove","removeAttribute","attrFunctionNS","attrFunction","attrConstantNS","attrConstant","priority","styleRemove","removeProperty","styleFunction","setProperty","styleConstant","propertyRemove","propertyFunction","propertyConstant","classed","classedFunction","classedTrue","classedFalse","textFunction","textConstant","html","htmlFunction","htmlConstant","deep","typenames","parseTypenames","dispatch","dispatchFunction","dispatchConstant","src_select","nextId","Local","current","src_point","ownerSVGElement","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","clientTop","mouse","changedTouches","src_touch","touches","identifier","touch","Dispatch","T","types","nopropagation","stopImmediatePropagation","noevent","preventDefault","nodrag","view","__noselect","MozUserSelect","d3_drag_src_constant","DragEvent","subject","active","defaultFilter","button","defaultContainer","defaultSubject","defaultTouchable","src_drag","mousedownx","mousedowny","mousemoving","touchending","touchable","gestures","clickDistance2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","beforestart","mousemoved","mouseupped","yesdrag","noclick","clearTimeout","sublisteners","clickDistance","taskHead","taskTail","frame","timeout","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","timer_typeof","now","setFrame","clearNow","Timer","_call","_time","timer","delay","restart","wake","timerFlush","nap","sleep","poke","clearInterval","setInterval","src_timeout","elapsed","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","self","tween","state","duration","ease","schedule","tweenValue","_id","transition_interpolate","interpolateRgb","interpolateString","Transition","_name","newId","selection_prototype","inherit","id0","id1","onFunction","on0","on1","sit","attrTween","value00","value10","interpolate0","value1","attrTweenNS","styleTween","styleRemoveEnd","removeFunction","tweenRemove","tween0","tween1","tweenFunction","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","defaultTiming","easeCubicInOut","interrupt","selectElement","makeElement","elemType","callbacks","keyFn","SVGElement","selectorVal","selectorType","actualSelector","enterSel","mergeSel","exitSel","applyStyle","setElementAttrs","attrs","setAttrs","setStyles","styles","createElements","getClientPoint","pos","clientPoint","getEvent","d3event","getD3Drag","d3drag","getSmartComputedStyle","css","textEl","mandatoryStyle","fill-opacity","renderer_utils_typeof","computedStyle","styleForSmartLabel","hasTouch","events","EVENT_LIST","composition","resolveFn","notification","hasOwn","LifeCycleManager","lifecycle_manager_classCallCheck","_eventList","_promises","_notifiers","_lifeCycles","_unreleasedLifeCycles","_boot","_preparePromises","Promise","promise","_makeNotifierPromise","createPromise","then","prm","formalName","client","_releasePromisesFromCache","_notify","stage","_resolvePromise","retrieve","_callLifeCycleCallback","_cachePromise","_resetTargetPromise","lifeCycles","DRAG","HOVER","SELECTIONDRAG","CLICK","LONGTOUCH","TOUCHDRAG","ALL_ACTIONS","SELECTION_NEW_ENTRY","SELECTION_NEW_EXIT","SELECTION_NULL","SELECTION_OLD_ENTRY","SELECTION_OLD_EXIT","SelectionSet","completeSet","_volatile","selection_set_classCallCheck","_completeSetCount","_lockedSelection","_resetted","ids","entrySet","exitSet","lockedSel","addSet","removeSet","updateSet","changeSideEffectAvailability","toEnable","sideEffects","change","enable","disable","getMergedSet","helper_toConsumableArray","conditionsMap","newEntry","SELECTION","oldEntry","mergedEnter","newExit","oldExit","mergedExit","complete","getSetInfo","selectionSet","propagationData","resetted","getModelFromSet","condition","Firebolt","actions","behaviourEffectMap","firebolt_classCallCheck","_sideEffectDefinitions","_sideEffects","_propagationInf","_actions","behavioural","physical","_selectionSet","_volatileSelectionSet","_propagationFields","_sourceSideEffects","selectionBox","_propagationBehaviourMap","_sourceBehaviours","_actionBehaviourMap","_config","_behaviourEffectMap","_entryExitSet","_actionHistory","_queuedSideEffects","mapSideEffects","registerBehaviouralActions","registerSideEffects","registerPhysicalBehaviouralMap","physicalBehaviouralMap","registerPhysicalActions","behEffectMap","preventDefaultActions","effectNames","effects","firebolt_toConsumableArray","behaviours","initializeBehaviouralActions","dispatchableBehaviours","Action","prepareSelectionSets","initializeSideEffects","sideEffectStore","actionHistory","queuedSideEffects","sideEffect","combinedSet","unionSets","behaviour","entryExitSet","existingModel","effect","firebolt_typeof","sideEffectInstance","isEnabled","mutates","dispatchSideEffect","propagationInfo","propagate","getSideEffects","propagationSelectionSet","getPropagationSelectionSet","shouldApplySideEffects","sourceSelectionSet","applicableSideEffects","getApplicableSideEffects","applySideEffects","physicalAction","actionBehaviourMap","behaviourMap","mapActionsAndBehaviour","unsubscribe","onDataModelPropagation","propValue","dispatchBehaviour","uniqueIds","behaviouralActions","volatileSelectionSet","sideEffectDefinitions","sideEffectsMap","SideEffect","sideEffectConf","initedActions","initializePhysicalActions","physicalActions","phyAction","initedPhysicalActions","getDefaultTargetContainer","bindActionWithBehaviour","targets","behaviourList","xFields","yFields","xMeasures","FieldType","yMeasures","filterPropagationModel","_propModel$getData","fieldMap","getFullData","propagationSource","applicableSelectionSets","GenericBehaviour","firebolt","generic_classCallCheck","_enabled","selectionSets","getSelectionSets","_this$firebolt$getAdd","getAddSetFromCriteria","getPropagationInf","setSelectionSet","getEntryExitSet","_selectionSet$getSets","getSets","setConfig","isSourceFieldPresent","getSourceFields","VolatileBehaviour","reset","existingAddSet","updateExit","getCompleteSet","BRUSH","HIGHLIGHT","TOOLTIP","FILTER","SELECT","HighlightBehaviour","BrushBehaviour","BEHAVIOURNAMES","FilterBehaviour","PersistentBehaviour","updateEntry","mergedExitSet","completeSetCount","SelectBehaviour","getDragActionConfig","sourceInfo","axes","xAxis","yAxis","axisFields","xField","getMembers","yField","xFieldType","yFieldType","stPos","startPos","endPos","dragDim","MeasureSubtype","isXDimension","isYDimension","xRange","yRange","selectedDomains","rangeObj","xdom","ydom","snap","getNearestRange","attachDragEvent","targetEl","drawingInf","touchStart","d3Drag","getDrawingContext","getSourceInfo","beh","dragEnd","hover","interaction","tooltip","svgContainer","nearestPoint","getNearestPoint","getAllPoints","showInPosition","generatePayloadFromEvent","click","physical_defineProperty","_physicalActions","ACTIONNAMES","longtouch","touchEnd","touchdrag","PROPS","valueParser","GenericSideEffect","generic_sideeffect_classCallCheck","_strategy","_strategies","defaultConfig","SurrogateSideEffect","interactionType","layers","layer","interactive","applyInteractionStyle","SpawnableSideEffect","_drawingContext","changeVisibility","sideEffectGroup","visible","defClassName","classPrefix","SelectionBox","boxConf","box","drawingContext","unitWidth","unitHeight","selectionGroupClassName","hide","sourceInf","_getBoxDimensionsFrom","getBoxDimensionsFromPayload","direction","xDim","yDim","xLinear","yLinear","xCriteria","yCriteria","x1Val","x2Val","bandScale","x1DomainIndex","x2DomainIndex","_sort2","helper_slicedToArray","getScaleValue","getUnitWidth","y1Val","y2Val","y1DomainIndex","y2DomainIndex","_sort4","_xDim","_yDim","show","selectionBoxDrag","onDrag","boxClassName","INITIAL_STYLE","connectorClassName","margin","content","iconContainerSize","iconScale","iconShape","iconColor","rowMargin","separator","parentClassName","arrow","disabled","getArrowPos","dim","measurement","arrowPos","boxHeight","boxWidth","arrowWidth","plotBottom","boxBottom","plotRight","boxRight","placeArrow","tooltipArrow","_tooltipArrow","tooltipBackground","_tooltipBackground","arrowConf","_arrowOrientation","formatters","strategy_defineProperty","getDefaultTooltipFormatterFn","defaultFormatter","buildTooltipData","fieldValues","fieldspace","detailFields","containsDetailField","dataLen","dimensionMeasureMap","timeDiffs","defFormatter","getRowContent","formattedValue","measureIndex","formatterFn","uniqueVals","strategy_toConsumableArray","colorAxis","shapeAxis","shape","sizeAxis","isRetinalField","associatedMeasures","icon","getColor","getShape","getSize","formattedKey","measureFormatter","margin-left","displayFormat","getTabularData","fieldObj","allMeasures","_construct","strategy","DEFAULT_STRATEGY","Content","content_classCallCheck","_model","_formatter","ctx","_mount","table","tbody","margin-right","el","Tooltip","htmlContainer","tooltip_classCallCheck","connectorContainer","tooltipConf","contentClass","_tooltipContainer","_contentContainer","_contents","_tooltipConnectorContainer","qualifiedClassName","addClass","defConf","contentConfig","reorderContainers","contentConf","render","_target","repositionArrow","arrowDisabled","arrowOrient","outsidePlot","connector","_offset","orientation","_extent","arrowSize","topSpace","dimX","rightSpace","leftSpace","positionTop","positionRight","positionLeft","positionHorizontal","positionVertical","_position","_arrowPos","strategies","showSelectedItems","aggregatedModel","fieldsConf","measureNames","strategies_toConsumableArray","_getPrototypeOf2","side_effects_tooltip_classCallCheck","tooltip_possibleConstructorReturn","tooltip_getPrototypeOf","_tooltips","totalHeight","totalWidth","isEmpty","tooltips","boundBox","dataModels","fragmented","showVertically","tooltipPos","boxes","tooltip_toConsumableArray","sourceFields","indices","plotDimensions","getPlotPointsFromIdentifiers","plotDim","dt","dataTransform","layoutContainer","parentContainerDimensions","layoutBoundBox","unitBoundBox","tooltipInst","TooltipRenderer","timeDiffsByField","positionRelativeTo","tooltipBoundBox","getContents","spaceOutBoxes","spaceOutIfOverlap","firstBox","secondBox","opposite","Crossline","bandWidth","_this$config","bandClass","lineClass","elemData","axisIndex","fieldInst","xOffset","plotWidth","crossline_toConsumableArray","getPlotSpan","getPlotPadding","startPx","endPx","dataPoint","parentGroup","fade","fadeFn","focus","highlight","PlotHighlighter","plot_highlighter_classCallCheck","plot_highlighter_possibleConstructorReturn","plot_highlighter_getPrototypeOf","FilterEffect","entryModel","clearCaching","resetData","enableCaching","addLayer","layerDefs","layerRegistry","layerDef","mark","layerCls","shouldDrawAnchors","depLayerEncoding","encoding","defaultSizeValue","layerObj","instances","getTransitionConfig","calculateDomain","linkedLayer","AnchorEffect","anchors_classCallCheck","anchors_possibleConstructorReturn","anchors_getPrototypeOf","_layersMap","addAnchorLayers","metaInf","registry","layerDefsVal","registerImmediateListener","STATE_NAMESPACES","anchors_slicedToArray","_layers","elems","_linkedLayer$getTrans2","getLayerByName","getTransformedDataFromIdentifiers","transformedData","transformedDataModel","PersistentAnchors","BrushAnchors","behaviour_effect_map_defineProperty","BEHAVIOURS","STACK","ANGLE","RADIUS","SIZE","COLOR","SHAPE","ENCODING","X0","Y0","nearestPointThreshold","strokeOpacity","connectNullData","SimpleLayer","BOTTOM","TOP","LEFT","RIGHT","axisOrientationMap","axis_orientation_defineProperty","_axisOrientationMap","AxisOrientation","LINEAR","BAND","TIME","ORDINAL","QUANTIZE","QUANTILE","LOG","POW","IDENTITY","SEQUENTIAL","THRESHOLD","CONTINOUS","DISCRETE","HIDDEN","scaleLinear","scales","scaleThreshold","scaleLog","scalePow","scaleIdentity","scaleOrdinal","scaleSequential","scaleQuantize","scaleQuantile","scaleTime","scaleMap","scale_creator_defineProperty","_scaleMap","ScaleType","createScale","scaleFactory","axisName","axisNamePadding","fixedBaseline","labels","rotation","smartTicks","numberOfTicks","showAxisName","showInnerTicks","showOuterTicks","yOffset","rotateAxis","instance","tickText","labelManager","renderConfig","getTickSize","yShift","xShift","tickFormatter","tickLabelDim","quadrant","rotationNormalizer","angleToRadian","angle","changeTickOrientation","selectContainer","axisInstance","_smartTicks","isSmartTicks","registerAnimationDoneHook","setFixedBaseline","setAxisNamePos","textNode","axisNameHeight","labelOffset","availableSpace","setAxisRange","rangeBounds","space_setter_defineProperty","adjustRange","getAxisOffset","timeDiff","avWidth","bars","spaceSetter","spaceConfig","heightForTicks","_context$availableSpa","availWidth","availHeight","isOffset","_context$renderConfig","_context$config2","_context$getAxisDimen","getAxisDimensions","tickDimensions","allTickDimensions","axisNameDimensions","tickDimHeight","tickDimWidth","namePadding","labelConfig","minTickDistance","_minTickDistance","minTickSpace","_minTickSpace","_minDiff","tickShifter","getTickValues","maxTickSpaces","widthForTicks","continous","totalTickWidth","getRotatedSpaces","rotatedHeight","rotatedWidth","setOffset","logicalSpace","getAxisComponentDimensions","axisTicks","largestTick","largestTickDimensions","smartTick","_context$config","labelFunc","_tickLabelStyle","originalLabel","getFormattedText","_axisNameStyle","getHorizontalAxisSpace","axisDimensions","axisDimHeight","minTickDiff","getMinTickDifference","cartesian_axis_helper_toConsumableArray","getVerticalAxisSpace","_context$config3","calculateBandSpace","largestDimHeight","minTickWidth","_getHorizontalAxisSpa","_getVerticalAxisSpace","getValidDomain","userDom","setContinousAxisDomain","_domain","axisComponentDimensions","oldConfig","mockedOldConfig","shouldAxesScaleUpdate","hasAxesConfigChanged","properties","sanitizeTickFormatter","_scale","_axis","createAxis","_tickFormatter","_renderConfig","SimpleAxis","simple_axis_classCallCheck","_dependencies","_range","_domainLock","_axisDimensions","defCon","simpleConfig","bodyElem","dist","_animationDonePromises","domainValue","setAxisComponentDimensions","axisClass","setTickConfig","domainVal","computeAxisDimensions","_getAxisComponentDime","labelHeight","labelWidth","calculateContinousSpace","_context$renderConfig6","axisNameWidth","_getHorizontalAxisSpa2","_getVerticalAxisSpace2","renderAxis","axisNameStyle","tickLabelStyle","axisTickFormatter","labelProps","axisNameSpace","all","LinearInterpolator","LogInterpolator","PowInterpolator","interpolatorMap","continous_axis_defineProperty","_interpolatorMap","ContinousAxis","continous_axis_classCallCheck","continous_axis_possibleConstructorReturn","continous_axis_getPrototypeOf","InterpolatorCls","_interpolator","_this$renderConfig","sanitizeDomain","_this$config3","getNumberOfTicks","labelDim","tickLength","numberOfValues","_this$axisComponentDi","BandAxis","_get","band_axis_getPrototypeOf","_this$config2","_this$maxTickSpaces","_getRotatedSpaces","_this$renderConfig2","TimeAxis","time_axis_classCallCheck","time_axis_possibleConstructorReturn","time_axis_getPrototypeOf","time_axis_get","rawTicks","x11Colors","Pink","LightPink","HotPink","DeepPink","PaleVioletRed","MediumVioletRed","LightSalmon","Salmon","DarkSalmon","LightCoral","IndianRed","Crimson","FireBrick","DarkRed","Red","OrangeRed","Tomato","Coral","DarkOrange","Orange","Gold","Yellow","LightYellow","LemonChiffon","LightGoldenrodYellow","PapayaWhip","Moccasin","PeachPuff","PaleGoldenrod","Khaki","DarkKhaki","Cornsilk","BlanchedAlmond","Bisque","NavajoWhite","Wheat","BurlyWood","Tan","RosyBrown","SandyBrown","Goldenrod","DarkGoldenrod","Peru","Chocolate","SaddleBrown","Sienna","Brown","Maroon","DarkOliveGreen","Olive","OliveDrab","YellowGreen","LimeGreen","Lime","LawnGreen","Chartreuse","GreenYellow","SpringGreen","MediumSpringGreen","LightGreen","PaleGreen","DarkSeaGreen","MediumSeaGreen","SeaGreen","ForestGreen","Green","DarkGreen","MediumAquamarine","Aqua","Cyan","LightCyan","PaleTurquoise","Aquamarine","Turquoise","MediumTurquoise","DarkTurquoise","LightSeaGreen","CadetBlue","DarkCyan","Teal","LightSteelBlue","PowderBlue","LightBlue","SkyBlue","LightSkyBlue","DeepSkyBlue","DodgerBlue","CornflowerBlue","SteelBlue","RoyalBlue","Blue","MediumBlue","DarkBlue","Navy","MidnightBlue","Lavender","Thistle","Plum","Violet","Orchid","Fuchsia","Magenta","MediumOrchid","MediumPurple","BlueViolet","DarkViolet","DarkOrchid","DarkMagenta","Purple","Indigo","DarkSlateBlue","SlateBlue","MediumSlateBlue","White","Snow","Honeydew","MintCream","Azure","AliceBlue","GhostWhite","WhiteSmoke","Seashell","Beige","OldLace","FloralWhite","Ivory","AntiqueWhite","Linen","LavenderBlush","MistyRose","Gainsboro","LightGray","Silver","DarkGrey","Grey","DimGrey","LightSlateGrey","SlateGrey","DarkSlateGrey","Black","palette","DEFAULT_GRADIENT_COLOR","DEFAULT_CONFIG","stops","getHslString","hslArr","convertToXllString","baseString","getActualHslColor","paletteColor","hexToHsv","props_toConsumableArray","newConfig","uniqueValues","treatNullMeasures","scaledVal","minDomainScaledVal","getStops","newStops","color_strategy_toConsumableArray","rangeStops","newStopsLength","newRange","hslInterpolator","interpolateHslLong","indexedDomain","scaleDomain","indexedDomainMeasure","normalDomain","steppedDomain","_getStops","continousSteppedDomain","_getStops2","uniqueRange","indexedRange","numVal","normalRange","strategyGetter","domainType","rangeType","schemeType","color_strategy_defineProperty","domainRange","ColorAxis","color_axis_classCallCheck","_domainType","_rangeType","_schemeType","getSchemeType","_colorStrategy","setColorStrategy","updateDomain","colorStrategy","getScheme","colorSchemes","hslColorArray","getRawColor","color_axis_toConsumableArray","scaleInfo","domainRangeFn","transformationArr","newH","newS","newL","newA","size_strategy_defineProperty","pieceWiseRange","size_strategy_toConsumableArray","intervals","newIntervals","discreteRange","SizeAxis","size_axis_classCallCheck","_sizeStrategy","setStrategy","domainInfo","domainFn","generator","ShapeAxis","shape_axis_classCallCheck","_generatedShapes","shapeType","shapeGenerator","generatorFn","generatedShapes","DATA_TYPES","group_transform","data_type_scale_map_defineProperty","_dataTypeScaleMap","groupByIndices","nestCollection","nestFn","identityTransform","transformMap","transform_factory_defineProperty","_transformMap","uniqueField","valueField","normalizedData","normalizeData","uniqueFieldIndex","valueFieldIndex","seriesKeyIndex","seriesKeys","tuples","_tuple","seriesKey","newArr","orderBy","orderIndex","groupByIndex","localeCompare","stackData","seriesData","transformFactory","getLayerColor","colorEncoding","colorFieldIndex","rawColor","transfromColor","styleType","intensity","stateColor","originalColor","fillColorInfo","transformColor","interactionStyles","elements","getPlotElementsFromSet","_d$meta","colorTransform","_ref4","helpers_slicedToArray","getAxesScales","_map2","_map4","xScale","yScale","getIndividualClassName","individualClassName","classNameStr","attachDataToVoronoi","_ref5","helpers_toConsumableArray","updateStyle","positionPoints","positioner","encodingTransform","getPlotMeasurement","dimensionalValues","fieldInfo","encodingFieldsInf","transformType","_bandScale","span","groupSpan","offsetValues","actualGroupWidth","dataProps","innerPadding","getGroupSpan","isAxisBandScale","axisPadding","groupPadding","resolveInvalidTransformType","_context$encodingFiel","groupByField","groupByFieldMeasure","getValidTransformForAggFn","resolvedInvalidTransformType","_context$encodingFiel2","isCustomTransformTypeProvided","_customConfig","listener_map_slicedToArray","encodingValue","getEncodingFieldInf","_map6","x0Field","y0Field","colorField","shapeField","sizeField","_map8","_map10","xFieldSubType","yFieldSubType","_map12","xFieldIndex","yFieldIndex","x0FieldIndex","y0FieldIndex","resolveTransformType","_transformedData","getTransformedData","_normalizedData","getNormalizedData","calculateDomainFromData","_updateLock","getRenderProps","registerChangeListener","renderLayer","throwback","commit","defaultOptions","default_options_defineProperty","_defaultOptions","newConf","defaultPolicy","_cacheEnabled","_cachedData","BaseLayer","base_layer_classCallCheck","base_layer_possibleConstructorReturn","base_layer_getPrototypeOf","base_layer_assertThisInitialized","alias","_points","_measurement","_store","localNs","initializeGlobalState","globalState","getState","helpers_defineProperty","base_layer_defineProperty","global","unitRowIndex","unitColIndex","_encodingFieldsInf","_encodingTransform","_alias","transformData","encodingFieldInf","yEnc","xEnc","encodingType","transformedDataArr","fieldsLen","pointObj","_transformType","getValidTransform","pointMap","_pointMap","_dataProps","_this$encodingFieldsI","base_layer_slicedToArray","xMeasure","yMeasure","_identifiers$","_identifiers$2","xMeasureIndex","yMeasureIndex","getAllAttrs","filteredPoints","base_layer_toConsumableArray","sizeVal","enc","_identifiers$getData","identifierData","identifierSchema","_this$encodingFieldsI2","tupleArr","transformedVal","base_layer_construct","userConf","drawLine","curveInterpolatorFn","linepath","LineLayer","line_classCallCheck","line_possibleConstructorReturn","line_getPrototypeOf","isXDim","isYDim","xPx","yPx","_getLayerColor","stroke","rowId","cachePoint","seriesClassName","containerSelection","animateGroup","groupTransition","groupAnimateStyle","stroke-opacity","getPathStyle","translatePoints","colorValFn","colorVal","getDrawFn","searchRadius","_point$data$data","getIdentifiersFromData","layerId","drawArea","easeEffect","renderer_slicedToArray","enterAreaPath","updateAreaPath","selectionEnter","AreaLayer","area_get","area_getPrototypeOf","_getAxesScales","classNameFn","minYVal","basePos","y0Px","invalidY","invalidY0","minOuterRadius","stroke-width","stroke-linejoin","innerRadiusFixer","states","fadeout","selected","ArcLayer","arc_classCallCheck","arc_possibleConstructorReturn","arc_getPrototypeOf","_prevPieData","pieData","pieIndex","prevData","_getFieldIndices","getFieldIndices","arc_helper_slicedToArray","angleField","radiusField","angleIndex","sizeIndex","radiusIndex","colorIndex","dataVal","uid","outerRadiusValue","angleVal","_previousInfo","getPreviousPoint","currIndex","prevArc","nextArc","_dataPoint$datum","_this$measurement","chartHeight","chartWidth","qualClassName","getRadiusRange","defaultRadius","radiusDomain","rangeValueGetter","getRangeValue","domainMultiplier","sizeAxisDomain","sizeMultiplier","_chartWidth","_chartHeight","consecutiveExits","exitCounter","arcFn","tweenPie","individualClass","tweenExit","exitArr","oldExitCounter","tweenExitPie","consecutiveExitArr","gElem","pieSlices","pieSliceInf","tData","drawText","selectionMerge","backgroundVal","textanchor","textStyle","background","backgroundPadding","_smartLabel$getOriSiz","backgroundEl","TextLayer","textEncoding","textField","textFormatter","backgroundEncoding","backgroundValue","textFieldIndex","textValue","text_slicedToArray","text-anchor","drawSymbols","createShape","groupElement","Element","newShape","nodeName","src","href","shapeElement","pathStr","checkPath","exitGroup","defColorStyle","fillOpacity","shapes","sizes","PointLayer","point_classCallCheck","point_possibleConstructorReturn","point_getPrototypeOf","sizeEncoding","shapeEncoding","sizeValue","shapeFieldIndex","sizeFieldIndex","_config$offset","offsetX","offsetY","point_slicedToArray","maxSize","generateDataPoints","point_toConsumableArray","drawFn","getMarkId","_maxSize","_getPlotMeasurement2","widthMetrics","heightMetrics","offsetXValues","offsetYValues","measurementConf","getMeasurementConfig","widthSpan","heightSpan","distanceLimit","drawRects","barEnterFn","transitionBars","selTransition","resolveDimByField","axesInfo","spaceType","minDomVal","sizeConfig","enterSpace","minVal","maxVal","diffPx","barBasePos","axisType","axisType0","resolveDimensions","_resolveDimByField","enterWidth","enterX","xPos","_resolveDimByField2","enterHeight","BarLayer","bar_classCallCheck","bar_possibleConstructorReturn","bar_getPrototypeOf","_plotPadding","_plotSpan","bar_get","getTranslatedPoints","normalizedDataArr","clipElement","clipPathElement","bar_slicedToArray","barWidthMetrics","barHeightMetrics","barWidthOffsets","barHeightOffsets","barWidth","barWidthOffset","barHeight","barHeightOffset","uniqueFieldType","pointFound","bar_toConsumableArray","p2","tick_renderer","ticksEnter","TickLayer","_config$span","xSpan","ySpan","x0Px","drawTicks","AREA_LAYER","ARC_LAYER","LINE_LAYER","TEXT_LAYER","POINT_LAYER","BAR_LAYER","TICK_LAYER","SIMPLE_LAYER","BASE_LAYER","sanitizeEncoding","layerFactory","compositeLayers","factoryObj","setLayerRegistry","reg","_layerRegistry","getSerializedConf","serializedDefs","defs","unitLayerDef","sDef","parseLayerDefinition","layerType","strs","layer_factory_toConsumableArray","getLayerInstance","layerConstructor","getLayerClass","composeLayers","sanitizeLayerConfig","DEFAULT_LAYERS","defaults_defineProperty","_DEFAULT_LAYERS","LAYER_TYPES","ROWS","COLUMNS","COL","ROW","CELL","X_AXES","Y_AXES","ENTRY_CELLS","EXIT_CELLS","PRIMARY","SECONDARY","local_options","local_options_defineProperty","_CONFIG$ROWS$COLUMNS$","SimpleGroup","Variable","ComposedVars","composed_vars_classCallCheck","texts","composed_vars_possibleConstructorReturn","composed_vars_getPrototypeOf","vars","_vars","member","getMinDiff","SimpleVariable","simple_var_classCallCheck","simple_var_possibleConstructorReturn","simple_var_getPrototypeOf","oneVar","_oneVar","dtFormat","minimumConsecutiveDifference","varInst","convertToVar","transformFields","field_sanitizer_slicedToArray","normalizedFields","normalizeFields","norFields","orderFields","fieldArray","temporalArr","categoricalArr","fieldList","numOfMeasures","allDimensions","field_sanitizer_toConsumableArray","rowsInfo","columnsInfo","rowDimensions","rowMeasures","rowTemporalFields","rowCategoricalFields","columnDimensions","columnMeasures","columnTemporalFields","columnCategoricalFields","VisualEncoder","_fieldInfo","_axisFrom","_headerFrom","__headerFrom","axisFrom","_getHeaderAxisFrom2","visual_encoder_slicedToArray","getHeaderAxisFrom","rowHeader","rowAxis","_getHeaderAxisFrom4","colHeader","colAxis","headerFrom","scaleMaps","dataTypeScaleMap","generateAxisFromMap","axesCreators","axisKey","groupAxes","currentAxes","cacheMaps","commonAxisKey","getAxisKey","axisConfig","getAxisConfig","axisInfo","axisOrientation","userAxisConfig","_rotationLock","resetDomain","createSimpleAxis","Cls","getIndex","arrIndex","CartesianEncoder","geomCellAxes","projections","rowFields","columnFields","rowIndex","columnIndex","xAxes","yAxes","lock","unlock","unitDomains","units","1","rIdx","unitsArr","_loop2","cIdx","len2","_resolver$axes","axesArr","adjustedDomain","alignZeroLine","getAdjustedDomain","y1ratio","y2ratio","allSameSign","facets","counter","primaryFacets","secondaryFacets","primaryFields","secondaryFields","primaryLen","secondaryLen","projArr","primaryField","secondaryField","facet","existIndex","axisFromIndex","cartesian_encoder_get","cartesian_encoder_getPrototypeOf","groupedModel","encodingObj","retriveDomainFromData","layerArray","serializedLayers","userLayerConfig","layerConfig","colField","colFieldName","rowField","configs","rowFieldName","rowFieldType","getDefaultMark","colFieldType","defConfigs","layerConfigs","getLayerConfFromFields","colFields","encodingArr","encoder_helper_toConsumableArray","colFieldExist","rowFieldExist","layerConf","mergedLayerConf","serializedLayerConfig","cartesian_encoder_toConsumableArray","PolarEncoder","pieAxes","domainProps","sanitizedRows","sanitizedColumns","polar_encoder_get","polar_encoder_getPrototypeOf","sanitizedFields","typeIndex","fieldSet","polar_encoder_toConsumableArray","facetFields","layerEncoding","encType","polar_encoder_defineProperty","RetinalEncoder","newAxes","createRetinalAxis","fieldProps","getAxisType","encodingConfigs","isDistributionEqual","group_utils_toConsumableArray","rowType","initializeCacheMaps","cellMap","xAxesMap","yAxesMap","entryCellMap","exitCellMap","headerCreator","fieldHeaders","TextCell","getHeaderText","rowLength","userAxisFromConfig","group_utils_slicedToArray","firstField","secondField","firstFieldType","secondFieldType","setFacetsAndProjections","encoder","_encoder$simpleEncode","simpleEncoder","getFacetsAndProjections","group_utils_defineProperty","getBorders","matrices","showRowBorders","showColBorders","showValueBorders","valueMatrix","_rows","leftRows","rightRows","_columns","topColumns","bottomColumns","_encoder$fieldInfo","allDimensionLength","allMeasuresLength","allTemporalFieldsLength","getRowBorders","borders","getColumnsBorders","getValueBorders","borderTypeRow","borderTypeCol","action_behaviour_map_defineProperty","ACTIONS","getLayerFromDef","existingLayer","_layerDeps","inst","colIndex","instanceArr","_timeDiffs","resolveEncodingTransform","layerInst","resolvable","depArr","sanitizeLayerDef","sanitizedDefs","sConf","getLayersBy","searchBy","removeLayersBy","createRenderPromise","_renderedPromise","_renderedResolve","GRID_BAND","GRID_LINE","getGridLayerDefinitions","getDefaultVisibilty","getLayerDefinition","_definition","_encoding","gridLines","gridBands","gridLineColor","zeroLineColor","gridBandColor","isLinearScale","grid_lines_defineProperty","isNegativeDomain","attachDataToGridLineLayers","_gridLines","_gridBands","gridLayerData","getGridLayerData","gridData","_jsonData$push","grid_lines_toConsumableArray","trackerClassName","arcLayerClassName","sideEffectClassName","src_local_options","src_local_options_defineProperty","_CONFIG$LAYERDEFS$TRA","cachedData","local_options_toConsumableArray","oldData","calculateDomainListener","unionDomainFromLayers","layerAxisIndex","getDataDomain","domainValues","layerDomain","fieldDomain","fieldStr","_layerAxisIndex","src_listener_map_slicedToArray","fieldsVal","removeExitLayers","layersMap","markSet","listenerInf","_lifeCycleManager","notify","axesObj","temporalFields","filteredFields","_ref6","_ref7","_ref8","_ref9","_ref10","_timeDiffsByField","createGridLineLayer","vuConf","createGridLines","createFn","iteratorFn","atomicDef","_ref11","_ref12","transformDataModels","transformVal","_ref15","_ref16","layerAxisIndexVal","axesVal","lyr","disableUpdate","attachDataToLayers","transformedDataModels","dataSource","enableUpdate","_dimensionMeasureMap","getDimensionMeasureMap","retinalEncodingsAndMeasures","_layer$encodingFields","_retinalEncodingsAndM","src_helper_toConsumableArray","retinalFields","attachAxisToLayers","axisInf","props_defineProperty","_PROPS","createSelectionSet","originalData","attachPropagationListener","firebolt_helper_slicedToArray","dispatchQueuedSideEffects","firebolt_helper_toConsumableArray","clearActionHistory","payloadGenerator","brush","selectionDataModel","propPayload","getRangeFromData","propCriteria","isDimension","payload_generator_toConsumableArray","__default","propagateValues","propagationFieldInf","propagationFields","sideEfffects","mergedModel","sourceUnit","sourceCanvas","parentAlias","propagationBehaviour","propFields","facetByFields","getModelWithFacetData","schema1","data1","schema2","data2","data_propagator_toConsumableArray","groupId","behaviourInstance","propagationConf","sourceBehaviour","enabled","propConf","propInf","UnitFireBolt","src_firebolt_classCallCheck","firebolt_possibleConstructorReturn","firebolt_getPrototypeOf","firebolt_assertThisInitialized","unitId","aliasName","propagationSourceCanvas","sourceUnitId","sourceSideEffects","sideEffectInstances","actionOnSource","mappedEffects","se","sideEffectChecker","enabledFn","payloadFn","sourceIdentifierFields","sourceBehaviours","firebolt_get","VisualUnit","visual_unit_classCallCheck","visual_unit_defineProperty","lifeCycleManager","_gridLinesSelection","_gridBandsSelection","_layerNamespaces","_transformedDataModels","localOptions","_firebolt","_rootSvg","class","renderGridLineLayers","gridLineParentGroup","_entry","grid_lines_slicedToArray","parentGroupClass","renderLayers","orderedLayers","layerParentGroup","layerDepOrder","_layerDepOrder","_sideEffectGroup","createSideEffectGroup","initSideEffects","rootSvg","_this$parentContainer","parentContainerInf","layerDefinition","layerDefinitions","components","layerIndex","startIndex","visual_unit_toConsumableArray","layersArr","_layersArr","markId","defArr","instanceValues","layerdeps","getLayerAxisIndex","_layer$config","stateStore","parentModel","dimValue","getNearestDimensionalValue","entryVal","pointInf","getMarkInfFromLayers","markInf","parsedIdentifiers","transposeArray","getPointsFromIdentifiers","visual_unit_construct","getFieldNames","fields1","matrix_model_toConsumableArray","createSelectedDataModel","uniqueKeyGenerator","keyArray","newDm","nextDepthUniqueValues","projectRows","allColumnProjections","rowProjections","optionalProjections","projectFields","_getFieldNames2","matrix_model_slicedToArray","projFieldNames","colProjFieldNames","pushToMatrix","valueCellCreator","_matrix$rowIndex","facetInfo","colProjections","rowProj","projIdx","_getFieldNames4","rowProjFieldNames","projectedDm","createValueCells","suppliedLayers","GeomCell","matrixLayers","horizontalAxis","verticalAxis","datamodelTransform","layerConfigArr","getLayerConfig","normalizedColumns","normalizedRows","geomCellKey","getCellKey","columnId","allFacets","cell_creator_toConsumableArray","rowFacets","colFacets","geomCell","updateCells","facetKey","createAxisCells","axisInst","_axisInst$config","AxisCell","BlankCell","headerPlaceholderGn","selectionObj","selectionKeys","keySet","createTextCells","generatePlaceholders","facetsAndProjections","encoders","valuesMatrix","rowKeys","columnKeys","takeAxisFrom","takeHeaderFrom","axisPlaceholderGn","selObj","axesMatrix","selObjProp","axesForDraw","rowsPrimary","rowPrime","columnsPrimary","colPrime","_selectionObj","rowsSecondary","columnsSecondary","getObjects","section","hContext","computeMatrices","componentRegistry","globalConfig","autoGroupBy","otherEncodings","matrixGnContext","getCellDef","isRowSizeEqual","isColumnSizeEqual","colCells","rowCells","resetSimpleAxes","newCacheMap","valueCellContext","serializeLayerConfig","extractFields","layerFields","flattenArray","getFieldsFromSuppliedLayers","suppliedLayerConfig","aggregationFns","nearestAggFns","resolvedAggFns","valueMatrixInfo","getMatrixModel","rowDataModels","colProj","firstLevelRowKeys","_rowDataModels","rowFacetFieldNames","selectedDataModel","newProjectedDataModels","_rowDataModels2","colFacetNames","firstLevelColumnKeys","dme","rIndex","cIndex","transposedColKeys","valueCellsCreator","placeholder","_mutateAxesFromMap","mutateAxesFromMap","xAxisSet","yAxisSet","axisId","createUnits","_generateMatrices","generateMatrices","leftHeaders","topHeaders","bottomHeaders","rightHeaders","cell_creator_slicedToArray","rowSec","colSec","leftFacets","rightFacets","rowPriority","colPriority","leftMatrix","rightMatrix","topMatrix","bottomMatrix","currentBottomLength","setAvailableSpace","rowMatrix","columnMatrix","RESOLVER_PROPS","MatrixResolver","matrix_resolver_classCallCheck","_registry","_layerConfig","_matrixLayers","_rowMatrix","_columnMatrix","_valueMatrix","_facets","_projections","_datamodelTransform","_units","_cacheMaps","_axes","maps","matrix_resolver_toConsumableArray","_horizontalAxis","_verticalAxis","matrixType","sideEffectRegistry","_this$dependencies","unitConfig","extractUnitConfig","globalStates","_this$getAllFields","retContext","getRetinalFieldsDomain","retinalEncoder","setCommonDomain","_this$axes","_this6","retinalAxes","updateModel","placeholders","bottomLeft","bottomRight","_this$dependencies3","showHeaders","matrix_resolver_slicedToArray","topCols","bottomCols","rowHeaders","blankCellCreator","footers","topLeft","topRight","ValueMatrix","matrixArr","value_matrix_classCallCheck","instancesById","cellValue","_instancesById","_matrix","_filterFn","rowWidth","currentRowWidth","getLogicalSpace","rowHeight","currentRowHeight","setMatrixInstances","_composition","createMatrices","matrixConfig","unsubscribeChangeListeners","retinalConfig","sanitizeRetinalConfig","retinalConf","confValue","getEncoder","groupType","fieldSanitizer","setAxisAndHeaders","placeholderInfo","getMatrices","_groupedDataModel","createRetinalAxes","setDomains","cornerMatrices","createHeaders","metaData","border","unionUnitDomains","registerDomainChangeListener","visual_group_props_defineProperty","visual_group_props_PROPS","cellRegistry","VisualGroup","visual_group_classCallCheck","visual_group_possibleConstructorReturn","visual_group_getPrototypeOf","componentSubRegistry","visual_group_assertThisInitialized","_selection","createUnitState","visual_group_helper_slicedToArray","createLayerState","setupChangeListeners","variable","findInGroup","channel","group_utils_this","facetType","projType","getRetinalAxes","getSimpleAxes","_this$resolver$getAll","visual_group_defineProperty","existingRemoveSet","select_toConsumableArray","firebolt_action_behaviour_map_defineProperty","action_behaviour_map_actionBehaviourMap","propagationBehaviourMap","_propagationBehaviour","firebolt_behaviour_effect_map_defineProperty","firebolt_behaviour_effect_map_behaviourEffectMap","propagationSideEffects","_propagationSideEffec","SCALE_FUNCTIONS","VALUE","canvasAlias","rawVal","check","assembleModelFromIdentifiers","src_firebolt_helper_toConsumableArray","LegendFireBolt","_Firebolt","legend_firebolt_classCallCheck","legend_firebolt_possibleConstructorReturn","legend_firebolt_getPrototypeOf","legend_firebolt_inherits","legend_firebolt_createClass","behaviourName","getCriteriaFromData","firebolt_physical_defineProperty","physical_physicalActions","boundingBox","gradientDimensions","axisScale","rangeShifter","drag_defineProperty","getSelectionCriteria","selectionBoxMeasure","drawingInfMeasure","subjectStartPoint","gradientDimension","legendGradContainer","legendSelGroup","enterFn","getMousePos","boundingClientRect","selection_box_drag_defineProperty","fadeOut","brighten","LegendHighlighter","legend_highlighter_classCallCheck","legend_highlighter_possibleConstructorReturn","legend_highlighter_getPrototypeOf","legendContainer","resetLogicalSpace","title","_title","ALIGN","DEFAULT_MEASUREMENT","LEGEND_TITLE","borderStyle","borderColor","bounds","upper","ICON_MAP","getScaleInfo","scaleType","steps","scaleFn","getInterpolatedData","domainForLegend","interpolatedFn","getDomainBounds","domainBounds","domainLeg","ele","legend_helper_defineProperty","getScaleFactor","SimpleLegend","simple_legend_classCallCheck","_metaData","_fieldName","_labelManager","_cells","defaultMeasurement","_computedStyle","legendBehaviours","_canvasAlias","getItemMeasures","_labelManager$getOriS","effPadding","effBorder","effMargin","dataFromScale","titleSpace","getTitleSpace","titleHeight","titleWidth","labelSpaces","getLabelSpaces","_computeItemSpaces","computeItemSpaces","maxItemSpaces","textOrientation","itemSpaces","iconSpaces","maxIconWidth","labelSpace","itemSpace","iconSpace","newLabelWidth","titleSpaces","_this$measurement2","titleCreator","titleContainer","marginPosition","_this$config4","_this$measurement3","renderTitle","simple_legend_defineProperty","legendOrientation","position_config_defineProperty","_legendOrientation","datasets","itemContainerMeasures","getStepSpacesInfo","iconHeight","iconWidth","stepPadding","horizontal","vertical","positionConfig","_positionConfig","alignmentMap","_alignmentMap","itemStack","_itemStack","createLegendSkeleton","gradWidth","gradHeight","maxGradHeight","maxGradWidth","legendBody","legendItem","getItemContainers","legendInstance","positionObj","createItemSkeleton","itemSkeleton","alignClass","applyItemStyle","measureType","stepColorCheck","_context$measurement","renderIcon","defaultIcon","DiscreteLegend","_getScaleInfo","discrete_legend_toConsumableArray","_field$schema","discrete_legend_defineProperty","discrete_legend_get","discrete_legend_getPrototypeOf","renderDiscreteItem","_context$measurement2","_item$icon","text-align","getGradientDomain","accumulator","currentValue","MAX_VALUE","MIN_VALUE","legendGradSvg","legendGradCont","linearGradient","makeLinearGradient","legendRect","GradientLegend","gradient_legend_toConsumableArray","gradient_legend_defineProperty","newAxis","axisSpace","axisDomainLength","_legendGradientSvg","gradient_legend_get","gradient_legend_getPrototypeOf","renderGradient","_createLegendSkeleton","StepLegend","step_legend_toConsumableArray","step_legend_defineProperty","lowerBounds","upperBounds","step_legend_get","step_legend_getPrototypeOf","stepData","renderStepItem","_context$measurement3","_item$icon2","_positionConfig$posit","PADDING","BORDER","MARGIN","TITLE_TEMPLATE_NOT_ALLOWED_TAGS","LEGEND_TYPE_MAP","constants_defineProperty","_LEGEND_TYPE_MAP","HORIZONTAL_CENTER","VERTICAL_CENTER","share","operators_construct","operators_toConsumableArray","strings","htmlCode","expLn","frag","createDocumentFragment","treeShakeNode","nodeType","Node","ELEMENT_NODE","tagName","_didIteratorError","_iteratorError","_step","_iterator","childNodes","err","canvasIterator","canvases","cFn","canvas","visualGroup","matrixInstance","_throwback","actionModel","ActionModel","action_model_classCallCheck","_registrableComponents","registerPropagationBehaviourMap","dissociateBehaviour","_len5","_key5","dissociateSideEffect","policy","registrableComponents","mergedPolicy","aliases","comp","*","propagationPayload","propagationCanvas","crossInteractionPolicy","TITLE_CONFIG","SUB_TITLE_CONFIG","maxLines","LAYOUT_ALIGN","canvas_local_options_defineProperty","_localOptions","canvasOptions","_canvasOptions","_sanitized","titleConfig","subtitle","sub","subtitleConfig","LayoutComponent","layoutComponent_classCallCheck","_boundBox","_renderAt","_alignWith","_alignment","_componentName","_className","DummyComponent","newDimensions","renderAt","component","componentName","pagination","scrollBar","thickness","speed","legend","minHeight","minCharacters","verticalAlign","collapse","invalidValues","DEFAULT_WIDTH","DEFAULT_HEIGHT","DEFAULT_CLASS_NAME","NODE_PREFIX","DefinitionModel","definitionModel_classCallCheck","_host","host","_cut","cut","_ratioWeight","ratioWeight","_preferred","preferred","_lanes","lanes","_remainingHeight","_remainingWidth","remainingHeight","remainingWidth","getNodeId","_uid","yExtraSpace","smallestHeight","getCutType","smallestExtraHeightHorizontally","MAX_SAFE_INTEGER","containerHeight","hostHeight","xExtraSpace","smallestWidth","smallestExtraWidthVertically","containerWidth","hostWidth","createPlaceHolderComponent","placeComponent","definitionModel","leftOvercomponentRationWidth","isPreferred","isGridComponent","componentRatioWidth","leftHeight","leftWidth","_component$getLogical","componentHeight","componentWidth","firstLaneConfig","firstLane","secondLane","tree_classCallCheck","_parentCut","_this$_children","tree_toConsumableArray","parentCut","bound","nodeconfig","searchNode","childNode","nodeId","deleteSearchNode","LayoutModel","measurements","layout_model_classCallCheck","_measurements","_root","createTree","setBoundBox","addChildren","lane","allocateBoundingBox","totalWeight","carry","lastSibling","ratio","setHostSpatialConfig","setHostPosition","negotiateDimension","alteredDim","nonAlteredDim","cumultiveExtraSpaceAmt","childrenLength","extraSpaceAmt","computePosition","determineBoundBox","bb","_lastSibling$boundBox","_top","_left","_height","_width","_instance$parent$boun","setSpatialConfig","Utils","utils_createClass","isDOMElement","getID","getElement","findContainer","coordinate","removeDiv","divId","DataPoint","data_point_classCallCheck","DataParser","data_parser_classCallCheck","data_parser_createClass","defaultDataPointLogic","nodepoints","getnodePoints","datapoint","HTMLDataAdapter","_DataParser","html_data_classCallCheck","html_data_possibleConstructorReturn","html_data_getPrototypeOf","html_data_inherits","html_data_createClass","getCoordinates","html_data_get","Renderer","renderer_classCallCheck","renderer_createClass","initRenderer","__logicalTree","HTMLRenderer","_Renderer","html_renderer_classCallCheck","html_renderer_possibleConstructorReturn","html_renderer_getPrototypeOf","_coordinates","html_renderer_inherits","html_renderer_createClass","createhtml","mainDiv","html_renderer_get","parentDiv","createAndCustomiseParent","hasHost","createAndPositionDiv","_objectSpread","div","coordinates","findNode","nodeID","renderer","renderHTML","DrawingManager","drawing_manager_classCallCheck","_componentMap","componentMap","_layoutClassName","layoutClassName","_renderer","drawing_manager_createClass","drawLayout","resolveAligment","componentData","alignWith","newNodeConfig","refNode","alignment","drawComponent","DefinitionManager","definition_manager_classCallCheck","_prioritySequence","_totalHeight","_totalWidth","_targetComponentMap","prepareTargetComponentMap","targetComponentMap","canvasComponent","tempDefModel","componentRef","getComponent","placeGridComponent","gridComponents","iscolumnPreffered","_placeComponent","rowpreffred","LayoutDef","layout_def_classCallCheck","_layoutDefinition","layout_def_createClass","addComponent","layoutDefinition","addMultipleComponent","componentArray","sanitizedDefinition","sanitizeConfig","hostObj","hostID","childHost","resetComponentMap","LayoutManager","layout_manager_classCallCheck","_dimension","_skeletonType","skeletonType","_layoutDef","_drawingManager","_rootNodeID","con","resetNode","updateNode","compute","_layout","calLayOutDef","_context$dimension","layoutDef","prioritySequence","generateConfigModel","negotiate","broadcast","layoutComponents","componentArr","compo","setupChangeListener","allOptions","_allOptions","canvas_helper_toConsumableArray","nameSpaceProps","equalityChecker","option","updateChecker","dispatchProps","_cachedProps","notifyAnimationEnd","centerMatrix","layout","viewInfo","viewMatricesInfo","promises","cellArr","lifeCycle","animDonePromises","animationDone","axisArr","applyInteractionPolicy","interactionPolicy","_interactionPolicy","_crossInteractionPolicy","unitFireBolt","changeBehaviourStateOnPropagation","changeSideEffectStateOnPropagation","createLayoutManager","src_options","isInteger","minUnitWidth","minUnitHeight","oldConf","fixScrollBarConfig","VIEW_INDEX","ROW_MATRIX_INDEX","2","COLUMN_MATRIX_INDEX","HEIGHT","ROW_ROOT","COLUMN_ROOT","VERTICAL","HORIZONTAL","GenericLayout","generic_layout_classCallCheck","_matrices","_centerMatrix","_mountPoint","DEFAULT_CONFIGURATION","grid_layout_defaults_defineProperty","_DEFAULT_CONFIGURATIO","_FieldNames$BORDER","DEFAULT_MEASUREMENTS","_DEFAULT_MEASUREMENTS","findInPage","page","combineMatrices","isTransposed","joinedMatrix","utils_toConsumableArray","rowData","computeLogicalSpace","maxMeasures","_config$isTransposed","unitMeasures","_getMeasureInfo","getMeasureInfo","firstMeasure","secondMeasure","minMeasures","getMinMeasures","_logicalSpace","utils_defineProperty","valueItem","maxMeasure","firstMeasureValue","secondMeasureValue","valueArray","_item$space","fMeasure","sMeasure","createMatrixEachLevel","_arr$i","extraCellsRemover","beg","distribution","extraCellLengths","VisualMatrix","visual_matrix_classCallCheck","_lastLevelKey","_primaryMatrix","_secondaryMatrix","_maxMeasures","_availableSpace","_layoutMatrix","_tree","_createTree2","matrixTree","lastLevelKey","layoutMatrix","primaryMatrix","secondaryMatrix","breakPage","primaryMatrixLength","newMatrix","keyLength","heightMeasures","populateMaxMeasures","widthMeasures","calculateDepth","viewableMatrix","createViewPortMatrix","viewableMeasures","redistributeSpaces","childDepth","createMatrixInstances","matrixInfo","breakPointer","_breakPointer","brokenMatrix","breakMatrix","nextLevel","removeExtraCells","RowVisualMatrix","row_matrix_classCallCheck","row_matrix_possibleConstructorReturn","row_matrix_getPrototypeOf","maxHeights","maxWidths","matrixInst","cellDimOptions","matrixIndex","_this2$getCellDimensi","getCellDimensions","widths","rowHeights","columnWidths","primary","secondary","begCellLen","endCellLen","remainaingAvailWidth","remainaingWidth","cWidths","conditions","maxPrioritySpace","availableWidth","currentWidth","prioritySpace","logicalWidths","getPriorityDistribution","mWidth","mHeight","redistributeViewSpaces","computeViewableSpaces","rHeights","gutter","spaceTakenByColumn","spaces","getDistributedHeight","heightWithoutGutter","distSum","gutterSum","availableHeight","colLen","distHeight","borderWidth","colHeight","colWidth","heights","ColumnVisualMatrix","column_matrix_classCallCheck","column_matrix_possibleConstructorReturn","column_matrix_getPrototypeOf","remainaingHeight","heightDist","divider","spaceTakenByRow","getDistributedWidth","layoutConfig","distWidth","rowLen","oldLogicalSpace","heightDistribution","getMatrixMeasurement","setViewSpaces","pointerType","viewSpaces","pointer","computations_defineProperty","paginationDetailsMap","scrollType","paginationMeasureGetter","relatedMaxMeasure","getMatrixMeasureForPagination","measureDetails","actualMeasure","scrollInfo","getMatrixHeightDetails","columnMatrixWidth","_getHeightRequiredByC","getHeightRequiredByColMatrix","maxColumnMatrixHeight","columnViewSpace","getViewableSpaces","columnPointer","columnMatrixHeight","maxHeightAvailableForRowMatrix","rowMatrixHeight","bufferCondition","isScroll","getActualBufferFromConfig","computations_slicedToArray","getBufferFromCondition","currentBufferType","horizontalBuffer","verticalBuffer","computeLayoutMeasurements","_getMatrixWidthDetail","getMatrixWidthDetails","_layout$config3","rowMatrixWidth","maxRowMatrixWidth","maxWidthAvailableForColumnMatrix","_getMatrixHeightDetai","_getActualBufferFromC","rowViewableSpaces","columnViewableSpaces","setValueMatrixMeasurements","computations_toConsumableArray","rowWidthsPrimary","rowWidthsSecondary","columnHeightsPrimary","columnHeightsSecondary","measureSum","total","GridLayout","layout_classCallCheck","layout_possibleConstructorReturn","layout_getPrototypeOf","_layoutId","_viewInfo","defaultViewInfo","_scrollInfo","generateVisualMatrices","begColCells","endColCells","gutterSpace","layout_helper_slicedToArray","_center","_bottom","layout_helper_toConsumableArray","RowMatrix","ColumnMatrix","layout_get","_computeLayoutMeasure","setViewInformation","pageNumber","pageType","totalPages","layout_defineProperty","renderGrid","currentPage","maxRowHeight","maxColWidth","rowPointer","getViewMatrices","rowMatrices","getViewableMatrices","columnMatrices","centralMatrixPointer","rowMatrixLen","columnMatrixLen","rowPages","columnPages","layoutDimensions","getViewMeasurements","_layout$config","rowSpaces","colSpaces","rightWidth","topHeight","bottomHeight","centerHeight","centerWidth","viewWidth","viewHeight","actualCenterMeasures","totalMeasures","unitHeights","unitWidths","borderMap","border_helper_defineProperty","_borderMap","specificBorderApplier","borderTypes","showBorders","borderInfo","borderType","applySpecificBorder","applyBorders","borderApplierFn","borderApplier","borderMapVal","orderMaker","nestByStack","updateArr","optionalParams","currStack","prevStack","arrVal","stackVal","currElemIndex","newElem","arrElem","returnArr","spanCalculator","isNull","maskCreator","_nestByStack","viewMatrix","hierarchy","_nestByStack2","spanGenerator","spans","ridx","currSpan","getOrder","isReverse","matrixSpanGeneratorMap","span_maker_defineProperty","_matrixSpanGeneratorM","orderGetter","viewMatrixMaker","spanMaker","matrixSpanGenerator","spanApplier","spaceAllocationDueToSpan","spanApplierMap","_spanApplierMap","TransactionSupport","INTERFACE_IMPl","CLASSPREFIX","HEADER","DATA","AXES","FACET_BY_FIELDS","FIELDS","TRANSFORM","LAYER_DEF","CONFIG","DETAIL_FIELDS","TEXT","AXIS","GEOM","BLANK","SimpleCell","simple_cell_classCallCheck","enums_defaults_defineProperty","_DEFAULT_CONFIG","_CONSTANTS$MARGIN","CONSTANTS","DEFAULT_PROPS","minSpacing","src_props_defineProperty","visual_cell_src_props_PROPS","caption","smartText","axis_cell_classCallCheck","axis_cell_possibleConstructorReturn","axis_cell_getPrototypeOf","_availHeight","_availWidth","axis_cell_assertThisInitialized","computeAxisSpace","logicalWidth","logicalHeight","spaceFixer","_axis$getLogicalSpace","_axis$config2","wrapperDiv","blank_cell_classCallCheck","blank_cell_possibleConstructorReturn","blank_cell_getPrototypeOf","blank_cell_assertThisInitialized","setSmartText","_context$minSpacing","minHeightSpace","minWidthSpace","paddedHeight","paddedWidth","text_cell_classCallCheck","text_cell_possibleConstructorReturn","text_cell_getPrototypeOf","text_cell_assertThisInitialized","computeTextSpace","_context$minSpacing2","minText","_minTextSpace","smartSpace","textAlign","vAlign","_this$smartText","translation","middle","geom_cell_classCallCheck","geom_cell_possibleConstructorReturn","geom_cell_getPrototypeOf","_unit","_datamodel","_facetByFields","_transform","_caption","geom_cell_assertThisInitialized","lockModel","unlockModel","captionSpace","computeGeomSpace","getCaptionSpace","captionDom","DEFAULT_PLACEHOLDERS","src_defaults_defineProperty","_DEFAULT_PLACEHOLDERS","resolveTitleSubTitleContent","rawContent","escapeHTML","htmlEscapes","&","<",">","\"","'","/","createHeading","prevCell","cellType","_minTickDiff","legendInitializer","legendConfig","prevLegends","legends","headerHeight","legendInfo","legendCreator","LegendCls","dataset","scaleProps","_scale$config","stepMapper","dataInfo","legendMeasures","getGroupByData","setLegendMeasures","MuzeComponent","_this$boundBox","HeaderComponent","headerComponent_classCallCheck","headerComponent_possibleConstructorReturn","headerComponent_getPrototypeOf","setParams","cont","renderHeader","LegendComponent","legendComponent_classCallCheck","legendComponent_possibleConstructorReturn","legendComponent_getPrototypeOf","legendSpace","sectionComponents","_this$params$config","legendMount","legWidth","legHeight","sections","currHeight","currWidth","leg","legendHeight","legendWidth","renderLegend","_defaultAlignmentHelp","defaultAlignmentHelper","arrowSizeMap","getUnitPositions","totalLength","viewLength","currentLen","unitPosition","createScrollBarArrow","createScrollBarRect","mover","applyScrollMouseDownAction","moverRect","scrollMaker","_mover$node$getBoundi","_rect$node$getBoundin","rectX","rectY","changeMoverPosition","registerListenerOnArrow","arrowType","_components","isTouchDevice","applyMoverDrag","moverStartPos","rectStartPos","distanceMoved","actualPosition","pageXOffset","pageYOffset","applyRectClick","emptyScrollAreaClick","manager","unitPositions","ScrollMaker","scroll_maker_classCallCheck","_attachedScrollAction","_unitPositions","scroll_maker_createClass","scrollTo","scrollDeltaTo","createScroll","scrollBarContainer","scrollContainerHelper","attachScrollAction","externalScrollAction","detachScrollAction","scrollMakerMap","_ScrollMaker","HorizontalScrollMaker","horizontal_scroll_maker_classCallCheck","horizontal_scroll_maker_possibleConstructorReturn","horizontal_scroll_maker_getPrototypeOf","horizontal_scroll_maker_inherits","horizontal_scroll_maker_createClass","horizontal_scroll_maker_get","prevArrow","nextArrow","_this$logicalSpace","scrollBarWithouArrowLength","_scrollBarWithouArrowLength","_this$_components$mov","positionAdjuster","newPosition","currentPos","_this$_components$mov2","moverPos","movedViewLength","performAttachedScrollFunction","delta","_this$_components$mov3","scrollPercentage","movement","VerticalScrollMaker","vertical_scroll_maker_classCallCheck","vertical_scroll_maker_possibleConstructorReturn","vertical_scroll_maker_getPrototypeOf","vertical_scroll_maker_inherits","vertical_scroll_maker_createClass","vertical_scroll_maker_get","ScrollComponent","scroll_component_classCallCheck","scrollBarComponentConfig","scroll_component_possibleConstructorReturn","scroll_component_getPrototypeOf","unitIndex","sanitizedUnitIndex","externalAction","MatrixComponent","matrix_component_classCallCheck","matrix_component_possibleConstructorReturn","matrix_component_getPrototypeOf","_this$params$config$s","containerForMatrix","applyScroll","_cellSpanMaker","cellSpanMaker","_matrixSpanGenerator","renderTable","applySpans","applier","renderPlaceholders","renderMatrix","applyScrollAction","scollDistance","GridComponent","grid_component_classCallCheck","grid_component_possibleConstructorReturn","grid_component_getPrototypeOf","_this$component$viewI","matrixDim","matrixName","updateWrapper","matrixWrapper","allComponents","_scrollBarManager","wheelDeltaX","wheelDeltaY","scrollBarManager","triggerScrollBarAction","movedView","scrollActionApplier","_this$component$0$0$b","sanitizeGrid","headerMap","headerCell","configType","createHeaderWrapper","headerType","layoutManager","renderDetails","_headerMap$headerType","headerConfig","component_wrapper_maker_objectSpread","wrapperParams","existingComponent","createScrollBarWrapper","scrollBarType","grid","_scrollBarMap$scrollB","scrollBarMap","layoutBasedMeasure","viewMeasure","rowAlign","colAlign","componentWrapperMaker","createLegendWrapper","legendWrapper","gridLayoutWrapper","verticalScrollBar","horizontalScrollBar","ScrollManager","scroll_manager_classCallCheck","_scrollBarComponents","_attachedComponents","scroll_manager_createClass","scrollBarComponents","attachedComponents","performScrollAction","getRenderDetails","_mount$getBoundingCli","heightAttr","widthAttr","visGroup","_visGroup$placeholder","legendPosition","layoutArrangement","arrangeComponents","_titleLayouts","titleLayouts","component_resolver_defineProperty","legendLayouts","titlePosition","subtitlePosition","availableHeightForCanvas","availableWidthForCanvas","_createHeaders","canvasHeight","canvasWidth","isSubtitle","headerOptions","_createHeading","createLegend","getLegendSpace","mountSpace","componentIndexes","renderLayout","_layoutManager","gridLayout","compWrappers","componentWrappers","gridWrapper","createScrollManager","horizontalScrollWrapper","verticalScrollWrapper","hScrollBar","vScrollBar","registerComponents","attachScrollListener","defaultInteractionPolicy","isMeasure","group_firebolt_toConsumableArray","getFieldsFromChannel","colDim","fieldInf","unitColFacets","equals","unitRowFacets","propagateWith","defaultCrossInteractionPolicy","propagationCanvasAlias","propagationUnit","GroupFireBolt","group_firebolt_classCallCheck","group_firebolt_possibleConstructorReturn","group_firebolt_getPrototypeOf","behaviouralAction","validFields","APP_INITIAL_STATE","app","Canvas","globalDependencies","canvas_classCallCheck","canvas_possibleConstructorReturn","canvas_getPrototypeOf","canvas_defineProperty","canvas_slicedToArray","canvas_assertThisInitialized","initedComponents","initCanvas","createGroupState","_VisualGroup$getState2","canvas_helper_slicedToArray","localState","register","prepareLayout","triggerReflow","setLayoutInfForUnits","getBoundBox","getRootNodeId","setLabelRotationForAxes","rotationVal","getAxes","initialSettings","regEntry","COMPONENTS","SUBREGISTRIES","regObj","globalCache","defaultRegistry","overrideRegistryDefinitions","overrideRegistry","muze","_transactor2","muze_slicedToArray","env","globalStore","componentSubRegistryDef","settings","withSettings","enableChainedTransaction","transactionModel","transactionEndpoint","transactionItems","Smartlabel","SideEffects","standards","Behaviours","pkg","operators","utils","lookupWhat","lookupDetails","lookupTarget","deps"],"mappings":"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nD,MAAM,GAAG4S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAxT,IAAI0wC,+BAES8W,cAAKK,aCALL,cAZK,IAAI5mD,MAAM,GAAG4S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAxT,IAAI0wC,gCCES8W,cAZK,IAAI5mD,MAAM,GAAG4S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAxT,IAAI0wC,gCCES8W,cAZK,IAAI5mD,MAAM,GAAG4S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAxT,IAAI0wC,gCCES8W,gBAZK,IAAI5mD,MAAM,GAAG4S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAxT,IAAI0wC,gCCES8W,gBAZK,IAAI5mD,MAAM,GAAG4S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAxT,IAAI0wC,gCCES8W,kBAZK,IAAI5mD,MAAM,GAAG4S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAxT,IAAI0wC,gCCAS8W,cAVK,IAAI5mD,MAAM,GAAG4S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAxT,IAAI0wC,gCCES8W,cAVK,IAAI5mD,MAAM,GAAG4S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAxT,IAAI0wC,gCCES8W,cAVK,IAAI5mD,MAAM,GAAG4S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAxT,IAAI0wC,gCCES8W,cAVK,IAAI5mD,MAAM,GAAG4S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAxT,IAAI0wC,gCCES8W,gBAVK,IAAI5mD,MAAM,GAAG4S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAxT,IAAI0wC,gCCES8W,cAVK,IAAI5mD,MAAM,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","file":"muze.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"muze\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"muze\"] = factory();\n\telse\n\t\troot[\"muze\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"DataModel\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DataModel\"] = factory();\n\telse\n\t\troot[\"DataModel\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","const DataModel = require('./export');\n\nmodule.exports = DataModel.default ? DataModel.default : DataModel;\n","/**\n * DataFormat Enum defines the format of the input data.\n * Based on the format of the data the respective adapter is loaded.\n *\n * @readonly\n * @enum {string}\n */\nconst DataFormat = {\n    FLAT_JSON: 'FlatJSON',\n    DSV_STR: 'DSVStr',\n    DSV_ARR: 'DSVArr',\n    AUTO: 'Auto'\n};\n\nexport default DataFormat;\n","/**\n * DimensionSubtype enum defines the sub types of the Dimensional Field.\n *\n * @readonly\n * @enum {string}\n */\nconst DimensionSubtype = {\n    CATEGORICAL: 'categorical',\n    TEMPORAL: 'temporal',\n    GEO: 'geo',\n    BINNED: 'binned'\n};\n\nexport default DimensionSubtype;\n","/**\n * MeasureSubtype enum defines the sub types of the Measure Field.\n *\n * @readonly\n * @enum {string}\n */\nconst MeasureSubtype = {\n    CONTINUOUS: 'continuous'\n};\n\nexport default MeasureSubtype;\n","/**\n * FieldType enum defines the high level field based on which visuals are controlled.\n * Measure in a high level is numeric field and Dimension in a high level is string field.\n *\n * @readonly\n * @enum {string}\n */\nconst FieldType = {\n    MEASURE: 'measure',\n    DIMENSION: 'dimension'\n};\n\nexport default FieldType;\n","/**\n * Filtering mode enum defines the filering modes of DataModel.\n *\n * @readonly\n * @enum {string}\n */\nconst FilteringMode = {\n    NORMAL: 'normal',\n    INVERSE: 'inverse',\n    ALL: 'all'\n};\n\nexport default FilteringMode;\n","/**\n * Creates a JS native date object from input\n *\n * @param {string | number | Date} date Input using which date object to be created\n * @return {Date} : JS native date object\n */\nfunction convertToNativeDate (date) {\n    if (date instanceof Date) {\n        return date;\n    }\n\n    return new Date(date);\n}\n/**\n * Apply padding before a number if its less than 1o. This is used when constant digit's number to be returned\n * between 0 - 99\n *\n * @param {number} n Input to be padded\n * @return {string} Padded number\n */\nfunction pad (n) {\n    return (n < 10) ? (`0${n}`) : n;\n}\n/*\n * DateFormatter utility to convert any date format to any other date format\n * DateFormatter parse a date time stamp specified by a user abiding by rules which are defined\n * by user in terms of token. It creates JS native date object from the user specified format.\n * That native date can also be displayed\n * in any specified format.\n * This utility class only takes care of format conversion only\n */\n\n/*\n * Escapes all the special character that are used in regular expression.\n * Like\n * RegExp.escape('sgfd-$') // Output: sgfd\\-\\$\n *\n * @param text {String} : text which is to be escaped\n */\nRegExp.escape = function (text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n};\n\n/**\n * DateTimeFormatter class to convert any user format of date time stamp to any other format\n * of date time stamp.\n *\n * @param {string} format Format of the date given. For the above date,\n * 'year: %Y, month: %b, day: %d'.\n * @class\n */\n/* istanbul ignore next */ function DateTimeFormatter (format) {\n    this.format = format;\n    this.dtParams = undefined;\n    this.nativeDate = undefined;\n}\n\n// The identifier of the tokens\nDateTimeFormatter.TOKEN_PREFIX = '%';\n\n// JS native Date constructor takes the date params (year, month, etc) in a certail sequence.\n// This defines the sequence of the date parameters in the constructor.\nDateTimeFormatter.DATETIME_PARAM_SEQUENCE = {\n    YEAR: 0,\n    MONTH: 1,\n    DAY: 2,\n    HOUR: 3,\n    MINUTE: 4,\n    SECOND: 5,\n    MILLISECOND: 6\n};\n\n/*\n * This is a default number parsing utility. It tries to parse a number in integer, if parsing is unsuccessful, it\n * gives back a default value.\n *\n * @param: defVal {Number} : Default no if the parsing to integer is not successful\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be parsed.\n */\nDateTimeFormatter.defaultNumberParser = function (defVal) {\n    return function (val) {\n        let parsedVal;\n        if (isFinite(parsedVal = parseInt(val, 10))) {\n            return parsedVal;\n        }\n\n        return defVal;\n    };\n};\n\n/*\n * This is a default number range utility. It tries to find an element in the range. If not found it returns a\n * default no as an index.\n *\n * @param: range {Array} : The list which is to be serached\n * @param: defVal {Number} : Default no if the serach and find does not return anything\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be found\n */\nDateTimeFormatter.defaultRangeParser = function (range, defVal) {\n    return (val) => {\n        let i;\n        let l;\n\n        if (!val) { return defVal; }\n\n        const nVal = val.toLowerCase();\n\n        for (i = 0, l = range.length; i < l; i++) {\n            if (range[i].toLowerCase() === nVal) {\n                return i;\n            }\n        }\n\n        if (i === undefined) {\n            return defVal;\n        }\n        return null;\n    };\n};\n\n/*\n * Defines the tokens which are supporter by the dateformatter. Using this definitation a value gets extracted from\n * the user specifed date string. This also formats the value for display purpose from native JS date.\n * The definition of each token contains the following named properties\n * {\n *     %token_name% : {\n *         name: name of the token, this is used in reverse lookup,\n *         extract: a function that returns the regular expression to extract that piece of information. All the\n *                  regex should be gouped by using ()\n *         parser: a function which receives value extracted by the above regex and parse it to get the date params\n *         formatter: a formatter function that takes milliseconds or JS Date object and format the param\n *                  represented by the token only.\n *     }\n * }\n *\n * @return {Object} : Definition of the all the supported tokens.\n */\nDateTimeFormatter.getTokenDefinitions = function () {\n    const daysDef = {\n        short: [\n            'Sun',\n            'Mon',\n            'Tue',\n            'Wed',\n            'Thu',\n            'Fri',\n            'Sat'\n        ],\n        long: [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday'\n        ]\n    };\n    const monthsDef = {\n        short: [\n            'Jan',\n            'Feb',\n            'Mar',\n            'Apr',\n            'May',\n            'Jun',\n            'Jul',\n            'Aug',\n            'Sep',\n            'Oct',\n            'Nov',\n            'Dec'\n        ],\n        long: [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December'\n        ]\n    };\n\n    const definitions = {\n        H: {\n            // 24 hours format\n            name: 'H',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n\n                return d.getHours().toString();\n            }\n        },\n        l: {\n            // 12 hours format\n            name: 'l',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours() % 12;\n\n                return (hours === 0 ? 12 : hours).toString();\n            }\n        },\n        p: {\n            // AM or PM\n            name: 'p',\n            index: 3,\n            extract () { return '(AM|PM)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'AM' : 'PM');\n            }\n        },\n        P: {\n            // am or pm\n            name: 'P',\n            index: 3,\n            extract () { return '(am|pm)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'am' : 'pm');\n            }\n        },\n        M: {\n            // Two digit minutes 00 - 59\n            name: 'M',\n            index: 4,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const mins = d.getMinutes();\n\n                return pad(mins);\n            }\n        },\n        S: {\n            // Two digit seconds 00 - 59\n            name: 'S',\n            index: 5,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const seconds = d.getSeconds();\n\n                return pad(seconds);\n            }\n        },\n        K: {\n            // Milliseconds\n            name: 'K',\n            index: 6,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const ms = d.getMilliseconds();\n\n                return ms.toString();\n            }\n        },\n        a: {\n            // Short name of day, like Mon\n            name: 'a',\n            index: 2,\n            extract () { return `(${daysDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.short[day]).toString();\n            }\n        },\n        A: {\n            // Long name of day, like Monday\n            name: 'A',\n            index: 2,\n            extract () { return `(${daysDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.long[day]).toString();\n            }\n        },\n        e: {\n            // 8 of March, 11 of November\n            name: 'e',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return day.toString();\n            }\n        },\n        d: {\n            // 08 of March, 11 of November\n            name: 'd',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return pad(day);\n            }\n        },\n        b: {\n            // Short month, like Jan\n            name: 'b',\n            index: 1,\n            extract () { return `(${monthsDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.short[month]).toString();\n            }\n        },\n        B: {\n            // Long month, like January\n            name: 'B',\n            index: 1,\n            extract () { return `(${monthsDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.long[month]).toString();\n            }\n        },\n        m: {\n            // Two digit month of year like 01 for January\n            name: 'm',\n            index: 1,\n            extract () { return '(\\\\d+)'; },\n            parser (val) { return DateTimeFormatter.defaultNumberParser()(val) - 1; },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return pad(month + 1);\n            }\n        },\n        y: {\n            // Short year like 90 for 1990\n            name: 'y',\n            index: 0,\n            extract () { return '(\\\\d{2})'; },\n            parser (val) {\n                let result;\n                if (val) {\n                    const l = val.length;\n                    val = val.substring(l - 2, l);\n                }\n                let parsedVal = DateTimeFormatter.defaultNumberParser()(val);\n                let presentDate = new Date();\n                let presentYear = Math.trunc((presentDate.getFullYear()) / 100);\n\n                result = `${presentYear}${parsedVal}`;\n\n                if (convertToNativeDate(result).getFullYear() > presentDate.getFullYear()) {\n                    result = `${presentYear - 1}${parsedVal}`;\n                }\n                return convertToNativeDate(result).getFullYear();\n            },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                let year = d.getFullYear().toString();\n                let l;\n\n                if (year) {\n                    l = year.length;\n                    year = year.substring(l - 2, l);\n                }\n\n                return year;\n            }\n        },\n        Y: {\n            // Long year like 1990\n            name: 'Y',\n            index: 0,\n            extract () { return '(\\\\d{4})'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const year = d.getFullYear().toString();\n\n                return year;\n            }\n        }\n    };\n\n    return definitions;\n};\n\n/*\n * The tokens which works internally is not user friendly in terms of memorizing the names. This gives a formal\n * definition to the informal notations.\n *\n * @return {Object} : Formal definition of the tokens\n */\nDateTimeFormatter.getTokenFormalNames = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n\n    return {\n        HOUR: definitions.H,\n        HOUR_12: definitions.l,\n        AMPM_UPPERCASE: definitions.p,\n        AMPM_LOWERCASE: definitions.P,\n        MINUTE: definitions.M,\n        SECOND: definitions.S,\n        SHORT_DAY: definitions.a,\n        LONG_DAY: definitions.A,\n        DAY_OF_MONTH: definitions.e,\n        DAY_OF_MONTH_CONSTANT_WIDTH: definitions.d,\n        SHORT_MONTH: definitions.b,\n        LONG_MONTH: definitions.B,\n        MONTH_OF_YEAR: definitions.m,\n        SHORT_YEAR: definitions.y,\n        LONG_YEAR: definitions.Y\n    };\n};\n\n/*\n * This defines the rules and declares dependencies that resolves a date parameter (year, month etc) from\n * the date time parameter array.\n *\n * @return {Object} : An object that contains dependencies and a resolver function. The dependencies values are fed\n *                  to the resolver function in that particular sequence only.\n */\nDateTimeFormatter.tokenResolver = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const defaultResolver = (...args) => { // eslint-disable-line require-jsdoc\n        let i = 0;\n        let arg;\n        let targetParam;\n        const l = args.length;\n\n        for (; i < l; i++) {\n            arg = args[i];\n            if (args[i]) {\n                targetParam = arg;\n            }\n        }\n\n        if (!targetParam) { return null; }\n\n        return targetParam[0].parser(targetParam[1]);\n    };\n\n    return {\n        YEAR: [definitions.y, definitions.Y,\n            defaultResolver\n        ],\n        MONTH: [definitions.b, definitions.B, definitions.m,\n            defaultResolver\n        ],\n        DAY: [definitions.a, definitions.A, definitions.e, definitions.d,\n            defaultResolver\n        ],\n        HOUR: [definitions.H, definitions.l, definitions.p, definitions.P,\n            function (hourFormat24, hourFormat12, ampmLower, ampmUpper) {\n                let targetParam;\n                let amOrpm;\n                let isPM;\n                let val;\n\n                if (hourFormat12 && (amOrpm = (ampmLower || ampmUpper))) {\n                    if (amOrpm[0].parser(amOrpm[1]) === 'pm') {\n                        isPM = true;\n                    }\n\n                    targetParam = hourFormat12;\n                } else if (hourFormat12) {\n                    targetParam = hourFormat12;\n                } else {\n                    targetParam = hourFormat24;\n                }\n\n                if (!targetParam) { return null; }\n\n                val = targetParam[0].parser(targetParam[1]);\n                if (isPM) {\n                    val += 12;\n                }\n                return val;\n            }\n        ],\n        MINUTE: [definitions.M,\n            defaultResolver\n        ],\n        SECOND: [definitions.S,\n            defaultResolver\n        ]\n    };\n};\n\n/*\n * Finds token from the format rule specified by a user.\n * @param format {String} : The format of the input date specified by the user\n * @return {Array} : An array of objects which contains the available token and their occurence index in the format\n */\nDateTimeFormatter.findTokens = function (format) {\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenLiterals = Object.keys(definitions);\n    const occurrence = [];\n    let i;\n    let forwardChar;\n\n    while ((i = format.indexOf(tokenPrefix, i + 1)) >= 0) {\n        forwardChar = format[i + 1];\n        if (tokenLiterals.indexOf(forwardChar) === -1) { continue; }\n\n        occurrence.push({\n            index: i,\n            token: forwardChar\n        });\n    }\n\n    return occurrence;\n};\n\n/*\n * Format any JS date to a specified date given by user.\n *\n * @param date {Number | Date} : The date object which is to be formatted\n * @param format {String} : The format using which the date will be formatted for display\n */\nDateTimeFormatter.formatAs = function (date, format) {\n    const nDate = convertToNativeDate(date);\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    let formattedStr = String(format);\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    let token;\n    let formattedVal;\n    let i;\n    let l;\n\n    for (i = 0, l = occurrence.length; i < l; i++) {\n        token = occurrence[i].token;\n        formattedVal = definitions[token].formatter(nDate);\n        formattedStr = formattedStr.replace(new RegExp(tokenPrefix + token, 'g'), formattedVal);\n    }\n\n    return formattedStr;\n};\n\n/*\n * Parses the user specified date string to extract the date time params.\n *\n * @return {Array} : Value of date time params in an array [year, month, day, hour, minutes, seconds, milli]\n */\nDateTimeFormatter.prototype.parse = function (dateTimeStamp, options) {\n    const tokenResolver = DateTimeFormatter.tokenResolver();\n    const dtParams = this.extractTokenValue(dateTimeStamp);\n    const dtParamSeq = DateTimeFormatter.DATETIME_PARAM_SEQUENCE;\n    const noBreak = options && options.noBreak;\n    const dtParamArr = [];\n    const args = [];\n    let resolverKey;\n    let resolverParams;\n    let resolverFn;\n    let val;\n    let i;\n    let param;\n    let resolvedVal;\n    let l;\n    let result = [];\n\n    for (resolverKey in tokenResolver) {\n        if (!{}.hasOwnProperty.call(tokenResolver, resolverKey)) { continue; }\n\n        args.length = 0;\n        resolverParams = tokenResolver[resolverKey];\n        resolverFn = resolverParams.splice(resolverParams.length - 1, 1)[0];\n\n        for (i = 0, l = resolverParams.length; i < l; i++) {\n            param = resolverParams[i];\n            val = dtParams[param.name];\n\n            if (val === undefined) {\n                args.push(null);\n            } else {\n                args.push([param, val]);\n            }\n        }\n\n        resolvedVal = resolverFn.apply(this, args);\n\n        if ((resolvedVal === undefined || resolvedVal === null) && !noBreak) {\n            break;\n        }\n\n        dtParamArr[dtParamSeq[resolverKey]] = resolvedVal;\n    }\n\n    if (dtParamArr.length && this.checkIfOnlyYear(dtParamArr.length))\n     {\n        result.unshift(dtParamArr[0], 0, 1); }\n    else {\n        result.unshift(...dtParamArr);\n    }\n\n    return result;\n};\n\n/*\n * Extract the value of the token from user specified date time string.\n *\n * @return {Object} : An key value pair which contains the tokens as key and value as pair\n */\nDateTimeFormatter.prototype.extractTokenValue = function (dateTimeStamp) {\n    const format = this.format;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const tokenObj = {};\n\n    let lastOccurrenceIndex;\n    let occObj;\n    let occIndex;\n    let targetText;\n    let regexFormat;\n\n    let l;\n    let i;\n\n    regexFormat = String(format);\n\n    const tokenArr = occurrence.map(obj => obj.token);\n    const occurrenceLength = occurrence.length;\n    for (i = occurrenceLength - 1; i >= 0; i--) {\n        occIndex = occurrence[i].index;\n\n        if (occIndex + 1 === regexFormat.length - 1) {\n            lastOccurrenceIndex = occIndex;\n            continue;\n        }\n\n        if (lastOccurrenceIndex === undefined) {\n            lastOccurrenceIndex = regexFormat.length;\n        }\n\n        targetText = regexFormat.substring(occIndex + 2, lastOccurrenceIndex);\n        regexFormat = regexFormat.substring(0, occIndex + 2) +\n            RegExp.escape(targetText) +\n            regexFormat.substring(lastOccurrenceIndex, regexFormat.length);\n\n        lastOccurrenceIndex = occIndex;\n    }\n\n    for (i = 0; i < occurrenceLength; i++) {\n        occObj = occurrence[i];\n        regexFormat = regexFormat.replace(tokenPrefix + occObj.token, definitions[occObj.token].extract());\n    }\n\n    const extractValues = dateTimeStamp.match(new RegExp(regexFormat)) || [];\n    extractValues.shift();\n\n    for (i = 0, l = tokenArr.length; i < l; i++) {\n        tokenObj[tokenArr[i]] = extractValues[i];\n    }\n    return tokenObj;\n};\n\n/*\n * Give back the JS native date formed from  user specified date string\n *\n * @return {Date} : Native JS Date\n */\nDateTimeFormatter.prototype.getNativeDate = function (dateTimeStamp) {\n    let date = null;\n    if (Number.isFinite(dateTimeStamp)) {\n        date = new Date(dateTimeStamp);\n    } else if (!this.format && Date.parse(dateTimeStamp)) {\n        date = new Date(dateTimeStamp);\n    }\n    else {\n        const dtParams = this.dtParams = this.parse(dateTimeStamp);\n        if (dtParams.length) {\n            this.nativeDate = new Date(...dtParams);\n            date = this.nativeDate;\n        }\n    }\n    return date;\n};\n\nDateTimeFormatter.prototype.checkIfOnlyYear = function(len) {\n    return len === 1 && this.format.match(/y|Y/g).length;\n};\n\n/*\n * Represents JS native date to a user specified format.\n *\n * @param format {String} : The format according to which the date is to be represented\n * @return {String} : The formatted date string\n */\nDateTimeFormatter.prototype.formatAs = function (format, dateTimeStamp) {\n    let nativeDate;\n\n    if (dateTimeStamp) {\n        nativeDate = this.nativeDate = this.getNativeDate(dateTimeStamp);\n    } else if (!(nativeDate = this.nativeDate)) {\n        nativeDate = this.getNativeDate(dateTimeStamp);\n    }\n\n    return DateTimeFormatter.formatAs(nativeDate, format);\n};\n\nexport { DateTimeFormatter as default };\n","/**\n * The utility function to calculate major column.\n *\n * @param {Object} store - The store object.\n * @return {Function} Returns the push function.\n */\nexport default (store) => {\n    let i = 0;\n    return (...fields) => {\n        fields.forEach((val, fieldIndex) => {\n            if (!(store[fieldIndex] instanceof Array)) {\n                store[fieldIndex] = Array.from({ length: i });\n            }\n            store[fieldIndex].push(val);\n        });\n        i++;\n    };\n};\n","/* eslint-disable */\nconst OBJECTSTRING = 'object';\nconst objectToStrFn = Object.prototype.toString;\nconst objectToStr = '[object Object]';\nconst arrayToStr = '[object Array]';\n\nfunction checkCyclicRef(obj, parentArr) {\n    let i = parentArr.length;\n    let bIndex = -1;\n\n    while (i) {\n        if (obj === parentArr[i]) {\n            bIndex = i;\n            return bIndex;\n        }\n        i -= 1;\n    }\n\n    return bIndex;\n}\n\nfunction merge(obj1, obj2, skipUndef, tgtArr, srcArr) {\n    var item,\n        srcVal,\n        tgtVal,\n        str,\n        cRef;\n    // check whether obj2 is an array\n    // if array then iterate through it's index\n    // **** MOOTOOLS precution\n\n    if (!srcArr) {\n        tgtArr = [obj1];\n        srcArr = [obj2];\n    }\n    else {\n        tgtArr.push(obj1);\n        srcArr.push(obj2);\n    }\n\n    if (obj2 instanceof Array) {\n        for (item = 0; item < obj2.length; item += 1) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (typeof tgtVal !== OBJECTSTRING) {\n                if (!(skipUndef && tgtVal === undefined)) {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                    srcVal = obj1[item] = tgtVal instanceof Array ? [] : {};\n                }\n                cRef = checkCyclicRef(tgtVal, srcArr);\n                if (cRef !== -1) {\n                    srcVal = obj1[item] = tgtArr[cRef];\n                }\n                else {\n                    merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                }\n            }\n        }\n    }\n    else {\n        for (item in obj2) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (tgtVal !== null && typeof tgtVal === OBJECTSTRING) {\n                // Fix for issue BUG: FWXT-602\n                // IE < 9 Object.prototype.toString.call(null) gives\n                // '[object Object]' instead of '[object Null]'\n                // that's why null value becomes Object in IE < 9\n                str = objectToStrFn.call(tgtVal);\n                if (str === objectToStr) {\n                    if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                        srcVal = obj1[item] = {};\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else if (str === arrayToStr) {\n                    if (srcVal === null || !(srcVal instanceof Array)) {\n                        srcVal = obj1[item] = [];\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (skipUndef && tgtVal === undefined) {\n                    continue;\n                }\n                obj1[item] = tgtVal;\n            }\n        }\n    }\n    return obj1;\n}\n\n\nfunction extend2 (obj1, obj2, skipUndef) {\n    //if none of the arguments are object then return back\n    if (typeof obj1 !== OBJECTSTRING && typeof obj2 !== OBJECTSTRING) {\n        return null;\n    }\n\n    if (typeof obj2 !== OBJECTSTRING || obj2 === null) {\n        return obj1;\n    }\n\n    if (typeof obj1 !== OBJECTSTRING) {\n        obj1 = obj2 instanceof Array ? [] : {};\n    }\n    merge(obj1, obj2, skipUndef);\n    return obj1;\n}\n\nexport { extend2 as default };\n","import { DataFormat } from '../enums';\n\n/**\n * Checks whether the value is an array.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an array otherwise returns false.\n */\nexport function isArray (val) {\n    return Array.isArray(val);\n}\n\n/**\n * Checks whether the value is an object.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an object otherwise returns false.\n */\nexport function isObject (val) {\n    return val === Object(val);\n}\n\n/**\n * Checks whether the value is a string value.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is a string value otherwise returns false.\n */\nexport function isString (val) {\n    return typeof val === 'string';\n}\n\n/**\n * Checks whether the value is callable.\n *\n * @param {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is callable otherwise returns false.\n */\nexport function isCallable (val) {\n    return typeof val === 'function';\n}\n\n/**\n * Returns the unique values from the input array.\n *\n * @param {Array} data - The input array.\n * @return {Array} Returns a new array of unique values.\n */\nexport function uniqueValues (data) {\n    return [...new Set(data)];\n}\n\nexport const getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Checks Whether two arrays have same content.\n *\n * @param {Array} arr1 - The first array.\n * @param {Array} arr2 - The 2nd array.\n * @return {boolean} Returns whether two array have same content.\n */\nexport function isArrEqual(arr1, arr2) {\n    if (!isArray(arr1) || !isArray(arr2)) {\n        return arr1 === arr2;\n    }\n\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n * It is the default number format function for the measure field type.\n *\n * @param {any} val - The input value.\n * @return {number} Returns a number value.\n */\nexport function formatNumber(val) {\n    return val;\n}\n\n/**\n * Returns the detected data format.\n *\n * @param {any} data - The input data to be tested.\n * @return {string} Returns the data format name.\n */\nexport const detectDataFormat = (data) => {\n    if (isString(data)) {\n        return DataFormat.DSV_STR;\n    } else if (isArray(data) && isArray(data[0])) {\n        return DataFormat.DSV_ARR;\n    } else if (isArray(data) && (data.length === 0 || isObject(data[0]))) {\n        return DataFormat.FLAT_JSON;\n    }\n    return null;\n};\n","import { FieldType } from './enums';\nimport { getUniqueId } from './utils';\n\nconst fieldStore = {\n    data: {},\n\n    createNamespace (fieldArr, name) {\n        const dataId = name || getUniqueId();\n\n        this.data[dataId] = {\n            name: dataId,\n            fields: fieldArr,\n\n            fieldsObj () {\n                let fieldsObj = this._cachedFieldsObj;\n\n                if (!fieldsObj) {\n                    fieldsObj = this._cachedFieldsObj = {};\n                    this.fields.forEach((field) => {\n                        fieldsObj[field.name()] = field;\n                    });\n                }\n                return fieldsObj;\n            },\n            getMeasure () {\n                let measureFields = this._cachedMeasure;\n\n                if (!measureFields) {\n                    measureFields = this._cachedMeasure = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.MEASURE) {\n                            measureFields[field.name()] = field;\n                        }\n                    });\n                }\n                return measureFields;\n            },\n            getDimension () {\n                let dimensionFields = this._cachedDimension;\n\n                if (!this._cachedDimension) {\n                    dimensionFields = this._cachedDimension = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.DIMENSION) {\n                            dimensionFields[field.name()] = field;\n                        }\n                    });\n                }\n                return dimensionFields;\n            },\n        };\n        return this.data[dataId];\n    },\n};\n\nexport default fieldStore;\n","/**\n * The wrapper class on top of the primitive value of a field.\n *\n * @todo Need to have support for StringValue, NumberValue, DateTimeValue\n * and GeoValue. These types should expose predicate API mostly.\n */\nclass Value {\n\n  /**\n   * Creates new Value instance.\n   *\n   * @param {*} val - the primitive value from the field cell.\n   * @param {string | Field} field - The field from which the value belongs.\n   */\n    constructor (val, field) {\n        Object.defineProperty(this, '_value', {\n            enumerable: false,\n            configurable: false,\n            writable: false,\n            value: val\n        });\n\n        this.field = field;\n    }\n\n  /**\n   * Returns the field value.\n   *\n   * @return {*} Returns the current value.\n   */\n    get value () {\n        return this._value;\n    }\n\n  /**\n   * Converts to human readable string.\n   *\n   * @override\n   * @return {string} Returns a human readable string of the field value.\n   *\n   */\n    toString () {\n        return String(this.value);\n    }\n\n  /**\n   * Returns the value of the field.\n   *\n   * @override\n   * @return {*} Returns the field value.\n   */\n    valueOf () {\n        return this.value;\n    }\n}\n\nexport default Value;\n","/**\n * Iterates through the diffSet array and call the callback with the current\n * index.\n *\n * @param {string} rowDiffset - The row diffset string e.g. '0-4,6,10-13'.\n * @param {Function} callback - The callback function to be called with every index.\n */\nexport function rowDiffsetIterator (rowDiffset, callback) {\n    if (rowDiffset.length > 0) {\n        const rowDiffArr = rowDiffset.split(',');\n        rowDiffArr.forEach((diffStr) => {\n            const diffStsArr = diffStr.split('-');\n            const start = +(diffStsArr[0]);\n            const end = +(diffStsArr[1] || diffStsArr[0]);\n            if (end >= start) {\n                for (let i = start; i <= end; i += 1) {\n                    callback(i);\n                }\n            }\n        });\n    }\n}\n","/**\n * A parser to parser null, undefined, invalid and NIL values.\n *\n * @public\n * @class\n */\nclass InvalidAwareTypes {\n    /**\n     * Static method which gets/sets the invalid value registry.\n     *\n     * @public\n     * @param {Object} config - The custom configuration supplied by user.\n     * @return {Object} Returns the invalid values registry.\n     */\n    static invalidAwareVals (config) {\n        if (!config) {\n            return InvalidAwareTypes._invalidAwareValsMap;\n        }\n        return Object.assign(InvalidAwareTypes._invalidAwareValsMap, config);\n    }\n\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} value - The value of the invalid data type.\n     */\n    constructor (value) {\n        this._value = value;\n    }\n\n    /**\n     * Returns the current value of the instance.\n     *\n     * @public\n     * @return {string} Returns the value of the invalid data type.\n     */\n    value () {\n        return this._value;\n    }\n\n    /**\n     * Returns the current value of the instance in string format.\n     *\n     * @public\n     * @return {string} Returns the value of the invalid data type.\n     */\n    toString () {\n        return String(this._value);\n    }\n\n    static isInvalid(val) {\n        return (val instanceof InvalidAwareTypes) || !!InvalidAwareTypes.invalidAwareVals()[val];\n    }\n\n    static getInvalidType(val) {\n        return val instanceof InvalidAwareTypes ? val : InvalidAwareTypes.invalidAwareVals()[val];\n    }\n}\n\n/**\n * Enums for Invalid types.\n */\nInvalidAwareTypes.NULL = new InvalidAwareTypes('null');\nInvalidAwareTypes.NA = new InvalidAwareTypes('na');\nInvalidAwareTypes.NIL = new InvalidAwareTypes('nil');\n\n/**\n * Default Registry for mapping the invalid values.\n *\n * @private\n */\nInvalidAwareTypes._invalidAwareValsMap = {\n    invalid: InvalidAwareTypes.NA,\n    nil: InvalidAwareTypes.NIL,\n    null: InvalidAwareTypes.NULL,\n    undefined: InvalidAwareTypes.NA\n};\n\nexport default InvalidAwareTypes;\n","/**\n * The helper function that returns an array of common schema\n * from two fieldStore instances.\n *\n * @param {FieldStore} fs1 - The first FieldStore instance.\n * @param {FieldStore} fs2 - The second FieldStore instance.\n * @return {Array} An array containing the common schema.\n */\nexport function getCommonSchema (fs1, fs2) {\n    const retArr = [];\n    const fs1Arr = [];\n    fs1.fields.forEach((field) => {\n        fs1Arr.push(field.schema().name);\n    });\n    fs2.fields.forEach((field) => {\n        if (fs1Arr.indexOf(field.schema().name) !== -1) {\n            retArr.push(field.schema().name);\n        }\n    });\n    return retArr;\n}\n","export { DataFormat, FilteringMode } from '../enums';\n/**\n * The event name for data propagation.\n */\nexport const PROPAGATION = 'propagation';\n\n/**\n * The name of the unique row id column in DataModel.\n */\nexport const ROW_ID = '__id__';\n\n/**\n * The enums for operation names performed on DataModel.\n */\nexport const DM_DERIVATIVES = {\n    SELECT: 'select',\n    PROJECT: 'project',\n    GROUPBY: 'group',\n    COMPOSE: 'compose',\n    CAL_VAR: 'calculatedVariable',\n    BIN: 'bin'\n};\n\nexport const JOINS = {\n    CROSS: 'cross',\n    LEFTOUTER: 'leftOuter',\n    RIGHTOUTER: 'rightOuter',\n    NATURAL: 'natural',\n    FULLOUTER: 'fullOuter'\n};\n\nexport const LOGICAL_OPERATORS = {\n    AND: 'and',\n    OR: 'or'\n};\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { getCommonSchema } from './get-common-schema';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { JOINS } from '../constants';\nimport { prepareJoinData } from '../helper';\n/**\n * Default filter function for crossProduct.\n *\n * @return {boolean} Always returns true.\n */\nfunction defaultFilterFn() { return true; }\n\n/**\n * Implementation of cross product operation between two DataModel instances.\n * It internally creates the data and schema for the new DataModel.\n *\n * @param {DataModel} dataModel1 - The left DataModel instance.\n * @param {DataModel} dataModel2 - The right DataModel instance.\n * @param {Function} filterFn - The filter function which is used to filter the tuples.\n * @param {boolean} [replaceCommonSchema=false] - The flag if the common name schema should be there.\n * @return {DataModel} Returns The newly created DataModel instance from the crossProduct operation.\n */\nexport function crossProduct (dm1, dm2, filterFn, replaceCommonSchema = false, jointype = JOINS.CROSS) {\n    const schema = [];\n    const data = [];\n    const applicableFilterFn = filterFn || defaultFilterFn;\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreName = dm1FieldStore.name;\n    const dm2FieldStoreName = dm2FieldStore.name;\n    const name = `${dm1FieldStore.name}.${dm2FieldStore.name}`;\n    const commonSchemaList = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    if (dm1FieldStoreName === dm2FieldStoreName) {\n        throw new Error('DataModels must have different alias names');\n    }\n    // Here prepare the schema\n    dm1FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1 && !replaceCommonSchema) {\n            tmpSchema.name = `${dm1FieldStore.name}.${tmpSchema.name}`;\n        }\n        schema.push(tmpSchema);\n    });\n    dm2FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1) {\n            if (!replaceCommonSchema) {\n                tmpSchema.name = `${dm2FieldStore.name}.${tmpSchema.name}`;\n                schema.push(tmpSchema);\n            }\n        } else {\n            schema.push(tmpSchema);\n        }\n    });\n\n    // Here prepare Data\n    rowDiffsetIterator(dm1._rowDiffset, (i) => {\n        let rowAdded = false;\n        let rowPosition;\n        rowDiffsetIterator(dm2._rowDiffset, (ii) => {\n            const tuple = [];\n            const userArg = {};\n            userArg[dm1FieldStoreName] = {};\n            userArg[dm2FieldStoreName] = {};\n            dm1FieldStore.fields.forEach((field) => {\n                tuple.push(field.partialField.data[i]);\n                userArg[dm1FieldStoreName][field.name()] = field.partialField.data[i];\n            });\n            dm2FieldStore.fields.forEach((field) => {\n                if (!(commonSchemaList.indexOf(field.schema().name) !== -1 && replaceCommonSchema)) {\n                    tuple.push(field.partialField.data[ii]);\n                }\n                userArg[dm2FieldStoreName][field.name()] = field.partialField.data[ii];\n            });\n\n            let cachedStore = {};\n            let cloneProvider1 = () => dm1.detachedRoot();\n            let cloneProvider2 = () => dm2.detachedRoot();\n\n            const dm1Fields = prepareJoinData(userArg[dm1FieldStoreName]);\n            const dm2Fields = prepareJoinData(userArg[dm2FieldStoreName]);\n            if (applicableFilterFn(dm1Fields, dm2Fields, cloneProvider1, cloneProvider2, cachedStore)) {\n                const tupleObj = {};\n                tuple.forEach((cellVal, iii) => {\n                    tupleObj[schema[iii].name] = cellVal;\n                });\n                if (rowAdded && JOINS.CROSS !== jointype) {\n                    data[rowPosition] = tupleObj;\n                }\n                else {\n                    data.push(tupleObj);\n                    rowAdded = true;\n                    rowPosition = i;\n                }\n            } else if ((jointype === JOINS.LEFTOUTER || jointype === JOINS.RIGHTOUTER) && !rowAdded) {\n                const tupleObj = {};\n                let len = dm1FieldStore.fields.length - 1;\n                tuple.forEach((cellVal, iii) => {\n                    if (iii <= len) {\n                        tupleObj[schema[iii].name] = cellVal;\n                    }\n                    else {\n                        tupleObj[schema[iii].name] = null;\n                    }\n                });\n                rowAdded = true;\n                rowPosition = i;\n                data.push(tupleObj);\n            }\n        });\n    });\n\n    return new DataModel(data, schema, { name });\n}\n","/**\n * The default sort function.\n *\n * @param {*} a - The first value.\n * @param {*} b - The second value.\n * @return {number} Returns the comparison result e.g. 1 or 0 or -1.\n */\nfunction defSortFn (a, b) {\n    const a1 = `${a}`;\n    const b1 = `${b}`;\n    if (a1 < b1) {\n        return -1;\n    }\n    if (a1 > b1) {\n        return 1;\n    }\n    return 0;\n}\n\n/**\n * The helper function for merge sort which creates the sorted array\n * from the two halves of the input array.\n *\n * @param {Array} arr - The target array which needs to be merged.\n * @param {number} lo - The starting index of the first array half.\n * @param {number} mid - The ending index of the first array half.\n * @param {number} hi - The ending index of the second array half.\n * @param {Function} sortFn - The sort function.\n */\nfunction merge (arr, lo, mid, hi, sortFn) {\n    const mainArr = arr;\n    const auxArr = [];\n    for (let i = lo; i <= hi; i += 1) {\n        auxArr[i] = mainArr[i];\n    }\n    let a = lo;\n    let b = mid + 1;\n\n    for (let i = lo; i <= hi; i += 1) {\n        if (a > mid) {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        } else if (b > hi) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else if (sortFn(auxArr[a], auxArr[b]) <= 0) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        }\n    }\n}\n\n/**\n * The helper function for merge sort which would be called\n * recursively for sorting the array halves.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {number} lo - The starting index of the array half.\n * @param {number} hi - The ending index of the array half.\n * @param {Function} sortFn - The sort function.\n * @return {Array} Returns the target array itself.\n */\nfunction sort (arr, lo, hi, sortFn) {\n    if (hi === lo) { return arr; }\n\n    const mid = lo + Math.floor((hi - lo) / 2);\n    sort(arr, lo, mid, sortFn);\n    sort(arr, mid + 1, hi, sortFn);\n    merge(arr, lo, mid, hi, sortFn);\n\n    return arr;\n}\n\n/**\n * The implementation of merge sort.\n * It is used in DataModel for stable sorting as it is not sure\n * what the sorting algorithm used by browsers is stable or not.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {Function} [sortFn=defSortFn] - The sort function.\n * @return {Array} Returns the input array itself in sorted order.\n */\nexport function mergeSort (arr, sortFn = defSortFn) {\n    if (arr.length > 1) {\n        sort(arr, 0, arr.length - 1, sortFn);\n    }\n    return arr;\n}\n","import { DimensionSubtype, MeasureSubtype } from '../enums';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { mergeSort } from './merge-sort';\nimport { fieldInSchema } from '../helper';\nimport { isCallable, isArray, } from '../utils';\n/**\n * Generates the sorting functions to sort the data of a DataModel instance\n * according to the input data type.\n *\n * @param {string} dataType - The data type e.g. 'measure', 'datetime' etc.\n * @param {string} sortType - The sorting order i.e. 'asc' or 'desc'.\n * @param {integer} index - The index of the data which will be sorted.\n * @return {Function} Returns the the sorting function.\n */\nfunction getSortFn (dataType, sortType, index) {\n    let retFunc;\n    switch (dataType) {\n    case MeasureSubtype.CONTINUOUS:\n    case DimensionSubtype.TEMPORAL:\n        if (sortType === 'desc') {\n            retFunc = (a, b) => b[index] - a[index];\n        } else {\n            retFunc = (a, b) => a[index] - b[index];\n        }\n        break;\n    default:\n        retFunc = (a, b) => {\n            const a1 = `${a[index]}`;\n            const b1 = `${b[index]}`;\n            if (a1 < b1) {\n                return sortType === 'desc' ? 1 : -1;\n            }\n            if (a1 > b1) {\n                return sortType === 'desc' ? -1 : 1;\n            }\n            return 0;\n        };\n    }\n    return retFunc;\n}\n\n/**\n * Groups the data according to the specified target field.\n *\n * @param {Array} data - The input data array.\n * @param {number} fieldIndex - The target field index within schema array.\n * @return {Array} Returns an array containing the grouped data.\n */\nfunction groupData(data, fieldIndex) {\n    const hashMap = new Map();\n    const groupedData = [];\n\n    data.forEach((datum) => {\n        const fieldVal = datum[fieldIndex];\n        if (hashMap.has(fieldVal)) {\n            groupedData[hashMap.get(fieldVal)][1].push(datum);\n        } else {\n            groupedData.push([fieldVal, [datum]]);\n            hashMap.set(fieldVal, groupedData.length - 1);\n        }\n    });\n\n    return groupedData;\n}\n\n/**\n * Creates the argument value used for sorting function when sort is done\n * with another fields.\n *\n * @param {Array} groupedDatum - The grouped datum for a single dimension field value.\n * @param {Array} targetFields - An array of the sorting fields.\n * @param {Array} targetFieldDetails - An array of the sorting field details in schema.\n * @return {Object} Returns an object containing the value of sorting fields and the target field name.\n */\nfunction createSortingFnArg(groupedDatum, targetFields, targetFieldDetails) {\n    const arg = {\n        label: groupedDatum[0]\n    };\n\n    targetFields.reduce((acc, next, idx) => {\n        acc[next] = groupedDatum[1].map(datum => datum[targetFieldDetails[idx].index]);\n        return acc;\n    }, arg);\n\n    return arg;\n}\n\n/**\n * Sorts the data before return in dataBuilder.\n *\n * @param {Object} dataObj - An object containing the data and schema.\n * @param {Array} sortingDetails - An array containing the sorting configs.\n */\nfunction sortData(dataObj, sortingDetails) {\n    const { data, schema } = dataObj;\n    let fieldName;\n    let sortMeta;\n    let fDetails;\n    let i = sortingDetails.length - 1;\n\n    for (; i >= 0; i--) {\n        fieldName = sortingDetails[i][0];\n        sortMeta = sortingDetails[i][1];\n        fDetails = fieldInSchema(schema, fieldName);\n\n        if (!fDetails) {\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n\n        if (isCallable(sortMeta)) {\n            // eslint-disable-next-line no-loop-func\n            mergeSort(data, (a, b) => sortMeta(a[fDetails.index], b[fDetails.index]));\n        } else if (isArray(sortMeta)) {\n            const groupedData = groupData(data, fDetails.index);\n            const sortingFn = sortMeta[sortMeta.length - 1];\n            const targetFields = sortMeta.slice(0, sortMeta.length - 1);\n            const targetFieldDetails = targetFields.map(f => fieldInSchema(schema, f));\n\n            groupedData.forEach((groupedDatum) => {\n                groupedDatum.push(createSortingFnArg(groupedDatum, targetFields, targetFieldDetails));\n            });\n\n            mergeSort(groupedData, (a, b) => {\n                const m = a[2];\n                const n = b[2];\n                return sortingFn(m, n);\n            });\n\n            // Empty the array\n            data.length = 0;\n            groupedData.forEach((datum) => {\n                data.push(...datum[1]);\n            });\n        } else {\n            sortMeta = String(sortMeta).toLowerCase() === 'desc' ? 'desc' : 'asc';\n            mergeSort(data, getSortFn(fDetails.type, sortMeta, fDetails.index));\n        }\n    }\n\n    dataObj.uids = [];\n    data.forEach((value) => {\n        dataObj.uids.push(value.pop());\n    });\n}\n\n\n/**\n * Builds the actual data array.\n *\n * @param {Array} fieldStore - An array of field.\n * @param {string} rowDiffset - A string consisting of which rows to be included eg. '0-2,4,6';\n * @param {string} colIdentifier - A string consisting of the details of which column\n * to be included eg 'date,sales,profit';\n * @param {Object} sortingDetails - An object containing the sorting details of the DataModel instance.\n * @param {Object} options - The options required to create the type of the data.\n * @return {Object} Returns an object containing the multidimensional array and the relative schema.\n */\nexport function dataBuilder (fieldStore, rowDiffset, colIdentifier, sortingDetails, options) {\n    const defOptions = {\n        addUid: false,\n        columnWise: false\n    };\n    options = Object.assign({}, defOptions, options);\n\n    const retObj = {\n        schema: [],\n        data: [],\n        uids: []\n    };\n    const addUid = options.addUid;\n    const reqSorting = sortingDetails && sortingDetails.length > 0;\n    // It stores the fields according to the colIdentifier argument\n    const tmpDataArr = [];\n    // Stores the fields according to the colIdentifier argument\n    const colIArr = colIdentifier.split(',');\n\n    colIArr.forEach((colName) => {\n        for (let i = 0; i < fieldStore.length; i += 1) {\n            if (fieldStore[i].name() === colName) {\n                tmpDataArr.push(fieldStore[i]);\n                break;\n            }\n        }\n    });\n\n    // Inserts the schema to the schema object\n    tmpDataArr.forEach((field) => {\n        /** @todo Need to use extend2 here otherwise user can overwrite the schema. */\n        retObj.schema.push(field.schema());\n    });\n\n    if (addUid) {\n        retObj.schema.push({\n            name: 'uid',\n            type: 'identifier'\n        });\n    }\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        retObj.data.push([]);\n        const insertInd = retObj.data.length - 1;\n        let start = 0;\n        tmpDataArr.forEach((field, ii) => {\n            retObj.data[insertInd][ii + start] = field.partialField.data[i];\n        });\n        if (addUid) {\n            retObj.data[insertInd][tmpDataArr.length] = i;\n        }\n        // Creates an array of unique identifiers for each row\n        retObj.uids.push(i);\n\n        // If sorting needed then there is the need to expose the index\n        // mapping from the old index to its new index\n        if (reqSorting) { retObj.data[insertInd].push(i); }\n    });\n\n    // Handles the sort functionality\n    if (reqSorting) {\n        sortData(retObj, sortingDetails);\n    }\n\n    if (options.columnWise) {\n        const tmpData = Array(...Array(retObj.schema.length)).map(() => []);\n        retObj.data.forEach((tuple) => {\n            tuple.forEach((data, i) => {\n                tmpData[i].push(data);\n            });\n        });\n        retObj.data = tmpData;\n    }\n\n    return retObj;\n}\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n\n/**\n * Performs the union operation between two dm instances.\n *\n * @todo Fix the conflicts between union and difference terminology here.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function difference (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n   // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     * @param {boolean} addData - If true only tuple will be added to the data.\n     */\n    function prepareDataHelper(dm, fieldsObj, addData) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                if (addData) { data.push(tuple); }\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj, false);\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj, true);\n\n    return new DataModel(data, schema, { name });\n}\n\n","import { isArray } from '../utils';\nimport InvalidAwareTypes from '../invalid-aware-types';\n\n\nfunction getFilteredValues(arr) {\n    return arr.filter(item => !(item instanceof InvalidAwareTypes));\n}\n/**\n * Reducer function that returns the sum of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the sum of the array.\n */\nfunction sum (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        const filteredNumber = getFilteredValues(arr);\n        const totalSum = filteredNumber.length ?\n                            filteredNumber.reduce((acc, curr) => acc + curr, 0)\n                            : InvalidAwareTypes.NULL;\n        return totalSum;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that returns the average of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the mean value of the array.\n */\nfunction avg (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        const totalSum = sum(arr);\n        const len = arr.length || 1;\n        return (Number.isNaN(totalSum) || totalSum instanceof InvalidAwareTypes) ?\n                 InvalidAwareTypes.NULL : totalSum / len;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the min value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the minimum value of the array.\n */\nfunction min (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = getFilteredValues(arr);\n\n        return (filteredValues.length) ? Math.min(...filteredValues) : InvalidAwareTypes.NULL;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the max value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the maximum value of the array.\n */\nfunction max (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = getFilteredValues(arr);\n\n        return (filteredValues.length) ? Math.max(...filteredValues) : InvalidAwareTypes.NULL;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the first value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the first value of the array.\n */\nfunction first (arr) {\n    return arr[0];\n}\n\n/**\n * Reducer function that gives the last value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the last value of the array.\n */\nfunction last (arr) {\n    return arr[arr.length - 1];\n}\n\n/**\n * Reducer function that gives the count value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the length of the array.\n */\nfunction count (arr) {\n    if (isArray(arr)) {\n        return arr.length;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Calculates the variance of the input array.\n *\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the variance of the input array.\n */\nfunction variance (arr) {\n    let mean = avg(arr);\n    return avg(arr.map(num => (num - mean) ** 2));\n}\n\n/**\n * Calculates the square root of the variance of the input array.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the square root of the variance.\n */\nfunction std (arr) {\n    return Math.sqrt(variance(arr));\n}\n\n\nconst fnList = {\n    sum,\n    avg,\n    min,\n    max,\n    first,\n    last,\n    count,\n    std\n};\n\nconst defaultReducerName = 'sum';\n\nexport {\n    defaultReducerName,\n    sum as defReducer,\n    fnList,\n};\n","import { defReducer, fnList } from '../operator';\n\n/**\n * A page level storage which stores, registers, unregisters reducers for all the datamodel instances. There is only one\n * reducer store available in a page. All the datamodel instances receive same instance of reducer store. DataModel\n * out of the box provides handful of {@link reducer | reducers} which can be used as reducer funciton.\n *\n * @public\n * @namespace DataModel\n */\nclass ReducerStore {\n    constructor () {\n        this.store = new Map();\n        this.store.set('defReducer', defReducer);\n\n        Object.entries(fnList).forEach((key) => {\n            this.store.set(key[0], key[1]);\n        });\n    }\n\n    /**\n     * Changes the `defaultReducer` globally. For all the fields which does not have `defAggFn` mentioned in schema, the\n     * value of `defaultReducer` is used for aggregation.\n     *\n     * @public\n     * @param {string} [reducer='sum'] - The name of the default reducer. It picks up the definition from store by doing\n     * name lookup. If no name is found then it takes `sum` as the default reducer.\n     * @return {ReducerStore} Returns instance of the singleton store in page.\n     */\n    defaultReducer (...params) {\n        if (!params.length) {\n            return this.store.get('defReducer');\n        }\n\n        let reducer = params[0];\n\n        if (typeof reducer === 'function') {\n            this.store.set('defReducer', reducer);\n        } else {\n            reducer = String(reducer);\n            if (Object.keys(fnList).indexOf(reducer) !== -1) {\n                this.store.set('defReducer', fnList[reducer]);\n            } else {\n                throw new Error(`Reducer ${reducer} not found in registry`);\n            }\n        }\n        return this;\n    }\n\n    /**\n     *\n     * Registers a {@link reducer | reducer}.\n     * A {@link reducer | reducer} has to be registered before it is used.\n     *\n     * @example\n     *  // find the mean squared value of a given set\n     *  const reducerStore = DataModel.Reducers();\n     *\n     *  reducers.register('meanSquared', (arr) => {\n     *      const squaredVal = arr.map(item => item * item);\n     *      let sum = 0;\n     *      for (let i = 0, l = squaredVal.length; i < l; i++) {\n     *          sum += squaredVal[i++];\n     *      }\n     *\n     *      return sum;\n     *  })\n     *\n     *  // datamodel (dm) is already prepared with cars.json\n     *  const dm1 = dm.groupBy(['origin'], {\n     *      accleration: 'meanSquared'\n     *  });\n     *\n     * @public\n     *\n     * @param {string} name formal name for a reducer. If the given name already exists in store it is overridden by new\n     *      definition.\n     * @param {Function} reducer definition of {@link reducer} function.\n     *\n     * @return {Function} function for unregistering the reducer.\n     */\n    register (name, reducer) {\n        if (typeof reducer !== 'function') {\n            throw new Error('Reducer should be a function');\n        }\n\n        name = String(name);\n        this.store.set(name, reducer);\n\n        return () => { this.__unregister(name); };\n    }\n\n    __unregister (name) {\n        if (this.store.has(name)) {\n            this.store.delete(name);\n        }\n    }\n\n    resolve (name) {\n        if (name instanceof Function) {\n            return name;\n        }\n        return this.store.get(name);\n    }\n}\n\nconst reducerStore = (function () {\n    let store = null;\n\n    function getStore () {\n        if (store === null) {\n            store = new ReducerStore();\n        }\n        return store;\n    }\n    return getStore();\n}());\n\nexport default reducerStore;\n","import { getCommonSchema } from './get-common-schema';\n\n/**\n * The filter function used in natural join.\n * It generates a function that will have the logic to join two\n * DataModel instances by the process of natural join.\n *\n * @param {DataModel} dm1 - The left DataModel instance.\n * @param {DataModel} dm2 - The right DataModel instance.\n * @return {Function} Returns a function that is used in cross-product operation.\n */\nexport function naturalJoinFilter (dm1, dm2) {\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    // const dm1FieldStoreName = dm1FieldStore.name;\n    // const dm2FieldStoreName = dm2FieldStore.name;\n    const commonSchemaArr = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    return (dm1Fields, dm2Fields) => {\n        let retainTuple = true;\n        commonSchemaArr.forEach((fieldName) => {\n            if (dm1Fields[fieldName].value ===\n                dm2Fields[fieldName].value && retainTuple) {\n                retainTuple = true;\n            } else {\n                retainTuple = false;\n            }\n        });\n        return retainTuple;\n    };\n}\n","import DataModel from '../export';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n/**\n * Performs the union operation between two dm instances.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function union (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n    // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     */\n    function prepareDataHelper (dm, fieldsObj) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                data.push(tuple);\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj);\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj);\n\n    return new DataModel(data, schema, { name });\n}\n","import { crossProduct } from './cross-product';\nimport { JOINS } from '../constants';\nimport { union } from './union';\n\n\nexport function leftOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel1, dataModel2, filterFn, false, JOINS.LEFTOUTER);\n}\n\nexport function rightOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel2, dataModel1, filterFn, false, JOINS.RIGHTOUTER);\n}\n\nexport function fullOuterJoin (dataModel1, dataModel2, filterFn) {\n    return union(leftOuterJoin(dataModel1, dataModel2, filterFn), rightOuterJoin(dataModel1, dataModel2, filterFn));\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\n\n/**\n * In {@link DataModel}, every tabular data consists of column, a column is stored as field.\n * Field contains all the data for a given column in an array.\n *\n * Each record consists of several fields; the fields of all records form the columns.\n * Examples of fields: name, gender, sex etc.\n *\n * In DataModel, each field can have multiple attributes which describes its data and behaviour.\n * A field can have two types of data: Measure and Dimension.\n *\n * A Dimension Field is the context on which a data is categorized and the measure is the numerical values that\n * quantify the data set.\n * In short a dimension is the lens through which you are looking at your measure data.\n *\n * Refer to {@link Schema} to get info about possible field attributes.\n *\n * @public\n * @class\n */\nexport default class Field {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        this.partialField = partialField;\n        this.rowDiffset = rowDiffset;\n    }\n\n    /**\n     * Generates the field type specific domain.\n     *\n     * @public\n     * @abstract\n     */\n    domain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the the field schema.\n     *\n     * @public\n     * @return {string} Returns the field schema.\n     */\n    schema () {\n        return this.partialField.schema;\n    }\n\n    /**\n     * Returns the name of the field.\n     *\n     * @public\n     * @return {string} Returns the name of the field.\n     */\n    name () {\n        return this.partialField.name;\n    }\n\n    /**\n     * Returns the type of the field.\n     *\n     * @public\n     * @return {string} Returns the type of the field.\n     */\n    type () {\n        return this.partialField.schema.type;\n    }\n\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return this.partialField.schema.subtype;\n    }\n\n    /**\n     * Returns the description of the field.\n     *\n     * @public\n     * @return {string} Returns the description of the field.\n     */\n    description () {\n        return this.partialField.schema.description;\n    }\n\n    /**\n     * Returns the display name of the field.\n     *\n     * @public\n     * @return {string} Returns the display name of the field.\n     */\n    displayName () {\n        return this.partialField.schema.displayName || this.partialField.schema.name;\n    }\n\n    /**\n     * Returns the data associated with the field.\n     *\n     * @public\n     * @return {Array} Returns the data.\n     */\n    data () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            data.push(this.partialField.data[i]);\n        });\n        return data;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @abstract\n     */\n    formattedData () {\n        throw new Error('Not yet implemented');\n    }\n}\n","import Field from '../field';\n\n/**\n * Represents dimension field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Dimension extends Field {\n    /**\n     * Returns the domain for the dimension field.\n     *\n     * @override\n     * @public\n     * @return {any} Returns the calculated domain.\n     */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @abstract\n     */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n     /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { DimensionSubtype } from '../../enums';\nimport Dimension from '../dimension';\n/**\n * Represents categorical field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Categorical extends Dimension {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return DimensionSubtype.CATEGORICAL;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n        return domain;\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport Dimension from '../dimension';\nimport { DateTimeFormatter } from '../../utils';\nimport InvalidAwareTypes from '../../invalid-aware-types';\n\n/**\n * Represents temporal field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Temporal extends Dimension {\n     /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        super(partialField, rowDiffset);\n\n        this._cachedMinDiff = null;\n    }\n\n     /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be\n        // occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n\n        return domain;\n    }\n\n\n    /**\n     * Calculates the minimum consecutive difference from the associated field data.\n     *\n     * @public\n     * @return {number} Returns the minimum consecutive diff in milliseconds.\n     */\n    minimumConsecutiveDifference () {\n        if (this._cachedMinDiff) {\n            return this._cachedMinDiff;\n        }\n\n        const sortedData = this.data().filter(item => !(item instanceof InvalidAwareTypes)).sort((a, b) => a - b);\n        const arrLn = sortedData.length;\n        let minDiff = Number.POSITIVE_INFINITY;\n        let prevDatum;\n        let nextDatum;\n        let processedCount = 0;\n\n        for (let i = 1; i < arrLn; i++) {\n            prevDatum = sortedData[i - 1];\n            nextDatum = sortedData[i];\n\n            if (nextDatum === prevDatum) {\n                continue;\n            }\n\n            minDiff = Math.min(minDiff, nextDatum - sortedData[i - 1]);\n            processedCount++;\n        }\n\n        if (!processedCount) {\n            minDiff = null;\n        }\n        this._cachedMinDiff = minDiff;\n\n        return this._cachedMinDiff;\n    }\n\n    /**\n     * Returns the format specified in the input schema while creating field.\n     *\n     * @public\n     * @return {string} Returns the datetime format.\n     */\n    format () {\n        return this.partialField.schema.format;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum instanceof InvalidAwareTypes) {\n                data.push(datum);\n            } else {\n                data.push(DateTimeFormatter.formatAs(datum, this.format()));\n            }\n        });\n        return data;\n    }\n}\n\n","import Dimension from '../dimension';\n\n/**\n * Represents binned field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Binned extends Dimension {\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the last and first values of bins config array.\n     */\n    calculateDataDomain () {\n        const binsArr = this.partialField.schema.bins;\n        return [binsArr[0], binsArr[binsArr.length - 1]];\n    }\n\n    /**\n     * Returns the bins config provided while creating the field instance.\n     *\n     * @public\n     * @return {Array} Returns the bins array config.\n     */\n    bins () {\n        return this.partialField.schema.bins;\n    }\n}\n","import { formatNumber } from '../../utils';\nimport { defaultReducerName } from '../../operator/group-by-function';\nimport Field from '../field';\n\n/**\n * Represents measure field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Measure extends Field {\n  /**\n   * Returns the domain for the measure field.\n   *\n   * @override\n   * @public\n   * @return {any} Returns the calculated domain.\n   */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n  /**\n   * Returns the unit of the measure field.\n   *\n   * @public\n   * @return {string} Returns unit of the field.\n   */\n    unit () {\n        return this.partialField.schema.unit;\n    }\n\n  /**\n   * Returns the aggregation function name of the measure field.\n   *\n   * @public\n   * @return {string} Returns aggregation function name of the field.\n   */\n    defAggFn () {\n        return this.partialField.schema.defAggFn || defaultReducerName;\n    }\n\n  /**\n   * Returns the number format of the measure field.\n   *\n   * @public\n   * @return {Function} Returns number format of the field.\n   */\n    numberFormat () {\n        const { numberFormat } = this.partialField.schema;\n        return numberFormat instanceof Function ? numberFormat : formatNumber;\n    }\n\n  /**\n   * Calculates the corresponding field domain.\n   *\n   * @public\n   * @abstract\n   */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { MeasureSubtype } from '../../enums';\nimport Measure from '../measure';\nimport InvalidAwareTypes from '../../invalid-aware-types';\n\n/**\n * Represents continuous field subtype.\n *\n * @public\n * @class\n * @extends Measure\n */\nexport default class Continuous extends Measure {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return MeasureSubtype.CONTINUOUS;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the min and max values.\n     */\n    calculateDataDomain () {\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum instanceof InvalidAwareTypes) {\n                return;\n            }\n\n            if (datum < min) {\n                min = datum;\n            }\n            if (datum > max) {\n                max = datum;\n            }\n        });\n\n        return [min, max];\n    }\n}\n","/**\n * A interface to represent a parser which is responsible to parse the field.\n *\n * @public\n * @interface\n */\nexport default class FieldParser {\n    /**\n     * Parses a single value of a field and return the sanitized form.\n     *\n     * @public\n     * @abstract\n     */\n    parse () {\n        throw new Error('Not yet implemented');\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the categorical values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class CategoricalParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the stringified form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the stringified value.\n   */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            result = String(val).trim();\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import { DateTimeFormatter } from '../../../utils';\nimport FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the temporal values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class TemporalParser extends FieldParser {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {Object} schema - The schema object for the corresponding field.\n     */\n    constructor (schema) {\n        super();\n        this.schema = schema;\n        this._dtf = new DateTimeFormatter(this.schema.format);\n    }\n\n    /**\n     * Parses a single value of a field and returns the millisecond value.\n     *\n     * @public\n     * @param {string|number} val - The value of the field.\n     * @return {number} Returns the millisecond value.\n     */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let nativeDate = this._dtf.getNativeDate(val);\n            result = nativeDate ? nativeDate.getTime() : InvalidAwareTypes.NA;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the binned values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class BinnedParser extends FieldParser {\n  /**\n   * Parses a single binned value of a field and returns the sanitized value.\n   *\n   * @public\n   * @param {string} val - The value of the field.\n   * @return {string} Returns the sanitized value.\n   */\n    parse (val) {\n        const regex = /^\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*-\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*$/;\n        val = String(val);\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let matched = val.match(regex);\n            result = matched ? `${Number.parseFloat(matched[1])}-${Number.parseFloat(matched[2])}`\n                             : InvalidAwareTypes.NA;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the continuous values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class ContinuousParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the number form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the number value.\n   */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let parsedVal = parseFloat(val, 10);\n            result = Number.isNaN(parsedVal) ? InvalidAwareTypes.NA : parsedVal;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","/**\n * Stores the full data and the metadata of a field. It provides\n * a single source of data from which the future Field\n * instance can get a subset of it with a rowDiffset config.\n *\n * @class\n * @public\n */\nexport default class PartialField {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} name - The name of the field.\n     * @param {Array} data - The data array.\n     * @param {Object} schema - The schema object of the corresponding field.\n     * @param {FieldParser} parser - The parser instance corresponding to that field.\n     */\n    constructor (name, data, schema, parser) {\n        this.name = name;\n        this.schema = schema;\n        this.parser = parser;\n        this.data = this._sanitize(data);\n    }\n\n    /**\n     * Sanitizes the field data.\n     *\n     * @private\n     * @param {Array} data - The actual input data.\n     * @return {Array} Returns the sanitized data.\n     */\n    _sanitize (data) {\n        return data.map(datum => this.parser.parse(datum));\n    }\n}\n","import { FieldType, DimensionSubtype, MeasureSubtype } from './enums';\nimport {\n    Categorical,\n    Temporal,\n    Binned,\n    Continuous,\n    CategoricalParser,\n    TemporalParser,\n    BinnedParser,\n    ContinuousParser,\n    PartialField\n} from './fields';\n\n/**\n * Creates a field instance according to the provided data and schema.\n *\n * @param {Array} data - The field data array.\n * @param {Object} schema - The field schema object.\n * @return {Field} Returns the newly created field instance.\n */\nfunction createUnitField(data, schema) {\n    data = data || [];\n    let partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.TEMPORAL:\n            partialField = new PartialField(schema.name, data, schema, new TemporalParser(schema));\n            return new Temporal(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.BINNED:\n            partialField = new PartialField(schema.name, data, schema, new BinnedParser());\n            return new Binned(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        }\n    default:\n        partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n        return new Categorical(partialField, `0-${data.length - 1}`);\n    }\n}\n\n\n/**\n * Creates a field instance from partialField and rowDiffset.\n *\n * @param {PartialField} partialField - The corresponding partial field.\n * @param {string} rowDiffset - The data subset config.\n * @return {Field} Returns the newly created field instance.\n */\nexport function createUnitFieldFromPartial(partialField, rowDiffset) {\n    const { schema } = partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            return new Continuous(partialField, rowDiffset);\n        default:\n            return new Continuous(partialField, rowDiffset);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            return new Categorical(partialField, rowDiffset);\n        case DimensionSubtype.TEMPORAL:\n            return new Temporal(partialField, rowDiffset);\n        case DimensionSubtype.BINNED:\n            return new Binned(partialField, rowDiffset);\n        default:\n            return new Categorical(partialField, rowDiffset);\n        }\n    default:\n        return new Categorical(partialField, rowDiffset);\n    }\n}\n\n/**\n * Creates the field instances with input data and schema.\n *\n * @param {Array} dataColumn - The data array for fields.\n * @param {Array} schema - The schema array for fields.\n * @param {Array} headers - The array of header names.\n * @return {Array.<Field>} Returns an array of newly created field instances.\n */\nexport function createFields(dataColumn, schema, headers) {\n    const headersObj = {};\n\n    if (!(headers && headers.length)) {\n        headers = schema.map(item => item.name);\n    }\n\n    headers.forEach((header, i) => {\n        headersObj[header] = i;\n    });\n\n    return schema.map(item => createUnitField(dataColumn[headersObj[item.name]], item));\n}\n","import { DataFormat } from './enums';\n\nexport default {\n    dataFormat: DataFormat.AUTO\n};\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in DSV array to a manageable internal format.\n *\n * @param {Array.<Array>} arr - A 2D array containing of the DSV data.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv data is header or not.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    [\"a\", \"b\", \"c\"],\n *    [1, 2, 3],\n *    [4, 5, 6],\n *    [7, 8, 9]\n * ];\n */\nfunction DSVArr (arr, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    let header;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    if (options.firstRowHeader) {\n        // If header present then mutate the array.\n        // Do in-place mutation to save space.\n        header = arr.splice(0, 1)[0];\n    } else {\n        header = [];\n    }\n\n    arr.forEach(field => push(...field));\n\n    return [header, columns];\n}\n\nexport default DSVArr;\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatRows = csv.formatRows;\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatRows = tsv.formatRows;\n","import { dsvFormat as d3Dsv } from 'd3-dsv';\nimport DSVArr from './dsv-arr';\n\n/**\n * Parses and converts data formatted in DSV string to a manageable internal format.\n *\n * @todo Support to be given for https://tools.ietf.org/html/rfc4180.\n * @todo Sample implementation https://github.com/knrz/CSV.js/.\n *\n * @param {string} str - The input DSV string.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv string data is header or not.\n * @param {string} [options.fieldSeparator=\",\"] - The separator of two consecutive field.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = `\n * a,b,c\n * 1,2,3\n * 4,5,6\n * 7,8,9\n * `\n */\nfunction DSVStr (str, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n        fieldSeparator: ','\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    const dsv = d3Dsv(options.fieldSeparator);\n    return DSVArr(dsv.parseRows(str), options);\n}\n\nexport default DSVStr;\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in JSON to a manageable internal format.\n *\n * @param {Array.<Object>} arr - The input data formatted in JSON.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    {\n *      \"a\": 1,\n *      \"b\": 2,\n *      \"c\": 3\n *    },\n *    {\n *      \"a\": 4,\n *      \"b\": 5,\n *      \"c\": 6\n *    },\n *    {\n *      \"a\": 7,\n *      \"b\": 8,\n *      \"c\": 9\n *    }\n * ];\n */\nfunction FlatJSON (arr) {\n    const header = {};\n    let i = 0;\n    let insertionIndex;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    arr.forEach((item) => {\n        const fields = [];\n        for (let key in item) {\n            if (key in header) {\n                insertionIndex = header[key];\n            } else {\n                header[key] = i++;\n                insertionIndex = i - 1;\n            }\n            fields[insertionIndex] = item[key];\n        }\n        push(...fields);\n    });\n\n    return [Object.keys(header), columns];\n}\n\nexport default FlatJSON;\n","import FlatJSON from './flat-json';\nimport DSVArr from './dsv-arr';\nimport DSVStr from './dsv-str';\nimport { detectDataFormat } from '../utils';\n\n/**\n * Parses the input data and detect the format automatically.\n *\n * @param {string|Array} data - The input data.\n * @param {Object} options - An optional config specific to data format.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n */\nfunction Auto (data, options) {\n    const converters = { FlatJSON, DSVStr, DSVArr };\n    const dataFormat = detectDataFormat(data);\n\n    if (!dataFormat) {\n        throw new Error('Couldn\\'t detect the data format');\n    }\n\n    return converters[dataFormat](data, options);\n}\n\nexport default Auto;\n","import { FieldType, FilteringMode, DimensionSubtype, MeasureSubtype, DataFormat } from './enums';\nimport fieldStore from './field-store';\nimport Value from './value';\nimport {\n    rowDiffsetIterator\n} from './operator';\nimport { DM_DERIVATIVES, LOGICAL_OPERATORS } from './constants';\nimport { createFields, createUnitFieldFromPartial } from './field-creator';\nimport defaultConfig from './default-config';\nimport * as converter from './converter';\nimport { extend2, detectDataFormat } from './utils';\n\n/**\n * Prepares the selection data.\n */\nfunction prepareSelectionData (fields, i) {\n    const resp = {};\n    for (let field of fields) {\n        resp[field.name()] = new Value(field.partialField.data[i], field);\n    }\n    return resp;\n}\n\nexport function prepareJoinData (fields) {\n    const resp = {};\n    Object.keys(fields).forEach((key) => { resp[key] = new Value(fields[key], key); });\n    return resp;\n}\n\nexport const updateFields = ([rowDiffset, colIdentifier], partialFieldspace, fieldStoreName) => {\n    let collID = colIdentifier.length ? colIdentifier.split(',') : [];\n    let partialFieldMap = partialFieldspace.fieldsObj();\n    let newFields = collID.map(coll => createUnitFieldFromPartial(partialFieldMap[coll].partialField, rowDiffset));\n    return fieldStore.createNamespace(newFields, fieldStoreName);\n};\n\nexport const persistDerivation = (model, operation, config = {}, criteriaFn) => {\n    let derivative;\n    if (operation !== DM_DERIVATIVES.COMPOSE) {\n        derivative = {\n            op: operation,\n            meta: config,\n            criteria: criteriaFn\n        };\n        model._derivation.push(derivative);\n    }\n    else {\n        derivative = [...criteriaFn];\n        model._derivation.length = 0;\n        model._derivation.push(...derivative);\n    }\n};\n\nexport const selectHelper = (rowDiffset, fields, selectFn, config, sourceDm) => {\n    const newRowDiffSet = [];\n    let lastInsertedValue = -1;\n    let { mode } = config;\n    let li;\n    let cachedStore = {};\n    let cloneProvider = () => sourceDm.detachedRoot();\n    const selectorHelperFn = index => selectFn(\n        prepareSelectionData(fields, index),\n        index,\n        cloneProvider,\n        cachedStore\n    );\n\n    let checker;\n    if (mode === FilteringMode.INVERSE) {\n        checker = index => !selectorHelperFn(index);\n    } else {\n        checker = index => selectorHelperFn(index);\n    }\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        if (checker(i)) {\n            if (lastInsertedValue !== -1 && i === (lastInsertedValue + 1)) {\n                li = newRowDiffSet.length - 1;\n                newRowDiffSet[li] = `${newRowDiffSet[li].split('-')[0]}-${i}`;\n            } else {\n                newRowDiffSet.push(`${i}`);\n            }\n            lastInsertedValue = i;\n        }\n    });\n    return newRowDiffSet.join(',');\n};\n\nexport const filterPropagationModel = (model, propModels, config = {}) => {\n    const operation = config.operation || LOGICAL_OPERATORS.AND;\n    const filterByMeasure = config.filterByMeasure || false;\n    let fns = [];\n    if (!propModels.length) {\n        fns = [() => false];\n    } else {\n        fns = propModels.map(propModel => ((dataModel) => {\n            const dataObj = dataModel.getData();\n            const schema = dataObj.schema;\n            const fieldsConfig = dataModel.getFieldsConfig();\n            const fieldsSpace = dataModel.getFieldspace().fieldsObj();\n            const data = dataObj.data;\n            const domain = Object.values(fieldsConfig).reduce((acc, v) => {\n                acc[v.def.name] = fieldsSpace[v.def.name].domain();\n                return acc;\n            }, {});\n\n            return (fields) => {\n                const include = !data.length ? false : data.some(row => schema.every((propField) => {\n                    if (!(propField.name in fields)) {\n                        return true;\n                    }\n                    const value = fields[propField.name].valueOf();\n                    if (filterByMeasure && propField.type === FieldType.MEASURE) {\n                        return value >= domain[propField.name][0] && value <= domain[propField.name][1];\n                    }\n\n                    if (propField.type !== FieldType.DIMENSION) {\n                        return true;\n                    }\n                    const idx = fieldsConfig[propField.name].index;\n                    return row[idx] === fields[propField.name].valueOf();\n                }));\n                return include;\n            };\n        })(propModel));\n    }\n\n    let filteredModel;\n    if (operation === LOGICAL_OPERATORS.AND) {\n        const clonedModel = model.clone(false, false);\n        filteredModel = clonedModel.select(fields => fns.every(fn => fn(fields)), {\n            saveChild: false,\n            mode: FilteringMode.ALL\n        });\n    } else {\n        filteredModel = model.clone(false, false).select(fields => fns.some(fn => fn(fields)), {\n            mode: FilteringMode.ALL,\n            saveChild: false\n        });\n    }\n\n    return filteredModel;\n};\n\nexport const cloneWithSelect = (sourceDm, selectFn, selectConfig, cloneConfig) => {\n    const cloned = sourceDm.clone(cloneConfig.saveChild);\n    const rowDiffset = selectHelper(\n        cloned._rowDiffset,\n        cloned.getPartialFieldspace().fields,\n        selectFn,\n        selectConfig,\n        sourceDm\n    );\n    cloned._rowDiffset = rowDiffset;\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n\n    persistDerivation(cloned, DM_DERIVATIVES.SELECT, { config: selectConfig }, selectFn);\n\n    return cloned;\n};\n\nexport const cloneWithProject = (sourceDm, projField, config, allFields) => {\n    const cloned = sourceDm.clone(config.saveChild);\n    let projectionSet = projField;\n    if (config.mode === FilteringMode.INVERSE) {\n        projectionSet = allFields.filter(fieldName => projField.indexOf(fieldName) === -1);\n    }\n    // cloned._colIdentifier = sourceDm._colIdentifier.split(',')\n    //                         .filter(coll => projectionSet.indexOf(coll) !== -1).join();\n    cloned._colIdentifier = projectionSet.join(',');\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n\n    persistDerivation(\n        cloned,\n        DM_DERIVATIVES.PROJECT,\n        { projField, config, actualProjField: projectionSet },\n        null\n    );\n\n    return cloned;\n};\n\nexport const sanitizeUnitSchema = (unitSchema) => {\n    // Do deep clone of the unit schema as the user might change it later.\n    unitSchema = extend2({}, unitSchema);\n    if (!unitSchema.type) {\n        unitSchema.type = FieldType.DIMENSION;\n    }\n\n    if (!unitSchema.subtype) {\n        switch (unitSchema.type) {\n        case FieldType.MEASURE:\n            unitSchema.subtype = MeasureSubtype.CONTINUOUS;\n            break;\n        default:\n        case FieldType.DIMENSION:\n            unitSchema.subtype = DimensionSubtype.CATEGORICAL;\n            break;\n        }\n    }\n\n    return unitSchema;\n};\n\nexport const sanitizeSchema = schema => schema.map(unitSchema => sanitizeUnitSchema(unitSchema));\n\nexport const updateData = (relation, data, schema, options) => {\n    schema = sanitizeSchema(schema);\n    options = Object.assign(Object.assign({}, defaultConfig), options);\n    const converterFn = converter[options.dataFormat];\n\n    if (!(converterFn && typeof converterFn === 'function')) {\n        throw new Error(`No converter function found for ${options.dataFormat} format`);\n    }\n\n    const [header, formattedData] = converterFn(data, options);\n    const fieldArr = createFields(formattedData, schema, header);\n\n    // This will create a new fieldStore with the fields\n    const nameSpace = fieldStore.createNamespace(fieldArr, options.name);\n    relation._partialFieldspace = nameSpace;\n    // If data is provided create the default colIdentifier and rowDiffset\n    relation._rowDiffset = formattedData.length && formattedData[0].length ? `0-${formattedData[0].length - 1}` : '';\n    relation._colIdentifier = (schema.map(_ => _.name)).join();\n    relation._dataFormat = options.dataFormat === DataFormat.AUTO ? detectDataFormat(data) : options.dataFormat;\n    return relation;\n};\n\nexport const fieldInSchema = (schema, field) => {\n    let i = 0;\n\n    for (; i < schema.length; ++i) {\n        if (field === schema[i].name) {\n            return {\n                type: schema[i].subtype || schema[i].type,\n                index: i\n            };\n        }\n    }\n    return null;\n};\n\n\nexport const getOperationArguments = (child) => {\n    const derivation = child._derivation;\n    let params = [];\n    let operation;\n    if (derivation && derivation.length === 1) {\n        operation = derivation[0].op;\n        switch (operation) {\n        case DM_DERIVATIVES.SELECT:\n            params = [derivation[0].criteria];\n            break;\n        case DM_DERIVATIVES.PROJECT:\n            params = [derivation[0].meta.actualProjField];\n            break;\n        case DM_DERIVATIVES.GROUPBY:\n            operation = 'groupBy';\n            params = [derivation[0].meta.groupByString.split(','), derivation[0].criteria];\n            break;\n        default:\n            break;\n        }\n    }\n\n    return {\n        operation,\n        params\n    };\n};\n\nconst applyExistingOperationOnModel = (propModel, dataModel) => {\n    const { operation, params } = getOperationArguments(dataModel);\n    let selectionModel = propModel[0];\n    let rejectionModel = propModel[1];\n    if (operation && params.length) {\n        selectionModel = propModel[0][operation](...params, {\n            saveChild: false\n        });\n        rejectionModel = propModel[1][operation](...params, {\n            saveChild: false\n        });\n    }\n    return [selectionModel, rejectionModel];\n};\n\nconst getFilteredModel = (propModel, path) => {\n    for (let i = 0, len = path.length; i < len; i++) {\n        const model = path[i];\n        propModel = applyExistingOperationOnModel(propModel, model);\n    }\n    return propModel;\n};\n\nconst propagateIdentifiers = (dataModel, propModel, config = {}, propModelInf = {}) => {\n    const nonTraversingModel = propModelInf.nonTraversingModel;\n    const excludeModels = propModelInf.excludeModels || [];\n\n    if (dataModel === nonTraversingModel) {\n        return;\n    }\n\n    const propagate = excludeModels.length ? excludeModels.indexOf(dataModel) === -1 : true;\n\n    propagate && dataModel.handlePropagation(propModel, config);\n\n    const children = dataModel._children;\n    children.forEach((child) => {\n        let [selectionModel, rejectionModel] = applyExistingOperationOnModel(propModel, child);\n        propagateIdentifiers(child, [selectionModel, rejectionModel], config, propModelInf);\n    });\n};\n\nexport const getRootGroupByModel = (model) => {\n    if (model._parent && model._derivation.find(d => d.op !== 'group')) {\n        return getRootGroupByModel(model._parent);\n    }\n    return model;\n};\n\nexport const getRootDataModel = (model) => {\n    while (model._parent) {\n        model = model._parent;\n    }\n    return model;\n};\n\nexport const getPathToRootModel = (model, path = []) => {\n    while (model._parent) {\n        path.push(model);\n        model = model._parent;\n    }\n    return path;\n};\n\nexport const propagateToAllDataModels = (identifiers, rootModels, propagationInf, config) => {\n    let criteria;\n    let propModel;\n    const { propagationNameSpace, propagateToSource } = propagationInf;\n    const propagationSourceId = propagationInf.sourceId;\n    const propagateInterpolatedValues = config.propagateInterpolatedValues;\n    const filterFn = (entry) => {\n        const filter = config.filterFn || (() => true);\n        return filter(entry, config);\n    };\n\n    let criterias = [];\n\n    if (identifiers === null && config.persistent !== true) {\n        criterias = [{\n            criteria: []\n        }];\n    } else {\n        let actionCriterias = Object.values(propagationNameSpace.mutableActions);\n        if (propagateToSource !== false) {\n            actionCriterias = actionCriterias.filter(d => d.config.sourceId !== propagationSourceId);\n        }\n\n        const filteredCriteria = actionCriterias.filter(filterFn).map(action => action.config.criteria);\n\n        const excludeModels = [];\n\n        if (propagateToSource !== false) {\n            const sourceActionCriterias = Object.values(propagationNameSpace.mutableActions);\n\n            sourceActionCriterias.forEach((actionInf) => {\n                const actionConf = actionInf.config;\n                if (actionConf.applyOnSource === false && actionConf.action === config.action &&\n                        actionConf.sourceId !== propagationSourceId) {\n                    excludeModels.push(actionInf.model);\n                    criteria = sourceActionCriterias.filter(d => d !== actionInf).map(d => d.config.criteria);\n                    criteria.length && criterias.push({\n                        criteria,\n                        models: actionInf.model,\n                        path: getPathToRootModel(actionInf.model)\n                    });\n                }\n            });\n        }\n\n\n        criteria = [].concat(...[...filteredCriteria, identifiers]).filter(d => d !== null);\n        criterias.push({\n            criteria,\n            excludeModels: [...excludeModels, ...config.excludeModels || []]\n        });\n    }\n\n    const rootModel = rootModels.model;\n\n    const propConfig = Object.assign({\n        sourceIdentifiers: identifiers,\n        propagationSourceId\n    }, config);\n\n    const rootGroupByModel = rootModels.groupByModel;\n    if (propagateInterpolatedValues && rootGroupByModel) {\n        propModel = filterPropagationModel(rootGroupByModel, criteria, {\n            filterByMeasure: propagateInterpolatedValues\n        });\n        propagateIdentifiers(rootGroupByModel, propModel, propConfig);\n    }\n\n    criterias.forEach((inf) => {\n        const propagationModel = filterPropagationModel(rootModel, inf.criteria);\n        const path = inf.path;\n\n        if (path) {\n            const filteredModel = getFilteredModel(propagationModel, path.reverse());\n            inf.models.handlePropagation(filteredModel, propConfig);\n        } else {\n            propagateIdentifiers(rootModel, propagationModel, propConfig, {\n                excludeModels: inf.excludeModels,\n                nonTraversingModel: propagateInterpolatedValues && rootGroupByModel\n            });\n        }\n    });\n};\n\nexport const propagateImmutableActions = (propagationNameSpace, rootModels, propagationInf) => {\n    const immutableActions = propagationNameSpace.immutableActions;\n\n    for (const action in immutableActions) {\n        const actionInf = immutableActions[action];\n        const actionConf = actionInf.config;\n        const propagationSourceId = propagationInf.config.sourceId;\n        const filterImmutableAction = propagationInf.propConfig.filterImmutableAction ?\n            propagationInf.propConfig.filterImmutableAction(actionConf, propagationInf.config) : true;\n        if (actionConf.sourceId !== propagationSourceId && filterImmutableAction) {\n            const criteriaModel = actionConf.criteria;\n            propagateToAllDataModels(criteriaModel, rootModels, {\n                propagationNameSpace,\n                propagateToSource: false,\n                sourceId: propagationSourceId\n            }, actionConf);\n        }\n    }\n};\n\nexport const addToPropNamespace = (propagationNameSpace, config = {}, model) => {\n    let sourceNamespace;\n    const isMutableAction = config.isMutableAction;\n    const criteria = config.criteria;\n    const key = `${config.action}-${config.sourceId}`;\n\n    if (isMutableAction) {\n        sourceNamespace = propagationNameSpace.mutableActions;\n    } else {\n        sourceNamespace = propagationNameSpace.immutableActions;\n    }\n\n    if (criteria === null) {\n        delete sourceNamespace[key];\n    } else {\n        sourceNamespace[key] = {\n            model,\n            config\n        };\n    }\n\n    return this;\n};\n","import { FilteringMode } from './enums';\nimport { getUniqueId } from './utils';\nimport { persistDerivation, updateFields, cloneWithSelect, cloneWithProject, updateData } from './helper';\nimport { crossProduct, difference, naturalJoinFilter, union } from './operator';\nimport { DM_DERIVATIVES } from './constants';\n\n/**\n * Relation provides the definitions of basic operators of relational algebra like *selection*, *projection*, *union*,\n * *difference* etc.\n *\n * It is extended by {@link DataModel} to inherit the functionalities of relational algebra concept.\n *\n * @class\n * @public\n * @module Relation\n * @namespace DataModel\n */\nclass Relation {\n\n    /**\n     * Creates a new Relation instance by providing underlying data and schema.\n     *\n     * @private\n     *\n     * @param {Object | string | Relation} data - The input tabular data in dsv or json format or\n     * an existing Relation instance object.\n     * @param {Array} schema - An array of data schema.\n     * @param {Object} [options] - The optional options.\n     */\n    constructor (...params) {\n        let source;\n\n        this._parent = null;\n        this._derivation = [];\n        this._children = [];\n\n        if (params.length === 1 && ((source = params[0]) instanceof Relation)) {\n            // parent datamodel was passed as part of source\n            this._colIdentifier = source._colIdentifier;\n            this._rowDiffset = source._rowDiffset;\n            this._dataFormat = source._dataFormat;\n            this._parent = source;\n            this._partialFieldspace = this._parent._partialFieldspace;\n            this._fieldStoreName = getUniqueId();\n            this.__calculateFieldspace().calculateFieldsConfig();\n        } else {\n            updateData(this, ...params);\n            this._fieldStoreName = this._partialFieldspace.name;\n            this.__calculateFieldspace().calculateFieldsConfig();\n            this._propagationNameSpace = {\n                mutableActions: {},\n                immutableActions: {}\n            };\n        }\n    }\n\n    /**\n     * Retrieves the {@link Schema | schema} details for every {@link Field | field} as an array.\n     *\n     * @public\n     *\n     * @return {Array.<Schema>} Array of fields schema.\n     *      ```\n     *      [\n     *          { name: 'Name', type: 'dimension' },\n     *          { name: 'Miles_per_Gallon', type: 'measure', numberFormat: (val) => `${val} miles / gallon` },\n     *          { name: 'Cylinder', type: 'dimension' },\n     *          { name: 'Displacement', type: 'measure', defAggFn: 'max' },\n     *          { name: 'HorsePower', type: 'measure', defAggFn: 'max' },\n     *          { name: 'Weight_in_lbs', type: 'measure', defAggFn: 'avg',  },\n     *          { name: 'Acceleration', type: 'measure', defAggFn: 'avg' },\n     *          { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *          { name: 'Origin' }\n     *      ]\n     *      ```\n     */\n    getSchema () {\n        return this.getFieldspace().fields.map(d => d.schema());\n    }\n\n    /**\n     * Returns the name of the {@link DataModel} instance. If no name was specified during {@link DataModel}\n     * initialization, then it returns a auto-generated name.\n     *\n     * @public\n     *\n     * @return {string} Name of the DataModel instance.\n     */\n    getName() {\n        return this._fieldStoreName;\n    }\n\n    getFieldspace () {\n        return this._fieldspace;\n    }\n\n    __calculateFieldspace () {\n        this._fieldspace = updateFields([this._rowDiffset, this._colIdentifier],\n             this.getPartialFieldspace(), this._fieldStoreName);\n        return this;\n    }\n\n    getPartialFieldspace () {\n        return this._partialFieldspace;\n    }\n\n    /**\n     * Performs {@link link_of_cross_product | cross-product} between two {@link DataModel} instances and returns a\n     * new {@link DataModel} instance containing the results. This operation is also called theta join.\n     *\n     * Cross product takes two set and create one set where each value of one set is paired with each value of another\n     * set.\n     *\n     * This method takes an optional predicate which filters the generated result rows. If the predicate returns true\n     * the combined row is included in the resulatant table.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.join(originDM)));\n     *\n     *  console.log(carsDM.join(originDM,\n     *      obj => obj.[originDM.getName()].Origin === obj.[carsDM.getName()].Origin));\n     *\n     * @text\n     * This is chained version of `join` operator. `join` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel to be joined with the current instance DataModel.\n     * @param {SelectionPredicate} filterFn - The predicate function that will filter the result of the crossProduct.\n     *\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    join (joinWith, filterFn) {\n        return crossProduct(this, joinWith, filterFn);\n    }\n\n    /**\n     * {@link natural_join | Natural join} is a special kind of cross-product join where filtering of rows are performed\n     * internally by resolving common fields are from both table and the rows with common value are included.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.naturalJoin(originDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel with which the current instance of DataModel on which the method is\n     *      called will be joined.\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    naturalJoin (joinWith) {\n        return crossProduct(this, joinWith, naturalJoinFilter(this, joinWith), true);\n    }\n\n    /**\n     * {@link link_to_union | Union} operation can be termed as vertical stacking of all rows from both the DataModel\n     * instances, provided that both of the {@link DataModel} instances should have same column names.\n     *\n     * @example\n     * console.log(EuropeanMakerDM.union(USAMakerDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} unionWith - DataModel instance for which union has to be applied with the instance on which\n     *      the method is called\n     *\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    union (unionWith) {\n        return union(this, unionWith);\n    }\n\n    /**\n     * {@link link_to_difference | Difference } operation only include rows which are present in the datamodel on which\n     * it was called but not on the one passed as argument.\n     *\n     * @example\n     * console.log(highPowerDM.difference(highExpensiveDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} differenceWith - DataModel instance for which difference has to be applied with the instance\n     *      on which the method is called\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    difference (differenceWith) {\n        return difference(this, differenceWith);\n    }\n\n    /**\n     * {@link link_to_selection | Selection} is a row filtering operation. It expects a predicate and an optional mode\n     * which control which all rows should be included in the resultant DataModel instance.\n     *\n     * {@link SelectionPredicate} is a function which returns a boolean value. For selection operation the selection\n     * function is called for each row of DataModel instance with the current row passed as argument.\n     *\n     * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n     * of rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resultant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  // with selection mode NORMAL:\n     *  const normDt = dt.select(fields => fields.Origin.value === \"USA\")\n     *  console.log(normDt));\n     *\n     * // with selection mode INVERSE:\n     * const inverDt = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.INVERSE })\n     * console.log(inverDt);\n     *\n     * // with selection mode ALL:\n     * const dtArr = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.ALL })\n     * // print the selected parts\n     * console.log(dtArr[0]);\n     * // print the inverted parts\n     * console.log(dtArr[1]);\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Function} selectFn - The predicate function which is called for each row with the current row.\n     * ```\n     *  function (row, i, cloneProvider, store)  { ... }\n     * ```\n     * @param {Object} config - The configuration object to control the inclusion exclusion of a row in resultant\n     * DataModel instance.\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection.\n     * @return {DataModel} Returns the new DataModel instance(s) after operation.\n     */\n    select (selectFn, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n\n        const cloneConfig = { saveChild: config.saveChild };\n        let oDm;\n\n        if (config.mode === FilteringMode.ALL) {\n            const selectDm = cloneWithSelect(\n                this,\n                selectFn,\n                { mode: FilteringMode.NORMAL },\n                cloneConfig\n            );\n            const rejectDm = cloneWithSelect(\n                this,\n                selectFn,\n                { mode: FilteringMode.INVERSE },\n                cloneConfig\n            );\n            oDm = [selectDm, rejectDm];\n        } else {\n            oDm = cloneWithSelect(\n                this,\n                selectFn,\n                config,\n                cloneConfig\n            );\n        }\n\n        return oDm;\n    }\n\n    /**\n     * Retrieves a boolean value if the current {@link DataModel} instance has data.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'CarName', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     * const data = [];\n     *\n     * const dt = new DataModel(data, schema);\n     * console.log(dt.isEmpty());\n     *\n     * @public\n     *\n     * @return {Boolean} True if the datamodel has no data, otherwise false.\n     */\n    isEmpty () {\n        return !this._rowDiffset.length || !this._colIdentifier.length;\n    }\n\n    /**\n     * Creates a clone from the current DataModel instance with child parent relationship.\n     *\n     * @private\n     * @param {boolean} [saveChild=true] - Whether the cloned instance would be recorded in the parent instance.\n     * @return {DataModel} - Returns the newly cloned DataModel instance.\n     */\n    clone (saveChild = true, linkParent = true) {\n        let retDataModel;\n        if (linkParent === false) {\n            const dataObj = this.getData({\n                getAllFields: true\n            });\n            const data = dataObj.data;\n            const schema = dataObj.schema;\n            const jsonData = data.map((row) => {\n                const rowObj = {};\n                schema.forEach((field, i) => {\n                    rowObj[field.name] = row[i];\n                });\n                return rowObj;\n            });\n            retDataModel = new this.constructor(jsonData, schema);\n        }\n        else {\n            retDataModel = new this.constructor(this);\n        }\n\n        if (saveChild) {\n            this._children.push(retDataModel);\n        }\n        return retDataModel;\n    }\n\n    /**\n     * {@link Projection} is filter column (field) operation. It expects list of fields' name and either include those\n     * or exclude those based on {@link FilteringMode} on the resultant variable.\n     *\n     * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n     * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resulatant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *\n     *  // with projection mode NORMAL:\n     *  const normDt = dt.project([\"Name\", \"HorsePower\"]);\n     *  console.log(normDt.getData());\n     *\n     *  // with projection mode INVERSE:\n     *  const inverDt = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.INVERSE })\n     *  console.log(inverDt.getData());\n     *\n     *  // with selection mode ALL:\n     *  const dtArr = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.ALL })\n     *  // print the normal parts\n     *  console.log(dtArr[0].getData());\n     *  // print the inverted parts\n     *  console.log(dtArr[1].getData());\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n     * @param {Object} [config] - An optional config to control the creation of new DataModel\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n     *\n     * @return {DataModel} Returns the new DataModel instance after operation.\n     */\n    project (projField, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n        const fieldConfig = this.getFieldsConfig();\n        const allFields = Object.keys(fieldConfig);\n        const { mode } = config;\n\n        let normalizedProjField = projField.reduce((acc, field) => {\n            if (field.constructor.name === 'RegExp') {\n                acc.push(...allFields.filter(fieldName => fieldName.search(field) !== -1));\n            } else if (field in fieldConfig) {\n                acc.push(field);\n            }\n            return acc;\n        }, []);\n\n        normalizedProjField = Array.from(new Set(normalizedProjField)).map(field => field.trim());\n        let dataModel;\n\n        if (mode === FilteringMode.ALL) {\n            let projectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.NORMAL,\n                saveChild: config.saveChild\n            }, allFields);\n            let rejectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.INVERSE,\n                saveChild: config.saveChild\n            }, allFields);\n            dataModel = [projectionClone, rejectionClone];\n        } else {\n            let projectionClone = cloneWithProject(this, normalizedProjField, config, allFields);\n            dataModel = projectionClone;\n        }\n\n        return dataModel;\n    }\n\n    getFieldsConfig () {\n        return this._fieldConfig;\n    }\n\n    calculateFieldsConfig () {\n        this._fieldConfig = this._fieldspace.fields.reduce((acc, fieldDef, i) => {\n            acc[fieldDef.name()] = {\n                index: i,\n                def: { name: fieldDef.name(), type: fieldDef.type(), subtype: fieldDef.subtype() }\n            };\n            return acc;\n        }, {});\n        return this;\n    }\n\n\n    /**\n     * Frees up the resources associated with the current DataModel instance and breaks all the links instance has in\n     * the DAG.\n     *\n     * @public\n     */\n    dispose () {\n        this._parent.removeChild(this);\n        this._parent = null;\n    }\n\n    /**\n     * Removes the specified child {@link DataModel} from the child list of the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\")\n     * dt.removeChild(dt2);\n     *\n     * @private\n     *\n     * @param {DataModel} child - Delegates the parent to remove this child.\n     */\n    removeChild (child) {\n        let idx = this._children.findIndex(sibling => sibling === child);\n        idx !== -1 ? this._children.splice(idx, 1) : true;\n    }\n\n    /**\n     * Adds the specified {@link DataModel} as a parent for the current {@link DataModel} instance.\n     *\n     * The optional criteriaQueue is an array containing the history of transaction performed on parent\n     *  {@link DataModel} to get the current one.\n     *\n     * @param {DataModel} parent - The datamodel instance which will act as parent.\n     * @param {Array} criteriaQueue - Queue contains in-between operation meta-data.\n     */\n    addParent (parent, criteriaQueue = []) {\n        persistDerivation(this, DM_DERIVATIVES.COMPOSE, null, criteriaQueue);\n        this._parent = parent;\n        parent._children.push(this);\n    }\n\n    /**\n     * Returns the parent {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const parentDm = dt2.getParent();\n     *\n     * @return {DataModel} Returns the parent DataModel instance.\n     */\n    getParent () {\n        return this._parent;\n    }\n\n    /**\n     * Returns the immediate child {@link DataModel} instances.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const childDm1 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const childDm2 = dt.select(fields => fields.Origin.value === \"Japan\");\n     * const childDm3 = dt.groupBy([\"Origin\"]);\n     *\n     * @return {DataModel[]} Returns the immediate child DataModel instances.\n     */\n    getChildren() {\n        return this._children;\n    }\n\n    /**\n     * Returns the in-between operation meta data while creating the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *   { name: 'Name', type: 'dimension' },\n     *   { name: 'HorsePower', type: 'measure' },\n     *   { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *   { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *   { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *   { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *   { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const dt3 = dt2.groupBy([\"Origin\"]);\n     * const derivations = dt3.getDerivations();\n     *\n     * @return {Any[]} Returns the derivation meta data.\n     */\n    getDerivations() {\n        return this._derivation;\n    }\n}\n\nexport default Relation;\n","/* eslint-disable default-case */\n\nimport { FieldType, DimensionSubtype, DataFormat } from './enums';\nimport {\n    persistDerivation,\n    getRootGroupByModel,\n    propagateToAllDataModels,\n    getRootDataModel,\n    propagateImmutableActions,\n    addToPropNamespace,\n    sanitizeUnitSchema\n} from './helper';\nimport { DM_DERIVATIVES, PROPAGATION } from './constants';\nimport {\n    dataBuilder,\n    rowDiffsetIterator,\n    groupBy\n} from './operator';\nimport { createBinnedFieldData } from './operator/bucket-creator';\nimport Relation from './relation';\nimport reducerStore from './utils/reducer-store';\nimport { createFields } from './field-creator';\nimport InvalidAwareTypes from './invalid-aware-types';\n\n/**\n * DataModel is an in-browser representation of tabular data. It supports\n * {@link https://en.wikipedia.org/wiki/Relational_algebra | relational algebra} operators as well as generic data\n * processing opearators.\n * DataModel extends {@link Relation} class which defines all the relational algebra opreators. DataModel gives\n * definition of generic data processing operators which are not relational algebra complient.\n *\n * @public\n * @class\n * @extends Relation\n * @memberof Datamodel\n */\nclass DataModel extends Relation {\n    /**\n     * Creates a new DataModel instance by providing data and schema. Data could be in the form of\n     * - Flat JSON\n     * - DSV String\n     * - 2D Array\n     *\n     * By default DataModel finds suitable adapter to serialize the data. DataModel also expects a\n     * {@link Schema | schema} for identifying the variables present in data.\n     *\n     * @constructor\n     * @example\n     * const data = loadData('cars.csv');\n     * const schema = [\n     *      { name: 'Name', type: 'dimension' },\n     *      { name: 'Miles_per_Gallon', type: 'measure', unit : 'cm', scale: '1000', numberformat: val => `${val}G`},\n     *      { name: 'Cylinders', type: 'dimension' },\n     *      { name: 'Displacement', type: 'measure' },\n     *      { name: 'Horsepower', type: 'measure' },\n     *      { name: 'Weight_in_lbs', type: 'measure' },\n     *      { name: 'Acceleration', type: 'measure' },\n     *      { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *      { name: 'Origin', type: 'dimension' }\n     * ];\n     * const dm = new DataModel(data, schema, { name: 'Cars' });\n     * table(dm);\n     *\n     * @public\n     *\n     * @param {Array.<Object> | string | Array.<Array>} data Input data in any of the mentioned formats\n     * @param {Array.<Schema>} schema Defination of the variables. Order of the variables in data and order of the\n     *      variables in schema has to be same.\n     * @param {object} [options] Optional arguments to specify more settings regarding the creation part\n     * @param {string} [options.name] Name of the datamodel instance. If no name is given an auto generated name is\n     *      assigned to the instance.\n     * @param {string} [options.fieldSeparator=','] specify field separator type if the data is of type dsv string.\n     */\n    constructor (...args) {\n        super(...args);\n\n        this._onPropagation = [];\n        this._sortingDetails = [];\n    }\n\n    /**\n     * Reducers are simple functions which reduces an array of numbers to a representative number of the set.\n     * Like an array of numbers `[10, 20, 5, 15]` can be reduced to `12.5` if average / mean reducer function is\n     * applied. All the measure fields in datamodel (variables in data) needs a reducer to handle aggregation.\n     *\n     * @public\n     *\n     * @return {ReducerStore} Singleton instance of {@link ReducerStore}.\n     */\n    static get Reducers () {\n        return reducerStore;\n    }\n\n    /**\n     * Configure null, undefined, invalid values in the source data\n     *\n     * @public\n     *\n     * @param {Object} [config] - Configuration to control how null, undefined and non-parsable values are\n     * represented in DataModel.\n     * @param {string} [config.undefined] - Define how an undefined value will be represented.\n     * @param {string} [config.null] - Define how a null value will be represented.\n     * @param {string} [config.invalid] - Define how a non-parsable value will be represented.\n     */\n    static configureInvalidAwareTypes (config) {\n        return InvalidAwareTypes.invalidAwareVals(config);\n    }\n\n    /**\n     * Retrieve the data attached to an instance in JSON format.\n     *\n     * @example\n     * // DataModel instance is already prepared and assigned to dm variable\n     *  const data = dm.getData({\n     *      order: 'column',\n     *      formatter: {\n     *          origin: (val) => val === 'European Union' ? 'EU' : val;\n     *      }\n     *  });\n     *  console.log(data);\n     *\n     * @public\n     *\n     * @param {Object} [options] Options to control how the raw data is to be returned.\n     * @param {string} [options.order='row'] Defines if data is retieved in row order or column order. Possible values\n     *      are `'rows'` and `'columns'`\n     * @param {Function} [options.formatter=null] Formats the output data. This expects an object, where the keys are\n     *      the name of the variable needs to be formatted. The formatter function is called for each row passing the\n     *      value of the cell for a particular row as arguments. The formatter is a function in the form of\n     *      `function (value, rowId, schema) => { ... }`\n     *      Know more about {@link Fomatter}.\n     *\n     * @return {Array} Returns a multidimensional array of the data with schema. The return format looks like\n     *      ```\n     *          {\n     *              data,\n     *              schema\n     *          }\n     *      ```\n     */\n    getData (options) {\n        const defOptions = {\n            order: 'row',\n            formatter: null,\n            withUid: false,\n            getAllFields: false,\n            sort: []\n        };\n        options = Object.assign({}, defOptions, options);\n        const fields = this.getPartialFieldspace().fields;\n\n        const dataGenerated = dataBuilder.call(\n            this,\n            this.getPartialFieldspace().fields,\n            this._rowDiffset,\n            options.getAllFields ? fields.map(d => d.name()).join() : this._colIdentifier,\n            options.sort,\n            {\n                columnWise: options.order === 'column',\n                addUid: !!options.withUid\n            }\n        );\n\n        if (!options.formatter) {\n            return dataGenerated;\n        }\n\n        const { formatter } = options;\n        const { data, schema, uids } = dataGenerated;\n        const fieldNames = schema.map((e => e.name));\n        const fmtFieldNames = Object.keys(formatter);\n        const fmtFieldIdx = fmtFieldNames.reduce((acc, next) => {\n            const idx = fieldNames.indexOf(next);\n            if (idx !== -1) {\n                acc.push([idx, formatter[next]]);\n            }\n            return acc;\n        }, []);\n\n        if (options.order === 'column') {\n            fmtFieldIdx.forEach((elem) => {\n                const fIdx = elem[0];\n                const fmtFn = elem[1];\n\n                data[fIdx].forEach((datum, datumIdx) => {\n                    data[fIdx][datumIdx] = fmtFn.call(\n                        undefined,\n                        datum,\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        } else {\n            data.forEach((datum, datumIdx) => {\n                fmtFieldIdx.forEach((elem) => {\n                    const fIdx = elem[0];\n                    const fmtFn = elem[1];\n\n                    datum[fIdx] = fmtFn.call(\n                        undefined,\n                        datum[fIdx],\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        }\n\n        return dataGenerated;\n    }\n\n    /**\n     * Groups the data using particular dimensions and by reducing measures. It expects a list of dimensions using which\n     * it projects the datamodel and perform aggregations to reduce the duplicate tuples. Refer this\n     * {@link link_to_one_example_with_group_by | document} to know the intuition behind groupBy.\n     *\n     * DataModel by default provides definition of few {@link reducer | Reducers}.\n     * {@link ReducerStore | User defined reducers} can also be registered.\n     *\n     * This is the chained implementation of `groupBy`.\n     * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n     *\n     * @example\n     * const groupedDM = dm.groupBy(['Year'], { horsepower: 'max' } );\n     * console.log(groupedDm);\n     *\n     * @public\n     *\n     * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n     * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n     *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n     *      schema of the variable.\n     *\n     * @return {DataModel} Returns a new DataModel instance after performing the groupby.\n     */\n    groupBy (fieldsArr, reducers = {}, config = { saveChild: true }) {\n        const groupByString = `${fieldsArr.join()}`;\n        let params = [this, fieldsArr, reducers];\n        const newDataModel = groupBy(...params);\n\n        persistDerivation(\n            newDataModel,\n            DM_DERIVATIVES.GROUPBY,\n            { fieldsArr, groupByString, defaultReducer: reducerStore.defaultReducer() },\n            reducers\n        );\n\n        if (config.saveChild) {\n            this._children.push(newDataModel);\n        }\n        newDataModel._parent = this;\n\n        return newDataModel;\n    }\n\n    /**\n     * Performs sorting operation on the current {@link DataModel} instance according to the specified sorting details.\n     * Like every other operator it doesn't mutate the current DataModel instance on which it was called, instead\n     * returns a new DataModel instance containing the sorted data.\n     *\n     * DataModel support multi level sorting by listing the variables using which sorting needs to be performed and\n     * the type of sorting `ASC` or `DESC`.\n     *\n     * In the following example, data is sorted by `Origin` field in `DESC` order in first level followed by another\n     * level of sorting by `Acceleration` in `ASC` order.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * let sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\"] // Default value is ASC\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * // Sort with a custom sorting function\n     * sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\", (a, b) => a - b] // Custom sorting function\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @text\n     * DataModel also provides another sorting mechanism out of the box where sort is applied to a variable using\n     * another variable which determines the order.\n     * Like the above DataModel contains three fields `Origin`, `Name` and `Acceleration`. Now, the data in this\n     * model can be sorted by `Origin` field according to the average value of all `Acceleration` for a\n     * particular `Origin` value.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * const sortedDm = dm.sort([\n     *     ['Origin', ['Acceleration', (a, b) => avg(...a.Acceleration) - avg(...b.Acceleration)]]\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @public\n     *\n     * @param {Array.<Array>} sortingDetails - Sorting details based on which the sorting will be performed.\n     * @return {DataModel} Returns a new instance of DataModel with sorted data.\n     */\n    sort (sortingDetails) {\n        const rawData = this.getData({\n            order: 'row',\n            sort: sortingDetails\n        });\n        const header = rawData.schema.map(field => field.name);\n        const dataInCSVArr = [header].concat(rawData.data);\n\n        const sortedDm = new this.constructor(dataInCSVArr, rawData.schema, { dataFormat: 'DSVArr' });\n        sortedDm._sortingDetails = sortingDetails;\n        return sortedDm;\n    }\n\n    /**\n     * Performs the serialization operation on the current {@link DataModel} instance according to the specified data\n     * type. When an {@link DataModel} instance is created, it de-serializes the input data into its internal format,\n     * and during its serialization process, it converts its internal data format to the specified data type and returns\n     * that data regardless what type of data is used during the {@link DataModel} initialization.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance.\n     * const csvData = dm.serialize(DataModel.DataFormat.DSV_STR, { fieldSeparator: \",\" });\n     * console.log(csvData); // The csv formatted data.\n     *\n     * const jsonData = dm.serialize(DataModel.DataFormat.FLAT_JSON);\n     * console.log(jsonData); // The json data.\n     *\n     * @public\n     *\n     * @param {string} type - The data type name for serialization.\n     * @param {Object} options - The optional option object.\n     * @param {string} options.fieldSeparator - The field separator character for DSV data type.\n     * @return {Array|string} Returns the serialized data.\n     */\n    serialize (type, options) {\n        type = type || this._dataFormat;\n        options = Object.assign({}, { fieldSeparator: ',' }, options);\n\n        const fields = this.getFieldspace().fields;\n        const colData = fields.map(f => f.formattedData());\n        const rowsCount = colData[0].length;\n        let serializedData;\n        let rowIdx;\n        let colIdx;\n\n        if (type === DataFormat.FLAT_JSON) {\n            serializedData = [];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = {};\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row[fields[colIdx].name()] = colData[colIdx][rowIdx];\n                }\n                serializedData.push(row);\n            }\n        } else if (type === DataFormat.DSV_STR) {\n            serializedData = [fields.map(f => f.name()).join(options.fieldSeparator)];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row.join(options.fieldSeparator));\n            }\n            serializedData = serializedData.join('\\n');\n        } else if (type === DataFormat.DSV_ARR) {\n            serializedData = [fields.map(f => f.name())];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row);\n            }\n        } else {\n            throw new Error(`Data type ${type} is not supported`);\n        }\n\n        return serializedData;\n    }\n\n    addField (field) {\n        const fieldName = field.name();\n        this._colIdentifier += `,${fieldName}`;\n        const partialFieldspace = this._partialFieldspace;\n\n        if (!partialFieldspace.fieldsObj()[field.name()]) {\n            partialFieldspace.fields.push(field);\n        } else {\n            const fieldIndex = partialFieldspace.fields.findIndex(fieldinst => fieldinst.name() === fieldName);\n            fieldIndex >= 0 && (partialFieldspace.fields[fieldIndex] = field);\n        }\n\n        // flush out cached namespace values on addition of new fields\n        partialFieldspace._cachedFieldsObj = null;\n        partialFieldspace._cachedDimension = null;\n        partialFieldspace._cachedMeasure = null;\n\n        this.__calculateFieldspace().calculateFieldsConfig();\n        return this;\n    }\n\n    /**\n    * Creates a new variable calculated from existing variables. This method expects the definition of the newly created\n    * variable and a function which resolves the value of the new variable from existing variables.\n    *\n    * Can create a new measure based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const newDm = dataModel.calculateVariable({\n    *      name: 'powerToWeight',\n    *      type: 'measure'\n    *  }, ['horsepower', 'weight_in_lbs', (hp, weight) => hp / weight ]);\n    *\n    *\n    * Can create a new dimension based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const child = dataModel.calculateVariable(\n    *     {\n    *       name: 'Efficiency',\n    *       type: 'dimension'\n    *     }, ['horsepower', (hp) => {\n    *      if (hp < 80) { return 'low'; },\n    *      else if (hp < 120) { return 'moderate'; }\n    *      else { return 'high' }\n    *  }]);\n    *\n    * @public\n    *\n    * @param {Object} schema - The schema of newly defined variable.\n    * @param {Array.<string|function>} dependency - An array containing the dependency variable names and a resolver\n    * function as the last element.\n    * @param {Object} config - An optional config object.\n    * @param {boolean} [config.saveChild] - Whether the newly created DataModel will be a child.\n    * @param {boolean} [config.replaceVar] - Whether the newly created variable will replace the existing variable.\n    * @return {DataModel} Returns an instance of DataModel with the new field.\n    */\n    calculateVariable (schema, dependency, config) {\n        schema = sanitizeUnitSchema(schema);\n        config = Object.assign({}, { saveChild: true, replaceVar: false }, config);\n\n        const fieldsConfig = this.getFieldsConfig();\n        const depVars = dependency.slice(0, dependency.length - 1);\n        const retrieveFn = dependency[dependency.length - 1];\n\n        if (fieldsConfig[schema.name] && !config.replaceVar) {\n            throw new Error(`${schema.name} field already exists in datamodel`);\n        }\n\n        const depFieldIndices = depVars.map((field) => {\n            const fieldSpec = fieldsConfig[field];\n            if (!fieldSpec) {\n                // @todo dont throw error here, use warning in production mode\n                throw new Error(`${field} is not a valid column name.`);\n            }\n            return fieldSpec.index;\n        });\n\n        const clone = this.clone();\n\n        const fs = clone.getFieldspace().fields;\n        const suppliedFields = depFieldIndices.map(idx => fs[idx]);\n\n        let cachedStore = {};\n        let cloneProvider = () => this.detachedRoot();\n\n        const computedValues = [];\n        rowDiffsetIterator(clone._rowDiffset, (i) => {\n            const fieldsData = suppliedFields.map(field => field.partialField.data[i]);\n            computedValues[i] = retrieveFn(...fieldsData, i, cloneProvider, cachedStore);\n        });\n        const [field] = createFields([computedValues], [schema], [schema.name]);\n        clone.addField(field);\n\n        persistDerivation(clone, DM_DERIVATIVES.CAL_VAR, { config: schema, fields: depVars }, retrieveFn);\n\n        return clone;\n    }\n\n    /**\n     * Propagates changes across all the connected DataModel instances.\n     *\n     * @param {Array} identifiers - A list of identifiers that were interacted with.\n     * @param {Object} payload - The interaction specific details.\n     *\n     * @return {DataModel} DataModel instance.\n     */\n    propagate (identifiers, config = {}, addToNameSpace, propConfig = {}) {\n        const isMutableAction = config.isMutableAction;\n        const propagationSourceId = config.sourceId;\n        const payload = config.payload;\n        const rootModel = getRootDataModel(this);\n        const propagationNameSpace = rootModel._propagationNameSpace;\n        const rootGroupByModel = getRootGroupByModel(this);\n        const rootModels = {\n            groupByModel: rootGroupByModel,\n            model: rootModel\n        };\n\n        addToNameSpace && addToPropNamespace(propagationNameSpace, config, this);\n        propagateToAllDataModels(identifiers, rootModels, { propagationNameSpace, sourceId: propagationSourceId },\n            Object.assign({\n                payload\n            }, config));\n\n        if (isMutableAction) {\n            propagateImmutableActions(propagationNameSpace, rootModels, {\n                config,\n                propConfig\n            }, this);\n        }\n\n        return this;\n    }\n\n    /**\n     * Associates a callback with an event name.\n     *\n     * @param {string} eventName - The name of the event.\n     * @param {Function} callback - The callback to invoke.\n     * @return {DataModel} Returns this current DataModel instance itself.\n     */\n    on (eventName, callback) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation.push(callback);\n            break;\n        }\n        return this;\n    }\n\n    /**\n     * Unsubscribes the callbacks for the provided event name.\n     *\n     * @param {string} eventName - The name of the event to unsubscribe.\n     * @return {DataModel} Returns the current DataModel instance itself.\n     */\n    unsubscribe (eventName) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation = [];\n            break;\n\n        }\n        return this;\n    }\n\n    /**\n     * This method is used to invoke the method associated with propagation.\n     *\n     * @param {Object} payload The interaction payload.\n     * @param {DataModel} identifiers The propagated DataModel.\n     * @memberof DataModel\n     */\n    handlePropagation (propModel, payload) {\n        let propListeners = this._onPropagation;\n        propListeners.forEach(fn => fn.call(this, propModel, payload));\n    }\n\n    /**\n     * Performs the binning operation on a measure field based on the binning configuration. Binning means discretizing\n     * values of a measure. Binning configuration contains an array; subsequent values from the array marks the boundary\n     * of buckets in [inclusive, exclusive) range format. This operation does not mutate the subject measure field,\n     * instead, it creates a new field (variable) of type dimension and subtype binned.\n     *\n     * Binning can be configured by\n     * - providing custom bin configuration with non-uniform buckets,\n     * - providing bins count,\n     * - providing each bin size,\n     *\n     * When custom `buckets` are provided as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', buckets: [30, 80, 100, 110] }\n     *  const binnedDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binsCount` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', binsCount: 5, start: 0, end: 100 }\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binSize` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHorsepower', binSize: 20, start: 5}\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @public\n     *\n     * @param {string} measureFieldName - The name of the target measure field.\n     * @param {Object} config - The config object.\n     * @param {string} [config.name] - The name of the new field which will be created.\n     * @param {string} [config.buckets] - An array containing the bucket ranges.\n     * @param {string} [config.binSize] - The size of each bin. It is ignored when buckets are given.\n     * @param {string} [config.binsCount] - The total number of bins to generate. It is ignored when buckets are given.\n     * @param {string} [config.start] - The start value of the bucket ranges. It is ignored when buckets are given.\n     * @param {string} [config.end] - The end value of the bucket ranges. It is ignored when buckets are given.\n     * @return {DataModel} Returns a new {@link DataModel} instance with the new field.\n     */\n    bin (measureFieldName, config) {\n        const fieldsConfig = this.getFieldsConfig();\n\n        if (!fieldsConfig[measureFieldName]) {\n            throw new Error(`Field ${measureFieldName} doesn't exist`);\n        }\n\n        const binFieldName = config.name || `${measureFieldName}_binned`;\n\n        if (fieldsConfig[binFieldName]) {\n            throw new Error(`Field ${binFieldName} already exists`);\n        }\n\n        const measureField = this.getFieldspace().fieldsObj()[measureFieldName];\n        const { binnedData, bins } = createBinnedFieldData(measureField, this._rowDiffset, config);\n\n        const binField = createFields([binnedData], [\n            {\n                name: binFieldName,\n                type: FieldType.DIMENSION,\n                subtype: DimensionSubtype.BINNED,\n                bins\n            }], [binFieldName])[0];\n\n        const clone = this.clone();\n        clone.addField(binField);\n\n        persistDerivation(clone, DM_DERIVATIVES.BIN, { measureFieldName, config, binFieldName }, null);\n\n        return clone;\n    }\n\n    /**\n     * Creates a new {@link DataModel} instance with completely detached root from current {@link DataModel} instance,\n     * the new {@link DataModel} instance has no parent-children relationship with the current one, but has same data as\n     * the current one.\n     * This API is useful when a completely different {@link DataModel} but with same data as the current instance is\n     * needed.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *  const detachedDm = dm.detachedRoot();\n     *\n     * // has different namespace\n     * console.log(dm.getPartialFieldspace().name);\n     * console.log(detachedDm.getPartialFieldspace().name);\n     *\n     * // has same data\n     * console.log(dm.getData());\n     * console.log(detachedDm.getData());\n     *\n     * @public\n     *\n     * @return {DataModel} Returns a detached {@link DataModel} instance.\n     */\n    detachedRoot () {\n        const data = this.serialize(DataFormat.FLAT_JSON);\n        const schema = this.getSchema();\n\n        return new DataModel(data, schema);\n    }\n}\n\nexport default DataModel;\n","import { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport DataModel from '../export';\nimport reducerStore from '../utils/reducer-store';\nimport { defaultReducerName } from './group-by-function';\nimport { FieldType } from '../enums';\n\n/**\n * This function sanitize the user given field and return a common Array structure field\n * list\n * @param  {DataModel} dataModel the dataModel operating on\n * @param  {Array} fieldArr  user input of field Array\n * @return {Array}           arrays of field name\n */\nfunction getFieldArr (dataModel, fieldArr) {\n    const retArr = [];\n    const fieldStore = dataModel.getFieldspace();\n    const dimensions = fieldStore.getDimension();\n\n    Object.entries(dimensions).forEach(([key]) => {\n        if (fieldArr && fieldArr.length) {\n            if (fieldArr.indexOf(key) !== -1) {\n                retArr.push(key);\n            }\n        } else {\n            retArr.push(key);\n        }\n    });\n\n    return retArr;\n}\n\n/**\n * This sanitize the reducer provide by the user and create a common type of object.\n * user can give function Also\n * @param  {DataModel} dataModel     dataModel to worked on\n * @param  {Object|function} [reducers={}] reducer provided by the users\n * @return {Object}               object containing reducer function for every measure\n */\nfunction getReducerObj (dataModel, reducers = {}) {\n    const retObj = {};\n    const fieldStore = dataModel.getFieldspace();\n    const measures = fieldStore.getMeasure();\n    const defReducer = reducerStore.defaultReducer();\n\n    Object.keys(measures).forEach((measureName) => {\n        if (typeof reducers[measureName] !== 'string') {\n            reducers[measureName] = measures[measureName].defAggFn();\n        }\n        const reducerFn = reducerStore.resolve(reducers[measureName]);\n        if (reducerFn) {\n            retObj[measureName] = reducerFn;\n        } else {\n            retObj[measureName] = defReducer;\n            reducers[measureName] = defaultReducerName;\n        }\n    });\n    return retObj;\n}\n\n/**\n * main function which perform the group-by operations which reduce the measures value is the\n * fields are common according to the reducer function provided\n * @param  {DataModel} dataModel the dataModel to worked\n * @param  {Array} fieldArr  fields according to which the groupby should be worked\n * @param  {Object|Function} reducers  reducers function\n * @param {DataModel} existingDataModel Existing datamodel instance\n * @return {DataModel} new dataModel with the group by\n */\nfunction groupBy (dataModel, fieldArr, reducers, existingDataModel) {\n    const sFieldArr = getFieldArr(dataModel, fieldArr);\n    const reducerObj = getReducerObj(dataModel, reducers);\n    const fieldStore = dataModel.getFieldspace();\n    const fieldStoreObj = fieldStore.fieldsObj();\n    const dbName = fieldStore.name;\n    const dimensionArr = [];\n    const measureArr = [];\n    const schema = [];\n    const hashMap = {};\n    const data = [];\n    let newDataModel;\n\n    // Prepare the schema\n    Object.entries(fieldStoreObj).forEach(([key, value]) => {\n        if (sFieldArr.indexOf(key) !== -1 || reducerObj[key]) {\n            schema.push(extend2({}, value.schema()));\n\n            switch (value.schema().type) {\n            case FieldType.MEASURE:\n                measureArr.push(key);\n                break;\n            default:\n            case FieldType.DIMENSION:\n                dimensionArr.push(key);\n            }\n        }\n    });\n    // Prepare the data\n    let rowCount = 0;\n    rowDiffsetIterator(dataModel._rowDiffset, (i) => {\n        let hash = '';\n        dimensionArr.forEach((_) => {\n            hash = `${hash}-${fieldStoreObj[_].partialField.data[i]}`;\n        });\n        if (hashMap[hash] === undefined) {\n            hashMap[hash] = rowCount;\n            data.push({});\n            dimensionArr.forEach((_) => {\n                data[rowCount][_] = fieldStoreObj[_].partialField.data[i];\n            });\n            measureArr.forEach((_) => {\n                data[rowCount][_] = [fieldStoreObj[_].partialField.data[i]];\n            });\n            rowCount += 1;\n        } else {\n            measureArr.forEach((_) => {\n                data[hashMap[hash]][_].push(fieldStoreObj[_].partialField.data[i]);\n            });\n        }\n    });\n\n    // reduction\n    let cachedStore = {};\n    let cloneProvider = () => dataModel.detachedRoot();\n    data.forEach((row) => {\n        const tuple = row;\n        measureArr.forEach((_) => {\n            tuple[_] = reducerObj[_](row[_], cloneProvider, cachedStore);\n        });\n    });\n    if (existingDataModel) {\n        existingDataModel.__calculateFieldspace();\n        newDataModel = existingDataModel;\n    }\n    else {\n        newDataModel = new DataModel(data, schema, { name: dbName });\n    }\n    return newDataModel;\n}\n\nexport { groupBy, getFieldArr, getReducerObj };\n","import { rowDiffsetIterator } from './row-diffset-iterator';\nimport InvalidAwareTypes from '../invalid-aware-types';\n\nconst generateBuckets = (binSize, start, end) => {\n    const buckets = [];\n    let next = start;\n\n    while (next < end) {\n        buckets.push(next);\n        next += binSize;\n    }\n    buckets.push(next);\n\n    return buckets;\n};\n\nconst findBucketRange = (bucketRanges, value) => {\n    let leftIdx = 0;\n    let rightIdx = bucketRanges.length - 1;\n    let midIdx;\n    let range;\n\n    // Here use binary search as the bucketRanges is a sorted array\n    while (leftIdx <= rightIdx) {\n        midIdx = leftIdx + Math.floor((rightIdx - leftIdx) / 2);\n        range = bucketRanges[midIdx];\n\n        if (value >= range.start && value < range.end) {\n            return range;\n        } else if (value >= range.end) {\n            leftIdx = midIdx + 1;\n        } else if (value < range.start) {\n            rightIdx = midIdx - 1;\n        }\n    }\n\n    return null;\n};\n\n /**\n  * Creates the bin data from input measure field and supplied configs.\n  *\n  * @param {Measure} measureField - The Measure field instance.\n  * @param {string} rowDiffset - The datamodel rowDiffset values.\n  * @param {Object} config - The config object.\n  * @return {Object} Returns the binned data and the corresponding bins.\n  */\nexport function createBinnedFieldData (measureField, rowDiffset, config) {\n    let { buckets, binsCount, binSize, start, end } = config;\n    const [dMin, dMax] = measureField.domain();\n\n    if (!buckets) {\n        start = (start !== 0 && (!start || start > dMin)) ? dMin : start;\n        end = (end !== 0 && (!end || end < dMax)) ? (dMax + 1) : end;\n\n        if (binsCount) {\n            binSize = Math.ceil(Math.abs(end - start) / binsCount);\n        }\n\n        buckets = generateBuckets(binSize, start, end);\n    }\n\n    if (buckets[0] > dMin) {\n        buckets.unshift(dMin);\n    }\n    if (buckets[buckets.length - 1] <= dMax) {\n        buckets.push(dMax + 1);\n    }\n\n    const bucketRanges = [];\n    for (let i = 0; i < buckets.length - 1; i++) {\n        bucketRanges.push({\n            start: buckets[i],\n            end: buckets[i + 1]\n        });\n    }\n\n    const binnedData = [];\n    rowDiffsetIterator(rowDiffset, (i) => {\n        const datum = measureField.partialField.data[i];\n        if (datum instanceof InvalidAwareTypes) {\n            binnedData.push(datum);\n            return;\n        }\n\n        const range = findBucketRange(bucketRanges, datum);\n        binnedData.push(`${range.start}-${range.end}`);\n    });\n\n    return { binnedData, bins: buckets };\n}\n","import { fnList } from '../operator/group-by-function';\n\nexport const { sum, avg, min, max, first, last, count, std: sd } = fnList;\n","import DataModel from './datamodel';\nimport {\n  compose,\n  bin,\n  select,\n  project,\n  groupby as groupBy,\n  calculateVariable,\n  sort,\n  crossProduct,\n  difference,\n  naturalJoin,\n  leftOuterJoin,\n  rightOuterJoin,\n  fullOuterJoin,\n  union\n} from './operator';\nimport * as Stats from './stats';\nimport * as enums from './enums';\nimport { DateTimeFormatter } from './utils';\nimport { DataFormat, FilteringMode } from './constants';\nimport InvalidAwareTypes from './invalid-aware-types';\nimport pkg from '../package.json';\n\nDataModel.Operators = {\n    compose,\n    bin,\n    select,\n    project,\n    groupBy,\n    calculateVariable,\n    sort,\n    crossProduct,\n    difference,\n    naturalJoin,\n    leftOuterJoin,\n    rightOuterJoin,\n    fullOuterJoin,\n    union\n};\nDataModel.Stats = Stats;\nObject.assign(DataModel, enums);\nDataModel.DateTimeFormatter = DateTimeFormatter;\nDataModel.DataFormat = DataFormat;\nDataModel.FilteringMode = FilteringMode;\nDataModel.InvalidAwareTypes = InvalidAwareTypes;\nDataModel.version = pkg.version;\n\nexport default DataModel;\n","\n/**\n * DataModel's opearators are exposed as composable functional operators as well as chainable operators. Chainable\n * operators are called on the instances of {@link Datamodel} and {@link Relation} class.\n *\n * Those same operators can be used as composable operators from `DataModel.Operators` namespace.\n *\n * All these operators have similar behaviour. All these operators when called with the argument returns a function\n * which expects a DataModel instance.\n *\n * @public\n * @module Operators\n * @namespace DataModel\n */\n\n/**\n * This is functional version of selection operator. {@link link_to_selection | Selection} is a row filtering operation.\n * It takes {@link SelectionPredicate | predicate} for filtering criteria and returns a function.\n * The returned function is called with the DataModel instance on which the action needs to be performed.\n *\n * {@link SelectionPredicate} is a function which returns a boolean value. For selection opearation the selection\n * function is called for each row of DataModel instance with the current row passed as argument.\n *\n * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n * of rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * [Warn] Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * [Error] `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @example\n * const select = DataModel.Operators.select;\n * usaCarsFn = select(fields => fields.Origin.value === 'USA');\n * usaCarsDm = usaCarsFn(dm);\n * console.log(usaCarsDm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {SelectionPredicate} selectFn - Predicate funciton which is called for each row with the current row\n *      ```\n *          function (row, i)  { ... }\n *      ```\n * @param {Object} [config] - The configuration object to control the inclusion exclusion of a row in resultant\n *      DataModel instance\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const select = (...args) => dm => dm.select(...args);\n\n/**\n * This is functional version of projection operator. {@link link_to_projection | Projection} is a column filtering\n * operation.It expects list of fields name and either include those or exclude those based on {@link FilteringMode} on\n * the  resultant variable.It returns a function which is called with the DataModel instance on which the action needs\n * to be performed.\n *\n * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n * @param {Object} [config] - An optional config to control the creation of new DataModel\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const project = (...args) => dm => dm.project(...args);\n\n/**\n * This is functional version of binnig operator. Binning happens on a measure field based on a binning configuration.\n * Binning in DataModel does not aggregate the number of rows present in DataModel instance after binning, it just adds\n * a new field with the binned value. Refer binning {@link example_of_binning | example} to have a intuition of what\n * binning is and the use case.\n *\n * Binning can be configured by\n * - providing custom bin configuration with non uniform buckets\n * - providing bin count\n * - providing each bin size\n *\n * When custom buckets are provided as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const buckets = {\n *      start: 30\n *      stops: [80, 100, 110]\n *  };\n *  const config = { buckets, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(dm);\n *\n * @text\n * When `binCount` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binCount: 5, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @text\n * When `binSize` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binSize: 200, name: 'binnedHorsepower' }\n *  const binnedDm = dataModel.bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {String} name Name of measure which will be used to create bin\n * @param {Object} config Config required for bin creation\n * @param {Array.<Number>} config.bucketObj.stops Defination of bucket ranges. Two subsequent number from arrays\n *      are picked and a range is created. The first number from range is inclusive and the second number from range\n *      is exclusive.\n * @param {Number} [config.bucketObj.startAt] Force the start of the bin from a particular number.\n *      If not mentioned, the start of the bin or the lower domain of the data if stops is not mentioned, else its\n *      the first value of the stop.\n * @param {Number} config.binSize Bucket size for each bin\n * @param {Number} config.binCount Number of bins which will be created\n * @param {String} config.name Name of the new binned field to be created\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const bin = (...args) => dm => dm.bin(...args);\n\n/**\n * This is functional version of `groupBy` operator.Groups the data using particular dimensions and by reducing\n * measures. It expects a list of dimensions using which it projects the datamodel and perform aggregations to reduce\n * the duplicate tuples. Refer this {@link link_to_one_example_with_group_by | document} to know the intuition behind\n * groupBy.\n *\n * DataModel by default provides definition of few {@link reducer | Reducers}.\n * {@link ReducerStore | User defined reducers} can also be registered.\n *\n * This is the chained implementation of `groupBy`.\n * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n *\n * @example\n * const groupBy = DataModel.Operators.groupBy;\n * const groupedFn = groupBy(['Year'], { horsepower: 'max' } );\n * groupedDM = groupByFn(dm);\n *\n * @public\n *\n * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n *      schema of the variable.\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const groupBy = (...args) => dm => dm.groupBy(...args);\n\n/**\n * Enables composing operators to run multiple operations and save group of operataion as named opration on a DataModel.\n * The resulting DataModel will be the result of all the operation provided. The operations provided will be executed in\n * a serial manner ie. result of one operation will be the input for the next operations (like pipe operator in unix).\n *\n * Suported operations in compose are\n * - `select`\n * - `project`\n * - `groupBy`\n * - `bin`\n * - `compose`\n *\n * @example\n * const compose = DataModel.Operators.compose;\n * const select = DataModel.Operators.select;\n * const project = DataModel.Operators.project;\n *\n * let composedFn = compose(\n *    select(fields => fields.netprofit.value <= 15),\n *    project(['netprofit', 'netsales']));\n *\n * const dataModel = new DataModel(data1, schema1);\n *\n * let composedDm = composedFn(dataModel);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<Operators>} operators: An array of operation that will be applied on the\n * datatable.\n *\n * @returns {DataModel} Instance of resultant DataModel\n */\nexport const compose = (...operations) =>\n    (dm, config = { saveChild: true }) => {\n        let currentDM = dm;\n        let frstChild;\n        const derivations = [];\n        const saveChild = config.saveChild;\n\n        operations.forEach((operation) => {\n            currentDM = operation(currentDM);\n            derivations.push(...currentDM._derivation);\n            if (!frstChild) {\n                frstChild = currentDM;\n            }\n        });\n\n        saveChild && currentDM.addParent(dm, derivations);\n        if (derivations.length > 1) {\n            frstChild.dispose();\n        }\n\n        return currentDM;\n    };\n","/**\n * Wrapper on calculateVariable() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const calculateVariable = (...args) => dm => dm.calculateVariable(...args);\n\n/**\n * Wrapper on sort() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const sort = (...args) => dm => dm.sort(...args);\n","import { crossProduct } from './cross-product';\nimport { naturalJoinFilter } from './natural-join-filter-function';\n\nexport function naturalJoin (dataModel1, dataModel2) {\n    return crossProduct(dataModel1, dataModel2, naturalJoinFilter(dataModel1, dataModel2), true);\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"hyperdis\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hyperdis\"] = factory();\n\telse\n\t\troot[\"hyperdis\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const makeEntry = (arr, sCon) => {\n    arr.forEach((elem) => {\n        if (elem === undefined || elem === null) {\n            return;\n        }\n        sCon[elem] = 1;\n    });\n};\n\nexport default class ForeignSet {\n    constructor (arr) {\n        this._set = {};\n        makeEntry(arr, this._set);\n    }\n\n    append (arr) {\n        makeEntry(arr, this._set);\n        return this;\n    }\n\n    toArray () {\n        return Object.keys(this._set);\n    }\n\n    static difference (set1, set2) {\n        let key;\n        const filteredKeys = [],\n            s1 = set1._set,\n            s2 = set2._set;\n        for (key in s1) {\n            if (!({}).hasOwnProperty.call(s1, key)) {\n                continue;\n            }\n            if (key in s2) {\n                continue;\n            }\n            filteredKeys.push(key);\n        }\n        return new ForeignSet(filteredKeys);\n    }\n}\n","/* global window */\n\nimport ForeignSet from './set';\n\nconst\n    isSimpleObject = (obj) => {\n        let token;\n        if (typeof obj === 'object') {\n            if (obj === null) { return false; }\n            token = Object.prototype.toString.call(obj);\n            if (token === '[object Object]') {\n                return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n            }\n        }\n        return false;\n    },\n    minMsThreshold = 16,\n    /* istanbul ignore next */win = typeof window === 'undefined' ? (this || {}) : window,\n    /* istanbul ignore next */ reqAnimFrame = win.requestAnimationFrame || win.webkitRequestAnimationFrame ||\n        win.mozRequestAnimationFrame || win.oRequestAnimationFrame ||\n        win.msRequestAnimationFrame ||\n        function (callback) {\n            setTimeout(callback, minMsThreshold);\n        },\n\n    getTimeBasedId = () => {\n        if (getTimeBasedId.__lastTime === new Date().getTime()) {\n            return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n        }\n\n        getTimeBasedId.__id = 0;\n        getTimeBasedId.__lastTime = new Date().getTime();\n        return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n    },\n    pullableRecent = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const\n                    hist = node.history,\n                    l = hist.length - 1;\n                return [hist[l - 1 < 0 ? 0 : l - 1], hist[l]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    pullableEnd = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const hist = node.history;\n                return [hist[0], hist[hist.length - 1]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    unique = fns => fns\n                    .reduce((store, fn) => {\n                // @warn function with side effect, it mutates the store passed during initialization\n                        if (fn.__id in store.map) {\n                            return store;\n                        }\n\n                        store.map[fn.__id] = 1;\n                        store.unique.push(fn);\n\n                        return store;\n                    }, { map: {}, unique: [] })\n                    .unique,\n    compose = fns => () => {\n        fns.forEach(fn => fn());\n    },\n    flat = (...params) => {\n        const res = [];\n        params.forEach(param => res.push(...param));\n        return res;\n    },\n    identityMap = arrays => arrays,\n    splitPathProp = (path) => {\n        const pathArr = path.split('.'),\n            len = pathArr.length;\n        return [pathArr.slice(0, len - 1), pathArr[len - 1]];\n    },\n    scheduler = (onFinishCallback) => {\n        let queue = [],\n            animationFrame = null;\n\n        onFinishCallback = onFinishCallback &&\n            typeof onFinishCallback === 'function' && onFinishCallback || (() => { });\n\n        return (listeners, payload) => {\n            [].push.apply(queue, listeners);\n            if (animationFrame === null) {\n                animationFrame = reqAnimFrame(() => {\n                    const tempQ = queue.slice(0);\n                    queue.length = 0;\n                    animationFrame = null;\n\n                    unique(tempQ).forEach(fn => fn());\n                    onFinishCallback(payload);\n                });\n            }\n        };\n    },\n    fetch = namedNode => (...params) => params.map((param) => {\n        const node = namedNode[param];\n        return {\n            name: node.name,\n            qualifiedName: node.qualifiedName,\n            value: node.seed\n        };\n    }),\n    fetchAggregator = (...params) => ({\n        dependencies: params.slice(0, params.length - 1),\n        fn: params[params.length - 1]\n    }),\n    getUpstreamNodes = (list) => {\n        let res = [];\n        const map = {};\n        list.forEach(node => map[node.qualifiedName] = -1);\n        function rec (arr) {\n            arr.forEach((node) => {\n                let qname,\n                    placedIndex,\n                    preArr,\n                    postArr;\n                if (!((qname = node.qualifiedName) in map)) {\n                    map[qname] = res.push(node) - 1;\n                } else {\n                    placedIndex = map[qname];\n                    if (placedIndex !== -1 && placedIndex !== res.length - 1) {\n                        // If not the last element, readjust the array so that the later dependency position is saved\n                        preArr = res.slice(0, placedIndex);\n                        postArr = res.slice(placedIndex + 1);\n                        res = preArr.concat(postArr);\n\n                        // reset the index in map\n                        postArr.forEach((elem, i) => map[elem.qualifiedName] = i + preArr.length);\n                        map[qname] = res.push(node) - 1;\n                    }\n                }\n                rec(node.outgoingEdges);\n            });\n        }\n        rec(list);\n        return res;\n    },\n    resolver = {\n        accumulate: (...params) => {\n            const resp = {};\n            params.forEach((nodeDetails) => {\n                Object.assign(resp, { [nodeDetails.name]: nodeDetails.value });\n            });\n            return resp;\n        },\n        identity: nodeDetails => nodeDetails.value\n    };\n\nfunction resolveDependencyOrder (node, resolved, resolveMap) {\n    let qname;\n    node.edges.forEach((neighbour) => {\n        resolveDependencyOrder(neighbour, resolved, resolveMap);\n    });\n\n    if (node.isRoot() || (qname = node.qualifiedName) in resolveMap) {\n        return;\n    }\n    resolved.push(node);\n    resolveMap[qname] = 1;\n}\n\nclass CustomResolver {\n    constructor (resolver) {\n        this.fn = resolver;\n        this.dep = [];\n    }\n\n    addDependencies(...dep) {\n        this.dep.push(...dep);\n        return this;\n    }\n\n    getDependencies () {\n        return this.dep;\n    }\n\n    get () {\n        return this.fn;\n    }\n}\n\nexport {\n    isSimpleObject,\n    scheduler,\n    compose,\n    flat,\n    identityMap,\n    pullableEnd,\n    pullableRecent,\n    unique,\n    splitPathProp,\n    resolver,\n    ForeignSet,\n    resolveDependencyOrder,\n    fetch,\n    fetchAggregator,\n    CustomResolver,\n    getUpstreamNodes\n};\n","export default class GraphNode {\n    constructor (name, qualifiedName, options) {\n        /* istanbul ignore next */options = options || {};\n        this.name = name;\n        this.qualifiedName = qualifiedName;\n        this.edges = [];\n        this.outgoingEdges = [];\n        this._seed = null;\n        this.requireResolve = true;\n        this.retriever = options.retriever;\n        this.history = [];\n        this.resolver = null;\n        this.electricEdges = [];\n    }\n\n    addDependencies (...dep) {\n        this.edges.push(...dep);\n        dep.forEach(entry => entry.outgoingEdges.push(this));\n        return this;\n    }\n\n    addElectricNode (node) {\n        this.electricEdges.push(node);\n        return this;\n    }\n\n    get seed () {\n        return this._seed;\n    }\n\n    set seed (value) {\n        this._seed = value;\n        this.requireResolve = true;\n        return this;\n    }\n\n    resolve () {\n        this.seed = this.resolver(...this.retrieveDetails());\n        this.history.push(this.seed);\n        this.requireResolve = false;\n        return this;\n    }\n\n    retrieveDetails () {\n        if (this.edges.length === 0) {\n            return [{\n                name: this.name,\n                qualifiedName: this.qualifiedName,\n                value: this.seed\n            }];\n        }\n        return this.retriever(...this.edges.map(edge => edge.qualifiedName));\n    }\n\n    repeatHead () {\n        const\n            history = this.history,\n            head = history[history.length - 1];\n        // @todo- Akash, write test case if history.length === 0 to pass code coverage\n        if (history.length === 0) {\n            return this;\n        }\n        history.push(head);\n        return this;\n    }\n\n    flush () {\n        const hist = this.history,\n            head = hist[hist.length - 1];\n        hist.length = 0;\n        hist.push(head);\n        return this;\n    }\n\n    isRoot () {\n        return this.name === null;\n    }\n}\n","import {\n    pullableRecent,\n    pullableEnd\n} from './utils';\n\nexport default class ElectricNode {\n    constructor () {\n        this.edges = [];\n        this.listeners = {\n            nextFrame: [],\n            currentFrame: []\n        };\n    }\n\n    addEdges (...nodes) {\n        this.edges.push(...nodes);\n        return this;\n    }\n\n    regListenerForCurrFrame (fn) {\n        const lstnrs = this.listeners.currentFrame;\n        let index = lstnrs.push(pullableRecent(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.currentFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    regListenerForNextFrame (fn) {\n        const lstnrs = this.listeners.nextFrame;\n        let index = lstnrs.push(pullableEnd(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.nextFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    hasNextFrameListener () {\n        return !!this.listeners.nextFrame.length;\n    }\n}\n","import {\n    isSimpleObject,\n    resolver,\n    // upstreamNodes,\n    flat,\n    resolveDependencyOrder,\n    getUpstreamNodes,\n    ForeignSet,\n    fetch,\n    CustomResolver,\n    scheduler\n} from './utils';\nimport Node from './graph-node';\nimport ElectricNode from './electric-node';\n\nexport default class Graph {\n    constructor () {\n        this.qualifiedNodeMap = {};\n        this.retriever = fetch(this.qualifiedNodeMap);\n        this.root = new Node(null, null, { retriever: this.retriever });\n        this.root.resolver = resolver.accumulate;\n\n        this._wholeSet = null;\n        this._propagate = true;\n        this.propagationOverride = {\n            currentFrameListeners: false,\n            nextFrameListeners: false\n        };\n\n        this._schedule = scheduler((payload) => {\n            let qname;\n            for (qname in payload.flushTarget) {\n                if (!({}).hasOwnProperty.call(this.qualifiedNodeMap, qname)) {\n                    return;\n                }\n                this.qualifiedNodeMap[qname].flush();\n            }\n        });\n    }\n\n    createNodesFrom (obj, mount) {\n        let val,\n            resolveReqList;\n        const qualifiedNodeMap = this.qualifiedNodeMap,\n            root = this.root,\n            retriever = this.retriever;\n\n        (function rec (objn, qualifiedName, history) {\n            let key,\n                qname,\n                perv,\n                node;\n\n            for (key in objn) {\n                if (!({}).hasOwnProperty.call(objn, key)) {\n                    continue;\n                }\n                qname = `${qualifiedName}${key}`;\n                node = new Node(key, qname, { retriever });\n                qualifiedNodeMap[qname] = node;\n\n                if ((perv = history.perv) !== undefined) {\n                    perv.addDependencies(node);\n                } else {\n                    // top most level entries\n                    root.addDependencies(node);\n                }\n\n                if (isSimpleObject(val = objn[key])) {\n                    rec(val, `${qualifiedName}${key}.`, { perv: node });\n                    node.resolver = resolver.accumulate;\n                } else if (val instanceof CustomResolver) {\n                    node.resolver = val.get();\n                    node.addDependencies(...val.getDependencies().map(qname => qualifiedNodeMap[qname]));\n                } else {\n                    node.resolver = resolver.identity;\n                    node.seed = val;\n                    // node.resolve();\n                }\n            }\n        }(obj, mount === null ? '' : `${mount}.`, {\n            perv: qualifiedNodeMap[mount]\n        }));\n\n        this._wholeSet = new ForeignSet(Object.keys(this.qualifiedNodeMap));\n\n        // Recalculate the model without firing the listeners\n        // @todo selective branch resolve. Currently resolve gets called even for a branch which was updated\n        resolveReqList = this.constructor.getResolvedList(root).concat(root).filter(node => node.requireResolve);\n        resolveReqList.forEach(node => node.resolve());\n        getUpstreamNodes(resolveReqList).forEach(node => node.resolve());\n        return this;\n    }\n\n    getNodeValue (prop) {\n        if (prop in this.qualifiedNodeMap) {\n            return this.qualifiedNodeMap[prop].seed;\n        }\n        return undefined;\n    }\n\n    createElectricNodeOf (props, fnSpec) {\n        const nodes = props.map(prop => this.qualifiedNodeMap[prop]),\n            eNode = new ElectricNode().addEdges(...nodes);\n\n        nodes.forEach(node => node.addElectricNode(eNode));\n        return eNode[`regListenerFor${fnSpec.type}`](fnSpec.fn);\n    }\n\n    update (...params) {\n        let changedSet,\n            upstreamNodes;\n        const\n            electricEdges = [],\n            nodes = params.map((entry) => {\n                entry[0].seed = entry[1];\n                return entry[0];\n            });\n        nodes.forEach(node => node.resolve());\n        electricEdges.push(...flat(...nodes.map(node => node.electricEdges)));\n        changedSet = new ForeignSet(nodes.map(node => node.qualifiedName));\n\n        if (!this._propagate) {\n            this.__execUniqueElectricEdges(electricEdges);\n            this._propagate = true;\n            return this;\n        }\n\n        upstreamNodes = getUpstreamNodes(nodes);\n        upstreamNodes.forEach(upstreamNode => upstreamNode.resolve());\n        changedSet.append(upstreamNodes.map(node => node.qualifiedName));\n        electricEdges.push(...flat(...upstreamNodes.map(node => node.electricEdges)));\n\n        this.__execUniqueElectricEdges(Array.from(new Set(electricEdges)), changedSet);\n        return this;\n    }\n\n    __execUniqueElectricEdges (electricEdges, changedSet) {\n        const\n            cfLstnrs = [], // current frame listeners\n            nfLstnrs = []; // next frame listeners\n        if (changedSet) {\n            const\n                differenceSet = ForeignSet.difference(this._wholeSet, changedSet),\n                entries = differenceSet.toArray();\n\n            entries.forEach(entry => this.qualifiedNodeMap[entry].repeatHead());\n        }\n\n        electricEdges.forEach((e) => {\n            cfLstnrs.push(...e.listeners.currentFrame);\n        });\n        electricEdges.forEach((e) => {\n            nfLstnrs.push(...e.listeners.nextFrame);\n        });\n\n        !this.propagationOverride.currentFrameListeners && cfLstnrs.forEach(fn => fn());\n        !this.propagationOverride.nextFrameListeners && this._schedule(nfLstnrs, { flushTarget: changedSet });\n        this.resetPropagationOverride();\n        return this;\n    }\n\n    resetNodeValue (...qnames) {\n        const nodes = qnames.map(qname => this.qualifiedNodeMap[qname]),\n            args = nodes.map(node => [node, node.seed]);\n        this.update(...args);\n        return this;\n    }\n\n    static getResolvedList (node) {\n        const resolved = [];\n        resolveDependencyOrder(node, resolved, {});\n        return resolved;\n    }\n\n    stopPropagation () {\n        this._propagate = false;\n        return this;\n    }\n\n    resetPropagationOverride () {\n        this.propagationOverride.currentFrameListeners = false;\n        this.propagationOverride.nextFrameListeners = false;\n        return this;\n    }\n\n    setPropagationOverride (key) {\n        this.propagationOverride[`${key}Listeners`] = true;\n        return this;\n    }\n\n    getNodeFromQualifiedName (qname) {\n        return this.qualifiedNodeMap[qname];\n    }\n}\n","import Graph from './graph';\nimport { CustomResolver, fetchAggregator } from './utils';\n\n/**\n * The container class for Hyperdis. Hyperdis is an enabler for observable object with few interesting features like,\n * calculated property, next frame and same frame listeners, multiple listeners etc with a dependency resolving system.\n * It internally uses a graph to hold the hierarchial relationship of a object. Model is merely a container which\n * ties all the components together.\n *\n * @todo Circular dependency detection is not present\n *\n * @example check src/index.spec.js\n * @class\n */\nclass Model {\n    constructor () {\n        this._graph = new Graph();\n        this._lockFlag = false;\n        this._reqQ = [];\n    }\n\n    /**\n     * Static method to create and init the model with an observable seed\n     *\n     * @param {Object} obj The target object which is required to be made observable\n     * @return {Model} instance of the observable object model\n     */\n    static create (obj) {\n        return new Model()._addPropInModel(null, obj);\n    }\n\n    /**\n     * Appends more observable property on the already observable instance. This mutates the original model.\n     *\n     * This function works in two mode. One being\n     * @param {String} mountPoint the property on which the new set of properties will be mounted. If its a nested\n     *                          property then the mountPoint has to be written such a way so it feels like you are\n     *                          accessing the object. If the mount point is not found then he obeservables are added in\n     *                          the root.\n     * @param {Object} The target object which is required to be made observable\n     *\n     * Another being\n     * @param {Object} The target object which is required to be made observable\n     *\n     * @return {Model} instance of the observable object model\n     */\n    append (...params) {\n        let mountPoint,\n            obj;\n\n        if (params.length === 1) {\n            mountPoint = null;\n            obj = params[0];\n        } else {\n            mountPoint = params[0];\n            obj = params[1];\n        }\n\n        this._addPropInModel(mountPoint, obj);\n        return this;\n    }\n\n    /**\n     * Creates a calculated variable from existing variable. This variable can't be updated from outside.\n     * @param {string} mountpoint property path on which the new variable will be placed\n     * @param {string} name name of the variable. If the variable could have hierarchy like `limits.start`\n     * @param {Function} fn funtion where the dependent variables are injected based on the dependency requirement\n     */\n    calculatedProp (...params) {\n        let calculationConfig,\n            customResolver,\n            varName,\n            mount,\n            fetchFn;\n\n        if (params.length > 2) {\n            mount = params[0];\n            varName = params[1];\n            fetchFn = params[2];\n        } else {\n            mount = null;\n            varName = params[0];\n            fetchFn = params[1];\n        }\n\n        calculationConfig = fetchFn(fetchAggregator);\n        customResolver = new CustomResolver(calculationConfig.fn);\n        customResolver.addDependencies(...calculationConfig.dependencies);\n\n        this._addPropInModel(mount, { [varName]: customResolver });\n        return this;\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    _addPropInModel (mountPoint, obj) {\n        this._graph.createNodesFrom(obj, mountPoint);\n        return this;\n    }\n\n    /**\n     * Register a listener in the current frame when a property or group of properties is changed.\n     *\n     * @example\n     * This function takes a single or group of property and handler which is called when any of the properties are\n     * changed.\n     * When a single property is changed the handler is called with two parameter, what was the old value of the state\n     * property and what is the new value.\n     * myState.on('range.start', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 9);\n     * // Output\n     * Value before prop change 1\n     * Value after prop change 9\n     *\n     * If a handler is registered on change of a property which has another state property as value, then the handler\n     * gets called whenever any state property connected to it gets changed\n     *\n     * myState.on('range', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 10);\n     * myState.prop('range.type.absolute', false);\n     *\n     * // Output\n     * Value before prop change\n     * range {\n     *      start: 9,\n     *      end: 5,\n     *      type: {\n     *          absolute: true\n     *      }\n     * }\n     * Value after prop change\n     * range: {\n     *      start: 10,\n     *      end: 5,\n     *      type: {\n     *          absolute: false\n     *      }\n     * }\n     * If a handler is registered with more than one property change then, the handler is called when any of the\n     * properties gets changed. In this cast the handler is called with more than one parameter: each for one state\n     * property which is registered for listening. Each parameter is of type array containing [oldValue, newValue]\n     *\n     * myState.on('range.start', 'range.end', (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * myState.prop('range.start', 12);\n     *\n     * // Output\n     * Start [10, 12]\n     * End [5, 5]\n     *\n     * myState.prop('range.end', 7);\n     *\n     * // Output\n     * Start [12, 12]\n     * End [5, 7]\n     *\n     * The on returns a function which is when called the listener registered gets unregistered\n     *\n     * let unsub = myState.on(['range.start', 'range.end'], (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * // Unsubscribe\n     * unsub()\n     *\n     * On takes an optional boolean value as the last parameter, which if passed as a true value the handler gets called\n     * during registration itself.\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    on (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed in the current stack frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'CurrFrame',\n                fn\n            });\n\n        if (instantCall) {\n            // Bar current next frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('nextFrame').resetNodeValue(...props);\n        }\n        return unsub;\n    }\n\n    /**\n     * Register a listener for the next frame when a property or group of properties is changed.\n     *\n     * @example\n     * See the examples for the on listener\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties. Here the oldvalue is last value of the last frame\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    next (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed at the tick of next animation frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'NextFrame',\n                fn\n            });\n\n        // @todo check support for this from the graph side\n        if (instantCall) {\n            // Bar current frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('currentFrame').resetNodeValue(...props);\n        }\n\n        return unsub;\n    }\n\n    /**\n     * Lock queues the request of property change and releases the change when unlock is called. This is helpful when\n     * multiple property is getting called and the model listeners are to be fired once at the end of update.\n     *\n     * @return {Model} instance of the model\n     */\n    lock () {\n        this._lockFlag = true;\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * Unlock unleashes the change done after the lock was called.\n\n     * @return {Model} instance of the model\n     */\n    unlock () {\n        this._lockFlag = false;\n        this.setProp(...this._reqQ);\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * This acts as getter and setter. If the function is called by passing only one argument, it retrieve the value\n     * associated with the property. If the same function is called using two parameters, first one being the property\n     * and second one being the value, then the value is set for the property and the handlers are called (if any)\n     * which got registered using the on function\n     *\n     * Getter\n     * @param {string} prop property path whose value to be retrieved\n     * @return {Object} value of the property at the time of call\n     *\n     * Setter\n     * @param {string} property property path whose value to be ser\n     * @return {Model} instance of the model\n     */\n    prop (...params) {\n        let prop,\n            val,\n            len;\n\n        switch (len = params.length) {\n        case 1:\n            prop = params[0];\n            break;\n\n        case 2:\n            prop = params[0];\n            val = params[1];\n            break;\n\n        default:\n            return this;\n        }\n\n        if (len === 2) {\n            this._lockFlag ? this._reqQ.push([prop, val]) : this.setProp([prop, val]);\n            return this;\n        }\n\n        return this._graph.getNodeValue(prop);\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    setProp (...props) {\n        // Filter out the calculated variables, so that it cant be changed from outside\n        // @todo if a node is not leafValue, and change is called, ignore it too\n        // props = props.filter(prop => !(VirtualObj.walkTill(prop[0].split('.'), this._vObj).leafValue()\n        //     instanceof CalculatedVar));\n\n        if (props.length === 0) {\n            return this;\n        }\n\n        this._graph.update(...props.map(prop => [this._graph.getNodeFromQualifiedName(prop[0]), prop[1]]));\n        return this;\n    }\n\n    /**\n     * Retrieves the graph representation of the object\n     * @return {Graph} instance of the graph associated to the model\n     */\n    graph () {\n        return this._graph;\n    }\n\n    /**\n     * Get serialized data from the model\n     *\n     * @return {Object} Serialized data\n     */\n    serialize () {\n        return this._graph.root.seed;\n    }\n}\n\nexport default Model;\n","import Model from './model';\n\nexport default Model;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar _containerManager = require('./container-manager');\n\nvar _containerManager2 = _interopRequireDefault(_containerManager);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    M = slLib.win.Math,\n    max = M.max,\n    round = M.round,\n    BLANK = '',\n    htmlSplCharSpace = { ' ': '&nbsp;' },\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\n/*\n * Create new instance of SmartLabelManager.\n *\n * SmartLabelManager controls the lifetime of the execution space where the text's metrics will be calculated.\n * This takes a string for a given style and returns the height, width.\n * If a bound box is defined it wraps the text and returns the wrapped height and width.\n * It allows to append ellipsis at the end if the text is truncated.\n *\n * @param {String | Number} id - Id of the instance. If the same id is passed, it disposes the old instance and\n *                              save the new one;\n * @param {String | HTMLElement} container - The id or the instance of the container where the intermediate dom\n *                              elements are to be attached. If not passed, it appends in div\n *\n * @param {Boolean} useEllipses - This decides if a ellipses to be appended if the text is truncated.\n * @param {Object} options - Control options\n *                          {\n *                              maxCacheLimit: No of letter to be cached. Default: 500.\n *                          }\n * @constructor\n */\nfunction SmartLabelManager(id, container, useEllipses, options) {\n    var wrapper,\n        prop,\n        max,\n        prevInstance,\n        isBrowserLess = false,\n        store = SmartLabelManager.store;\n\n    if (typeof id === 'undefined' || typeof id === 'object') {\n        return;\n    }\n\n    if (prevInstance = store[id]) {\n        prevInstance.dispose();\n    }\n\n    store[id] = this;\n    options = options || {};\n    options.maxCacheLimit = isFinite(max = options.maxCacheLimit) ? max : slLib.maxDefaultCacheLimit;\n\n    if (typeof container === 'string') {\n        container = doc.getElementById(container);\n    }\n\n    wrapper = slLib.createContainer(container);\n    wrapper.innerHTML = slLib.testStrAvg;\n\n    if (documentSupport.isHeadLess || !documentSupport.isIE && !wrapper.offsetHeight && !wrapper.offsetWidth) {\n        isBrowserLess = true;\n    }\n\n    wrapper.innerHTML = '';\n    for (prop in slLib.parentContainerStyle) {\n        wrapper.style[prop] = slLib.parentContainerStyle[prop];\n    }\n\n    this.id = id;\n    this.parentContainer = wrapper;\n\n    this._containerManager = new _containerManager2['default'](wrapper, isBrowserLess, 10);\n    this._showNoEllipses = !useEllipses;\n    this._init = true;\n    this.style = {};\n    this.options = options;\n\n    this.setStyle();\n}\n\n/*\n * getSmartText returns the text separated by <br/> whenever a break is necessary. This is to recgonize one\n * generalized format independent of the implementation (canvas based solution, svg based solution). This method\n * converts the output of getSmartText().text to array of lines if the text is wrapped. It sets a named property\n * `lines` on the object passed as parameter.\n *\n * @param {Object} smartlabel - the object returned by getSmartText based on which line arr which to be formed.\n *\n * @return {Object} - The same object which was passed in the arguments. Also a named property `lines` is set.\n */\nSmartLabelManager.textToLines = function (smartlabel) {\n    smartlabel = smartlabel || {};\n\n    if (!smartlabel.text) {\n        smartlabel.text = '';\n    } else if (typeof smartlabel.text !== 'string') {\n        smartlabel.text = smartlabel.text.toString();\n    }\n\n    smartlabel.lines = smartlabel.text.split(/\\n|<br\\s*?\\/?>/ig);\n    return smartlabel;\n};\n\n// Saves all the instance created so far\nSmartLabelManager.store = {};\n\n// Calculates space taken by a character with an approximation value which is calculated by repeating the\n// character by string length times.\nSmartLabelManager.prototype._calCharDimWithCache = function (text, calculateDifference, length) {\n    if (!this._init) {\n        return false;\n    }\n\n    var size,\n        csArr,\n        tw,\n        twi,\n        cachedStyle,\n        asymmetricDifference,\n        maxAdvancedCacheLimit = this.options.maxCacheLimit,\n        container = this._container,\n        style = this.style || {},\n        cache = this._advancedCache || (this._advancedCache = {}),\n        advancedCacheKey = this._advancedCacheKey || (this._advancedCacheKey = []),\n        cacheName = text + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK),\n        cacheInitName = text + 'init' + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK);\n\n    htmlSplCharSpace[text] && (text = htmlSplCharSpace[text]);\n\n    if (!calculateDifference) {\n        asymmetricDifference = 0;\n    } else {\n        if ((asymmetricDifference = cache[cacheInitName]) === undefined) {\n            container.innerHTML = text.repeat ? text.repeat(length) : Array(length + 1).join(text); // jshint ignore:line\n            tw = container.offsetWidth;\n\n            container.innerHTML = text;\n            twi = container.offsetWidth;\n\n            asymmetricDifference = cache[cacheInitName] = (tw - length * twi) / (length + 1);\n            advancedCacheKey.push(cacheInitName);\n            if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n                delete cache[advancedCacheKey.shift()];\n            }\n        }\n    }\n\n    if (cachedStyle = cache[cacheName]) {\n        csArr = cachedStyle.split(',');\n        return {\n            width: parseFloat(csArr[0], 10),\n            height: parseFloat(csArr[1], 10)\n        };\n    }\n\n    container.innerHTML = text;\n\n    size = {\n        height: container.offsetHeight,\n        width: container.offsetWidth + asymmetricDifference\n    };\n\n    cache[cacheName] = size.width + ',' + size.height;\n    advancedCacheKey.push(cacheName);\n    if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n        delete cache[advancedCacheKey.shift()];\n    }\n\n    return size;\n};\n\n// Provide function to calculate the height and width based on the environment and available support from dom.\nSmartLabelManager.prototype._getWidthFn = function () {\n    var contObj = this._containerObj,\n        container = this._container,\n        svgText = contObj.svgText;\n\n    if (svgText) {\n        return function (str) {\n            var bbox, width;\n\n            svgText.textContent = str;\n            bbox = svgText.getBBox();\n            width = bbox.width - SVG_BBOX_CORRECTION;\n            if (width < 1) {\n                width = bbox.width;\n            }\n\n            return width;\n        };\n    } else {\n        return function (str) {\n            container.innerHTML = str;\n            return container.offsetWidth;\n        };\n    }\n};\n\n/*\n * Sets the style based on which the text's metrics to be calculated.\n *\n * @param {Object} style - The style object which affects the text size\n *                      {\n *                          fontSize / 'font-size' : MUST BE FOLLOWED BY PX (10px, 11px)\n *                          fontFamily / 'font-family'\n *                          fontWeight / 'font-weight'\n *                          fontStyle / 'font-style'\n *                      }\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.setStyle = function (style) {\n    if (!this._init) {\n        return this;\n    }\n\n    var sCont;\n\n    if (style === this.style && !this._styleNotSet) {\n        return;\n    }\n\n    if (!style) {\n        style = this.style;\n    }\n\n    slLib.setLineHeight(style);\n    this.style = style;\n\n    this._containerObj = sCont = this._containerManager.get(style);\n\n    if (this._containerObj) {\n        this._container = sCont.node;\n        this._context = sCont.context;\n        this._cache = sCont.charCache;\n        this._lineHeight = sCont.lineHeight;\n        this._styleNotSet = false;\n    } else {\n        this._styleNotSet = true;\n    }\n\n    return this;\n};\n\n/*\n * Decides whether ellipses to be shown if the node is truncated\n *\n * @param {Boolean} useEllipses - decides if a ellipses to be appended if the text is truncated. Default: false\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.useEllipsesOnOverflow = function (useEllipses) {\n    if (!this._init) {\n        return this;\n    }\n    this._showNoEllipses = !useEllipses;\n    return this;\n};\n\n/*\n * Get wrapped or truncated text if a bound box is defined around it. The result text would be separated by <br/>\n * if wrapped\n *\n * @param {String} text - the subject text\n * @param {Number} maxWidth - width in px of the the bound box\n * @param {Number} maxHeight - height in px of the the bound box\n * @param {Boolean} noWrap - whether the text to be wrapped. Default false.\n *\n * @return {Object} - The metrics of the text bounded by the box\n *                  {\n *                      height : height of the wrapped text\n *                      width : width of the wrapped text\n *                      isTruncated : whether the text is truncated\n *                      maxHeight : Maximum height given\n *                      maxWidth : Maximum width given\n *                      oriText : Original text sent\n *                      oriTextHeight : Original text height\n *                      oriTextWidth : Original text width\n *                      text : SMART TEXT\n *                  }\n */\nSmartLabelManager.prototype.getSmartText = function (text, maxWidth, maxHeight, noWrap) {\n    if (!this._init) {\n        return false;\n    }\n\n    if (text === undefined || text === null) {\n        text = '';\n    } else if (typeof text !== 'string') {\n        text = text.toString();\n    }\n\n    var len,\n        trimStr,\n        tempArr,\n        tmpText,\n        maxWidthWithEll,\n        toolText,\n        oriWidth,\n        oriHeight,\n        newCharIndex,\n        nearestChar,\n        tempChar,\n        getWidth,\n        initialLeft,\n        initialTop,\n        getOriSizeImproveObj,\n        spanArr,\n        x,\n        y,\n        minWidth,\n        elem,\n        chr,\n        elemRightMostPoint,\n        elemLowestPoint,\n        lastBR,\n        removeFromIndex,\n        removeFromIndexForEllipses,\n        hasHTMLTag = false,\n        maxStrWidth = 0,\n        lastDash = -1,\n        lastSpace = -1,\n        lastIndexBroken = -1,\n        strWidth = 0,\n        strHeight = 0,\n        oriTextArr = [],\n        i = 0,\n        ellipsesStr = this._showNoEllipses ? '' : '...',\n        lineHeight = this._lineHeight,\n        context = this._context,\n        container = this._container,\n        sCont = this._containerObj,\n        ellipsesWidth = sCont.ellipsesWidth,\n        dotWidth = sCont.dotWidth,\n        characterArr = [],\n        dashIndex = -1,\n        spaceIndex = -1,\n        lastLineBreak = -1,\n        fastTrim = function fastTrim(str) {\n        str = str.replace(/^\\s\\s*/, '');\n        var ws = /\\s/,\n            i = str.length;\n        while (ws.test(str.charAt(i -= 1))) {/* jshint noempty:false */}\n        return str.slice(0, i + 1);\n    },\n        smartLabel = {\n        text: text,\n        maxWidth: maxWidth,\n        maxHeight: maxHeight,\n        width: null,\n        height: null,\n        oriTextWidth: null,\n        oriTextHeight: null,\n        oriText: text,\n        isTruncated: false\n    };\n\n    getWidth = this._getWidthFn();\n\n    // In some browsers, offsetheight of a single-line text is getting little (1 px) heigher value of the\n    // lineheight. As a result, smartLabel is unable to return single-line text.\n    // To fix this, increase the maxHeight a little amount. Hence maxHeight =  lineHeight * 1.2\n    if (maxHeight === lineHeight) {\n        maxHeight *= 1.2;\n    }\n\n    if (container) {\n        if (!documentSupport.isBrowserLess) {\n            hasHTMLTag = slLib.xmlTagRegEx.test(text);\n            if (!hasHTMLTag) {\n                // Due to support of <,> for xml we convert &lt;, &gt; to <,> respectively so to get the correct\n                // width it is required to convert the same before calculation for the new improve version of the\n                // get text width.\n                tmpText = text.replace(slLib.ltgtRegex, function (match) {\n                    return match === '&lt;' ? '<' : '>';\n                });\n                getOriSizeImproveObj = this.getOriSize(tmpText, true);\n\n                smartLabel.oriTextWidth = oriWidth = getOriSizeImproveObj.width;\n                smartLabel.oriTextHeight = oriHeight = getOriSizeImproveObj.height;\n            } else {\n                container.innerHTML = text;\n                smartLabel.oriTextWidth = oriWidth = container.offsetWidth;\n                smartLabel.oriTextHeight = oriHeight = container.offsetHeight;\n            }\n\n            if (oriHeight <= maxHeight && oriWidth <= maxWidth) {\n                smartLabel.width = smartLabel.oriTextWidth = oriWidth;\n                smartLabel.height = smartLabel.oriTextHeight = oriHeight;\n                return smartLabel;\n            }\n\n            if (lineHeight > maxHeight) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = 0;\n                smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            }\n        }\n\n        // Calculate width with ellipses\n        text = fastTrim(text).replace(/(\\s+)/g, ' ');\n        maxWidthWithEll = this._showNoEllipses ? maxWidth : maxWidth - ellipsesWidth;\n\n        if (!hasHTMLTag) {\n            oriTextArr = text.split('');\n            len = oriTextArr.length;\n            trimStr = '', tempArr = [];\n            tempChar = oriTextArr[0];\n\n            if (this._cache[tempChar]) {\n                minWidth = this._cache[tempChar].width;\n            } else {\n                minWidth = getWidth(tempChar);\n                this._cache[tempChar] = { width: minWidth };\n            }\n\n            if (maxWidthWithEll > minWidth) {\n                tempArr = text.substr(0, slLib.getNearestBreakIndex(text, maxWidthWithEll, this)).split('');\n                i = tempArr.length;\n            } else if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            } else if (ellipsesStr) {\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            strWidth = getWidth(tempArr.join(''));\n            strHeight = this._lineHeight;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                            smartLabel.tooltext = smartLabel.oriText;\n                            smartLabel.width = getWidth(smartLabel.text);\n                            smartLabel.height = this._lineHeight;\n                            return smartLabel;\n                        }\n                    }\n                }\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = strWidth;\n                smartLabel.height = this._lineHeight;\n                return smartLabel;\n            } else {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (tempChar === ' ' && !context) {\n                        tempChar = '&nbsp;';\n                    }\n\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            /** @todo use regular expressions for better performance. */\n                            lastSpace = text.substr(0, tempArr.length).lastIndexOf(' ');\n                            lastDash = text.substr(0, tempArr.length).lastIndexOf('-');\n                            if (lastSpace > lastIndexBroken) {\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                tempArr.splice(lastSpace, 1, '<br/>');\n                                lastIndexBroken = lastSpace;\n                                newCharIndex = lastSpace + 1;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === tempArr.length - 1) {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '<br/>-');\n                                } else {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '-<br/>');\n                                }\n                                lastIndexBroken = lastDash;\n                                newCharIndex = lastDash + 1;\n                            } else {\n                                tempArr.splice(tempArr.length - 1, 1, '<br/>' + oriTextArr[i]);\n                                lastLineBreak = tempArr.length - 2;\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastLineBreak + 1).join(''));\n                                lastIndexBroken = lastLineBreak;\n                                newCharIndex = i;\n                            }\n                            strHeight += this._lineHeight;\n                            if (strHeight > maxHeight) {\n                                smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                                smartLabel.tooltext = smartLabel.oriText;\n                                // The max width among all the lines will be the width of the string.\n                                smartLabel.width = maxWidth;\n                                smartLabel.height = strHeight - this._lineHeight;\n                                return smartLabel;\n                            } else {\n                                maxStrWidth = max(maxStrWidth, strWidth);\n                                trimStr = null;\n                                nearestChar = slLib.getNearestBreakIndex(text.substr(newCharIndex), maxWidthWithEll, this);\n                                strWidth = getWidth(text.substr(newCharIndex, nearestChar || 1));\n                                if (tempArr.length < newCharIndex + nearestChar) {\n                                    tempArr = tempArr.concat(text.substr(tempArr.length, newCharIndex + nearestChar - tempArr.length).split(''));\n                                    i = tempArr.length - 1;\n                                }\n                            }\n                        }\n                    }\n                }\n\n                maxStrWidth = max(maxStrWidth, strWidth);\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = maxStrWidth;\n                smartLabel.height = strHeight;\n                return smartLabel;\n            }\n        } else {\n            toolText = text.replace(slLib.spanAdditionRegx, '$2');\n            text = text.replace(slLib.spanAdditionRegx, slLib.spanAdditionReplacer);\n            text = text.replace(/(<br\\s*\\/*\\>)/g, '<span class=\"' + [slLib.classNameWithTag, ' ', slLib.classNameWithTagBR].join('') + '\">$1</span>');\n\n            container.innerHTML = text;\n\n            spanArr = container[documentSupport.childRetriverFn](documentSupport.childRetriverString);\n\n            for (x = 0, y = spanArr.length; x < y; x += 1) {\n                elem = spanArr[x];\n                //chech whether this span is temporary inserted span from it's class\n                if (documentSupport.noClassTesting || slLib.classNameReg.test(elem.className)) {\n                    chr = elem.innerHTML;\n                    if (chr !== '') {\n                        if (chr === ' ') {\n                            spaceIndex = characterArr.length;\n                        } else if (chr === '-') {\n                            dashIndex = characterArr.length;\n                        }\n\n                        characterArr.push({\n                            spaceIdx: spaceIndex,\n                            dashIdx: dashIndex,\n                            elem: elem\n                        });\n                        oriTextArr.push(chr);\n                    }\n                }\n            }\n\n            i = 0;\n            len = characterArr.length;\n            minWidth = characterArr[0].elem.offsetWidth;\n\n            if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n\n                return smartLabel;\n            } else if (minWidth > maxWidthWithEll && !this._showNoEllipses) {\n\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            initialLeft = characterArr[0].elem.offsetLeft;\n            initialTop = characterArr[0].elem.offsetTop;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n                        if (container.offsetWidth > maxWidth) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            } else {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemLowestPoint = elem.offsetHeight + (elem.offsetTop - initialTop);\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    lastBR = null;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n\n                        if (elemRightMostPoint > maxWidth) {\n                            lastSpace = characterArr[i].spaceIdx;\n                            lastDash = characterArr[i].dashIdx;\n                            if (lastSpace > lastIndexBroken) {\n                                characterArr[lastSpace].elem.innerHTML = '<br/>';\n                                lastIndexBroken = lastSpace;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === i) {\n                                    // in case the overflowing character itself is the '-'\n                                    characterArr[lastDash].elem.innerHTML = '<br/>-';\n                                } else {\n                                    characterArr[lastDash].elem.innerHTML = '-<br/>';\n                                }\n                                lastIndexBroken = lastDash;\n                            } else {\n                                elem.parentNode.insertBefore(lastBR = doc.createElement('br'), elem);\n                            }\n\n                            //check whether this break made current element outside the area height\n                            if (elem.offsetHeight + elem.offsetTop > maxHeight) {\n                                //remove the lastly inserted line break\n                                if (lastBR) {\n                                    lastBR.parentNode.removeChild(lastBR);\n                                } else if (lastIndexBroken === lastDash) {\n                                    characterArr[lastDash].elem.innerHTML = '-';\n                                } else {\n                                    characterArr[lastSpace].elem.innerHTML = ' ';\n                                }\n                                removeFromIndex = i;\n                                //break the looping condition\n                                i = len;\n                            } else {\n                                removeFromIndexForEllipses = null;\n                            }\n                        }\n                    } else {\n                        //check whether this break made current element outside the area height\n                        if (elemLowestPoint > maxHeight) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            }\n\n            if (removeFromIndex < len) {\n                //set the trancated property of the smartlabel\n                smartLabel.isTruncated = true;\n\n                /** @todo is this really needed? */\n                removeFromIndexForEllipses = removeFromIndexForEllipses ? removeFromIndexForEllipses : removeFromIndex;\n\n                for (i = len - 1; i >= removeFromIndexForEllipses; i -= 1) {\n                    elem = characterArr[i].elem;\n                    //chech whether this span is temporary inserted span from it's class\n                    elem.parentNode.removeChild(elem);\n                }\n\n                for (; i >= 0; i -= 1) {\n                    elem = characterArr[i].elem;\n                    if (slLib.classNameBrReg.test(elem.className)) {\n                        //chech whether this span is temporary inserted span from it's class\n                        elem.parentNode.removeChild(elem);\n                    } else {\n                        i = 0;\n                    }\n                }\n            }\n\n            //get the smart text\n            smartLabel.text = container.innerHTML.replace(slLib.spanRemovalRegx, '$1').replace(/\\&amp\\;/g, '&');\n            if (smartLabel.isTruncated) {\n                smartLabel.text += ellipsesStr;\n                smartLabel.tooltext = toolText;\n            }\n        }\n\n        smartLabel.height = container.offsetHeight;\n        smartLabel.width = container.offsetWidth;\n\n        return smartLabel;\n    } else {\n        smartLabel.error = new Error('Body Tag Missing!');\n        return smartLabel;\n    }\n};\n\n/*\n * Get the height and width of a text.\n *\n * @param {String} text - Text whose metrics to be measured\n * @param {Boolean} Optional detailedCalculationFlag - this flag if set it calculates per letter position\n *                          information and returns it. Ideally you dont need it unless you want to post process the\n *                          string. And its an EXPENSIVE OPERATION.\n *\n * @return {Object} - If detailedCalculationFlag is set to true the returned object would be\n *                  {\n *                      height: height of the text\n *                      width: width of the text\n *                      detailObj: detail calculation of letters in the format {lettername: width}\n *                  }\n *                  If detailedCalculationFlag is set to false the returned object wont have the detailObj prop.\n */\nSmartLabelManager.prototype.getOriSize = function (text, detailedCalculationFlag) {\n    if (!this._init) {\n        return false;\n    }\n\n    var textArr,\n        letter,\n        lSize,\n        i,\n        l,\n        cumulativeSize = 0,\n        height = 0,\n        indiSizeStore = {};\n\n    if (!detailedCalculationFlag) {\n        return this._calCharDimWithCache(text);\n    }\n\n    // Calculate the width of every letter with an approximation\n    textArr = text.split('');\n    for (i = 0, l = textArr.length; i < l; i++) {\n        letter = textArr[i];\n        lSize = this._calCharDimWithCache(letter, true, textArr.length);\n        height = max(height, lSize.height);\n        cumulativeSize += lSize.width;\n        indiSizeStore[letter] = lSize.width;\n    }\n\n    return {\n        width: round(cumulativeSize),\n        height: height,\n        detailObj: indiSizeStore\n    };\n};\n\n/*\n * Dispose the container and object allocated by the smartlabel\n */\nSmartLabelManager.prototype.dispose = function () {\n    if (!this._init) {\n        return this;\n    }\n\n    this._containerManager && this._containerManager.dispose && this._containerManager.dispose();\n\n    delete this._container;\n    delete this._context;\n    delete this._cache;\n    delete this._containerManager;\n    delete this._containerObj;\n    delete this.id;\n    delete this.style;\n    delete this.parentContainer;\n    delete this._showNoEllipses;\n\n    return this;\n};\n\nexports['default'] = SmartLabelManager;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\nvar lib = {\n\tinit: function init(win) {\n\t\tvar doc = win.document,\n\t\t    nav = win.navigator,\n\t\t    userAgent = nav.userAgent,\n\t\t    DIV = 'DIV',\n\t\t    ceil = Math.ceil,\n\t\t    floor = Math.floor,\n\t\t    containerInstanceCount = 0,\n\t\t    clsNameSpace = 'fusioncharts-smartlabel-',\n\t\t    containerClass = clsNameSpace + 'container',\n\t\t    classNameWithTag = clsNameSpace + 'tag',\n\t\t    classNameWithTagBR = clsNameSpace + 'br';\n\n\t\tlib = {\n\t\t\twin: win,\n\n\t\t\tcontainerClass: containerClass,\n\n\t\t\tclassNameWithTag: classNameWithTag,\n\n\t\t\tclassNameWithTagBR: classNameWithTagBR,\n\n\t\t\tmaxDefaultCacheLimit: 500,\n\n\t\t\tclassNameReg: new RegExp('\\b' + classNameWithTag + '\\b'),\n\n\t\t\tclassNameBrReg: new RegExp('\\b' + classNameWithTagBR + '\\b'),\n\n\t\t\tspanAdditionRegx: /(<[^<\\>]+?\\>)|(&(?:[a-z]+|#[0-9]+);|.)/ig,\n\n\t\t\tspanAdditionReplacer: '$1<span class=\"' + classNameWithTag + '\">$2</span>',\n\n\t\t\tspanRemovalRegx: new RegExp('\\\\<span[^\\\\>]+?' + classNameWithTag + '[^\\\\>]{0,}\\\\>(.*?)\\\\<\\\\/span\\\\>', 'ig'),\n\n\t\t\txmlTagRegEx: new RegExp('<[^>][^<]*[^>]+>', 'i'),\n\n\t\t\tltgtRegex: /&lt;|&gt;/g,\n\n\t\t\tbrReplaceRegex: /<br\\/>/ig,\n\n\t\t\ttestStrAvg: 'WgI',\n\n\t\t\t// This style is applied over the parent smartlabel container. The container is kept hidden from the viewport\n\t\t\tparentContainerStyle: {\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: '-9999em',\n\t\t\t\twhiteSpace: 'nowrap',\n\t\t\t\tpadding: '0px',\n\t\t\t\twidth: '1px',\n\t\t\t\theight: '1px',\n\t\t\t\toverflow: 'hidden'\n\t\t\t},\n\n\t\t\t// All the style which might affect the text metrics\n\t\t\tsupportedStyle: {\n\t\t\t\tfont: 'font',\n\t\t\t\tfontFamily: 'font-family',\n\t\t\t\t'font-family': 'font-family',\n\t\t\t\tfontWeight: 'font-weight',\n\t\t\t\t'font-weight': 'font-weight',\n\t\t\t\tfontSize: 'font-size',\n\t\t\t\t'font-size': 'font-size',\n\t\t\t\tlineHeight: 'line-height',\n\t\t\t\t'line-height': 'line-height',\n\t\t\t\tfontStyle: 'font-style',\n\t\t\t\t'font-style': 'font-style'\n\t\t\t},\n\n\t\t\t// Get the support list for html the document where the text calcution is to be done.\n\t\t\tgetDocumentSupport: function getDocumentSupport() {\n\t\t\t\tvar childRetriverFn, childRetriverString, noClassTesting;\n\n\t\t\t\tif (doc.getElementsByClassName) {\n\t\t\t\t\tchildRetriverFn = 'getElementsByClassName';\n\t\t\t\t\tchildRetriverString = classNameWithTag;\n\t\t\t\t\tnoClassTesting = true;\n\t\t\t\t} else {\n\t\t\t\t\tchildRetriverFn = 'getElementsByTagName';\n\t\t\t\t\tchildRetriverString = 'span';\n\t\t\t\t\tnoClassTesting = false;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tisIE: /msie/i.test(userAgent) && !win.opera,\n\t\t\t\t\thasSVG: Boolean(win.SVGAngle || doc.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1')),\n\t\t\t\t\tisHeadLess: new RegExp(' HtmlUnit').test(userAgent),\n\t\t\t\t\tisWebKit: new RegExp(' AppleWebKit/').test(userAgent),\n\t\t\t\t\tchildRetriverFn: childRetriverFn,\n\t\t\t\t\tchildRetriverString: childRetriverString,\n\t\t\t\t\tnoClassTesting: noClassTesting\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t/*\n    * Create a html div element and attach it with a parent. All the subsequent operations are performed\n    * by upding this dom tree only.\n    *\n    * @param {HTMLElement} - The html element where the newly created div is to be attached. If not passed,\n    *                      the new div is appended on the body.\n    */\n\t\t\tcreateContainer: function createContainer(containerParent) {\n\t\t\t\tvar body, container;\n\n\t\t\t\tif (containerParent && (containerParent.offsetWidth || containerParent.offsetHeight)) {\n\t\t\t\t\tif (containerParent.appendChild) {\n\t\t\t\t\t\tcontainerParent.appendChild(container = doc.createElement(DIV));\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbody = doc.getElementsByTagName('body')[0];\n\n\t\t\t\t\tif (body && body.appendChild) {\n\t\t\t\t\t\tcontainer = doc.createElement(DIV);\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\tcontainerInstanceCount += 1;\n\t\t\t\t\t\tbody.appendChild(container);\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// Finds a approximate position where the text is to be broken\n\t\t\tgetNearestBreakIndex: function getNearestBreakIndex(text, maxWidth, sl) {\n\t\t\t\tif (!text || !text.length) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\tvar difference,\n\t\t\t\t    getWidth = sl._getWidthFn(),\n\t\t\t\t    charLen = 0,\n\t\t\t\t    increment = 0,\n\t\t\t\t    oriWidth = getWidth(text),\n\t\t\t\t    avgWidth = oriWidth / text.length;\n\n\t\t\t\tdifference = maxWidth;\n\t\t\t\tcharLen = ceil(maxWidth / avgWidth);\n\n\t\t\t\tif (oriWidth < maxWidth) {\n\t\t\t\t\treturn text.length - 1;\n\t\t\t\t}\n\n\t\t\t\tif (charLen > text.length) {\n\t\t\t\t\tdifference = maxWidth - oriWidth;\n\t\t\t\t\tcharLen = text.length;\n\t\t\t\t}\n\n\t\t\t\twhile (difference > 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\twhile (difference < 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn charLen;\n\t\t\t},\n\n\t\t\t/*\n    * Determine lineheight of a text for a given style. It adds propery lineHeight to the style passed\n    *\n    * @param {Object} - The style based on which the text's metric needs to be calculated. The calculation happens\n    *                  based on fontSize property, if its not present a default font size is assumed.\n    *\n    * @return {Object} - The style that was passed with lineHeight as a named propery set on the object.\n    */\n\t\t\tsetLineHeight: function setLineHeight(styleObj) {\n\t\t\t\tvar fSize = styleObj.fontSize = styleObj.fontSize || '12px';\n\t\t\t\tstyleObj.lineHeight = styleObj.lineHeight || styleObj['line-height'] || parseInt(fSize, 10) * 1.2 + 'px';\n\t\t\t\treturn styleObj;\n\t\t\t}\n\t\t};\n\n\t\treturn lib;\n\t}\n};\n\nexports['default'] = lib;\nmodule.exports = exports['default'];","const Muze = require('./muze');\n\nmodule.exports = Muze.default ? Muze.default : Muze;\n","'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\nfunction ContainerManager(parentContainer, isBrowserLess, maxContainers) {\n    var svg;\n\n    maxContainers = maxContainers > 5 ? maxContainers : 5;\n    maxContainers = maxContainers < 20 ? maxContainers : 20;\n\n    this.maxContainers = maxContainers;\n    this.first = null;\n    this.last = null;\n    this.containers = {};\n    this.length = 0;\n    this.rootNode = parentContainer;\n\n    if (isBrowserLess) {\n        svg = doc.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'xlink', 'http://www.w3.org/1999/xlink');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'height', '0');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'width', '0');\n        this.svgRoot = svg;\n        this.rootNode.appendChild(svg);\n    }\n}\n\nContainerManager.prototype.get = function (style) {\n    var diff,\n        key,\n        containerObj,\n        containers = this.containers,\n        len = this.length,\n        max = this.maxContainers,\n        keyStr = '';\n\n    for (key in slLib.supportedStyle) {\n        if (style[key] !== undefined) {\n            keyStr += slLib.supportedStyle[key] + ':' + style[key] + ';';\n        }\n    }\n\n    if (!keyStr) {\n        return false;\n    }\n\n    if (containerObj = containers[keyStr]) {\n        if (this.first !== containerObj) {\n            containerObj.prev && (containerObj.prev.next = containerObj.next);\n            containerObj.next && (containerObj.next.prev = containerObj.prev);\n            containerObj.next = this.first;\n            containerObj.next.prev = containerObj;\n            this.last === containerObj && (this.last = containerObj.prev);\n            containerObj.prev = null;\n            this.first = containerObj;\n        }\n    } else {\n        if (len >= max) {\n            diff = len - max + 1;\n            // +1 is to remove an extra entry to make space for the new container to be added.\n            while (diff--) {\n                this.removeContainer(this.last);\n            }\n        }\n        containerObj = this.addContainer(keyStr);\n    }\n\n    return containerObj;\n};\n\nContainerManager.prototype.addContainer = function (keyStr) {\n    var node, container;\n\n    this.containers[keyStr] = container = {\n        next: null,\n        prev: null,\n        node: null,\n        ellipsesWidth: 0,\n        lineHeight: 0,\n        dotWidth: 0,\n        avgCharWidth: 4,\n        keyStr: keyStr,\n        charCache: {}\n    };\n\n    // Since the container objects are arranged from most recent to least recent order, we need to add the new\n    // object at the beginning of the list.\n    container.next = this.first;\n    container.next && (container.next.prev = container);\n    this.first = container;\n    if (!this.last) {\n        this.last = container;\n    }\n    this.length += 1;\n\n    node = container.node = doc.createElement('div');\n    this.rootNode.appendChild(node);\n\n    if (documentSupport.isIE && !documentSupport.hasSVG) {\n        node.style.setAttribute('cssText', keyStr);\n    } else {\n        node.setAttribute('style', keyStr);\n    }\n\n    node.setAttribute('aria-hidden', 'true');\n    node.setAttribute('role', 'presentation');\n    node.style.display = 'inline-block';\n\n    node.innerHTML = slLib.testStrAvg; // A test string.\n    container.lineHeight = node.offsetHeight;\n    container.avgCharWidth = node.offsetWidth / 3;\n\n    if (documentSupport.isBrowserLess) {\n        node = container.svgText = doc.createElementNS('http://www.w3.org/2000/svg', 'text');\n        node.setAttribute('style', keyStr);\n        this.svgRoot.appendChild(node);\n\n        node.textContent = slLib.testStrAvg; // A test string.\n        container.lineHeight = node.getBBox().height;\n        container.avgCharWidth = (node.getBBox().width - SVG_BBOX_CORRECTION) / 3;\n\n        node.textContent = '...';\n        container.ellipsesWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n        node.textContent = '.';\n        container.dotWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n    } else {\n        node.innerHTML = '...';\n        container.ellipsesWidth = node.offsetWidth;\n        node.innerHTML = '.';\n        container.dotWidth = node.offsetWidth;\n        node.innerHTML = '';\n    }\n\n    return container;\n};\n\nContainerManager.prototype.removeContainer = function (cObj) {\n    var keyStr = cObj.keyStr;\n\n    if (!keyStr || !this.length || !cObj) {\n        return;\n    }\n    this.length -= 1;\n\n    cObj.prev && (cObj.prev.next = cObj.next);\n    cObj.next && (cObj.next.prev = cObj.prev);\n    this.first === cObj && (this.first = cObj.next);\n    this.last === cObj && (this.last = cObj.prev);\n\n    cObj.node.parentNode.removeChild(cObj.node);\n\n    delete this.containers[keyStr];\n};\n\nContainerManager.prototype.dispose = function () {\n    var key,\n        containers = this.containers;\n\n    this.maxContainers = null;\n    for (key in containers) {\n        this.removeContainer(containers[key]);\n    }\n\n    this.rootNode.parentNode.removeChild(this.rootNode);\n\n    this.rootNode = null;\n    this.first = null;\n    this.last = null;\n};\n\nmodule.exports = ContainerManager;","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal(range) {\n  var index = map(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  scale.invertExtent = function(r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1, a, b, t,\n        hiIndex;\n    values.push(values[n] + this.step());\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo));\n    hiIndex = getClosestIndexOf(values, hi);\n    b = lo===hi ? a : Math.max(a, hiIndex - 1);\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    if (reverse) t = a, a = n - b, b = n - t; // map + swap\n    return (a > b) ? undefined : domain().slice(a, b+1);\n  };\n\n  scale.invert = function (r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1,\n        a,\n        t;\n\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo, 'left'));\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    return domain()[reverse ? n - a : a];\n  }\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band().paddingInner(1));\n}\n\nfunction getClosestIndexOf (arr, value, side) {\n  var low = 0,\n      arrLen = arr.length,\n      high = arrLen - 1,\n      highVal,\n      mid,\n      d1,\n      d2;\n\n  while (low < high) {\n      mid = Math.floor((low + high) / 2);\n      d1 = Math.abs(arr[mid] - value);\n      d2 = Math.abs(arr[mid + 1] - value);\n\n      if (d2 <= d1) {\n          low = mid + 1;\n      }\n      else {\n          high = mid;\n      }\n  }\n\n  if (!side) {\n      return high;\n  }\n\n  highVal = arr[high];\n  if (highVal === value) {\n      return high;\n  } else if (highVal > value) {\n      if (high === 0) { return high; }\n      return side === 'left'? high - 1 : high;\n  } else {\n      if (high === arr.length - 1) { return high; }\n      return side === 'left'? high : high + 1;\n  }\n}","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n","import {map} from \"./array\";\nimport {linearish} from \"./linear\";\nimport number from \"./number\";\n\nexport default function identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport constant from \"./constant\";\nimport nice from \"./nice\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport default function log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n","import constant from \"./constant\";\nimport {linearish} from \"./linear\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nexport default function pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nexport function sqrt() {\n  return pow().exponent(0.5);\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {linearish} from \"./linear\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute} from \"./duration\";\n\nvar hour = interval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","import {bisector, tickStep} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n","export default function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n}\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"./colors\";\n\nexport default colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n","import colors from \"./colors\";\n\nexport default colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n}\n","import colors from \"./colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","import {linearish} from \"./linear\";\n\nexport default function sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import colors from \"../colors\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","import colors from \"../colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","export const UNIT_GLOBAL_NAMESPACE = 'app.units';\nexport const UNIT_LOCAL_NAMESPACE = 'local.units';\nexport const LAYER_LOCAL_NAMESPACE = 'local.layers';\nexport const LAYER_GLOBAL_NAMESPACE = 'app.layers';\nexport const GROUP_GLOBAL_NAMESPACE = 'app.group';\nexport const GROUP_LOCAL_NAMESPACE = 'local.group';\nexport const CANVAS_LOCAL_NAMESPACE = 'local.canvas';\nexport const CANVAS_GLOBAL_NAMESPACE = 'app.canvas';\n\n","const ReservedFields = {\n    ROW_ID: '__id__'\n};\n\nexport default ReservedFields;\n","const CommonProps = {\n    ACTION_INF: 'actionInf',\n    ON_LAYER_DRAW: 'onLayerDraw',\n    MATRIX_CREATED: 'matrixCreated'\n};\n\nexport default CommonProps;\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return x;\n}\n","import {slice} from \"./array\";\nimport identity from \"./identity\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickTransform = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"))\n        .style('transform', tickTransform);\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.tickTransform = function(_) {\n    return arguments.length ? (tickTransform = _, axis) : tickTransform;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi) {\n          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport line from \"./line\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport line from \"./line\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n","export var slice = Array.prototype.slice;\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","export default function() {}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport offsetNone from \"./offset/none\";\nimport orderNone from \"./order/none\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function x(d) {\n  return d[0];\n}\n\nexport function y(d) {\n  return d[1];\n}\n","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n","import constant from \"./constant\";\nimport {x as pointX, y as pointY} from \"./point\";\nimport Diagram, {epsilon} from \"./Diagram\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n","/**\n * This class represents a selection applied on a data array.\n *\n * @class Selection\n */\nclass Selection {\n    /**\n     * Creates an instance of Selection.\n     * @param {Array<DataObject>} data Array of DataObjects.\n     * @memberof Selection\n     */\n    constructor () {\n        this._data = [];\n        // // map of id to data\n        this._idMap = {};\n        this._dataMap = {};\n        this._mode = '';\n        // data.forEach((item, idx) => {\n        //     const index = item.id || idx;\n        //     this._idMap[index] = item;\n        // });\n        // // array to store data in enter phase\n        this._enterdata = [];\n        // // array to store data in exit phase\n        this._exitdata = [];\n    }\n    /**\n     *  Gets the object bound to a class\n     *\n     * @return {Object} current data set bound to the class\n     * @memberof Selection\n     */\n    getObjects () {\n        return Object.values(this._idMap);\n    }\n\n    /**\n     * This method is used to supply seed data to a selection.\n     *\n     * @param {Array} newData Seed data to create the enter selection.\n     * @param {Functon | undefined } idGetter This function is used to uniqely identify a data entry.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    data (newData, idGetter) {\n        if (idGetter) {\n            this._data = [];\n            this._idGetter = idGetter;\n            const tempMap = {};\n\n            newData.forEach((...params) => {\n                const index = idGetter(...params);\n                tempMap[index] = params[0];\n            });\n            // check if any data items have been removed\n            const purgedIds = [];\n\n            Object.keys(this._idMap).forEach((id) => {\n                if (!tempMap[id]) {\n                    purgedIds.push(id);\n                }\n            });\n\n            Object.keys(tempMap).forEach((id) => {\n                if (!this._idMap[id]) {\n                    this._enterdata.push(tempMap[id]);\n                } else {\n                    this._idMap[id] = tempMap[id];\n                    this._data.push(tempMap[id]);\n                }\n            });\n            // move the purged items to exit selection\n            purgedIds.forEach((id) => {\n                const purged = this._idMap[id];\n                this._exitdata.push(purged);\n                // this._data = this._data.slice(id, 1);\n                delete this._idMap[id];\n            });\n            // this._data = this._data.slice(temp, this._data.length);\n\n            return this;\n        }\n        // no id getter supplied so use indices\n        if (newData.length > this._data.length) {\n            const startIdx = this._data.length;\n            for (let i = startIdx; i < newData.length; i += 1) {\n                this._enterdata.push(newData[i]);\n            }\n        } else {\n            // push to exit selection\n            const temp = newData.length;\n            for (let i = temp; i < this._data.length; i += 1) {\n                const purged = this._data[i];\n                delete this._idMap[purged.id];\n                this._exitdata.push(purged);\n            }\n            this._data = this._data.slice(temp, this._data.length);\n        }\n        return this;\n    }\n\n    /**\n     * Applies the supplied callback to each data element\n     * and returns a new selection.\n     *\n     * @param {Function} callback Callback to execute on each item.\n     * @return {Selection} New selection with data created using callback.\n     * @memberof EnterSelection\n     */\n    append (callback) {\n        this[`_${this._mode}data`].forEach((...params) => {\n            const data = params[0];\n            const id = this._idGetter ? this._idGetter(...params) : (data.id || params[1]);\n            this._idMap[id] = callback(...params);\n            this._dataMap[id] = data;\n        });\n        this._mode = '';\n        return this;\n    }\n\n    /**\n     * This method returns an enter selection that\n     * allows or update operations.\n     *\n     * @return {EnterSelection} Instance of enter selection.\n     * @memberof Selection\n     */\n    enter () {\n        this._mode = 'enter';\n        return this;\n        // return new EnterSelection(this._enterdata, this._idMap, this._idGetter);\n    }\n\n    /**\n     * This method is used to set key value pairs\n     * on data objects.\n     *\n     * @param {string} key Name of property.\n     * @param {any} value Value of property.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    attr (key, value) {\n        this._data.forEach(item => item.attr(key, value));\n        return this;\n    }\n\n    /**\n     * This method merges the data of one selection with another.\n     *\n     * @param {Selection} selection Instance of selection.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    merge (selection) {\n        selection._data.forEach((...params) => {\n            const id = this._idGetter ? this._idGetter(...params) : (params[0].id || params[1]);\n            this._idMap[id] = params[0];\n            this._data.push(params[0]);\n        });\n        // reset enter selection\n        this._enterdata = [];\n        return this;\n    }\n\n    /**\n     * Returns a selection with exit data.\n     *\n     * @return {Selection} Instance of selection.\n     * @memberof Selection\n     */\n    exit () {\n        this._mode = 'exit';\n        // const exitdata = this._exitdata;\n        // const exitSelection = new Selection(exitdata);\n        // this._exitdata = [];\n        return this;\n    }\n\n    each (fn) {\n        Object.keys(this._idMap).forEach((e, i) => {\n            fn(this._idMap[e], this._dataMap[e], i);\n        });\n        return this;\n    }\n\n    map (fn) {\n        Object.keys(this._idMap).forEach((...params) => {\n            const key = params[0];\n            this._idMap[key] = fn(this._idMap[key], ...params, this._dataMap[key]);\n        });\n        return this;\n    }\n\n    /**\n     * Executes the cleanup operation associated with data objets.\n     *\n     * @memberof Selection\n     */\n    remove () {\n        // do cleanup on DDO's\n        const data = this[`_${this._mode}data`];\n\n        data.forEach(item => item.remove());\n        if (this._mode === '') {\n            this.each(e => e.remove());\n        }\n        this[`_${this._mode}data`] = [];\n        this._mode = '';\n    }\n}\n\nexport default Selection;\n","/* global window, requestAnimationFrame, cancelAnimationFrame */\nimport { FieldType, DimensionSubtype, DateTimeFormatter, default as DataModel } from 'datamodel';\nimport {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom\n} from 'd3-axis';\nimport {\n    symbolCircle,\n    symbolCross,\n    symbolDiamond,\n    symbolSquare,\n    symbolStar,\n    symbolWye,\n    symbolTriangle,\n    symbol,\n    stack as d3Stack,\n    stackOffsetDiverging,\n    stackOrderNone,\n    stackOrderAscending,\n    stackOrderDescending,\n    stackOffsetNone,\n    stackOffsetExpand,\n    stackOffsetWiggle,\n    pie,\n    arc,\n    line,\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    area\n} from 'd3-shape';\nimport { scaleBand } from 'd3-scale';\nimport { nest } from 'd3-collection';\nimport {\n    interpolate,\n    interpolateRgb,\n    piecewise,\n    interpolateNumber,\n    interpolateHslLong\n} from 'd3-interpolate';\nimport {\n    easeCubic,\n    easeBounce,\n    easePoly,\n    easeBack,\n    easeCircle,\n    easeLinear,\n    easeElastic\n} from 'd3-ease';\nimport {\n   color,\n   rgb,\n   hsl\n} from 'd3-color';\nimport { voronoi } from 'd3-voronoi';\nimport Model from 'hyperdis';\nimport { dataSelect } from './DataSystem';\nimport * as STACK_CONFIG from './enums/stack-config';\nimport { DM_OPERATION_GROUP } from './enums';\n\nconst { InvalidAwareTypes } = DataModel;\nconst HTMLElement = window.HTMLElement;\n\nconst isSimpleObject = (obj) => {\n    let token;\n    if (typeof obj === 'object') {\n        if (obj === null) { return false; }\n        token = Object.prototype.toString.call(obj);\n        if (token === '[object Object]') {\n            return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n        }\n    }\n    return false;\n};\n\n/**\n * Returns unique id\n * @return {string} Unique id string\n */\nconst\n    getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Deep copies an object and returns a new object.\n * @param {Object} o Object to clone\n * @return {Object} New Object.\n */\nconst clone = (o) => {\n    const output = {};\n    let v;\n    for (const key in o) {\n        if ({}.hasOwnProperty.call(o, key)) {\n            v = o[key];\n            output[key] = isSimpleObject(v) ? clone(v) : v;\n        }\n    }\n    return output;\n};\n\n/**\n* Checks the existence of keys in an object\n* @param {Array} keys Set of keys which are to be checked\n* @param {Object} obj whose keys are checked from the set of keys provided\n* @return {Object} Error if the keys are absent, or the object itself\n*/\nconst checkExistence = (keys, obj) => {\n    const nonExistentKeys = [];\n    keys.forEach((key) => {\n        if (key in obj) {\n            return;\n        }\n        nonExistentKeys.push(key);\n    });\n    return nonExistentKeys;\n};\n\nconst sanitizeIP = {\n    typeObj: (keys, obj) => {\n        if (typeof obj !== 'object') {\n            return Error('Argument type object expected');\n        }\n\n        const nonExistentKeys = checkExistence(keys, obj);\n        if (nonExistentKeys.length) {\n            return Error(`Missing keys from parameter ${nonExistentKeys.join(', ')}`);\n        }\n        return obj;\n    },\n\n    /* istanbul ignore next */ htmlElem: (elem) => {\n        if (!(elem instanceof HTMLElement)) {\n            return Error('HTMLElement required');\n        }\n        return elem;\n    }\n};\n\n/**\n * Gets the maximum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Maximum value\n */\nconst getMax = (data, field) => Math.max(...data.map(d => d[field]));\n\n/**\n * Gets the minimum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Minimum value\n */\nconst getMin = (data, field) => Math.min(...data.map(d => d[field]));\n\n/**\n * Gets the domain from the data based on the field name and type of field\n * @param  {Array.<Object> | Array.<Array>} data       Data Array\n * @param  {Array.<string>} fields    Array of fields from where the domain will be calculated\n * @param {string} fieldType Type of field - nominal, quantitiative, temporal.\n * @return {Array} Usually contains a min and max value if field is quantitative or\n * an array of values if field type is nominal or ordinal\n */\nconst getDomainFromData = (data, fields, fieldType) => {\n    let domain;\n    const domArr = [];\n    data = data[0] instanceof Array ? data : [data];\n    switch (fieldType) {\n    case DimensionSubtype.CATEGORICAL:\n        domain = [].concat(...data.map(arr => arr.map(d => d[fields[0]]).filter(d => d !== undefined)));\n        break;\n    default:\n        for (let i = 0, len = data.length; i < len; i++) {\n            const arr = data[i];\n            const [field0, field1] = fields;\n            const arr0 = arr.filter(d => !isNaN(d[field0]));\n            const arr1 = arr.filter(d => !isNaN(d[field1]));\n            if (arr0.length || arr1.length) {\n                const firstMin = getMin(arr0, field0);\n                const secondMin = getMin(arr1, field1);\n                const firstMax = getMax(arr0, field0);\n                const secondMax = getMax(arr1, field1);\n                domArr.push([Math.min(firstMin, secondMin), Math.max(firstMax, secondMax)]);\n            }\n        }\n        domain = domArr.length ? [Math.min(...domArr.map(d => d[0])), Math.max(...domArr.map(d => d[1]))] : [];\n        break;\n    }\n    return domain;\n};\n\n/**\n * Union Domain values\n * @param {Array.<Array>} domains Array of domain values\n * @param {string} fieldType type of field - dimension,measure or datetime.\n * @return {Array} Unioned domain of all domain values.\n */\nconst unionDomain = (domains, fieldType) => {\n    let domain = [];\n    domains = domains.filter(dom => dom && dom.length);\n    if (domains.length) {\n        if (fieldType === DimensionSubtype.CATEGORICAL) {\n            domain = [].concat(...domains);\n        } else {\n            domain = [Math.min(...domains.map(d => d[0])), Math.max(...domains.map(d => d[1]))];\n        }\n    }\n\n    return domain;\n};\n\nconst symbolFns = {\n    circle: symbolCircle,\n    cross: symbolCross,\n    diamond: symbolDiamond,\n    square: symbolSquare,\n    star: symbolStar,\n    wye: symbolWye,\n    triangle: symbolTriangle\n};\n\nconst easeFns = {\n    cubic: easeCubic,\n    bounce: easeBounce,\n    linear: easeLinear,\n    elastic: easeElastic,\n    back: easeBack,\n    poly: easePoly,\n    circle: easeCircle\n};\n\n/**\n * Returns the maximum or minimum points of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @param {string} minOrMax minimum or maximum.\n * @return {Object} Minimum or maximum point.\n */\nconst getExtremePoint = (points, compareValue, minOrMax) => {\n    let extremePoint;\n    let point;\n    const len = points.length;\n    let minOrMaxVal = minOrMax === 'max' ? -Infinity : Infinity;\n    let val;\n\n    for (let i = 0; i < len; i++) {\n        point = points[i];\n        val = point[compareValue];\n        if (minOrMax === 'min' ? val < minOrMaxVal : val > minOrMaxVal) {\n            minOrMaxVal = val;\n            extremePoint = point;\n        }\n    }\n\n    return extremePoint;\n};\n\n/**\n * Returns the minimum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Minimum point.\n */\nconst getMinPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'min');\n\n/**\n * Returns the maximum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Maximum point.\n */\nconst getMaxPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'max');\n\n/**\n * Gets the index of the closest value of the given value from the array.\n * @param {Array} arr Array of values\n * @param {number} value Value from which the nearest value will be calculated.\n * @param {string} side side property.\n * @return {number} index of the closest value\n */\n/* istanbul ignore next */const getClosestIndexOf = (arr, value, side) => {\n    let low = 0;\n    const arrLen = arr.length;\n    let high = arrLen - 1;\n\n    let mid;\n    let d1;\n    let d2;\n\n    while (low < high) {\n        mid = Math.floor((low + high) / 2);\n        d1 = Math.abs(arr[mid] - value);\n        d2 = Math.abs(arr[mid + 1] - value);\n\n        if (d2 <= d1) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n\n    if (!side) {\n        return high;\n    }\n\n    const highVal = arr[high];\n    if (highVal === value) {\n        return high;\n    } else if (highVal > value) {\n        if (high === 0) { return high; }\n        return side === 'left' ? high - 1 : high;\n    }\n    if (high === arr.length - 1) { return high; }\n    return side === 'left' ? high : high + 1;\n};\n\nconst getNearestValue = (data, key) => {\n    const filterData = data.filter(d => typeof d === 'number');\n    return filterData[getClosestIndexOf(filterData, key)];\n};\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst getWindow = () => window;\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst reqAnimFrame = (() => requestAnimationFrame)();\n\nconst cancelAnimFrame = (() => cancelAnimationFrame)();\n\n/**\n * Capitalizes the first letter of the word\n * @param {string} text word\n * @return {string} Capitalized word\n */\nconst capitalizeFirst = (text) => {\n    text = text.toLowerCase();\n\n    return text.replace(/\\w\\S*/g, txt => txt.charAt(0).toUpperCase() + txt.substr(1));\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst unique = arr => ([...new Set(arr)]);\n\n/**\n * Gets the minimum difference between two consecutive numbers  in an array.\n * @param {Array} arr Array of numbers\n * @param {number} index index of the value\n * @return {number} minimum difference between values\n */\n/* istanbul ignore next */ const getMinDiff = (arr, index) => {\n    let diff;\n    let uniqueVals;\n    if (index !== undefined) {\n        uniqueVals = unique(arr.map(d => d[index]));\n    } else {\n        uniqueVals = unique(arr);\n    }\n    if (uniqueVals.length > 1) {\n        diff = Math.abs(uniqueVals[1] - uniqueVals[0]);\n        for (let i = 2, len = uniqueVals.length; i < len; i++) {\n            diff = Math.min(diff, Math.abs(uniqueVals[i] - uniqueVals[i - 1]));\n        }\n    } else {\n        diff = uniqueVals[0];\n    }\n\n    return diff;\n};\n\n/**\n * Returns the class name appended with a given id.\n * @param {string} cls class name\n * @param {string} id unique identifier\n * @param {string} prefix string needed to add before the classname\n * @return {string} qualified class name\n */\n/* istanbul ignore next */const getQualifiedClassName = (cls, id, prefix) => {\n    cls = cls.replace(/^\\.*/, '');\n    return [`${prefix}-${cls}`, `${prefix}-${cls}-${id}`];\n};\n\n/**\n * This method is used to set the default value for variables\n * without sullying the code with conditional statements.\n *\n * @export\n * @param {any} param The parameter to test.\n * @param {any} value The default value to assign.\n * @return {any} The value.\n */\n/* istanbul ignore next */ const defaultValue = (param, value) => {\n    if (typeof param === 'undefined' || (typeof param === 'object' && !param)) {\n        return value;\n    }\n    return param;\n};\n\n/**\n * DESCRIPTION TODO\n *\n * @export\n * @param {Object} graph graph whose dependency order has to be generated\n * @return {Object}\n */\nconst getDependencyOrder = (graph) => {\n    const dependencyOrder = [];\n    const visited = {};\n    const keys = Object.keys(graph);\n    /**\n     * DESCRIPTION TODO\n     *\n     * @export\n     * @param {Object} name\n     * @return {Object}\n     */\n    const visit = (name) => {\n        if (dependencyOrder.length === keys.length) {\n            return true;\n        }\n        visited[name] = true;\n        const edges = graph[name];\n        for (let e = 0; e < edges.length; e++) {\n            const dep = edges[e];\n            if (!visited[dep]) {\n                visit(dep);\n            }\n        }\n\n        dependencyOrder.push(name);\n        return false;\n    };\n\n    for (let i = 0; i < keys.length; i++) {\n        if (visit(keys[i], i)) break;\n    }\n\n    return dependencyOrder;\n};\n\n/**\n * Iterates over the properties of an object and applies the function\n *\n * @param {any} obj object to be iterated upon\n * @param {any} fn  function to be applied on it\n */\nconst objectIterator = (obj, fn) => {\n    for (const key in obj) {\n        if (Object.hasOwnProperty.call(obj, key)) {\n            fn(key, obj);\n        }\n    }\n};\n\n/**\n * This class creates a d3 voronoi for retrieving the nearest neighbour of any point from a set of two\n * dimensional points\n * @class Voronoi\n */\n/* istanbul ignore next */ class Voronoi {\n    /**\n     * Initialize the voronoi with the data given.\n     * @param {Array.<Object>} data Array of points.\n     */\n    constructor (data = []) {\n        this._voronoi = voronoi().x(d => d.x).y(d => d.y);\n        this.data(data);\n    }\n\n    /**\n     * Sets the data to voronoi\n     * @param {Array.<Object>} data Array of objects.\n     * @return {Voronoi} Instance of voronoi.\n     */\n    data (data) {\n        if (data) {\n            this._voronoiFn = this._voronoi(data);\n        }\n        return this;\n    }\n\n    /**\n     * Finds the closest point to the x and y position given.\n     * @param {number} x x value\n     * @param {number} y y value\n     * @param {number} radius search radius.\n     * @return {Object} Details of the nearest point.\n     */\n    find (x, y, radius) {\n        return this._voronoiFn.find(x, y, radius);\n    }\n}\n\nconst addListenerToNamespace = (namespaceInf, fn, context) => {\n    let key = namespaceInf.key;\n    const namespace = namespaceInf.namespace;\n    if (namespace) {\n        !context._listeners[namespace] && (context._listeners[namespace] = []);\n        if (!key) {\n            key = Object.keys(context._listeners[namespace]).length;\n        }\n        context._listeners[namespace][key] = fn;\n    } else {\n        key = Object.keys(context._listeners).length;\n        context._listeners[key] = fn;\n    }\n};\n\n/**\n *\n *\n * @param {*} obj\n * @param {*} fields\n *\n */\nconst getObjProp = (obj, ...fields) => {\n    if (obj === undefined || obj === null) {\n        return obj;\n    }\n    let retObj = obj;\n    for (let i = 0, len = fields.length; i < len; i++) {\n        retObj = retObj[fields[i]];\n        if (retObj === undefined || retObj === null) {\n            break;\n        }\n    }\n    return retObj;\n};\n\n/**\n * Methods to handle changes to table configuration and reactivity are handled by this\n * class.\n */\n/**\n *  Common store class\n *\n * @class Store\n */\nclass Store {\n    /**\n     * Creates an instance of Store.\n     * @param {Object} config The object to create the state store with.\n     * @memberof Store\n     */\n    constructor (config) {\n        // create reactive model\n        this.model = Model.create(config);\n        this._listeners = {};\n    }\n\n    /**\n     * This method returns a plain JSON object\n     * with all the fields in the state store.\n     *\n     * @return {Object} Serialized representation of state store.\n     * @memberof Store\n     */\n    serialize () {\n        return this.model.serialize();\n    }\n\n    /**\n     * This method is used to update the value of a property in the state store.\n     *\n     * @param {string} propName The name of the property.\n     * @param {number} value The new value of the property.\n     * @memberof Store\n     */\n    commit (propName, value) {\n        // check if appropriate enum has been used\n        this.model.prop(propName, value);\n    }\n\n    /**\n     * This method is used to register a callbacl that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */registerChangeListener (propNames, callBack, instantCall, namespaceInf = {}) {\n        let props = propNames;\n        if (!Array.isArray(propNames)) {\n            props = [propNames];\n        }\n        const fn = this.model.next(props, callBack, instantCall);\n        addListenerToNamespace(namespaceInf, fn, this);\n        return this;\n    }\n    /**\n     * This method is used to register a callbacl that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */ registerImmediateListener (propNames, callBack, instantCall, namespaceInf = {}) {\n        let props = propNames;\n        if (!Array.isArray(propNames)) {\n            props = [propNames];\n        }\n        const fn = this.model.on(props, callBack, instantCall);\n        addListenerToNamespace(namespaceInf, fn, this);\n        return this;\n    }\n    /**\n     * This method is used to get the name of the property\n     * from the state store.\n     *\n     * @param {string} propName The name of the field in state store.\n     * @return {any} The value of the field.\n     * @memberof Store\n     */\n    get (propName) {\n        return this.model.prop(propName);\n    }\n\n    /**\n     * This method is used to register a computed property that is computed every time\n     * the store value changes.\n     *\n     * @param {string} propName The name of the property to create.\n     * @param {Function} callBack The function to execute when depemdent props change.\n     * @memberof Store\n     */\n    computed (propName, callBack) {\n        return this.model.calculatedProp(propName, callBack);\n    }\n\n    append (propName, value) {\n        this.model.append(propName, value);\n        return this;\n    }\n\n    unsubscribeAll () {\n        Object.values(this._listeners).forEach(fn => fn());\n        return this;\n    }\n\n    unsubscribe (namespaceInf = {}) {\n        const { namespace, key } = namespaceInf;\n        const listeners = this._listeners[namespace];\n        if (key) {\n            const fn = getObjProp(listeners, key);\n            fn && fn();\n        } else {\n            Object.values(listeners).forEach(fn => fn());\n            this._listeners[namespace] = [];\n        }\n        return this;\n    }\n}\n\n/**\n * Sanitize an input number / string mixed number. Currently dot in the no is not supported.\n *\n * @param {number | string} val pure number or string mixed number\n * @return {number | null}  Number if it can be extracted. Otherwise null\n */\nconst intSanitizer = (val) => {\n    const arr = val.toString().match(/(\\d+)(px)*/g);\n    if (!arr) {\n        // If only characters are passed\n        return null;\n    }\n\n    return parseInt(arr[0], 10);\n};\n\n/**\n * Setter getter creator from config\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args. (Optional)\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @param {Object} holder an empty object on which the getters and setters will be mounted\n * @param {Object} options options config based on which the getters and setters are determined.\n * @param {Hyperdis} model optional model to attach the property. If not sent new moel is created.\n * @return {Array}\n */\nconst transactor = (holder, options, model, namespaceInf = {}) => {\n    let conf;\n    const store = model && model instanceof Model ? model : Model.create({});\n    const stateProps = {};\n    for (const prop in options) {\n        if ({}.hasOwnProperty.call(options, prop)) {\n            conf = options[prop];\n            const addAsMethod = conf.meta ? conf.meta.addAsMethod : true;\n            let nameSpaceProp;\n            const namespace = namespaceInf.namespace;\n            if (namespace) {\n                nameSpaceProp = `${namespace}.${prop}`;\n            } else {\n                nameSpaceProp = prop;\n            }\n            if (!store.prop(`${nameSpaceProp}`)) {\n                stateProps[prop] = conf.value;\n            }\n            if (addAsMethod !== false) {\n                holder[prop] = ((context, meta, nsProp) => (...params) => {\n                    let val;\n                    let compareTo;\n                    const paramsLen = params.length;\n                    const prevVal = store.prop(nsProp);\n                    if (paramsLen) {\n                        // If parameters are passed then it's a setter\n                        const spreadParams = meta && meta.spreadParams;\n                        val = params;\n                        const values = [];\n                        if (meta) {\n                            for (let i = 0; i < paramsLen; i++) {\n                                val = params[i];\n                                const sanitization = meta.sanitization && (spreadParams ? meta.sanitization[i] :\n                                    meta.sanitization);\n                                const typeCheck = meta.typeCheck && (spreadParams ? meta.typeCheck[i] : meta.typeCheck);\n                                if (sanitization && typeof sanitization === 'function') {\n                                    // Sanitize if required\n                                    val = sanitization(val, prevVal, holder);\n                                }\n\n                                if (typeCheck) {\n                                    // Checking if a setter is valid\n                                    if (typeof typeCheck === 'function') {\n                                        let typeExpected = meta.typeExpected;\n                                        if (typeExpected && spreadParams) {\n                                            typeExpected = typeExpected[i];\n                                        }\n                                        if (typeExpected) {\n                                            compareTo = typeExpected;\n                                        } else {\n                                            compareTo = true;\n                                        }\n\n                                        if (typeCheck(val) === compareTo) {\n                                            values.push(val);\n                                        }\n                                    } else if (typeof typeCheck === 'string') {\n                                        if (typeCheck === 'constructor') {\n                                            const typeExpected = spreadParams ? meta.typeExpected[i] :\n                                                meta.typeExpected;\n                                            if (val && (val.constructor.name === typeExpected)) {\n                                                values.push(val);\n                                            }\n                                        }\n                                    } else {\n                                        // context.prop(key, val);\n                                        values.push(val);\n                                    }\n                                } else {\n                                    values.push(val);\n                                }\n                            }\n                            const preset = meta.preset;\n                            const oldValues = context.prop(nsProp);\n                            preset && preset(values[0], holder);\n                            if (spreadParams) {\n                                oldValues.forEach((value, i) => {\n                                    if (values[i] === undefined) {\n                                        values[i] = value;\n                                    }\n                                });\n                            }\n                            values.length && context.prop(nsProp, spreadParams ? values : values[0]);\n                        } else {\n                            context.prop(nsProp, spreadParams ? val : val[0]);\n                        }\n                        return holder;\n                    }\n                // No parameters are passed hence its a getter\n                    return context.prop(nsProp);\n                })(store, conf.meta, nameSpaceProp);\n            }\n        }\n    }\n\n    if (namespaceInf.namespace === undefined) {\n        store.append(stateProps);\n    } else {\n        const namespace = namespaceInf.namespace;\n        store.append(namespace, stateProps);\n    }\n\n    return [holder, store];\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} props\n */\nconst generateGetterSetters = (context, props) => {\n    Object.entries(props).forEach((propInfo) => {\n        const prop = propInfo[0];\n        const typeChecker = propInfo[1].typeChecker;\n        const defVal = propInfo[1].defaultValue;\n        const sanitization = propInfo[1].sanitization;\n        const prototype = context.constructor.prototype;\n        if (!(Object.hasOwnProperty.call(prototype, prop))) {\n            if (defVal) {\n                context[`_${prop}`] = defVal;\n            }\n            context[prop] = (...params) => {\n                if (params.length) {\n                    let value = params[0];\n                    if (sanitization) {\n                        value = sanitization(context, params[0]);\n                    }\n                    if (typeChecker && !typeChecker(value)) {\n                        return context[`_${prop}`];\n                    }\n                    context[`_${prop}`] = value;\n                    return context;\n                } return context[`_${prop}`];\n            };\n        }\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} prop\n */\nconst getArraySum = (arr, prop) => arr.reduce((total, elem) => {\n    total += prop ? elem[prop] : elem;\n    return total;\n}, 0);\n\n/**\n *\n *\n * @param {*} arr1\n * @param {*} arr2\n *\n */\nconst arraysEqual = (arr1, arr2) => {\n    if (arr1.length !== arr2.length) { return false; }\n    for (let i = arr1.length; i >= 0; i--) {\n        if (arr1[i] !== arr2[i]) { return false; }\n    }\n\n    return true;\n};\n\n/* eslint valid-typeof:0 */\n/**\n * Returns a validation function which can be used to validate variables against a type and value\n *\n * @param {any} type type of value that the object should have\n * @return {Object} validation function\n */\nconst isEqual = type => (oldVal, newVal) => {\n    if (type === 'Array') {\n        if (!oldVal) {\n            return false;\n        }\n        return arraysEqual(oldVal, newVal);\n    } else if (type === 'Object') {\n        return Object.is(oldVal, newVal);\n    } return oldVal === newVal;\n};\n\n/**\n * Description @todo\n *\n * @param {any} transactionModel @todo\n * @param {any} transactionEndpoint @todo\n * @param {any} transactionItems @todo\n * @return {any} @todo\n */\nconst enableChainedTransaction = (transactionModel, transactionEndpoint, transactionItems) =>\n    transactionItems.forEach(item => transactionModel.on(item, ([, newVal]) => transactionEndpoint[item](newVal)));\n\n/**\n * Chceks if the element is istanceof HTMLElement\n *\n * @param {Object} elem any JS Object\n */\nconst isHTMLElem = elem => elem instanceof HTMLElement;\n\nconst ERROR_MSG = {\n    INTERFACE_IMPL: 'Method not implemented'\n};\n\n/**\n * Merges the sink object in the source by recursively iterating through the object properties\n * @param {Object} source Source Object\n * @param {Object} sink Sink Object\n * @return {Object} Merged object\n */\nconst mergeRecursive = (source, sink) => {\n    for (const prop in sink) {\n        if (isSimpleObject(source[prop]) && isSimpleObject(sink[prop])) {\n            mergeRecursive(source[prop], sink[prop]);\n        } else if (sink[prop] instanceof Object && sink[prop].constructor === Object) {\n            source[prop] = {};\n            mergeRecursive(source[prop], sink[prop]);\n        } else {\n            source[prop] = sink[prop];\n        }\n    }\n    return source;\n};\n\n/**\n * Creates a selection set from a data set with corresponding attributes\n *\n * @export\n * @param {Selection} sel contains previous selection\n * @param {Object} appendObj Object to be appended\n * @param {Array} data Data based on which the selection is entered/updated/removed\n * @param {Object} [attrs={}] Attributes to be set on the data\n * @return {Selection} Merged selection\n */\nconst createSelection = (sel, appendObj, data, idFn) => {\n    let selection = sel || dataSelect([]);\n\n    selection = selection.data(data, idFn);\n\n    const enter = selection.enter().append(appendObj);\n    const mergedSelection = enter.merge(selection);\n\n    selection.exit() && selection.exit().remove();\n    return mergedSelection;\n};\n\nconst interpolateArray = (data, fitCount) => {\n    const linearInterpolate = function (before, after, atPoint) {\n        return before + (after - before) * atPoint;\n    };\n    const newData = [];\n    const springFactor = ((data.length - 1) / (fitCount - 1));\n    newData[0] = data[0]; // for new allocation\n    for (let i = 1; i < fitCount - 1; i++) {\n        const tmp = i * springFactor;\n        const before = (Math.floor(tmp)).toFixed();\n        const after = (Math.ceil(tmp)).toFixed();\n        const atPoint = tmp - before;\n        newData[i] = linearInterpolate(data[before], data[after], atPoint);\n    }\n    newData[fitCount - 1] = data[data.length - 1]; // for new allocation\n    return newData;\n};\n\n/**\n *\n *\n * @param {*} fn\n */\nconst nextFrame = (fn) => {\n    setTimeout(() => {\n        fn();\n    }, 0);\n};\n\n/**\n *\n *\n * @param {*} angle\n */\nconst angleToRadian = angle => angle * Math.PI / 180;\n\n/**\n *\n *\n * @param {*} newName\n * @param {*} oldName\n */\nconst replaceCSSPrefix = () => {\n    // @todo\n};\n\n/**\n * Gets the  interpolator function from d3 color\n *\n */\nconst interpolator = () => interpolate;\n\n/**\n * Gets the number interpolator from d3 color\n *\n */\nconst numberInterpolator = () => interpolateNumber;\n\n/**\n * Gets the rgb interpolator from d3 color\n *\n */\nconst colorInterpolator = () => interpolateRgb;\n\n/**\n * Gets the hsl interpolator from d3 color\n *\n */\nconst hslInterpolator = () => interpolateHslLong;\n\nconst transformColors = () => ({\n    color,\n    rgb,\n    hsl\n});\n\n/**\n * Gets the piecewise interpolator from d3 color\n *\n */\nconst piecewiseInterpolator = () => piecewise;\n\nfunction hue2rgb (p, q, t) {\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\n    if (t < 1 / 2) return q;\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n\n  /**\n   * Converts an HSL color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n   * Assumes h, s, and l are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  l       The lightness\n   * @return  Array           The RGB representation\n   */\nconst hslToRgb = (h, s, l, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    if (s === 0) {\n        r = g = b = l; // achromatic\n    } else {\n        const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        const p = 2 * l - q;\n\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\n  /**\n   * Converts an RGB color value to HSV. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes r, g, and b are contained in the set [0, 255] and\n   * returns h, s, and v in the set [0, 1].\n   *\n   * @param   Number  r       The red color value\n   * @param   Number  g       The green color value\n   * @param   Number  b       The blue color value\n   * @return  Array           The HSV representation\n   */\nconst rgbToHsv = (r, g, b, a = 1) => {\n    r = +r; g = +g; b = +b; a = +a;\n    r /= 255; g /= 255; b /= 255;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    let h;\n    let s;\n    const l = (max + min) / 2;\n\n    if (max === min) {\n        h = s = 0; // achromatic\n    } else {\n        const d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n        case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n        case g: h = (b - r) / d + 2; break;\n        case b: h = (r - g) / d + 4; break;\n        default: break;\n        }\n        h /= 6;\n    }\n    return [h, s, l, a];\n};\n\n  /**\n   * Converts an HSV color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes h, s, and v are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  v       The value\n   * @return  Array           The RGB representation\n   */\nconst hsvToRgb = (h, s, v, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    const i = Math.floor(h * 6);\n    const f = h * 6 - i;\n    const p = v * (1 - s);\n    const q = v * (1 - f * s);\n    const t = v * (1 - (1 - f) * s);\n\n    switch (i % 6) {\n    case 0: r = v; g = t; b = p; break;\n    case 1: r = q; g = v; b = p; break;\n    case 2: r = p; g = v; b = t; break;\n    case 3: r = p; g = q; b = v; break;\n    case 4: r = t; g = p; b = v; break;\n    case 5: r = v; g = p; b = q; break;\n    default: break;\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\nconst hexToHsv = (hex) => {\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\n    const r = parseInt(result[1], 16);\n    const g = parseInt(result[2], 16);\n    const b = parseInt(result[3], 16);\n    const a = result[4] ? parseInt(result[4], 16) : 1;\n    return rgbToHsv(r, g, b, a);\n};\n\nconst detectColor = (col) => {\n    const matchRgb = /rgb\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3})\\)/;\n    const matchHsl = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g;\n\n    // Source :  https://gist.github.com/sethlopezme/d072b945969a3cc2cc11\n     // eslint-disable-next-line\n    const matchRgba = /rgba?\\(((25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,\\s*?){2}(25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,?\\s*([01]\\.?\\d*?)?\\)/;\n     // eslint-disable-next-line\n    const matchHsla = /^hsla\\((0|360|35\\d|3[0-4]\\d|[12]\\d\\d|0?\\d?\\d),(0|100|\\d{1,2})%,(0|100|\\d{1,2})%,(0?\\.\\d|1(\\.0)?)\\)$/;\n    const matchHex = /^#([0-9a-f]{3}){1,2}$/i;\n\n    if (matchRgb.test(col) || matchRgba.test(col)) {\n        return 'rgb';\n    } else if (matchHsl.test(col) || matchHsla.test(col)) {\n        return 'hsl';\n    } else if (matchHex.test(col)) {\n        return 'hex';\n    } return col;\n};\n\n/**\n *\n *\n * @param {*} model\n * @param {*} propModel\n *\n */\nconst filterPropagationModel = (model, propModel, measures) => {\n    const { data, schema } = propModel.getData();\n    let filteredModel;\n    if (schema.length) {\n        const fieldMap = model.getFieldsConfig();\n        filteredModel = model.select((fields) => {\n            const include = data.some(row => schema.every((propField, idx) => {\n                if (!measures && (!(propField.name in fieldMap) ||\n                        fieldMap[propField.name].def.type === FieldType.MEASURE)) {\n                    return true;\n                }\n                return row[idx] === fields[propField.name].valueOf();\n            }));\n            return include;\n        }, {\n            saveChild: false\n        });\n    } else {\n        filteredModel = propModel;\n    }\n\n    return filteredModel;\n};\n\nconst assembleModelFromIdentifiers = (model, identifiers) => {\n    let schema = [];\n    let data;\n    const fieldMap = model.getFieldsConfig();\n    if (identifiers.length) {\n        const fields = identifiers[0];\n        const len = fields.length;\n        for (let i = 0; i < len; i++) {\n            const field = fields[i];\n            const fieldObj = fieldMap[field] && Object.assign({}, fieldMap[field].def);\n            if (fieldObj) {\n                schema.push(Object.assign(fieldObj));\n            }\n        }\n\n        data = [];\n        const header = identifiers[0];\n        for (let i = 1; i < identifiers.length; i += 1) {\n            const vals = identifiers[i];\n            const temp = {};\n            vals.forEach((fieldVal, cIdx) => {\n                temp[header[cIdx]] = fieldVal;\n            });\n            data.push(temp);\n        }\n    } else {\n        data = [];\n        schema = [];\n    }\n\n    return new model.constructor(data, schema);\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} criteria\n *\n */\nconst getDataModelFromRange = (dataModel, criteria, mode) => {\n    if (criteria === null) {\n        return null;\n    }\n    const selFields = Object.keys(criteria);\n    const selFn = fields => selFields.every((field) => {\n        const val = fields[field].value;\n        const range = criteria[field][0] instanceof Array ? criteria[field][0] : criteria[field];\n        if (typeof range[0] === 'string') {\n            return range.find(d => d === val) !== undefined;\n        }\n        return range ? val >= range[0] && val <= range[1] : true;\n    });\n\n    return dataModel.select(selFn, {\n        saveChild: false,\n        mode\n    });\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} identifiers\n *\n */\nconst getDataModelFromIdentifiers = (dataModel, identifiers, mode) => {\n    let filteredDataModel;\n    if (identifiers instanceof Array) {\n        const fieldsConfig = dataModel.getFieldsConfig();\n\n        const dataArr = identifiers.slice(1, identifiers.length);\n        if (identifiers instanceof Function) {\n            filteredDataModel = identifiers(dataModel, {}, false);\n        } else if (identifiers instanceof Array && identifiers[0].length) {\n            const filteredSchema = identifiers[0].filter(d => d in fieldsConfig);\n            filteredDataModel = dataModel.select((fields) => {\n                let include = true;\n                filteredSchema.forEach((propField, idx) => {\n                    const value = fields[propField].valueOf();\n                    const index = dataArr.findIndex(d => d[idx] === value);\n                    include = include && index !== -1;\n                });\n                return include;\n            }, {\n                saveChild: false,\n                mode\n            });\n        }\n    } else {\n        filteredDataModel = getDataModelFromRange(dataModel, identifiers, mode);\n    }\n    return filteredDataModel;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} listenerMap\n */\nconst registerListeners = (context, listenerMap, ...params) => {\n    const propListenerMap = listenerMap(context, ...params);\n    for (const key in propListenerMap) {\n        if ({}.hasOwnProperty.call(propListenerMap, key)) {\n            const namespace = params[0];\n            let ns = null;\n            if (namespace) {\n                ns = namespace.local;\n            }\n            const mapObj = propListenerMap[key];\n            const propType = mapObj.type;\n            const props = mapObj.props;\n            const listenerFn = mapObj.listener;\n            context.store()[propType](props, listenerFn, false, {\n                namespace: ns\n            });\n        }\n    }\n};\n\nconst isValidValue = value => !isNaN(value) && value !== -Infinity && value !== Infinity;\n/**\n *\n *\n * @param {*} str\n *\n */\nconst escapeHTML = (str) => {\n    const htmlEscapes = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#x27;',\n        '/': '&#x2F;'\n    };\n    const htmlEscaper = /[&<>\"'/]/g;\n    return (`${str}`).replace(htmlEscaper, match => htmlEscapes[match]);\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst transposeArray = arr => arr[0].map((col, i) => arr.map(row => row[i]));\nconst toArray = arr => (arr instanceof Array ? arr : [arr]);\nconst extendsClass = (cls, extendsFrom, found) => {\n    if (!cls) {\n        return false;\n    }\n    const prototype = cls.prototype;\n    if (prototype instanceof extendsFrom) {\n        found = true;\n    } else {\n        found = extendsClass(prototype, extendsFrom, found);\n    }\n    return found;\n};\n\n/**\n *\n * @param {*} dm1\n * @param {*} dm2\n */\nconst concatModels = (dm1, dm2) => {\n    const dataObj1 = dm1.getData();\n    const dataObj2 = dm2.getData();\n    const data1 = dataObj1.data;\n    const data2 = dataObj2.data;\n    const schema1 = dataObj1.schema;\n    const schema2 = dataObj2.schema;\n    const tuples1 = {};\n    const tuples2 = {};\n    const commonTuples = {};\n    for (let i = 0; i < data1.length; i++) {\n        for (let ii = 0; ii < data2.length; ii++) {\n            const row1 = data1[i];\n            const row2 = data2[ii];\n            const dim1Values = row1.filter((d, idx) => schema1[idx].type === FieldType.DIMENSION);\n            const dim2Values = row2.filter((d, idx) => schema2[idx].type === FieldType.DIMENSION);\n            const allDimSame = dim1Values.every(value => dim2Values.indexOf(value) !== -1);\n            if (allDimSame) {\n                const key = dim1Values.join();\n                !commonTuples[key] && (commonTuples[key] = {});\n                row1.forEach((value, idx) => {\n                    commonTuples[key][schema1[idx].name] = value;\n                });\n                row2.forEach((value, idx) => {\n                    commonTuples[key][schema2[idx].name] = value;\n                });\n            } else {\n                const dm1Key = dim1Values.join();\n                const dm2Key = dim2Values.join();\n                if (!commonTuples[dm1Key] && !commonTuples[dm2Key]) {\n                    !tuples1[dm1Key] && (tuples1[dm1Key] = {});\n                    !tuples2[dm2Key] && (tuples2[dm2Key] = {});\n                    row1.forEach((value, idx) => {\n                        tuples1[dm1Key][schema1[idx].name] = value;\n                    });\n                    row2.forEach((value, idx) => {\n                        tuples2[dm2Key][schema2[idx].name] = value;\n                    });\n                }\n            }\n        }\n    }\n\n    const commonSchema = [...schema1, ...schema2.filter(s2 => schema1.findIndex(s1 => s1.name === s2.name) === -1)];\n    const data = [...Object.values(tuples1), ...Object.values(tuples2), ...Object.values(commonTuples)];\n    return [data, commonSchema];\n};\n\nconst getSymbol = type => symbol().type(symbolFns[type]);\n\nconst stackOrders = {\n    [STACK_CONFIG.ORDER_NONE]: stackOrderNone,\n    [STACK_CONFIG.ORDER_ASCENDING]: stackOrderAscending,\n    [STACK_CONFIG.ORDER_DESCENDING]: stackOrderDescending\n};\nconst stackOffsets = {\n    [STACK_CONFIG.OFFSET_DIVERGING]: stackOffsetDiverging,\n    [STACK_CONFIG.OFFSET_NONE]: stackOffsetNone,\n    [STACK_CONFIG.OFFSET_EXPAND]: stackOffsetExpand,\n    [STACK_CONFIG.OFFSET_WIGGLE]: stackOffsetWiggle\n};\n\n// eslint-disable-next-line require-jsdoc\nconst stack = params => d3Stack().keys(params.keys).offset(stackOffsets[params.offset])\n                .order(stackOrders[params.order])(params.data);\n\n/**\n * Groups the data into a hierarchical tree structure based on one or more fields.\n * @param { Object } params Configuration properties for nesting data\n * @param { Array.<Array> } params.data Data which needs to be grouped\n * @param { Array.<number> } params.keys Field indices by which the data will be grouped\n * @return { Array.<Object> } Grouped data array\n */\nconst nestCollection = (params) => {\n    const nestFn = nest();\n    params.keys.forEach(key => nestFn.key(d => d[key]));\n    return nestFn.entries(params.data);\n};\n\nconst pathInterpolators = {\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    stepAfter: curveStepAfter,\n    catmullRom: curveCatmullRom,\n    step: curveStep,\n    stepBefore: curveStepBefore,\n    linear: curveLinear\n};\n\nconst Symbols = {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom,\n    line,\n    area,\n    pie,\n    arc,\n    nest\n};\n\nconst Scales = {\n    band: scaleBand\n};\n\nconst getSmallestDiff = (points) => {\n    points = points.sort((a, b) => a - b);\n    let minDiff = points[1] - points[0];\n    for (let i = 2; i < points.length; i++) {\n        minDiff = Math.min(minDiff, points[i] - points[i - 1]);\n    }\n\n    return minDiff;\n};\n\nconst timeFormats = {\n    millisecond: '%A, %b %e, %H:%M:%S.%L',\n    second: '%A, %b %e, %H:%M:%S',\n    minute: '%A, %b %e, %H:%M',\n    hour: '%A, %b %e, %H:%M',\n    day: '%A, %b %e, %Y',\n    month: '%B %Y',\n    year: '%Y'\n};\n\nconst timeDurations = [\n    ['millisecond', 'second', 'minute', 'hour', 'day', 'month', 'year'],\n    [1, 1000, 60000, 3600000, 86400000, 2592000000, 31536000000]\n];\n\nconst getNearestInterval = (interval) => {\n    const index = getClosestIndexOf(timeDurations[1], interval);\n    return timeDurations[0][index];\n};\n\nconst formatTemporal = (value, interval) => {\n    const nearestInterval = getNearestInterval(interval);\n    return DateTimeFormatter.formatAs(value, timeFormats[nearestInterval]);\n};\n\nconst temporalFields = (dataModel) => {\n    const filteredFields = {};\n    Object.entries(dataModel.getFieldspace().getDimension()).forEach(([fieldName, fieldObj]) => {\n        if (fieldObj.subtype() === DimensionSubtype.TEMPORAL) {\n            filteredFields[fieldName] = fieldObj;\n        }\n    });\n    return filteredFields;\n};\n\nconst require = (lookupWhat, lookupDetails) => ({\n    resolvable: (store) => {\n        const lookupTarget = store[lookupWhat];\n        const depArr = lookupDetails.slice(0, lookupDetails.length - 1);\n        const fn = lookupDetails[lookupDetails.length - 1]; // fn\n\n        const deps = depArr.map(str => lookupTarget[str]);\n        return {\n            fn: fn(...deps),\n            depArr\n        };\n    }\n});\n\nconst nextAnimFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame ||\n    function (callback) {\n        setTimeout(callback, 16);\n    };\n\nconst getValueParser = config => (val) => {\n    if (val instanceof InvalidAwareTypes) {\n        return val in config ? config[val] : `${val}`;\n    }\n    return val;\n};\n\nconst retrieveNearestGroupByReducers = (dataModel, ...measureFieldNames) => {\n    let nearestReducers = {};\n    let next = dataModel;\n    do {\n        const derivations = next.getDerivations();\n        if (derivations) {\n            const groupDerivation = derivations.reverse().find(derivation => derivation.op === DM_OPERATION_GROUP);\n            if (groupDerivation) {\n                nearestReducers = groupDerivation.criteria || {};\n                break;\n            }\n        }\n    } while (next = next.getParent());\n\n    const filteredReducers = {};\n    const measures = dataModel.getFieldspace().getMeasure();\n    measureFieldNames.forEach((measureName) => {\n        if (nearestReducers[measureName]) {\n            filteredReducers[measureName] = nearestReducers[measureName];\n        } else {\n            const measureField = measures[measureName];\n            if (measureField) {\n                filteredReducers[measureName] = measureField.defAggFn();\n            }\n        }\n    });\n\n    return filteredReducers;\n};\n\nexport {\n    getValueParser,\n    require,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    stack,\n    nestCollection,\n    getSymbol,\n    transformColors,\n    detectColor,\n    hexToHsv,\n    hslToRgb,\n    rgbToHsv,\n    hsvToRgb,\n    concatModels,\n    toArray,\n    angleToRadian,\n    escapeHTML,\n    generateGetterSetters,\n    getArraySum,\n    interpolator,\n    piecewiseInterpolator,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    colorInterpolator,\n    numberInterpolator,\n    ERROR_MSG,\n    reqAnimFrame,\n    nextAnimFrame,\n    filterPropagationModel,\n    transposeArray,\n    cancelAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    symbolFns,\n    easeFns,\n    clone,\n    isEqual,\n    interpolateArray,\n    getMinPoint,\n    defaultValue,\n    getMaxPoint,\n    getClosestIndexOf,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    Store,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    transactor,\n    enableChainedTransaction,\n    isHTMLElem,\n    isSimpleObject,\n    nextFrame,\n    registerListeners,\n    replaceCSSPrefix,\n    getObjProp,\n    extendsClass,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    hslInterpolator,\n    getSmallestDiff,\n    getNearestValue,\n    retrieveNearestGroupByReducers,\n    createSelection,\n    formatTemporal,\n    temporalFields\n};\n","export function linear(t) {\n  return +t;\n}\n","export function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nexport function circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n","import Selection from './selection';\n/**\n * This function applies a selection operation on a data array.\n *\n * @export\n * @param {Array} [data=[]] The data array to be observed.\n * @return {Selection} Instance of a selection.\n */\nexport default function dataSelect (data = []) {\n    return new Selection(data);\n}\n\n","import {path} from \"d3-path\";\nimport circle from \"./symbol/circle\";\nimport cross from \"./symbol/cross\";\nimport diamond from \"./symbol/diamond\";\nimport star from \"./symbol/star\";\nimport square from \"./symbol/square\";\nimport triangle from \"./symbol/triangle\";\nimport wye from \"./symbol/wye\";\nimport constant from \"./constant\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n","export const ORDER_ASCENDING = 'ascending';\nexport const ORDER_DESCENDING = 'descending';\nexport const ORDER_NONE = 'none';\nexport const OFFSET_DIVERGING = 'diverging';\nexport const OFFSET_NONE = 'none';\nexport const OFFSET_EXPAND = 'expand';\nexport const OFFSET_WIGGLE = 'wiggle';\n","import ascending from \"./ascending\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n","import constant from \"./constant\";\nimport descending from \"./descending\";\nimport identity from \"./identity\";\nimport {tau} from \"./math\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","export const DM_OPERATION_GROUP = 'group';\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","var matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nexport default matcher;\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTING) throw new Error(\"too late; already started\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value + \"\"));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleRemove(name, interpolate) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant(name, i, value + \"\"), priority);\n}\n","function styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import { select, event as d3event, selection, clientPoint } from 'd3-selection';\nimport { drag as d3drag } from 'd3-drag';\nimport 'd3-transition';\nimport { mergeRecursive } from './common-utils';\n/**\n * This function takes a raw DOM element or\n * a string and returns a d3 selection of that element.\n *\n * @param {HTMLElement | string} element The element to wrap in d3 selection.\n * @return {Selection} Instance of d3 selection.\n */\nconst selectElement = element => select(element);\n\n/**\n * It creates a new d3 element on the parent element\n * @param  {Selection} parent Element to which the element is to be appended\n * @param  {Object} elemType Type of the new element\n * @param  {Array} data Data for the new element\n * @param  {Object} selector classname/id/tagname for the element\n * @return {HTMLElement} Newly Created Element\n */\nconst makeElement = (parent, elemType, data, selector, callbacks = {}, keyFn) => {\n    if ((parent instanceof HTMLElement || parent instanceof SVGElement)) {\n        parent = selectElement(parent);\n    }\n\n    const selectorVal = selector ? selector[0] : null;\n    let selectorType = null;\n    let actualSelector = null;\n    let element = null;\n    let enterSel = null;\n    let mergeSel = null;\n    let filter;\n    if (selectorVal) {\n        if (selectorVal === '#') {\n            selectorType = 'id';\n            actualSelector = selector;\n        } else {\n            selectorType = 'class';\n            actualSelector = selector[0] === '.' ? selector : `.${selector}`;\n        }\n    } else {\n        actualSelector = elemType;\n        filter = true;\n    }\n    element = parent.selectAll(actualSelector);\n\n    filter && (element = element.filter(function () {\n        return this.parentNode === parent.node();\n    }));\n    element = element.data(data, keyFn);\n\n    enterSel = element.enter()\n                            .append(elemType || 'div');\n    callbacks.enter && enterSel.each(function (...params) {\n        callbacks.enter(selectElement(this), ...params);\n    });\n\n    mergeSel = enterSel.merge(element);\n    callbacks.update && mergeSel.each(function (...params) {\n        callbacks.update(selectElement(this), ...params);\n    });\n    if (selectorType === 'class') {\n        mergeSel.classed(selectorVal === '.' ? selector.substring(1, selector.length) : selector, true);\n    } else if (selectorType === 'id') {\n        mergeSel.attr('id', selector.substring(1, selector.length));\n    }\n    const exitSel = element.exit();\n\n    if (callbacks.exit) {\n        exitSel.each(function (...params) {\n            callbacks.exit(selectElement(this), ...params);\n        });\n    } else {\n        exitSel.remove();\n    }\n    return mergeSel;\n};\n\n/**\n * This function applies styles to an element\n *  @param  {Object} elem Element Selection\n * @param  {Object} styleObj Style Object to be applied\n * @return {Element} Newly Created Element\n*/\nconst applyStyle = (elem, styleObj) => {\n    Object.entries(styleObj).forEach((d) => {\n        elem.style(d[0], d[1]);\n    }, this);\n    return elem;\n};\n\n/**\n * This function appends a dom element in another element.\n * @param {HTMLElement | SVGElement} element1 The element in which to append the second element\n * @param {HTMLElement | SVGElement} element2 The element which will be appended.\n */\nconst appendElement = (element1, element2) => {\n    element1.appendChild(element2);\n};\n\n/**\n * Sets the attributes to the element.\n * @param {HTMLElement | SVGElement} element Element on which attributes will be applied\n * @param {Object} attrs Attributes which need to be applied\n */\nconst setElementAttrs = (element, attrs) => {\n    for (const key in attrs) {\n        if ({}.hasOwnProperty.call(attrs, key)) {\n            element.attr(key, attrs[key]);\n        }\n    }\n};\n\n/**\n * Sets attributes in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which attrs will be applied\n * @param {Array.<Object>} attrs Array of attributes\n * @param {string} className className of elements to select.\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setAttrs = (element, attrs, className) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    className !== undefined ? element.selectAll(`.${className}`).each(function () {\n        setElementAttrs(select(this), attrs);\n    }) : setElementAttrs(element, attrs);\n    return element;\n};\n\n/**\n * Adds a css class to elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst addClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, true) :\n                elem.classed(className, true);\n    });\n};\n\n/**\n * Removes the css class from elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst removeClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, false) :\n                elem.classed(className, false);\n    });\n};\n\n/**\n * Sets styles in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which styles will be applied\n * @param {Array.<Object>} styles Array of style attributes\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setStyles = (element, styles) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            element.style(key, styles[key]);\n        }\n    }\n    return element;\n};\n\n/**\n * Creates svg or html elements by binding data to the selection.Removes extra elements\n * on exit.\n * @param {Object} params Parameter object\n * @param {SVGElement | HTMLElement} params.container Container element where all elements will be appended\n * @param {string} params.selector Selector by which elements will be selected from dom\n * @param {string} params.append Append tag\n * @param {Function} params.each Function which will be executed for each data point and element.\n */\nconst createElements = (params) => {\n    const container = select(params.container);\n    let data;\n    let sel;\n\n    data = params.data;\n    if (typeof data === 'number') {\n        data = Array(data).fill().map((d, i) => i);\n    }\n    sel = container.selectAll(params.selector).data(data);\n\n    sel = container.selectAll(params.selector).filter(function () {\n        return this.parentNode === container.node();\n    }).data(params.data);\n\n    const selectionMerge = sel.enter().append(params.append).merge(sel).each(function (d, i) {\n        params.each(d, select(this), i);\n    });\n\n    selectionMerge.attr('class', params.className || '');\n    sel.exit().remove();\n};\n\n/**\n * Clips an element with given measurement. Basically it is used to hide overflowing portions\n * of any element.\n * @param {SVGElement} container svg element which needs to be clipped.\n * @param {Object} measurement Dimensions of the clipped rectangle.\n * @param {string} id Unique id of the clip element\n */\nconst clipElement = (container, measurement, id) => {\n    const clipPathElement = makeElement(select(container), 'clipPath', [1], `#${id}`);\n    const clipPathRect = makeElement(clipPathElement, 'rect', [1]);\n    clipPathRect.attr('x', measurement.x)\n                    .attr('y', measurement.x)\n                    .attr('width', measurement.width)\n                    .attr('height', measurement.height);\n    clipPathElement.attr('clip-path', `url(#${id})`);\n};\n\n/**\n * Returns the element of the corresponding classname.\n * @param {HTMLElement | SVGElement} node html or svg node element.\n * @param {string} className css class to be applied.\n * @return {HTMLElement | SVGElement} html or svg element.\n */\nconst getElementsByClassName = (node, className) => select(node).selectAll(className).nodes();\n\n/**\n * Gets the mouse position relative to an svg type of element\n * @param {SVGElement} element Any svg element like rect, circle, etc.\n * @param {Event} event Event object.\n * @return {Object} x and y position relative to the container element passed.\n */\nconst getMousePos = (element, event) => {\n    const boundingClientRect = element.getBoundingClientRect();\n    return {\n        x: event.x - boundingClientRect.x,\n        y: event.y - boundingClientRect.y\n    };\n};\n\nconst getClientPoint = (...params) => {\n    const pos = clientPoint(...params);\n    return {\n        x: pos[0],\n        y: pos[1]\n    };\n};\n\n/** This function appends a dom element in another element.\n * @param {Object} tag The tag name of the element to append\n * @param {Object} mount Mount point fo the element\n * @return {Object} selection of the appended element\n */\nconst createElement = (tag, mount) => select(mount).append(tag).node();\n\n/**\n * Gets the d3 event function\n * @return {Object} d3 event\n */\nconst getEvent = () => d3event;\n\n/**\n * Gets the d3 drag function\n * @return {Object} d3 drag\n */\nconst getD3Drag = () => d3drag;\n\nconst getSmartComputedStyle = (group, css) => {\n    let textEl;\n    const testText = 'W';\n    const mandatoryStyle = {\n        'fill-opacity': 0\n    };\n    const className = typeof css === 'string' ? css : (css instanceof Array ? css.join(' ') : undefined);\n\n    if (group.node() instanceof HTMLElement) {\n        textEl = group.append('div').html(testText);\n    } else {\n        textEl = group.append('text').text(testText);\n    }\n\n    if (className) {\n        textEl.attr('class', className);\n    } else if (typeof css === 'object') {\n        delete css['fill-opacity'];\n        mergeRecursive(mandatoryStyle, css);\n    }\n\n    textEl.style(mandatoryStyle);\n    const computedStyle = window.getComputedStyle(textEl.node());\n    const styleForSmartLabel = {\n        fontSize: computedStyle.fontSize,\n        fontFamily: computedStyle.fontFamily,\n        fontWeight: computedStyle.fontWeight,\n        fontStyle: computedStyle.fontStyle\n    };\n\n    textEl.remove();\n\n    return styleForSmartLabel;\n};\n\nconst hasTouch = () => 'ontouchstart' in document.documentElement;\n\nexport {\n    hasTouch,\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint\n};\n","const events = [\n    'initialized',\n    'beforeupdate',\n    'updated',\n    'beforedraw',\n    'drawn',\n    'beforeremove',\n    'removed',\n    'animationend'\n];\n\nconst compositions = [\n    'canvas',\n    'unit',\n    'layer',\n    'axis',\n    'facet-headers',\n    'legend',\n    'caption'\n];\n\nconst EVENT_LIST = [];\n\ncompositions.forEach((composition) => {\n    events.forEach((event) => {\n        EVENT_LIST.push(`${composition}.${event}`);\n    });\n});\n\nexport default EVENT_LIST;\n","import EVENT_LIST from './event-list';\nimport { createPromise } from './helper';\n\n/**\n * At first call it accepts one function\n * calling it second time accepts notification object.\n * notification object then called with first accepted function\n *\n * @param {Function} resolveFn a promise's resolve function\n * @return {Function} a function to accept notification object\n */\nconst resolver = resolveFn => notification => resolveFn(notification);\n\n/**\n * Checks if the property string is present in the source object\n *\n * @param {Object} source source object whom you want to check the property\n * @param {string} property key name that need to be checked\n * @return {boolean} returns true if the property found in the source object\n */\nconst hasOwn = (source, property) => Object.prototype.hasOwnProperty.call(source, property);\n\n/**\n * LifeCycleManager which goes as a dependendecy to a muze\n * it accepts notification from the entire library throughout\n * the exeecution life\n *\n * @export\n * @class LifeCycleManager\n */\nexport default class LifeCycleManager {\n\n    /**\n     * Creates an instance of LifeCycleManager.\n     * @memberof LifeCycleManager\n     */\n    constructor () {\n        this._eventList = EVENT_LIST;\n        this._promises = new Map();\n        this._notifiers = {};\n        this._lifeCycles = {};\n        this._unreleasedLifeCycles = {};\n        this._boot();\n    }\n\n    /**\n     * Fills all the notifiers with resolver callback\n     *\n     * @memberof LifeCycleManager\n     */\n    _boot () {\n        this._notifiers = this._eventList.reduce((acc, name) => {\n            acc[name] = resolver;\n            return acc;\n        }, {});\n        this._preparePromises();\n    }\n\n    /**\n     * Public method which gives the promise corresponding\n     * to the event name\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    retrieve (eventName) {\n        return this._promises.get(eventName);\n    }\n\n    /**\n     * Creates a promise that will be passed to user's callback\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} a pending promise waiting for resolve to be called\n     * @memberof LifeCycleManager\n     */\n    _makeNotifierPromise (eventName) {\n        return new Promise((resolve) => {\n            this._notifiers[eventName] = resolver(resolve);\n        });\n    }\n\n    /**\n     * Prepares the promise map with pending promises\n     * all the promises are in a pending state where their's\n     * resolve function waiting to be called with notification object\n     * @memberof LifeCycleManager\n     */\n    _preparePromises () {\n        this._eventList.forEach((eventName) => {\n            const promise = this._makeNotifierPromise(eventName);\n            this._promises.set(eventName, promise);\n            createPromise(promise, eventName, this);\n        });\n    }\n\n    /**\n     * Resolves the promise with notification object\n     *\n     * @param {string} eventName name of the event in the system\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     *\n     * @memberof LifeCycleManager\n     */\n    _resolvePromise (eventName, notification) {\n        this._notifiers[eventName](notification);\n    }\n\n    /**\n     * Public method which is being called by different\n     * subcompoents of the system at different execution atages\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    notify (notification) {\n        // get the composition name from notification\n        // or from static formalName() method\n        const composition = notification.formalName || notification.client.constructor.formalName();\n        notification.formalName = composition;\n        this._releasePromisesFromCache();\n        this._notify(composition, notification);\n    }\n\n    /**\n     * Notify user the with promsie in a callback\n     * if callback not found then cache it\n     *\n     * @param {string} composition\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    _notify (composition, notification) {\n        const stage = notification.action;\n        const eventName = `${composition}.${stage}`;\n\n        // resolves promise with the notification object\n        this._resolvePromise(eventName, notification);\n\n        // get the promise from the promise map\n        const promise = this.retrieve(eventName);\n\n        if (this._lifeCycles[composition]) {\n            if (this._lifeCycles[composition][stage]) {\n                // if user given call back exists, then call with promise\n                this._callLifeCycleCallback(composition, stage, promise);\n            } else {\n                // otherwise cache the promise\n                this._cachePromise(composition, stage, promise);\n            }\n        } else {\n            this._cachePromise(composition, stage, promise);\n        }\n    }\n\n    /**\n     * Calls the user's callback with callback\n     *\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _callLifeCycleCallback (composition, stage, promise) {\n        const eventName = `${composition}.${stage}`;\n        this._lifeCycles[composition][stage](promise);\n        this._resetTargetPromise(eventName);\n    }\n\n    /**\n     * Try to clear the cached promsies once we have\n     * macthed callbacks from the user\n     *\n     * @memberof LifeCycleManager\n     */\n    _releasePromisesFromCache () {\n        const compositions = Object.keys(this._unreleasedLifeCycles);\n        compositions.forEach((composition) => {\n            const stages = Object.keys(this._unreleasedLifeCycles[composition]);\n            stages.forEach((stage) => {\n                if (this._lifeCycles[composition]) {\n                    if (this._lifeCycles[composition][stage]) {\n                        // take the promise from unreleased lifeCycles\n                        const promise = this._unreleasedLifeCycles[composition][stage];\n                        // call the user given callback with that promise\n                        this._callLifeCycleCallback(composition, stage, promise);\n                        // delete promise from unreleased lifeCycles\n                        delete this._unreleasedLifeCycles[composition][stage];\n                    }\n                }\n            });\n        });\n    }\n\n    /**\n     * Cache the promise in the map. This cache\n     * then get consumed if we get user callbacks\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _cachePromise (composition, stage, promise) {\n        if (!hasOwn(this._unreleasedLifeCycles, composition)) {\n            this._unreleasedLifeCycles[composition] = {};\n        }\n\n        if (!hasOwn(this._unreleasedLifeCycles[composition], stage)) {\n            this._unreleasedLifeCycles[composition][stage] = {};\n        }\n        this._unreleasedLifeCycles[composition][stage] = promise;\n    }\n\n    /**\n     * It register's the callbacks gievn the user\n     *\n     * @param {Object} [lifeCycles={}] a object with list of callbacks\n     * @memberof LifeCycleManager\n     */\n    register (lifeCycles = {}) {\n        this._lifeCycles = lifeCycles;\n        // as we get all the callbacks, try to call them\n        // from unreleased promise map\n        this._releasePromisesFromCache();\n    }\n\n    /**\n     * Reset the promise into pending state\n     *\n     * @param {string} eventName name of the event happening\n     * @memberof LifeCycleManager\n     */\n    _resetTargetPromise (eventName) {\n        setTimeout(() => {\n            this._notifiers[eventName] = resolver;\n            this._promises.set(eventName, this._makeNotifierPromise(eventName));\n        }, 0);\n    }\n}\n","import LifeCycleManager from './lifecycle-manager';\n\nexport default LifeCycleManager;\n","/**\n * Creates a new promise when the given promise is resolved. This needs to be done so that after the lifecycle event\n * is completed, then again when the event gets completed, then a new promise gets resolved.\n *\n * @param {Promise} promise Instance of promise\n * @param {string} eventName name of event\n * @param {LifeCycleManager} context Instance of lifecyclemanager\n */\nexport const createPromise = (promise, eventName, context) => {\n    promise.then(() => {\n        const prm = context._makeNotifierPromise(eventName);\n        context._promises.set(eventName, prm);\n        createPromise(prm, eventName, context);\n    });\n};\n","import { default as DataModel } from 'datamodel';\nimport * as scales from './scales';\nimport * as colorSchemes from './color-schemes';\nimport * as STATE_NAMESPACES from './enums/namespace';\n\nconst InvalidAwareTypes = DataModel.InvalidAwareTypes;\n\nexport {\n    InvalidAwareTypes,\n    DataModel\n};\n\nexport {\n    ReservedFields,\n    CommonProps\n} from './enums';\n\nexport { STATE_NAMESPACES };\n\nexport {\n    scales,\n    colorSchemes\n};\n\nexport {\n    getNearestValue,\n    getValueParser,\n    transformColors,\n    detectColor,\n    hslToRgb,\n    rgbToHsv,\n    hexToHsv,\n    hsvToRgb,\n    escapeHTML,\n    angleToRadian,\n    generateGetterSetters,\n    getArraySum,\n    ERROR_MSG,\n    interpolator,\n    colorInterpolator,\n    numberInterpolator,\n    piecewiseInterpolator,\n    reqAnimFrame,\n    cancelAnimFrame,\n    nextAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    replaceCSSPrefix,\n    symbolFns,\n    defaultValue,\n    easeFns,\n    clone,\n    interpolateArray,\n    getMinPoint,\n    getMaxPoint,\n    getClosestIndexOf,\n    registerListeners,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    Store,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    transactor,\n    enableChainedTransaction,\n    isHTMLElem,\n    isEqual,\n    isSimpleObject,\n    nextFrame,\n    filterPropagationModel,\n    getObjProp,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    transposeArray,\n    toArray,\n    extendsClass,\n    concatModels,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    nestCollection,\n    stack,\n    getSymbol,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    hslInterpolator,\n    getSmallestDiff,\n    require,\n    formatTemporal,\n    createSelection,\n    temporalFields,\n    retrieveNearestGroupByReducers\n} from './common-utils';\n\nexport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint,\n    hasTouch\n} from './renderer-utils';\n\nexport { default as Smartlabel } from 'fusioncharts-smartlabel';\n\nexport { dataSelect, DataObject } from './DataSystem';\n\nexport { default as LifeCycleManager } from './lifecycle-manager';\n\nexport { DimensionSubtype, FieldType, MeasureSubtype, DateTimeFormatter } from 'datamodel';\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\nexport const LONGTOUCH = 'longtouch';\nexport const TOUCHDRAG = 'touchdrag';\nexport const ALL_ACTIONS = '*';\n","const SELECTION_NEW_ENTRY = 1;\nconst SELECTION_NEW_EXIT = -1;\nconst SELECTION_NULL = 0;\nconst SELECTION_OLD_ENTRY = 2;\nconst SELECTION_OLD_EXIT = -2;\n\nexport {\n    SELECTION_NEW_ENTRY,\n    SELECTION_NEW_EXIT,\n    SELECTION_NULL,\n    SELECTION_OLD_ENTRY,\n    SELECTION_OLD_EXIT\n};\n","import SelectionSet from './selection-set';\n\nexport default SelectionSet;\n","import {\n    SELECTION_NEW_ENTRY, SELECTION_NEW_EXIT, SELECTION_NULL, SELECTION_OLD_ENTRY, SELECTION_OLD_EXIT\n} from '../enums/selection';\n/* eslint-disable guard-for-in */\n\n/**\n * This component is used to keep track of the row tuples of the data which gets added and removed. This keeps\n * information of which rows are in previous and new entry set and previous and new exit set. This is initialized by\n * {@link Firebolt}.\n *\n * @public\n *\n * @class SelectionSet\n */\nclass SelectionSet {\n    /**\n     * Creates an instance of selection set\n     *\n     * @param {Array.<string>} completeSet Set of unique ids.\n     */\n    constructor (completeSet, _volatile) {\n        this.completeSet = completeSet;\n        this._set = completeSet.reduce((obj, key) => {\n            obj[key] = SELECTION_NULL;\n            return obj;\n        }, {});\n        this._volatile = _volatile;\n        this._completeSetCount = completeSet.length;\n        this._lockedSelection = {};\n        this._resetted = true;\n    }\n\n    /**\n     * Adds a set of ids to the selection set. This also moves the other rows to exit set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    add (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_ENTRY;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_ENTRY && set[key] !== SELECTION_OLD_ENTRY) {\n                set[key] = set[key] < 0 ? SELECTION_OLD_EXIT : SELECTION_NEW_EXIT;\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Adds an array of ids to the old entry set.\n     *\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    update (ids) {\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_OLD_ENTRY;\n        });\n\n        return this;\n    }\n\n    /**\n     * Moves all ids which in new entry set  to old entry set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateEntry () {\n        const set = this._set;\n\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_ENTRY ? SELECTION_OLD_ENTRY : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Moves an array of ids which are in new exit set to old exit set.\n     *\n     * @public\n     *\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateExit () {\n        const set = this._set;\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_EXIT ? SELECTION_OLD_EXIT : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Removes an array of ids from the selection set. It also moves the remaining row ids to entry set.\n     *\n     * @public\n     * @param {Array.<string>} ids Array of unique ids\n     *\n     * @return {SelectionSet}  Instance of selection set\n     */\n    remove (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_EXIT;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_EXIT && set[key] !== SELECTION_OLD_EXIT) {\n                set[key] = set[key] === 0 ? SELECTION_NEW_ENTRY : SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n\n    getSets () {\n        const set = this._set;\n        const retObj = {\n            entrySet: [[], []],\n            exitSet: [[], []],\n            completeSet: []\n        };\n\n        for (const key in set) {\n            if (set[key] > 0) {\n                set[key] === SELECTION_OLD_ENTRY && retObj.entrySet[0].push(key);\n                set[key] === SELECTION_NEW_ENTRY && retObj.entrySet[1].push(key);\n            } else if (set[key] < 0) {\n                set[key] === SELECTION_OLD_EXIT && retObj.exitSet[0].push(key);\n                set[key] === SELECTION_NEW_EXIT && retObj.exitSet[1].push(key);\n            }\n            retObj.completeSet.push(key);\n        }\n\n        ['entrySet', 'exitSet'].forEach((type) => {\n            retObj[type] = retObj[type].map(e => e.map(Number));\n        });\n        retObj.completeSet = retObj.completeSet.map(Number);\n\n        return retObj;\n    }\n\n    /**\n     * Resets an array of ids in the selection set to initial state. It sets the value of every unique id value to\n     * null in the selection set which means they are neither in entry set nor in exit set. If no ids are passed,\n     * then it resets all the ids to null.\n     *\n     * @public\n     *\n     * @param {Array} ids Array of unique ids.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    reset (ids) {\n        const set = this._set;\n        if (ids) {\n            ids.forEach((i) => {\n                set[i] = SELECTION_NULL;\n            });\n        } else {\n            const lockedSel = this._lockedSelection;\n            for (const key in set) {\n                if (!(key in lockedSel)) {\n                    set[key] = SELECTION_NULL;\n                }\n            }\n        }\n        this._resetted = true;\n        return this;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     *\n     * @public\n     *\n     * @return {Array.<string>} Array of unique ids\n     */\n    getEntrySet () {\n        const set = this._set;\n        const addSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_ENTRY && addSet.push(key);\n        }\n\n        return addSet;\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in entry set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old entry set or new entry set\n     */\n    getExistingEntrySet (addSet) {\n        const set = this._set;\n        return addSet.filter(d => set[d] === SELECTION_NEW_ENTRY || set[d] === SELECTION_OLD_ENTRY);\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old exit set or new exit set\n     */\n    getExistingExitSet (removeSet) {\n        const set = this._set;\n        return removeSet.filter(d => set[d] === SELECTION_NEW_EXIT || set[d] === SELECTION_OLD_EXIT);\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldEntry () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_ENTRY && updateSet.push(key);\n        }\n        return updateSet;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldExit () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_EXIT && updateSet.push(key);\n        }\n\n        return updateSet;\n    }\n\n    /**\n     * Gets the array of ids which are in the exit set.\n     *\n     * @public\n     * @return {Array.<string>} Array of unique ids\n     */\n    getExitSet () {\n        const set = this._set;\n        const removeSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_EXIT && removeSet.push(key);\n        }\n        return removeSet;\n    }\n\n    /**\n     * Gets all the ids which are either in exit or entry set.\n     *\n     * @public\n     * @return {Array} Array of unique ids\n     */\n    getCompleteSet () {\n        const set = this._set;\n        const completeSet = [];\n\n        for (const key in set) {\n            completeSet.push(key);\n        }\n\n        return completeSet;\n    }\n\n    getCompleteSetCount () {\n        return this._completeSetCount;\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Swaps the add set and remove set in the selection set.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    toggle () {\n        const set = this._set;\n\n        for (const key in set) {\n            if (set[key] === SELECTION_NEW_ENTRY) {\n                set[key] = SELECTION_NEW_EXIT;\n            } else if (set[key] === SELECTION_NEW_EXIT) {\n                set[key] = SELECTION_NEW_ENTRY;\n            } else if (set[key] === SELECTION_OLD_ENTRY) {\n                set[key] = SELECTION_OLD_EXIT;\n            } else {\n                set[key] = SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n}\n\nexport default SelectionSet;\n","import { clone } from 'muze-utils';\nimport * as SELECTION from '../enums/selection';\n\nexport const initializeSideEffects = (context, sideEffects) => {\n    const sideEffectsMap = context._sideEffects;\n    const config = context.config();\n    sideEffects = sideEffects instanceof Array ? sideEffects : Object.values(sideEffects);\n    sideEffects.forEach((SideEffect) => {\n        const formalName = SideEffect.formalName();\n        const sideEffectInstance = sideEffectsMap[formalName];\n        sideEffectsMap[formalName] = sideEffectInstance || new SideEffect(context);\n        const sideEffectConf = config[formalName];\n        sideEffectConf && sideEffectsMap[formalName].config(sideEffectConf);\n    });\n    return sideEffectsMap;\n};\n\nexport const initializeBehaviouralActions = (context, actions) => {\n    const dispatchableBehaviours = {};\n\n    actions = actions instanceof Array ? actions : Object.values(actions);\n    actions.forEach((Action) => {\n        dispatchableBehaviours[Action.formalName()] = new Action(context);\n    });\n    return dispatchableBehaviours;\n};\n\nexport const initializePhysicalActions = (context, actions) => {\n    const physicalActions = {};\n\n    for (const name in actions) {\n        if (!({}).hasOwnProperty.call(name, actions)) {\n            physicalActions[name] = actions[name](context);\n        }\n    }\n    return physicalActions;\n};\n\nexport const changeSideEffectAvailability = (context, fn, toEnable) => {\n    const sideEffects = context.sideEffects();\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            let change = true;\n            if (fn && fn(key) === false) {\n                change = false;\n            }\n            if (change) {\n                toEnable ? sideEffects[key].enable() : sideEffects[key].disable();\n            }\n        }\n    }\n};\n\nexport const getMergedSet = set => [...new Set([...set[0], ...set[1]])];\n\nexport const getSourceFields = (propagationInf, criteria = {}) => {\n    const sourceIdentifiers = propagationInf.sourceIdentifiers;\n    let sourceFields;\n    if (sourceIdentifiers) {\n        sourceFields = sourceIdentifiers.getSchema().map(d => d.name);\n    } else if (criteria instanceof Array) {\n        sourceFields = criteria[0];\n    } else {\n        sourceFields = Object.keys(criteria || {});\n    }\n    return sourceFields;\n};\n\nconst conditionsMap = {\n    newEntry: [SELECTION.SELECTION_NEW_ENTRY],\n    oldEntry: [SELECTION.SELECTION_OLD_ENTRY],\n    mergedEnter: [SELECTION.SELECTION_NEW_ENTRY, SELECTION.SELECTION_OLD_ENTRY],\n    newExit: [SELECTION.SELECTION_NEW_EXIT],\n    oldExit: [SELECTION.SELECTION_OLD_EXIT],\n    mergedExit: [SELECTION.SELECTION_NEW_EXIT, SELECTION.SELECTION_OLD_EXIT],\n    complete: []\n};\n\nexport const getModelFromSet = (type, model, set) => {\n    if (model) {\n        return model.select((fields, i) =>\n           (conditionsMap[type].some(condition => set[i] === condition)), {\n               saveChild: false\n           });\n    }\n    return null;\n};\n\nexport const getSetInfo = (type, set, config) => {\n    let model = null;\n    const filteredDataModel = config.filteredDataModel;\n    const selectionSet = config.selectionSet;\n    if (!config.propagationData) {\n        if (selectionSet.resetted()) {\n            model = null;\n        } else {\n            model = getModelFromSet(type, config.dataModel, config.selectionSet._set);\n        }\n    } else if (filteredDataModel) {\n        model = type === 'mergedEnter' ? filteredDataModel[0] : filteredDataModel[1];\n    }\n    return {\n        uids: set,\n        length: set.length,\n        model\n    };\n};\n\nexport const getSideEffects = (behaviour, behaviourEffectMap) => {\n    const sideEffects = [];\n    for (const key in behaviourEffectMap) {\n        const behaviours = key.split(',');\n        const found = behaviours.some(d => d === behaviour);\n        if (found) {\n            sideEffects.push({\n                effects: behaviourEffectMap[key],\n                behaviours\n            });\n        }\n    }\n    return sideEffects;\n};\n\nexport const unionSets = (context, behaviours) => {\n    let combinedSet = {};\n    const models = {\n        mergedEnter: null,\n        mergedExit: null\n    };\n    behaviours.forEach((behaviour) => {\n        const entryExitSet = context._entryExitSet[behaviour];\n        if (entryExitSet) {\n            combinedSet = Object.assign(combinedSet, clone(entryExitSet));\n            ['mergedEnter', 'mergedExit'].forEach((type) => {\n                const model = entryExitSet[type].model;\n                let existingModel = models[type];\n                if (!existingModel) {\n                    existingModel = models[type] = model;\n                } else if (`${model.getSchema().map(d => d.name).sort()}` ===\n                    `${existingModel.getSchema().map(d => d.name).sort()}`) {\n                    existingModel = models[type] = model.union(existingModel);\n                } else {\n                    existingModel = model;\n                }\n                combinedSet[type].model = existingModel;\n            });\n        }\n    });\n    return combinedSet;\n};\n","import {\n    mergeRecursive,\n    hasTouch,\n    filterPropagationModel,\n    FieldType,\n    selectElement,\n    isSimpleObject\n} from 'muze-utils';\nimport { ALL_ACTIONS } from './enums/actions';\nimport SelectionSet from './selection-set';\nimport {\n    initializeBehaviouralActions,\n    initializeSideEffects,\n    changeSideEffectAvailability,\n    initializePhysicalActions,\n    unionSets,\n    getSideEffects\n} from './helper';\n\n/**\n * This class is responsible for dispatching behavioural actions and side effects. It also keeps the information of\n * registered physical actions, behavioural actions and side effects. Also, it keeps the map of physical and behavioural\n * actions and behavioural actions and side effects. Whenever any behavioural action is dispatched, it also propagates\n * the rows which got affected to the other datamodels. This class is initialized by {@link VisualUnit} and legend to\n * manage it's interaction.\n *\n * @public\n * @class Firebolt\n * @module Firebolt\n */\nexport default class Firebolt {\n    constructor (context, actions, sideEffects, behaviourEffectMap) {\n        this.context = context;\n        this._sideEffectDefinitions = {};\n        this._sideEffects = {};\n        this._propagationInf = {};\n        this._actions = {\n            behavioural: {},\n            physical: {}\n        };\n        this._selectionSet = {};\n        this._volatileSelectionSet = {};\n        this._propagationFields = {};\n        this._sourceSideEffects = {\n            selectionBox: () => false\n        };\n        this._propagationBehaviourMap = {};\n        this._sourceBehaviours = {};\n        this._actionBehaviourMap = {};\n        this._config = {};\n        this._behaviourEffectMap = {};\n        this._entryExitSet = {};\n        this._actionHistory = {};\n        this._queuedSideEffects = {};\n\n        this.mapSideEffects(behaviourEffectMap);\n        this.registerBehaviouralActions(actions.behavioural);\n        this.registerSideEffects(sideEffects);\n        this.registerPhysicalBehaviouralMap(actions.physicalBehaviouralMap);\n        this.registerPhysicalActions(actions.physical);\n    }\n\n    config (...config) {\n        if (config.length) {\n            this._config = mergeRecursive(this._config, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    mapSideEffects (behEffectMap) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        for (const key in behEffectMap) {\n            if ({}.hasOwnProperty.call(behEffectMap, key)) {\n                const sideEffects = behEffectMap[key] || [];\n                let preventDefaultActions = false;\n                let effectNames;\n                if (isSimpleObject(sideEffects)) {\n                    effectNames = sideEffects.effects;\n                    preventDefaultActions = sideEffects.preventDefaultActions;\n                } else {\n                    effectNames = sideEffects;\n                }\n                !behaviourEffectMap[key] && (behaviourEffectMap[key] = []);\n                this._behaviourEffectMap[key] = [...new Set(preventDefaultActions ? effectNames :\n                    [...behaviourEffectMap[key], ...effectNames])];\n            }\n        }\n        return this;\n    }\n\n    registerBehaviouralActions (actions) {\n        const behaviours = initializeBehaviouralActions(this, actions);\n        this.prepareSelectionSets(behaviours);\n        Object.assign(this._actions.behavioural, behaviours);\n        return this;\n    }\n\n    prepareSelectionSets () {\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        this.initializeSideEffects();\n        return this;\n    }\n\n    applySideEffects (sideEffects, selectionSet, payload) {\n        const sideEffectStore = this.sideEffects();\n        const actionHistory = this._actionHistory;\n        const queuedSideEffects = this._queuedSideEffects;\n        sideEffects.forEach((sideEffect) => {\n            let options;\n            let name;\n            const effects = sideEffect.effects;\n            const behaviours = sideEffect.behaviours;\n            const combinedSet = unionSets(this, behaviours, selectionSet);\n            effects.forEach((effect) => {\n                if (typeof effect === 'object') {\n                    name = effect.name;\n                    options = effect.options;\n                } else {\n                    name = effect;\n                }\n\n                const sideEffectInstance = sideEffectStore[name];\n                if (sideEffectInstance.isEnabled()) {\n                    if (!sideEffectInstance.constructor.mutates() &&\n                        Object.values(actionHistory).some(d => d.isMutableAction)) {\n                        queuedSideEffects[`${name}-${behaviours.join()}`] = {\n                            name,\n                            params: [combinedSet, payload, options]\n                        };\n                    } else {\n                        this.dispatchSideEffect(name, combinedSet, payload, options);\n                    }\n                }\n            });\n        });\n        return this;\n    }\n\n    dispatchSideEffect (name, selectionSet, payload, options = {}) {\n        const sideEffectStore = this.sideEffects();\n        const sideEffect = sideEffectStore[name];\n        let disable = false;\n        if (options.filter && options.filter(sideEffect)) {\n            disable = true;\n        }\n        !disable && sideEffectStore[name].apply(selectionSet, payload, options);\n    }\n\n    registerPropagationBehaviourMap (map) {\n        this._propagationBehaviourMap = Object.assign(this._propagationBehaviourMap, map || {});\n        return this;\n    }\n\n    dispatchBehaviour (behaviour, payload, propagationInfo = {}) {\n        const propagate = propagationInfo.propagate !== undefined ? propagationInfo.propagate : true;\n        const behaviouralActions = this._actions.behavioural;\n        const action = behaviouralActions[behaviour];\n        const behaviourEffectMap = this._behaviourEffectMap;\n        const sideEffects = getSideEffects(behaviour, behaviourEffectMap);\n        this._propagationInf = propagationInfo;\n\n        if (action) {\n            const selectionSet = action.dispatch(payload);\n            const propagationSelectionSet = this.getPropagationSelectionSet(selectionSet);\n            this._entryExitSet[behaviour] = propagationSelectionSet;\n            const shouldApplySideEffects = this.shouldApplySideEffects(propagate);\n\n            if (propagate) {\n                this.propagate(behaviour, payload, selectionSet.find(d => d.sourceSelectionSet), sideEffects);\n            }\n            if (shouldApplySideEffects) {\n                const applicableSideEffects = this.getApplicableSideEffects(sideEffects, payload, propagationInfo);\n                this.applySideEffects(applicableSideEffects, propagationSelectionSet, payload);\n            }\n        }\n\n        return this;\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet.find(d => !d.sourceSelectionSet);\n    }\n\n    shouldApplySideEffects () {\n        return true;\n    }\n\n    changeBehaviourStateOnPropagation (behaviour, value) {\n        if (value instanceof Function) {\n            this._sourceBehaviours[behaviour] = value;\n        } else {\n            this._sourceBehaviours[behaviour] = () => value;\n        }\n        return this;\n    }\n\n    changeSideEffectStateOnPropagation (sideEffect, value) {\n        if (value instanceof Function) {\n            this._sourceSideEffects[sideEffect] = value;\n        } else {\n            this._sourceSideEffects[sideEffect] = () => value;\n        }\n    }\n\n    propagate () {\n        return this;\n    }\n\n    sideEffects (...sideEffects) {\n        if (sideEffects.length) {\n            this._sideEffects = sideEffects[0];\n            return this;\n        }\n        return this._sideEffects;\n    }\n\n    enableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, true);\n        return this;\n    }\n\n    disableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, false);\n        return this;\n    }\n\n    dissociateBehaviour (behaviour, physicalAction) {\n        const actionBehaviourMap = this._actionBehaviourMap;\n        for (const key in actionBehaviourMap) {\n            if (key === physicalAction) {\n                const behaviourMap = actionBehaviourMap[key];\n                behaviourMap.behaviours = behaviourMap.behaviours.filter(d => d !== behaviour);\n                this.mapActionsAndBehaviour(key);\n            }\n        }\n\n        return this;\n    }\n\n    dissociateSideEffect (sideEffect, behaviour) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        behaviourEffectMap[behaviour] = behaviourEffectMap[behaviour].filter(d => (d.name || d) !== sideEffect);\n        return this;\n    }\n\n    getApplicableSideEffects (sideEffects) {\n        return sideEffects;\n    }\n\n    attachPropagationListener (dataModel) {\n        dataModel.unsubscribe('propagation');\n        dataModel.on('propagation', this.onDataModelPropagation());\n        return this;\n    }\n\n    onDataModelPropagation () {\n        return (propValue) => {\n            const payload = propValue.payload;\n            const action = payload.action;\n\n            this.dispatchBehaviour(action, payload, {\n                propagate: false\n            });\n        };\n    }\n\n    createSelectionSet (uniqueIds, behaviouralActions) {\n        const behaviours = behaviouralActions || this._actions.behavioural;\n        const selectionSet = this._selectionSet;\n        const volatileSelectionSet = this._volatileSelectionSet;\n\n        for (const key in behaviours) {\n            if ({}.hasOwnProperty.call(behaviours, key)) {\n                selectionSet[key] = new SelectionSet(uniqueIds);\n                volatileSelectionSet[key] = new SelectionSet(uniqueIds, true);\n            }\n        }\n        this._volatileSelectionSet = volatileSelectionSet;\n        this.selectionSet(selectionSet);\n        return this;\n    }\n\n    selectionSet (...selectionSet) {\n        if (selectionSet.length) {\n            this._selectionSet = selectionSet[0];\n            return this;\n        }\n        return this._selectionSet;\n    }\n\n    initializeSideEffects () {\n        const sideEffectDefinitions = this._sideEffectDefinitions;\n        this.sideEffects(initializeSideEffects(this, sideEffectDefinitions));\n        return this;\n    }\n\n    registerPhysicalActions (actions) {\n        const initedActions = initializePhysicalActions(this, actions);\n        Object.assign(this._actions.physical, initedActions);\n        return this;\n    }\n\n    /**\n     * Allows to propagate the datamodel with only the supplied fields. When propagation is done, then the fields\n     * which are supplied for the specified behavioural action is propagated.\n     *\n     * @public\n     *\n     * @param {string} action Name of behavioural action. If '*' is specified, then for all behavioural actions it is\n     * applied.\n     * @param {Array} fields Array of field names which will be propagated.\n     * @param {boolean} append If true, then it is appended to the existing propagation data model fields else only\n     * those fields are projected from propagation data model and propagated.\n     *\n     * @return {Firebolt} Instance of firebolt\n     */\n    propagateWith (action, fields, append = false) {\n        const behaviouralActions = this._actions.behavioural;\n        if (fields.length) {\n            if (action === ALL_ACTIONS) {\n                for (const key in behaviouralActions) {\n                    this._propagationFields[key] = {\n                        fields,\n                        append\n                    };\n                }\n            } else {\n                this._propagationFields[action] = {\n                    fields,\n                    append\n                };\n            }\n            return this;\n        }\n        return this._propagationFields;\n    }\n\n    /**\n     * Map actions and behaviours\n     * @return {Firebolt} Firebolt instance\n     */\n    mapActionsAndBehaviour (phyAction) {\n        const initedPhysicalActions = this._actions.physical;\n        const map = this._actionBehaviourMap;\n\n        for (const action in map) {\n            if (!({}).hasOwnProperty.call(action, map) && action === (phyAction || action)) {\n                let target;\n                const mapObj = map[action];\n                target = mapObj.target;\n                const touch = mapObj.touch;\n                if (!target) {\n                    target = this.context.getDefaultTargetContainer();\n                }\n                const bind = hasTouch() ? touch === true || touch === undefined : !touch;\n                bind && this.bindActionWithBehaviour(initedPhysicalActions[action],\n                    target, mapObj.behaviours);\n            }\n        }\n        return this;\n    }\n\n    registerPhysicalBehaviouralMap (map) {\n        this._actionBehaviourMap = mergeRecursive(this._actionBehaviourMap, map);\n        return this;\n    }\n\n    /**\n     * Binds a target element with an action.\n     *\n     * @param {Function} action Action method\n     * @param {string} target Class name of element\n     * @param {Array} behaviourList Array of behaviours\n     * @return {FireBolt} Instance of firebolt\n     */\n    bindActionWithBehaviour (action, targets, behaviourList) {\n        if (typeof (targets) === 'string') {\n            targets = [targets];\n        }\n        targets.forEach((target) => {\n            const mount = this.context.mount();\n            const nodes = target.node instanceof Function ? target : selectElement(mount).selectAll(target);\n            if (!nodes.empty()) {\n                if (nodes instanceof Array) {\n                    nodes.forEach((node) => {\n                        action(selectElement(node), behaviourList);\n                    });\n                } else {\n                    action(nodes, behaviourList);\n                }\n            }\n        });\n        return this;\n    }\n\n    getPropagationInf () {\n        return this._propagationInf;\n    }\n\n    getAddSetFromCriteria (criteria, propagationInf = {}) {\n        const context = this.context;\n        const filteredDataModel = propagationInf.data ? propagationInf.data :\n            context.getDataModelFromIdentifiers(criteria, 'all');\n        const xFields = context.fields().x || [];\n        const yFields = context.fields().y || [];\n        const xMeasures = xFields.every(field => field.type() === FieldType.MEASURE);\n        const yMeasures = yFields.every(field => field.type() === FieldType.MEASURE);\n        return {\n            model: filteredDataModel,\n            uids: criteria === null ? null : (propagationInf.data ? filterPropagationModel(this.getFullData(),\n                propagationInf.data[0], xMeasures && yMeasures).getData().uids : filteredDataModel[0].getData().uids)\n        };\n    }\n\n    getSelectionSets (action) {\n        const sourceId = this.context.id();\n        const propagationInf = this._propagationInf || {};\n        const propagationSource = propagationInf.sourceId;\n        let applicableSelectionSets = [];\n        if (propagationSource !== sourceId) {\n            applicableSelectionSets = [this._volatileSelectionSet[action]];\n        }\n\n        if (propagationSource) {\n            applicableSelectionSets.push(this.selectionSet()[action]);\n        }\n        return applicableSelectionSets;\n    }\n\n    getFullData () {\n        return this.context.data();\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Returns the entry and exit set information of the specified behavioural action.\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of behavioural action.\n     *\n     * @return {Object} Entry exit set information.\n     */\n    getEntryExitSet (behaviour) {\n        return this._entryExitSet[behaviour];\n    }\n}\n","import { getSetInfo, getMergedSet, getSourceFields } from '../../helper';\n\n/**\n * This is the base class has all the common functionalities needed for all behavioural actions. Any other behavioural\n * action needs to extend this class.\n *\n * @public\n * @class GenericBehaviour\n * @module GenericBehaviour\n */\nexport default class GenericBehaviour {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n    }\n\n    /**\n     * Returns entry and exit set information. This method is called by firebolt when ```dispatchBehaviour``` is called\n     * dynamically or when any physical action is triggered on the chart.\n     *\n     * @param {Object} payload Payload information.\n     * @param {Object|Array} payload.criteria Identifiers of data interacted with.\n     *\n     * @return {Array} Entry and exit set information.\n     */\n    dispatch (payload) {\n        const criteria = payload.criteria;\n        const firebolt = this.firebolt;\n        const formalName = this.constructor.formalName();\n        const selectionSets = firebolt.getSelectionSets(formalName);\n        const {\n            model: filteredDataModel,\n            uids\n        } = this.firebolt.getAddSetFromCriteria(criteria, this.firebolt.getPropagationInf());\n        const entryExitSets = selectionSets.map((selectionSet) => {\n            this.setSelectionSet(uids, selectionSet);\n            return this.getEntryExitSet(selectionSet, filteredDataModel, payload);\n        });\n\n        return entryExitSets;\n    }\n\n    /**\n     * Updates the selection set by adding uids to the instance of {@link SelectionSet} or removing them.\n     * {@link SelectionSet} keeps the information of which rows are in the entry set and exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of row ids which got affected during interaction.\n     * @param {SelectionSet} selectionSet Instance of selection set.\n     *\n     * @return {GenericBehaviour} Instance of behaviour.\n     */\n    setSelectionSet () {\n        return this;\n    }\n\n    getEntryExitSet (selectionSet, filteredDataModel, payload) {\n        const {\n            entrySet,\n            exitSet,\n            completeSet\n        } = selectionSet.getSets();\n        const propagationInf = this.firebolt.getPropagationInf();\n        const dataModel = this.firebolt.getFullData();\n        const setConfig = {\n            isSourceFieldPresent: propagationInf.isSourceFieldPresent,\n            dataModel,\n            filteredDataModel,\n            propagationData: propagationInf.data,\n            selectionSet\n        };\n\n        return {\n            entrySet: [getSetInfo('oldEntry', entrySet[0], setConfig),\n                getSetInfo('newEntry', entrySet[1], setConfig)],\n            exitSet: [getSetInfo('oldEntry', exitSet[0], setConfig),\n                getSetInfo('newExit', exitSet[1], setConfig)],\n            mergedEnter: getSetInfo('mergedEnter', getMergedSet(entrySet), setConfig),\n            mergedExit: getSetInfo('mergedExit', getMergedSet(exitSet), setConfig),\n            completeSet: getSetInfo('complete', completeSet, setConfig),\n            isSourceFieldPresent: propagationInf.isSourceFieldPresent,\n            fields: getSourceFields(propagationInf, payload.criteria),\n            sourceSelectionSet: selectionSet._volatile === true\n        };\n    }\n\n    static mutates () {\n        return false;\n    }\n\n    enable () {\n        this._enabled = true;\n    }\n\n    disable () {\n        this._enabled = false;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n}\n\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class VolatileBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n                // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                    || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            selectionSet.updateExit();\n            const { entrySet } = selectionSet.getSets();\n            selectionSet.reset(getMergedSet(entrySet));\n            selectionSet.add(addSet);\n            selectionSet.update(existingAddSet);\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n    }\n}\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n","import VolatileBehaviour from './volatile';\nimport { HIGHLIGHT } from '../../enums/behaviours';\n\nexport default class HighlightBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return HIGHLIGHT;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport * as BEHAVIOURNAMES from '../../enums/behaviours';\n\n/**\n * This is the behaviour for brushing a region on the chart. It accepts a payload\n * which contains the x and y range of the data and other configuration. It will then\n * create a selection box from the range and select the points which fall within the range.\n */\nexport default class BrushBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return BEHAVIOURNAMES.BRUSH;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport { FILTER } from '../../enums/behaviours';\n\nexport default class FilterBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return FILTER;\n    }\n\n    static mutates () {\n        return true;\n    }\n}\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class PersistentBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            const propagationInf = this.firebolt.getPropagationInf();\n            // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            if (propagationInf.propagate === false) {\n                selectionSet.updateExit();\n                const { entrySet } = selectionSet.getSets();\n                selectionSet.reset(getMergedSet(entrySet));\n                selectionSet.add(addSet);\n                selectionSet.update(existingAddSet);\n            } else {\n                // existing add set\n                if (existingAddSet.length) {\n                    selectionSet.updateExit();\n                    selectionSet.remove(existingAddSet);\n                } else {\n                    selectionSet.updateEntry();\n                    selectionSet.add(addSet);\n                }\n                const { exitSet } = selectionSet.getSets();\n                const mergedExitSet = getMergedSet(exitSet);\n                const completeSetCount = selectionSet.getCompleteSet().length;\n                if (mergedExitSet.length === completeSetCount) {\n                    selectionSet.reset();\n                }\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n\n        return this;\n    }\n}\n","import PersistentBehaviour from './persistent';\nimport { SELECT } from '../../enums/behaviours';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return SELECT;\n    }\n}\n\n","import { DimensionSubtype, MeasureSubtype } from 'muze-utils';\n/**\n * Gets the drag action configuration\n * @param {VisualUnit} instance instance of visual unit\n * @param {Object} config x y positions\n * @return {Object} Payload of behaviour\n*/\n/* istanbul ignore next */ const getDragActionConfig = (sourceInfo, config, fieldsConfig) => {\n    if (!(sourceInfo.axes.x || sourceInfo.axes.y)) {\n        return {\n            criteria: null\n        };\n    }\n\n    const axes = sourceInfo.axes;\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const axisFields = sourceInfo.fields;\n    const xField = axisFields.x[0].getMembers()[0];\n    const yField = axisFields.y[0].getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n    const dimensions = {};\n    const stPos = config.startPos;\n    const endPos = config.endPos;\n\n    if (stPos.x === endPos.x && stPos.y === endPos.y) {\n        return {\n            criteria: null\n        };\n    }\n\n    const dragDim = xFieldType === MeasureSubtype.CONTINUOUS ? (yFieldType === MeasureSubtype.CONTINUOUS ?\n        ['x', 'y'] : ['y']) : ['x'];\n    const criteria = {};\n    const isXDimension = xFieldType === DimensionSubtype.CATEGORICAL;\n    const isYDimension = yFieldType === DimensionSubtype.CATEGORICAL;\n    const xRange = xAxis.invertExtent(stPos.x, endPos.x);\n    const yRange = yAxis.invertExtent(stPos.y, endPos.y);\n    const selectedDomains = {\n        x: stPos.x === endPos.x ? [] : (isXDimension ? xRange : xRange.sort((a, b) => a - b)),\n        y: stPos.y === endPos.y ? [] : (isYDimension ? yRange : yRange.sort((a, b) => a - b))\n    };\n    const rangeObj = {};\n\n    if (dragDim.length === 2) {\n        rangeObj[xField] = selectedDomains.x;\n        rangeObj[yField] = selectedDomains.y;\n        if (xField === yField) {\n            const xdom = selectedDomains.x;\n            const ydom = selectedDomains.y;\n            const min = xdom[0] > ydom[0] ? ydom : xdom;\n            const max = min === ydom ? xdom : ydom;\n            if (min[1] < max[0]) {\n                rangeObj[xField] = [];\n            } else {\n                rangeObj[xField] = [max[0], min[1] < max[1] ? min[1] : max[1]];\n            }\n            dimensions.x = [stPos.x, endPos.x];\n            dimensions.y = [stPos.y, endPos.y];\n        }\n    } else {\n        criteria[dragDim[0]] = selectedDomains[dragDim[0]] || [];\n\n        if (dragDim[0] === 'x') {\n            rangeObj[xField] = criteria.x;\n            if (xFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.x = (config.snap && stPos.x !== endPos.x) ? xAxis.getNearestRange(stPos.x, endPos.x) :\n                    [stPos.x, endPos.x];\n            }\n        } else {\n            rangeObj[yField] = criteria.y;\n            if (yFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.y = (config.snap && stPos.y !== endPos.y) ? yAxis.getNearestRange(stPos.y, endPos.y) :\n                    [stPos.y, endPos.y];\n            }\n        }\n    }\n\n    return {\n        criteria: rangeObj,\n        dimensions\n    };\n};\n\nexport default getDragActionConfig;\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './drag-action-config';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const attachDragEvent = (targetEl, behaviours, firebolt, touch) => {\n    let startPos = {};\n    let endPos = {};\n    let drawingInf;\n\n    const d3Drag = getD3Drag();\n    let touchStart;\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n        drawingInf = firebolt.context.getDrawingContext();\n        touchStart = new Date().getTime();\n    }).on('drag', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        if (touch && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos\n        }, firebolt.context.data().getFieldsConfig());\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }).on('end', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        const duration = new Date().getTime() - touchStart;\n\n        if (touch && duration > 100 && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos,\n            snap: true\n        }, firebolt.context.data().getFieldsConfig());\n        payload.dragEnd = true;\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }));\n};\n\n","import { getClientPoint, getEvent } from 'muze-utils';\nimport { CONSOLIDATED, FRAGMENTED } from '../../enums/constants';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} instance instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const context = firebolt.context;\n        const tooltipConf = context.config().interaction.tooltip;\n        const mode = tooltipConf.mode;\n        const pos = getClientPoint(context.getDrawingContext().svgContainer, event);\n        const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n            getAllPoints: mode === CONSOLIDATED || mode === FRAGMENTED,\n            data: args,\n            event\n        });\n        const payload = {\n            criteria: nearestPoint ? nearestPoint.id : null,\n            showInPosition: nearestPoint.showInPosition,\n            target: nearestPoint.target,\n            position: pos,\n            mode\n        };\n\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                            criteria: null\n                        }));\n                    });\n};\n\nexport default hover;\n","export const CLASSPREFIX = 'muze';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\n\n","import { getClientPoint } from 'muze-utils';\n\nexport const generatePayloadFromEvent = function (args, event, firebolt) {\n    const context = firebolt.context;\n    const pos = getClientPoint(context.getDrawingContext().svgContainer, event.touches ? event.touches[0] : event);\n    const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n        data: args,\n        event\n    });\n    return {\n        criteria: nearestPoint ? nearestPoint.id : null,\n        showInPosition: nearestPoint.showInPosition,\n        target: nearestPoint.target,\n        position: pos\n    };\n};\n","import { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport { longtouch } from './longtouch';\nimport { touchdrag } from './touch-drag';\nimport * as ACTIONNAMES from '../../enums/actions';\nimport click from './click';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click,\n    [ACTIONNAMES.LONGTOUCH]: longtouch,\n    [ACTIONNAMES.TOUCHDRAG]: touchdrag\n};\n\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt);\n};\n\nexport default drag;\n","/* global setTimeout */\nimport { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nexport const longtouch = firebolt => (targetEl, behaviours) => {\n    let event;\n    let touchEnd;\n    const dispatchBehaviour = function (args) {\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    touchEnd = false;\n    event = getEvent();\n    targetEl.on('touchstart', (args) => {\n        event = getEvent();\n        touchEnd = false;\n        setTimeout(() => {\n            if (!touchEnd) {\n                dispatchBehaviour(args);\n            } else {\n                behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                    criteria: null\n                }));\n            }\n        }, 100);\n    }).on('touchend', () => {\n        touchEnd = true;\n    });\n};\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const touchdrag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt, true);\n};\n\n","export const PROPS = {\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import GenericSideEffect from './generic-sideeffect';\n\nexport default GenericSideEffect;\n","import { mergeRecursive, getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { PROPS } from './props';\n\n/**\n * This is the base class of all side effects. It contains all common methods like setting configuration, disabling,\n * enabling side effect, etc. Every new side effect has to inherit this class or {@link SpawnableSideEffect} or\n * {@link SurrogateSideEffect} class. All side effects are initialized by firebolt. The instance of firebolt is\n * passed on initialization. The firebolt instance contains ```context``` which is the instance of visual unit with\n * which the firebolt is attached.\n *\n * @public\n * @class\n * @module GenericSideEffect\n */\nexport default class GenericSideEffect {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n        this._strategy = 'default';\n        this._config = {};\n        this._id = getUniqueId();\n        this._strategies = {};\n        generateGetterSetters(this, PROPS);\n        this.config(this.constructor.defaultConfig());\n    }\n\n    /**\n     * Returns the default configuration of the side effect.\n     *\n     * @public\n     * @return {Object} Default configuration of side effect.\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the formal name of a side effect. This method must be implemented by all side effects which changes\n     * or adds any element in the visualization.\n     *\n     * @return {string} Formal name of side effect.\n     */\n    static formalName () {\n        return 'generic';\n    }\n\n    static target () {\n        return 'all';\n    }\n\n    /**\n     * Returns true if the side effects mutates the data of chart.\n     *\n     * @public\n     *\n     * @return {boolean} If the side effect mutates the data of chart.\n     */\n    static mutates () {\n        return false;\n    }\n\n    /**\n     * Sets or gets the configuration of side effect.\n     *\n     * When setter,\n     * @param {Object} config Configuration of side effect.\n     * @return {GenericSideEffect} Side effect instance.\n     *\n     * When getter,\n     * @return {Object} Side effect configuration.\n     */\n    config (...params) {\n        if (params.length) {\n            this._config = mergeRecursive(this._config, params[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    disable () {\n        this._enabled = false;\n        return this;\n    }\n\n    enable () {\n        this._enabled = true;\n        return this;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n\n    /**\n     * Applies the interaction effect on the chart. This is where the implemntation of the side effect is defined.\n     *\n     * @param {Object} selectionSet Contains the entry and exit set of data which got affected during interaction.\n     * @param {Object} selectionSet.mergedEnter Combined previous entry and new entry set.\n     * @param {DataModel} selectionSet.mergedEnter.model Instance of data model containing all rows which got\n     * affected during interaction.\n     * @param {Array} selectionSet.mergedEnter.uids Ids of all rows which were affected during interaction.\n     * @param {Object} selectionSet.mergedExit Combined previous exit and new exit set.\n     * @param {DataModel} selectionSet.mergedExit.model Instance of data model containing rows which were not affected\n     * during interaction.\n     * @param {Array} selectionSet.mergedExit.uids Ids of all rows which were not affected during interaction.\n     * @param {Object} selectionSet.entrySet Entry set information.\n     * @param {Array} selectionSet.entrySet[0].uids All row ids which got affected during previous interaction.\n     * @param {Array} selectionSet.entrySet[1].uids All row ids which got affected during current interaction.\n     * @param {Array} selectionSet.exitSet[0].uids All row ids which were not affected during previous interaction.\n     * @param {Array} selectionSet.exitSet[1].uids All row ids which were not affected during current interaction.\n     * @param {Object} payload Payload information of the behavioural action on trigger of which this side effect\n     * is applied.\n     * @param {Object} options Optional information for side effect like strategy, etc.\n     */\n    apply () {\n        return this;\n    }\n\n    /**\n     * Adds a new strategy method for this side effect. The strategy method is implemented by side effect class.\n     *\n     * @param {string} name Name of the strategy.\n     * @param {Function} fn Strategy method.\n     *\n     * @return {GenericSideEffect} Instance of side effect.\n     */\n    addStrategy (name, fn) {\n        this._strategies[name] = fn;\n        return this;\n    }\n}\n","import GenericSideEffect from './generic';\n\n/**\n * This class is inherited by all side effects which changes the look of any existing elements in the visualization.\n * For example, if a side effect wants to change the color of bar plots, then it is a surrogate side effect.\n *\n * To use this,\n * ```\n *      const SurrogateSideEffect = muze.SideEffects.standards.SurrogateSideEffect;\n *\n *      class BarColorChanger extends SurrogateSideEffect {\n *          static formalName () {\n *              return 'colorChanger';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n *\n * @module SurrogateSideEffect\n * @class\n * @extends GenericSideEffect\n */\nexport default class SurrogateSideEffect extends GenericSideEffect {\n    /**\n     * Applies or removes interaction styles from plot elements. An array of row ids needs to be passed\n     * which identifies the plot elements and applies styles to them.\n     *\n     * To apply the interaction style,\n     * ```\n     *      const entryRowIds = entrySet[0].uids;\n     *      const interactionStyle = [{\n     *          type: 'fill',\n     *          intensity: [0, 0, 15, 0] // hsla configuration\n     *      }];\n     *\n     *      this.applyInteractionStyle(entryRowIds, interactionStyle, 'brighten', true);\n     * ```\n     * @public\n     * @param {Array} set Array of row ids.\n     * @param {Array} config Style configuration.\n     * @param {Object} config[0] fill or stroke configuration.\n     * @param {string} config[0].type Type of style - fill or stroke.\n     * @param {Array} config[0].intensity hsla configuration.\n     * @param {string} interactionType Type of interaction. This is needed for storing the styles for\n     * each type of interaction in the plot elements.\n     * @param {boolean} apply Whether to apply or remove the interaction style.\n     *\n     * @return {SurrogateSideEffect} Instance of surrogate side effect.\n     */\n    applyInteractionStyle (set, config = {}, interactionType, apply) {\n        const layers = this.firebolt.context.layers();\n        layers.forEach(layer => layer.config().interactive !== false &&\n            layer.applyInteractionStyle(interactionType, set.uids, apply));\n        return this;\n    }\n}\n","import { makeElement } from 'muze-utils';\n\nimport GenericSideEffect from './generic';\n\n/**\n * Any side effect which will add any new element to the chart like drawing a rectangular box or any annotation over\n * the chart needs to inherit this class. This class has methods which returns the container where the dom elements\n * needs to be created.\n *\n * To use this,\n * ```\n *      const SpawnableSideEffect = muze.SideEffects.standards.SpawnableSideEffect;\n *\n *      class SelectionBox extends SpawnableSideEffect {\n *          static formalName () {\n *              return 'selectionBox';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n * @class\n * @extends GenericSideEffect\n * @module SpawnableSideEffect\n */\nexport default class SpawnableSideEffect extends GenericSideEffect {\n    /**\n     * Creates a html or svg element in the container.\n     *\n     * @public\n     * @param {SVGElement|HTMLElement} container Container where the dom element will be rendered.\n     * @param {string} elemType Type of dom element.\n     * @param {Array} data Array of objects with which the dom elements will be binded.\n     * @param {string} className class name of the element.\n     *\n     * @return {Selection} D3 Selection of the element.\n     */\n    createElement (container, elemType, data, className, callbacks) {\n        return makeElement(container, elemType, data, className, callbacks);\n    }\n\n    /**\n     * Returns the drawing information for side effect like svg container, dimensions of the visual unit.\n     *\n     * @public\n     * @return {Object} Drawing information for side effect.\n     * ```\n     *      sideEffectGroup: // svg container where the side effect needs to be appended.\n     *      svgContainer: // svg container of the {@link VisualUnit}.\n     *      htmlContainer: // html div container of the {@link VisualUnit}.\n     *      width: // Width of the {@link VisualUnit}\n     *      height: // Height of the {@link VisualUnit}\n     * ```\n     */\n    drawingContext (...drawingContext) {\n        if (drawingContext.length) {\n            this._drawingContext = drawingContext[0];\n            return this;\n        }\n        return this._drawingContext();\n    }\n\n    show () {\n        return this;\n    }\n\n    hide () {\n        return this;\n    }\n}\n","import { selectElement } from 'muze-utils';\n\nexport const getBoxDimensionsFromPayload = (payload, axes, axisFields) => {\n    let x1;\n    let x2;\n    let y1;\n    let y2;\n    let xRange;\n    let yRange;\n    let direction;\n    const criteria = payload.criteria;\n    const dimensions = payload.dimensions || {};\n    const xDim = dimensions.x;\n    const yDim = dimensions.y;\n\n    if (criteria === null) {\n        return null;\n    }\n\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const xLinear = xAxis.constructor.type() === 'linear';\n    const yLinear = yAxis.constructor.type() === 'linear';\n    const xField = `${axisFields.x[0]}`;\n    const yField = `${axisFields.y[0]}`;\n    const xCriteria = criteria[xField];\n    const yCriteria = criteria[yField];\n\n    if (xCriteria && xCriteria[0] instanceof Array) {\n        xRange = xCriteria[0];\n        yRange = xCriteria[1];\n    } else {\n        xRange = xCriteria || [];\n        yRange = yCriteria || [];\n    }\n    direction = xCriteria && yCriteria ? 'both' : (xCriteria ? 'vertical' : 'horizontal');\n    if (xRange && xRange.length) {\n        if ((yAxis.constructor.type() === 'band' && xLinear)) {\n            x1 = x2 = undefined;\n            direction = 'horizontal';\n        } else {\n            const domain = xAxis.domain();\n            const bandScale = xAxis.constructor.type() === 'band';\n            let x1Val;\n            let x2Val;\n            if (bandScale) {\n                let x1DomainIndex = domain.indexOf(xRange[0]);\n                let x2DomainIndex = domain.indexOf(xRange[xRange.length - 1]);\n                [x1DomainIndex, x2DomainIndex] = [x1DomainIndex, x2DomainIndex].sort((a, b) => a - b);\n                x1Val = domain[x1DomainIndex];\n                x2Val = domain[x2DomainIndex];\n            } else {\n                x1Val = xRange[0];\n                x2Val = xRange[xRange.length - 1];\n            }\n            x1 = xAxis.getScaleValue(x1Val);\n            x2 = xAxis.getScaleValue(x2Val);\n            x2 += bandScale ? xAxis.getUnitWidth() : 0;\n        }\n    } else {\n        x1 = x2 = undefined;\n    }\n    if (yRange && yRange.length) {\n        if ((xAxis.constructor.type() === 'band' && yLinear)) {\n            y1 = y2 = undefined;\n            direction = 'vertical';\n        } else {\n            const domain = yAxis.domain();\n            const bandScale = yAxis.constructor.type() === 'band';\n            let y1Val;\n            let y2Val;\n            if (bandScale) {\n                let y1DomainIndex = domain.indexOf(yRange[0]);\n                let y2DomainIndex = domain.indexOf(yRange[yRange.length - 1]);\n                [y1DomainIndex, y2DomainIndex] = [y1DomainIndex, y2DomainIndex].sort(((a, b) => b - a));\n                y1Val = domain[y1DomainIndex];\n                y2Val = domain[y2DomainIndex];\n            } else {\n                y1Val = yRange[0];\n                y2Val = yRange[yRange.length - 1];\n            }\n            y1 = yAxis.getScaleValue(y1Val);\n            y2 = yAxis.getScaleValue(y2Val);\n            y2 += yAxis.constructor.type() === 'band' ? yAxis.getUnitWidth() : 0;\n        }\n    } else {\n        y1 = y2 = undefined;\n    }\n\n    if ((yLinear && xLinear) || !payload.dragEnd) {\n        if (xDim) {\n            [x1, x2] = xDim;\n        }\n        if (yDim) {\n            [y1, y2] = yDim;\n        }\n    }\n\n    return {\n        dimension: {\n            x1,\n            x2,\n            y1,\n            y2\n        },\n        direction\n    };\n};\n\nexport const changeVisibility = (context, sideEffectGroup, visible) => {\n    const config = context.config();\n    const className = config.defClassName;\n    const classPrefix = config.classPrefix;\n    selectElement(sideEffectGroup).selectAll(`.${classPrefix}-${className}`)\n                    .style('display', visible ? 'block' : 'none');\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    isValidValue\n} from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport './styles.scss';\nimport SpawnableSideEffect from '../spawnable';\nimport { selectionBoxDrag } from '../../actions/physical/selection-box-drag';\nimport { getBoxDimensionsFromPayload, changeVisibility } from './helper';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\nclass SelectionBox extends SpawnableSideEffect {\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            defClassName: 'selection-box-group',\n            className: '',\n            classPrefix: CLASSPREFIX,\n            box: {\n                defClassName: 'selection-box',\n                className: ''\n            },\n            transition: {\n                duration: 200\n            }\n        };\n    }\n\n    static formalName () {\n        return 'selectionBox';\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     * @param {Object} dimension Dimensions of the selection box.\n     * @param {number} dimension.x1 Starting x position\n     * @param {number} dimension.x2 Ending x position\n     * @param {number} dimension.y1 Starting y position\n     * @param {number} dimension.y2 Ending y position\n     * @param {Object} conf Configuration needed to draw the selection box\n     * @param {number} unitWidth Width of the visual unit.\n     * @param {number} unitHeight Height of the visual unit.\n     */\n    apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const config = this._config;\n        const boxConf = config.box;\n        const firebolt = this.firebolt;\n        const drawingInf = this.drawingContext();\n        const mountPoint = drawingInf.sideEffectGroup;\n        const unitWidth = drawingInf.width;\n        const unitHeight = drawingInf.height;\n        const classPrefix = config.classPrefix;\n        const selectionGroupClassName = config.defClassName;\n\n        if (payload.criteria === null) {\n            this.hide(drawingInf);\n            return this;\n        }\n\n        const sourceInf = firebolt.context.getSourceInfo();\n        const { dimension, direction } = getBoxDimensionsFromPayload(payload, sourceInf.axes,\n            sourceInf.fields);\n        const transition = payload.dragEnd && config.transition;\n\n        if (direction === 'both' || direction === 'vertical') {\n            x = Math.min(dimension.x1, dimension.x2);\n            width = Math.abs(dimension.x2 - dimension.x1);\n        } else {\n            x = 0;\n            width = unitWidth;\n        }\n        if (direction === 'both' || direction === 'horizontal') {\n            y = Math.min(dimension.y1, dimension.y2);\n            height = Math.abs(dimension.y2 - dimension.y1);\n        } else {\n            height = unitHeight;\n            y = 0;\n        }\n        this.show(drawingInf);\n        // Create the data array for drawing the rectangle\n        const points = [\n            {\n                x,\n                y,\n                width,\n                height\n            }\n        ];\n        // Create the container group for selection box.\n        const selectionGroup = makeElement(selectElement(mountPoint), 'g', [1],\n            `.${classPrefix}-${selectionGroupClassName}`);\n        const sideEffect = this;\n        const selection = selectionGroup.selectAll('rect').data(points);\n        const selectionBox = selection.enter().append('rect')\n                        .each(function () {\n                            selectionBoxDrag(firebolt)(selectElement(this), ['brush'], sideEffect);\n                        })\n                        .merge(selection)\n                        .each(function (attrs) {\n                            let element = selectElement(this);\n                            transition && (element = element.transition().duration(transition.duration));\n                            for (const key in attrs) {\n                                if ({}.hasOwnProperty.call(attrs, key)) {\n                                    isValidValue(attrs[key]) && element.attr(key, attrs[key]);\n                                }\n                            }\n                        });\n        // Get the qualified class name for selection box rectangle\n        const boxClassName = getQualifiedClassName(boxConf.defClassName, this._id, classPrefix);\n        selectionBox.classed(boxClassName.join(' '), true);\n        selectionBox.classed(boxConf.className, true);\n\n        return this;\n    }\n\n    hide (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, false);\n    }\n\n    show (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, true);\n    }\n}\n\nexport default SelectionBox;\n\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './helpers/drag-action-config';\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let subject;\n    let drawingInf;\n    const context = firebolt.context;\n    const onDrag = (payload) => {\n        behaviours.forEach(action => firebolt.dispatchBehaviour(action, payload));\n    };\n    const d3Drag = getD3Drag();\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        drawingInf = context.getDrawingContext();\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        subject.x += event.dx;\n        subject.y += event.dy;\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                }\n            }, context.data().getFieldsConfig());\n            onDrag(payload);\n        }\n    }).on('end', () => {\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                },\n                snap: true\n            }, context.data().getFieldsConfig());\n            payload.dragEnd = true;\n            onDrag(payload);\n        }\n    }));\n};\n","export const CLASSPREFIX = 'muze';\nexport const ARROW_RIGHT = 'right';\nexport const ARROW_TOP = 'top';\nexport const ARROW_BOTTOM = 'bottom';\nexport const ARROW_LEFT = 'left';\nexport const TOOLTIP_LEFT = 'left';\nexport const TOOLTIP_RIGHT = 'right';\nexport const TOOLTIP_BOTTOM = 'bottom';\nexport const TOOLTIP_TOP = 'top';\nexport const INITIAL_STYLE = {\n    position: 'absolute',\n    width: 0,\n    height: 0\n};\n","import { CLASSPREFIX } from './constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'tooltip-box',\n    connectorClassName: 'tooltip-connectors',\n    className: '',\n    row: {\n        margin: 0\n    },\n    content: {\n        spacing: 5,\n        iconContainerSize: 10,\n        iconScale: 1,\n        iconShape: 'circle',\n        iconColor: '#ff0000',\n        rowMargin: '0px',\n        margin: 10,\n        separator: ':',\n        className: 'tooltip-content-container',\n        parentClassName: 'tooltip-content-parent-container'\n    },\n    arrow: {\n        size: 10,\n        disabled: false,\n        defClassName: 'tooltip-arrow',\n        className: '',\n        color: 'rgba(195,195,195,0.85)'\n    }\n};\n","import { getQualifiedClassName } from 'muze-utils';\nimport { TOOLTIP_LEFT, TOOLTIP_RIGHT, ARROW_RIGHT, ARROW_LEFT, TOOLTIP_BOTTOM } from './constants';\n\nexport const getArrowPos = (orient, dim, measurement, config) => {\n    let arrowPos;\n    const { x, y, boxHeight, boxWidth } = measurement;\n    const arrowDisabled = config.arrow.disabled;\n    const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n\n    if (orient === ARROW_LEFT || orient === ARROW_RIGHT) {\n        let start = 0;\n        let diff = boxHeight / 2;\n        const plotBottom = dim.y + dim.height;\n        const boxBottom = y + boxHeight;\n\n        if (dim.y > y) {\n            start = dim.y - y;\n            diff = (plotBottom >= boxBottom ? (boxBottom - dim.y) : dim.height) / 2;\n        } else if (boxBottom > plotBottom) {\n            diff = Math.abs(y - (dim.y + dim.height)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    } else {\n        let start = 0;\n        let diff = boxWidth / 2;\n        const plotRight = dim.x + dim.width;\n        const boxRight = x + boxWidth;\n\n        if (dim.x > x) {\n            start = dim.x - x;\n            diff = (plotRight >= boxRight ? (boxRight - dim.x) : dim.width) / 2;\n        } else if (boxRight > plotRight) {\n            diff = Math.abs(x - (dim.x + dim.width)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    }\n    return arrowPos;\n};\n\n/**\n * Places the arrow in the specified arrow position. It also applies appropriate arrow\n * class name to the arrow element.\n * @param {string} position Left, bottom or right position of the arrow;\n * @param {number} arrowPos position of arrow in pixels\n * @return {Tooltip} Instance of tooltip.\n */\nexport const placeArrow = (context, position, arrowPos) => {\n    const tooltipArrow = context._tooltipArrow;\n    const tooltipBackground = context._tooltipBackground;\n    const config = context._config;\n    const classPrefix = config.classPrefix;\n    const arrowConf = config.arrow;\n    const className = getQualifiedClassName(arrowConf.defClassName, context._id, config.classPrefix);\n\n    tooltipArrow.style('display', 'block');\n    tooltipArrow.attr('class', `${className.join(' ')}`);\n    if (position === TOOLTIP_LEFT || position === TOOLTIP_RIGHT) {\n        tooltipArrow.style('top', `${arrowPos}px`);\n        tooltipArrow.style('left', '');\n        tooltipBackground.style('top', `${arrowPos}px`);\n        tooltipBackground.style('left', '');\n    } else {\n        position === TOOLTIP_BOTTOM ? tooltipArrow.style('top', '100%') : tooltipArrow.style('top',\n            `-${arrowConf.size}px`);\n        tooltipArrow.style('left', `${arrowPos}px`);\n        position === TOOLTIP_BOTTOM ? tooltipBackground.style('top', '100%') : tooltipBackground.style('top',\n            `-${arrowConf.size + 3}px`);\n        tooltipBackground.style('left', `${arrowPos}px`);\n    }\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow`, true);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${context._arrowOrientation}`, false);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${position}`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${context._arrowOrientation}`, false);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${position}`, true);\n    return this;\n};\n\nexport const reorderContainers = (parentContainer, className) => {\n    parentContainer.selectAll(className).sort((a, b) => a - b);\n};\n","import {\n    formatTemporal,\n    DimensionSubtype,\n    MeasureSubtype,\n    FieldType,\n    DataModel,\n    defaultValue\n} from 'muze-utils';\n\nconst { InvalidAwareTypes } = DataModel;\n\nconst formatters = (formatter, interval, valueParser) => ({\n    [DimensionSubtype.TEMPORAL]: (value) => {\n        if (value instanceof InvalidAwareTypes) {\n            return valueParser(value);\n        }\n        return formatTemporal(value, interval);\n    },\n    [MeasureSubtype.CONTINUOUS]: value => (value instanceof InvalidAwareTypes ? valueParser(value) :\n        formatter(value.toFixed(2))),\n    [DimensionSubtype.CATEGORICAL]: value => valueParser(value)\n});\n\nconst getDefaultTooltipFormatterFn = (formatter, defaultFormatter) => defaultValue(formatter, defaultFormatter);\n\nconst getTabularData = (dataObj, context, defaultFormatter) => {\n    const rows = [];\n    const { data, schema, fieldspace } = dataObj;\n    rows.push(schema.map(d => d.name));\n    const { valueParser, timeDiffs } = context;\n    data.forEach((d) => {\n        const row = [];\n        schema.forEach((fieldObj, i) => {\n            const interval = fieldObj.subtype === DimensionSubtype.TEMPORAL ? timeDiffs[fieldObj.name] : 0;\n            const numberFormat = fieldObj.type === FieldType.MEASURE && fieldspace.fields[i].numberFormat();\n            const formatterFn = getDefaultTooltipFormatterFn(formatters(numberFormat,\n                interval, valueParser)[fieldObj.subtype], defaultFormatter);\n            const value = formatterFn(d[i]);\n            row.push(value);\n        });\n        rows.push(row);\n    });\n    return rows;\n};\n\nexport const buildTooltipData = (dataModel, config = {}, context) => {\n    let fieldValues = [];\n    const dataObj = dataModel.getData();\n    const data = dataObj.data;\n    const schema = dataObj.schema;\n    const separator = config.separator;\n    const fieldsConfig = dataModel.getFieldsConfig();\n    const fieldspace = dataModel.getFieldspace();\n    const detailFields = context.detailFields || [];\n    const dimensions = schema.filter(d => d.type === FieldType.DIMENSION);\n    const measures = schema.filter(d => d.type === FieldType.MEASURE);\n    const containsDetailField = schema.find(d => detailFields.indexOf(d.name) !== -1);\n    const dataLen = data.length;\n    const {\n        valueParser,\n        axes,\n        dimensionMeasureMap,\n        timeDiffs\n    } = context;\n    const defFormatter = formatters(null, null, valueParser)[DimensionSubtype.CATEGORICAL];\n    const getRowContent = (field, type) => {\n        let value;\n        let formattedValue;\n        let measureIndex;\n        const values = [];\n        const index = fieldsConfig[field].index;\n        const interval = fieldsConfig[field].def.subtype === DimensionSubtype.TEMPORAL ? timeDiffs[field] : 0;\n        const formatterFn = getDefaultTooltipFormatterFn(formatters(val => val, interval, valueParser)[type],\n            defFormatter);\n\n        if (value !== null) {\n            let uniqueVals = type === MeasureSubtype.CONTINUOUS ? data.map(d => d[index]) :\n                [...new Set(data.map(d => d[index]))];\n            uniqueVals = uniqueVals.filter(d => d !== '');\n            const colorAxis = axes.color[0];\n            const shapeAxis = axes.shape[0];\n            const sizeAxis = axes.size[0];\n            const isRetinalField = (colorAxis || shapeAxis || sizeAxis) && dataLen > 1 &&\n                    type !== MeasureSubtype.CONTINUOUS;\n\n            uniqueVals.forEach((val, i) => {\n                let key;\n                const associatedMeasures = dimensionMeasureMap[field];\n\n                if (associatedMeasures && associatedMeasures.length && dataLen > 1) {\n                    key = val;\n                    let icon = {\n                        value: ''\n                    };\n\n                    if (isRetinalField) {\n                        icon = {\n                            type: 'icon',\n                            color: colorAxis.getColor(val),\n                            shape: shapeAxis.getShape(val),\n                            size: sizeAxis.getSize(val) * config.iconScale\n                        };\n                    }\n                    if (associatedMeasures.length > 1) {\n                        const formattedKey = type === DimensionSubtype.TEMPORAL ? formatterFn(key, interval) : key;\n                        values.push([icon, `${formattedKey}`]);\n                        associatedMeasures.forEach((measure) => {\n                            measureIndex = fieldsConfig[measure].index;\n                            value = data[i][measureIndex];\n                            const numberFormat = fieldspace.fields[measureIndex].numberFormat();\n                            const measureFormatter = getDefaultTooltipFormatterFn(\n                                formatters(numberFormat, interval, valueParser)[MeasureSubtype.CONTINUOUS]);\n                            formattedValue = measureFormatter(value);\n                            values.push([{\n                                value: `${measure}${separator}`,\n                                style: {\n                                    'margin-left': `${config.margin}px}`\n                                },\n                                className: `${config.classPrefix}-tooltip-key`\n                            }, {\n                                value: `${formattedValue}`,\n                                className: `${config.classPrefix}-tooltip-value`\n                            }]);\n                        });\n                    } else {\n                        measureIndex = fieldsConfig[associatedMeasures[0]].index;\n                        value = data[i][measureIndex];\n                        const numberFormat = fieldspace.fields[measureIndex].numberFormat();\n                        const measureFormatter = getDefaultTooltipFormatterFn(\n                            formatters(numberFormat, interval, valueParser)[MeasureSubtype.CONTINUOUS]);\n                        formattedValue = measureFormatter(value);\n                        const formattedKey = type === DimensionSubtype.TEMPORAL ? formatterFn(key, interval) : key;\n                        values.push([\n                            icon,\n                            {\n                                value: `${formattedKey}`,\n                                className: `${config.classPrefix}-tooltip-key`\n                            },\n                            {\n                                value: `${formattedValue}`,\n                                className: `${config.classPrefix}-tooltip-value`\n                            }\n                        ]);\n                    }\n                } else {\n                    key = field;\n                    value = val;\n                    formattedValue = formatterFn(value);\n                    values.push([{\n                        value: `${key}${separator}`,\n                        className: `${config.classPrefix}-tooltip-key`\n                    }, {\n                        value: `${formattedValue}`,\n                        className: `${config.classPrefix}-tooltip-value`\n                    }]);\n                }\n            });\n        }\n        return values;\n    };\n    let displayFormat = 'keyValue';\n\n    if (dataLen > 1 && containsDetailField) {\n        fieldValues = getTabularData({\n            data,\n            schema,\n            fieldspace\n        }, context, defFormatter);\n        displayFormat = 'table';\n    } else {\n        dimensions.forEach((item) => {\n            const type = item.subtype ? item.subtype : item.type;\n            fieldValues = [...fieldValues, ...getRowContent(item.name, type)];\n        });\n\n        const allMeasures = [...new Set(...Object.values(dimensionMeasureMap))];\n        const filteredMeasures = dataLen > 1 ? measures.filter(d => allMeasures.indexOf(d.name) === -1)\n            : measures;\n\n        filteredMeasures.forEach((item) => {\n            const type = item.subtype ? item.subtype : item.type;\n            fieldValues = [...fieldValues, ...getRowContent(item.name, type)];\n        });\n    }\n\n    return {\n        content: fieldValues,\n        displayFormat\n    };\n};\n\n/**\n * This contains the strategy methods for showing tooltip in the chart.\n * @param {VisualUnit} context Attached instance.\n */\nexport const strategy = {\n    keyValue: (data, config, context) => {\n        const values = buildTooltipData(data, config, context);\n        return values;\n    }\n};\n\nexport const DEFAULT_STRATEGY = 'keyValue';\n","import {\n    selectElement,\n    mergeRecursive,\n    makeElement,\n    setAttrs,\n    setStyles,\n    getSymbol,\n    isSimpleObject\n} from 'muze-utils';\nimport { DEFAULT_STRATEGY, strategy } from './strategy';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class is used to manage the content of tooltip.\n */\nexport default class Content {\n    /**\n     * Creates an instance of content.\n     */\n    constructor () {\n        this._model = null;\n        this._strategy = DEFAULT_STRATEGY;\n        this._formatter = null;\n        this._config = this.constructor.defaultConfig();\n    }\n   /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        const config = defaultConfig.content;\n        config.classPrefix = defaultConfig.classPrefix;\n        return config;\n    }\n\n    config (...c) {\n        if (c.length > 0) {\n            this._config = mergeRecursive(this._config, c[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Update model. The format contains presentation strategy which determines how to show the content.\n     * If no strategy is mentioned then default is to show key value pair\n    */\n    update (item) {\n        this._model = item.model;\n        this._strategy = item.strategy !== undefined ? item.strategy : DEFAULT_STRATEGY;\n        this._formatter = item.formatter;\n        return this;\n    }\n\n    context (ctx) {\n        this._context = ctx;\n        return this;\n    }\n\n    render (mount) {\n        let data;\n        const config = this._config;\n        const iconContainerSize = config.iconContainerSize;\n        const formatter = this._formatter;\n        const rowMargin = config.rowMargin;\n        const model = this._model;\n\n        this._mount = mount;\n        if (model instanceof Array) {\n            data = model;\n        } else {\n            data = formatter instanceof Function ? formatter(this._model, this._context) :\n                strategy[this._strategy](this._model, this.config(), this._context);\n        }\n\n        if (data instanceof Function) {\n            mount.html(data());\n        } else {\n            let content = data;\n            let displayFormat = 'default';\n\n            if (isSimpleObject(data)) {\n                content = data.content;\n                displayFormat = data.displayFormat;\n            }\n\n            const body = makeElement(mount, 'div', [displayFormat], `${config.classPrefix}-tooltip-content`, {},\n                d => d);\n\n            if (displayFormat === 'table') {\n                const table = makeElement(body, 'table', [1], `${config.classPrefix}-tooltip-table`);\n                const tbody = makeElement(table, 'tbody', [1], `${config.classPrefix}-tooltip-table-tbody`);\n                const rows = makeElement(tbody, 'tr', content, `${config.classPrefix}-tooltip-table-row`);\n                rows.each(function (d, i) {\n                    selectElement(this).classed(`${config.classPrefix}-tooltip-table-row-${i}`, true);\n                });\n                const cells = makeElement(rows, 'td', d => d, `${config.classPrefix}-tooltip-table-cell`);\n                cells.each(function (d) {\n                    selectElement(this).html(d);\n                });\n            } else {\n                const rows = makeElement(body, 'div', content, `${config.classPrefix}-tooltip-row`);\n                const cells = makeElement(rows, 'span', d => d, `${config.classPrefix}-tooltip-content`);\n                cells.attr('class', `${config.classPrefix}-tooltip-content`);\n                setStyles(rows, {\n                    margin: rowMargin\n                });\n                setStyles(cells, {\n                    display: 'inline-block',\n                    'margin-right': `${config.spacing}px`\n                });\n\n                cells.each(function (d) {\n                    const el = selectElement(this);\n                    el.html('');\n                    if (d instanceof Object) {\n                        if (d.type === 'icon') {\n                            const svg = makeElement(el, 'svg', [1]);\n                            const path = makeElement(svg, 'path', [1]);\n                            const shape = d.shape instanceof Function ? d.shape : getSymbol(d.shape);\n\n                            setAttrs(svg, {\n                                x: 0,\n                                y: 0,\n                                width: iconContainerSize,\n                                height: iconContainerSize\n                            });\n                            setAttrs(path, {\n                                d: shape.size(d.size)(),\n                                transform: `translate(${iconContainerSize / 2}, ${iconContainerSize / 2})`\n                            });\n                            setStyles(path, {\n                                fill: d.color\n                            });\n                            setStyles(svg, {\n                                width: `${iconContainerSize}px`,\n                                height: `${iconContainerSize}px`\n                            });\n                        } else {\n                            el.html(d.value);\n                            d.className && el.classed(d.className, true);\n                            setStyles(el, d.style);\n                        }\n                    } else {\n                        el.html(d);\n                    }\n                });\n            }\n        }\n        return this;\n    }\n\n    clear () {\n        this._model = null;\n        return this;\n    }\n}\n","import {\n    mergeRecursive,\n    getQualifiedClassName,\n    getUniqueId,\n    selectElement,\n    setStyles,\n    makeElement\n} from 'muze-utils';\nimport { ARROW_BOTTOM, ARROW_LEFT, ARROW_RIGHT, TOOLTIP_LEFT, TOOLTIP_RIGHT, TOOLTIP_BOTTOM, TOOLTIP_TOP,\n    INITIAL_STYLE } from './constants';\nimport { defaultConfig } from './default-config';\nimport { getArrowPos, placeArrow, reorderContainers } from './helper';\nimport './styles.scss';\nimport Content from './content';\n\n/**\n * This component is responsible for creating a tooltip element. It appends the tooltip\n * in the body element.\n * @class Tooltip\n */\nexport default class Tooltip {\n    /**\n     * Initializes the tooltip with the container element and configuration\n     * @param {HTMLElement} container container where the tooltip will be mounted.\n     * @param {string} className Class name of the tooltip.\n     */\n    constructor (htmlContainer, svgContainer) {\n        let connectorContainer = svgContainer;\n        this._id = getUniqueId();\n        this._config = {};\n        this.config({});\n        const tooltipConf = this._config;\n        const classPrefix = tooltipConf.classPrefix;\n        const contentClass = tooltipConf.content.parentClassName;\n        const container = makeElement(htmlContainer, 'div', [1], `${classPrefix}-tooltip-container`);\n        this._container = container;\n        this._tooltipContainer = container.append('div').style('position', 'absolute');\n        this._contentContainer = this._tooltipContainer.append('div').attr('class', `${classPrefix}-${contentClass}`);\n        this._tooltipBackground = this._tooltipContainer.append('div').style('position', 'relative');\n        this._tooltipArrow = this._tooltipContainer.append('div');\n\n        if (!svgContainer) {\n            connectorContainer = htmlContainer.append('svg').style('pointer-events', 'none');\n        }\n        this._contents = {};\n        this._tooltipConnectorContainer = selectElement(connectorContainer)\n            .append('g')\n            .attr('class', `${tooltipConf.classPrefix}-${tooltipConf.connectorClassName}`);\n        const id = this._id;\n        const defClassName = tooltipConf.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, id, tooltipConf.classPrefix);\n\n        setStyles(this._tooltipArrow, INITIAL_STYLE);\n        setStyles(this._tooltipBackground, INITIAL_STYLE);\n        this.addClass(qualifiedClassName.join(' '));\n        this.addClass(tooltipConf.className);\n        this.hide();\n    }\n\n    /**\n     * Sets the configuration of tooltip.\n     * @param {Object} config Configuration of tooltip\n     * @return {Tooltip} Instance of tooltip\n     */\n    config (...config) {\n        if (config.length > 0) {\n            const defConf = mergeRecursive({}, this.constructor.defaultConfig());\n            this._config = mergeRecursive(defConf, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n    /**\n     * Sets the class name of tooltip\n     * @param {string} className tooltip class name\n     * @return {Tooltip} Instance of tooltip.\n     */\n    addClass (className) {\n        this._tooltipContainer.classed(className, true);\n        return this;\n    }\n\n    context (...ctx) {\n        if (ctx.length) {\n            this._context = ctx[0];\n            return this;\n        }\n        return this._context;\n    }\n\n    content (name, data, contentConfig = {}) {\n        const config = this.config();\n        const { classPrefix } = config;\n        const contentClass = config.content.className;\n        const formatter = config.formatter;\n        const className = contentConfig.className || `${classPrefix}-${contentClass}-${name}`;\n        const content = this._contents[name] = this._contents[name] || new Content();\n        const container = makeElement(this._contentContainer, 'div', [contentConfig.order], className);\n        container.attr('class', `${classPrefix}-${contentClass} ${className}`);\n        reorderContainers(this._contentContainer, `.${classPrefix}-${contentClass}`);\n        const contentConf = config.content;\n        contentConfig.classPrefix = this._config.classPrefix;\n        content.config(contentConf);\n\n        if (data === null) {\n            content.clear();\n            container.remove();\n            delete this._contents[name];\n        } else {\n            content.update({\n                model: data,\n                formatter: contentConfig.formatter || formatter\n            });\n            content.context(this._context);\n            content.render(container);\n        }\n\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n        }\n        return this;\n    }\n\n    getContents () {\n        return Object.values(this._contents);\n    }\n\n    /**\n     * Positions the tooltip at the given x and y position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Tooltip} Instance of tooltip.\n     */\n    position (x, y, conf = {}) {\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n            return this;\n        }\n        this.show();\n        const target = this._target;\n        const repositionArrow = conf.repositionArrow;\n\n        if (target && repositionArrow) {\n            const node = this._tooltipContainer.node();\n            const config = this._config;\n            const arrowDisabled = config.arrow.disabled;\n            const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n            const arrowOrient = this._arrowOrientation;\n            const outsidePlot = arrowOrient === ARROW_LEFT || arrowOrient === ARROW_RIGHT ?\n                (y + node.offsetHeight - arrowWidth) < target.y || y > (target.y + target.height) :\n                (x + node.offsetWidth - arrowWidth) < target.x || x > (target.x + target.width);\n\n            if (!arrowDisabled) {\n                if (outsidePlot) {\n                    let path;\n                    this._tooltipArrow.style('display', 'none');\n                    this._tooltipBackground.style('display', 'none');\n                    this._tooltipConnectorContainer.style('display', 'block');\n                    const connector = this._tooltipConnectorContainer.selectAll('path').data([1]);\n                    const enter = connector.enter().append('path');\n                    if (arrowOrient === ARROW_LEFT) {\n                        path = `M ${x} ${y + node.offsetHeight / 2} L ${target.x + target.width}`\n                            + ` ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_RIGHT) {\n                        path = `M ${x + node.offsetWidth} ${y + node.offsetHeight / 2}`\n                                + ` L ${target.x} ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_BOTTOM) {\n                        path = `M ${x + node.offsetWidth / 2} ${y + node.offsetHeight}`\n                            + ` L ${target.x + target.width / 2} ${target.y}`;\n                    }\n                    enter.merge(connector).attr('d', path).style('display', 'block');\n                } else {\n                    const arrowPos = getArrowPos(arrowOrient, target, {\n                        x,\n                        y,\n                        boxHeight: node.offsetHeight,\n                        boxWidth: node.offsetWidth\n                    }, this._config);\n\n                    placeArrow(this, this._arrowOrientation, arrowPos);\n                    this._tooltipConnectorContainer.style('display', 'none');\n                }\n            }\n        }\n\n        const offset = this._offset || {\n            x: 0,\n            y: 0\n        };\n        this._tooltipContainer.style('left', `${offset.x + x}px`).style('top',\n            `${offset.y + y}px`);\n\n        return this;\n    }\n\n    /**\n     * Positions the tooltip relative to a rectangular box. It takes care of tooltip overflowing the\n     * boundaries.\n     * @param {Object} dim Dimensions of the plot.\n     */\n    positionRelativeTo (dim, tooltipConf = {}) {\n        let obj;\n        let orientation = tooltipConf.orientation;\n        this.show();\n        if (!dim) {\n            this.hide();\n            return this;\n        }\n\n        const extent = this._extent;\n        const node = this._tooltipContainer.node();\n\n        this._tooltipContainer.style('top', '0px')\n                        .style('left', '0px');\n        const offsetWidth = node.offsetWidth + 2;\n        const offsetHeight = node.offsetHeight + 2;\n        const config = this._config;\n        const offset = this._offset;\n        const arrowDisabled = config.arrow.disabled;\n        const arrowSize = arrowDisabled ? 0 : config.arrow.size;\n        const draw = tooltipConf.draw !== undefined ? tooltipConf.draw : true;\n        const topSpace = dim.y;\n        // When there is no space in right\n        const dimX = dim.x + dim.width + offset.x;\n        const rightSpace = extent.width - dimX;\n        const leftSpace = dim.x + offset.x - extent.x;\n        const positionTop = topSpace > (offsetHeight + arrowSize);\n        const positionRight = rightSpace >= offsetWidth + arrowSize;\n        const positionLeft = leftSpace >= offsetWidth + arrowSize;\n\n        const positionHorizontal = () => {\n            let position;\n            let x = dim.x + dim.width;\n            let y = dim.y;\n\n            if (positionRight) {\n                position = TOOLTIP_LEFT;\n                x += arrowSize;\n            } else if (positionLeft) {\n                x = dim.x - offsetWidth;\n                position = TOOLTIP_RIGHT;\n                x -= arrowSize;\n            } else {\n                position = 'left';\n                x += arrowSize;\n            }\n            if (dim.height < offsetHeight) {\n                y = Math.max(0, dim.y + dim.height / 2 - offsetHeight / 2);\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        const positionVertical = () => {\n            let position;\n            let y;\n            // Position tooltip at the center of plot\n            let x = dim.x - offsetWidth / 2 + dim.width / 2;\n\n            // Overflows to the right\n            if ((extent.width - (dim.x + offset.x)) < offsetWidth) {\n                x = extent.width - offsetWidth - offset.x;\n            } else if ((x + offset.x) < extent.x) { // Overflows to the left\n                x = extent.x;\n            }\n\n            if (positionTop) {\n                y = dim.y - offsetHeight - arrowSize;\n                position = TOOLTIP_BOTTOM;\n            } else {\n                y = dim.y + dim.height + arrowSize;\n                position = TOOLTIP_TOP;\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        this._target = dim;\n        if (!orientation) {\n            if (positionTop) {\n                orientation = 'vertical';\n            } else if (positionRight || positionLeft) {\n                orientation = 'horizontal';\n            } else {\n                orientation = 'vertical';\n            }\n        }\n\n        if (orientation === 'horizontal') {\n            obj = positionHorizontal();\n        } else if (orientation === 'vertical') {\n            obj = positionVertical();\n        }\n\n        this._position = {\n            x: obj.x,\n            y: obj.y\n        };\n\n        this._arrowPos = obj.arrowPos;\n        if (!arrowDisabled) {\n            placeArrow(this, obj.position, obj.arrowPos);\n        } else {\n            this._tooltipArrow.style('display', 'none');\n            this._tooltipBackground.style('display', 'none');\n        }\n        this._arrowOrientation = obj.position;\n        draw && this.position(obj.x, obj.y);\n        return this;\n    }\n\n    /**\n     * Hides the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    hide () {\n        this._tooltipContainer.style('display', 'none');\n        this._tooltipConnectorContainer.style('display', 'none');\n        return this;\n    }\n\n    /**\n     * Shows the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    show () {\n        this._tooltipContainer.style('display', 'block');\n        return this;\n    }\n\n    extent (extent) {\n        this._extent = extent;\n        return this;\n    }\n\n    offset (offset) {\n        this._offset = offset;\n        return this;\n    }\n\n    remove () {\n        this._tooltipContainer.remove();\n        this._tooltipBackground.remove();\n        this._tooltipConnectorContainer.remove();\n        return this;\n    }\n}\n","import { FieldType } from 'muze-utils';\n\nexport const strategies = {\n    showSelectedItems: (dm) => {\n        const dataObj = dm.getData();\n        const measures = dataObj.schema.filter(d => d.type === FieldType.MEASURE);\n        const aggregatedModel = dm.groupBy([''], measures.reduce((acc, v) => {\n            acc[v.name] = v.defAggFn === 'count' ? 'sum' : v.defAggFn;\n            return acc;\n        }, {}));\n        const fieldsObj = dm.getFieldspace().fieldsObj();\n        const fieldsConf = aggregatedModel.getFieldsConfig();\n        let values = [{\n            value: `${dataObj.data.length}`,\n            style: {\n                'font-weight': 'bold'\n            }\n        }, 'Items Selected'];\n        const measureNames = measures.map(d => d.name);\n        if (measureNames.length) {\n            values = [...values, ...[`(${fieldsObj[measureNames[0]].defAggFn().toUpperCase()}) ${measureNames[0]}`,\n                {\n                    value: `${aggregatedModel.getData().data[0][fieldsConf[measureNames[0]].index].toFixed(2)}`,\n                    style: {\n                        'font-weight': 'bold'\n                    }\n                }]];\n        }\n        return [values];\n    }\n};\n","import { Tooltip as TooltipRenderer } from '@chartshq/muze-tooltip';\nimport { FieldType } from 'muze-utils';\nimport { spaceOutBoxes } from '../helper';\nimport { strategies } from './strategies';\nimport { FRAGMENTED } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nexport default class Tooltip extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._tooltips = {};\n        this._strategies = strategies;\n        this._strategy = 'default';\n    }\n\n    static defaultConfig () {\n        return {\n            padding: 5,\n            offset: {\n                x: 0,\n                y: 0\n            }\n        };\n    }\n\n    static formalName () {\n        return 'tooltip';\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        let totalHeight = 0;\n        let totalWidth = 0;\n        const dataModel = selectionSet.mergedEnter.model;\n        const context = this.firebolt.context;\n        const drawingInf = this.drawingContext();\n        if ((dataModel.isEmpty() || payload.criteria === null) || selectionSet.isSourceFieldPresent === false) {\n            this.hide(options, null);\n            return this;\n        }\n\n        const tooltips = this._tooltips;\n        const config = this.config();\n        const boundBox = {\n            width: drawingInf.width,\n            height: drawingInf.height\n        };\n        const showInPosition = payload.showInPosition;\n        const pad = config.padding;\n        const dataModels = [];\n        const fragmented = config.mode === FRAGMENTED;\n        const sourceInf = context.getSourceInfo();\n        const fields = sourceInf.fields;\n        const xFieldDim = fields.x[0] ? fields.x[0].type() === FieldType.DIMENSION : false;\n        const showVertically = !!xFieldDim;\n        const tooltipPos = payload.position;\n        const boxes = [];\n        const enter = {};\n        const uids = dataModel.getData().uids;\n        if (fragmented) {\n            dataModels.push(...uids.map(d => dataModel.select((fieldsArr, i) => i === d, {\n                saveChild: false\n            })));\n        } else {\n            dataModels.push(dataModel);\n        }\n\n        let target = payload.target;\n        let targetFields = [];\n        if (target) {\n            targetFields = target[0] || [];\n            const sourceFields = payload.sourceFields;\n            const indices = [];\n            for (let i = 0, len = targetFields.length; i < len; i++) {\n                if (sourceFields.indexOf(targetFields[i]) !== -1) {\n                    indices.push(i);\n                }\n            }\n            target = target.map(d => d.filter((v, i) => indices.indexOf(i) !== -1));\n        }\n\n        const plotDimensions = context.getPlotPointsFromIdentifiers(target || payload.criteria, {\n            getBBox: true\n        });\n\n        // Show tooltip for each datamodel\n        for (let i = 0; i < dataModels.length; i++) {\n            let plotDim = plotDimensions[i];\n            if (fragmented) {\n                const dimensions = dataModels[i].getData().schema.filter(d => d.type === FieldType.DIMENSION)\n                    .map(d => d.name);\n                plotDim = context.getPlotPointsFromIdentifiers(dataModels[i].project(dimensions), { getBBox: true });\n                plotDim = plotDim && plotDim[0];\n            }\n\n            let dt = dataModels[i];\n            if (config.fields) {\n                dt = dt.project(config.fields, {\n                    saveChild: false\n                });\n            }\n            if (config.dataTransform) {\n                dt = config.dataTransform(dt, i);\n            }\n\n            enter[i] = true;\n            const { parentContainer: layoutContainer, parentContainerDimensions } = drawingInf;\n            const layoutBoundBox = layoutContainer.getBoundingClientRect();\n            const unitBoundBox = drawingInf.htmlContainer.getBoundingClientRect();\n\n            const offsetLeft = unitBoundBox.left - layoutBoundBox.left;\n            const offsetTop = unitBoundBox.top - layoutBoundBox.top;\n            const tooltipInst = tooltips[i] = tooltips[i] || new TooltipRenderer(layoutContainer,\n                    drawingInf.svgContainer);\n\n            sourceInf.payload = payload;\n            sourceInf.firebolt = this.firebolt;\n            sourceInf.detailFields = context.detailFields();\n            sourceInf.timeDiffs = context.timeDiffsByField();\n            sourceInf.valueParser = context.valueParser();\n            tooltipInst.context(sourceInf);\n            const strategy = strategies[options.strategy];\n            tooltipInst.content(options.strategy || this._strategy, dt, {\n                formatter: strategy,\n                order: options.order\n            })\n                            .config(this.config())\n                            .extent({\n                                x: 0,\n                                y: 0,\n                                width: parentContainerDimensions.width,\n                                height: parentContainerDimensions.height\n                            })\n                            .offset({\n                                x: offsetLeft + (config.offset.x || 0),\n                                y: offsetTop + (config.offset.y || 0)\n                            });\n\n            if (showInPosition) {\n                tooltipInst.position(tooltipPos.x + pad, tooltipPos.y + pad);\n            } else if (plotDim) {\n                tooltipInst.positionRelativeTo({\n                    x: plotDim.x,\n                    y: plotDim.y,\n                    width: plotDim.width || 0,\n                    height: plotDim.height || 0\n                }, {\n                    orientation: fragmented ?\n                        (showVertically ? 'horizontal' : 'vertical') : undefined\n                });\n            } else {\n                tooltipInst.hide();\n                break;\n            }\n\n            if (fragmented) {\n                const position = tooltipInst._position;\n                const tooltipBoundBox = tooltipInst._tooltipContainer.node().getBoundingClientRect();\n\n                totalHeight += tooltipBoundBox.height + pad;\n                totalWidth += tooltipBoundBox.width + pad;\n                if (showVertically ? totalHeight > drawingInf.height : totalWidth > drawingInf.width) {\n                    break;\n                }\n                boxes.push({\n                    x: position.x,\n                    y: position.y,\n                    width: tooltipBoundBox.width,\n                    height: tooltipBoundBox.height,\n                    tooltip: tooltipInst\n                });\n            }\n        }\n\n        for (const key in tooltips) {\n            if (!enter[key]) {\n                const tooltip = tooltips[key];\n                tooltip.content(payload.action, null);\n                if (!tooltip.getContents().length) {\n                    tooltip.remove();\n                    delete tooltips[key];\n                }\n            }\n        }\n        if (fragmented) {\n            spaceOutBoxes(boxes, boundBox, showVertically);\n            boxes.forEach(box => box.tooltip.position(box.x, box.y, {\n                repositionArrow: true\n            }));\n        }\n        return this;\n    }\n\n    hide (options) {\n        const tooltips = this._tooltips;\n        for (const key in tooltips) {\n            if ({}.hasOwnProperty.call(tooltips, key)) {\n                const strategy = options.strategy || this._strategy;\n                tooltips[key].content(strategy, null);\n                tooltips[key].hide();\n            }\n        }\n    }\n}\n","export const spaceOutBoxes = (boxes, extent, showVertically) => {\n    let y;\n    let height;\n    let x;\n    let width;\n    let i;\n    const pad = 5;\n    const len = boxes.length;\n    const spaceOutIfOverlap = (firstBox, secondBox, opposite) => {\n        x = firstBox.x;\n        width = firstBox.width;\n        y = firstBox.y;\n        height = firstBox.height;\n        const bottom = y + height;\n        const right = x + width;\n\n        if (showVertically) {\n            if (opposite ? y < (secondBox.y + secondBox.height) : bottom > secondBox.y) {\n                secondBox.y = opposite ? firstBox.y - secondBox.height - pad :\n                        bottom + pad;\n            }\n        } else if (opposite ? x < (secondBox.x + secondBox.width) : right > secondBox.x) {\n            secondBox.x = opposite ? firstBox.x - secondBox.width - pad :\n                    right + pad;\n        }\n    };\n\n    boxes.sort((a, b) => (showVertically ? a.y - b.y : a.x - b.x));\n    i = 0;\n\n    for (i = 0; i < len - 1; i++) {\n        spaceOutIfOverlap(boxes[i], boxes[i + 1]);\n    }\n\n    if ((boxes[i].y + boxes[i].height) > extent.height ||\n            (boxes[i].x + boxes[i].width) > extent.width) {\n        if (showVertically) {\n            boxes[i].y -= (boxes[i].height + boxes[i].y) - extent.height;\n        } else {\n            boxes[i].x -= (boxes[i].width + boxes[i].x) - extent.width;\n        }\n        for (i = len - 1; i > 0; i--) {\n            spaceOutIfOverlap(boxes[i], boxes[i - 1], true);\n        }\n    }\n    return boxes;\n}\n;\n","import { selectElement, FieldType } from 'muze-utils';\n\nimport './styles.scss';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nexport default class Crossline extends SpawnableSideEffect {\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-crossline-group`,\n            bandClass: `${CLASSPREFIX}-crossband`,\n            lineClass: `${CLASSPREFIX}-crossline`\n        };\n    }\n\n    static formalName () {\n        return 'crossline';\n    }\n\n    apply (selectionSet, payload) {\n        let height;\n        let bandWidth;\n        let px;\n        let width;\n        const {\n            className,\n            bandClass,\n            lineClass\n        } = this.config();\n        const dataModel = selectionSet.mergedEnter.model;\n        const drawingInf = this.drawingContext();\n        if (payload.criteria && dataModel && dataModel.isEmpty()) {\n            return this;\n        }\n        if (payload.criteria === null || !dataModel) {\n            this.hide();\n            return this;\n        }\n\n        const dataObj = dataModel.getData();\n        const sourceInf = this.firebolt.context.getSourceInfo();\n        const axes = sourceInf.axes;\n        const axisFields = sourceInf.fields;\n        const fields = selectionSet.fields;\n        const data = dataObj.data;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const svgContainer = drawingInf.sideEffectGroup;\n\n        const elemData = [];\n        fields.forEach((field) => {\n            const fieldIndex = fieldsConfig[field] && fieldsConfig[field].index;\n            const dataArr = data.map(d => d[fieldIndex]);\n            const axisIndex = [['x', 0], ['x', 1], ['y', 0], ['y', 1]].find((arr) => {\n                const fieldInst = axisFields[arr[0]][arr[1]];\n                return fieldInst && fieldInst.type() === FieldType.DIMENSION &&\n                    fieldInst.getMembers().indexOf(field) !== -1;\n            });\n            if (axisIndex !== undefined && data.length) {\n                const type = axisIndex[0];\n                const axis = axes[type][axisIndex[1]];\n                const value = dataArr[0];\n                bandWidth = axis.getUnitWidth() || 0;\n                px = axis.getScaleValue(value) + bandWidth / 2 + drawingInf.xOffset;\n                const plotWidth = Math.max(...this.firebolt.context.layers().map(layer => layer.getPlotSpan()[type]));\n                const pad = Math.max(...this.firebolt.context.layers().map(layer => layer.getPlotPadding()[type]));\n                height = drawingInf.height;\n                width = drawingInf.width;\n                const startPx = px - plotWidth / 2 - pad / 2;\n                const endPx = px + plotWidth / 2 + pad / 2;\n                const dataPoint = {};\n                if (type === 'y') {\n                    dataPoint.d = `M 0 ${startPx} L 0 ${endPx} L ${width} ${endPx} L ${width} ${startPx} Z`;\n                } else {\n                    dataPoint.d = `M ${startPx} 0 L ${endPx} 0 L ${endPx} ${height} L ${startPx} ${height} Z`;\n                }\n                dataPoint.className = plotWidth ? bandClass : lineClass;\n                elemData.push(dataPoint);\n            }\n        });\n        if (elemData.length) {\n            const parentGroup = this.createElement(svgContainer, 'g', [1], className);\n            const elem = this.createElement(parentGroup, 'path', elemData);\n            elem.attr('d', d => d.d).style('pointer-events', 'none')\n                            .attr('class', d => d.className);\n        }\n        return this;\n    }\n\n    hide () {\n        const className = this.config().className;\n        const drawingInf = this.drawingContext();\n        selectElement(drawingInf.sideEffectGroup).selectAll(`.${className}`).remove();\n    }\n}\n","const fadeFn = (set, context, strategy) => {\n    const {\n        mergedEnter,\n        mergedExit,\n        exitSet,\n        completeSet\n    } = set;\n\n    if (!mergedEnter.length && !mergedExit.length) {\n        context.applyInteractionStyle(completeSet, {}, strategy, false);\n    } else {\n        context.applyInteractionStyle(exitSet[1], {}, strategy, true);\n        context.applyInteractionStyle(mergedEnter, {}, strategy, false);\n    }\n};\n\nexport const strategies = {\n    fade: fadeFn,\n    focus: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'focus', false);\n        } else {\n            context.applyInteractionStyle(mergedExit, {}, 'focus', true);\n            context.applyInteractionStyle(mergedEnter, {}, 'focus', false);\n        }\n    },\n    highlight: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            entrySet,\n            exitSet,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'highlight', false);\n        } else {\n            context.applyInteractionStyle(entrySet[1], {}, 'highlight', true);\n            context.applyInteractionStyle(exitSet[1], {}, 'highlight', false);\n        }\n    }\n};\n","import SurrogateSideEffect from '../surrogate';\nimport { strategies } from './strategy';\n\nexport default class PlotHighlighter extends SurrogateSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategy = 'highlight';\n        this._strategies = strategies;\n    }\n\n    static formalName () {\n        return 'highlighter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        if (selectionSet.isSourceFieldPresent !== false) {\n            strategy(selectionSet, this, options.strategy || this._strategy);\n        }\n\n        return this;\n    }\n}\n","import SurrogateSideEffect from '../surrogate';\n\nexport default class FilterEffect extends SurrogateSideEffect {\n    static formalName () {\n        return 'filter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static mutates () {\n        return true;\n    }\n\n    apply (selectionSet, payload) {\n        const context = this.firebolt.context;\n        const entryModel = selectionSet.mergedEnter.model;\n        if (payload.criteria === null) {\n            context.clearCaching().resetData();\n        } else {\n            context.enableCaching().data(entryModel);\n        }\n        return this;\n    }\n}\n","import { DataModel, STATE_NAMESPACES, getObjProp } from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nconst addLayer = (layerDefs, layerRegistry, context, sideEffect) => {\n    const layers = [];\n    if (layerDefs) {\n        layerDefs.forEach((layerDef) => {\n            const mark = layerDef.mark;\n            const layerCls = layerRegistry[mark];\n            if (layerCls && layerCls.shouldDrawAnchors()) {\n                const depLayerEncoding = layerDef.def.encoding;\n                const encoding = {\n                    x: getObjProp(depLayerEncoding, 'x', 'field'),\n                    y: getObjProp(depLayerEncoding, 'y', 'field'),\n                    color: getObjProp(depLayerEncoding, 'color', 'field'),\n                    size: {\n                        field: getObjProp(depLayerEncoding, 'size', 'field'),\n                        value: sideEffect.defaultSizeValue()\n                    }\n                };\n                const name = `${layerDef.def.name}-${sideEffect.constructor.formalName()}`;\n                const layerObj = {\n                    instances: context.addLayer({\n                        name,\n                        mark: 'point',\n                        className: sideEffect.constructor.defaultConfig().className,\n                        encoding,\n                        transform: {\n                            type: 'identity'\n                        },\n                        transition: sideEffect.getTransitionConfig(),\n                        calculateDomain: false,\n                        source: dm => dm.select(() => false, {\n                            saveChild: false\n                        }),\n                        interactive: false,\n                        render: false\n                    }),\n                    linkedLayer: layerDef.def.name\n                };\n                layers.push(layerObj);\n            }\n        });\n    }\n    return layers;\n};\n\nexport default class AnchorEffect extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._layersMap = {};\n        this.addAnchorLayers();\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-anchors-group`\n        };\n    }\n\n    static formalName () {\n        return 'anchors';\n    }\n\n    addAnchorLayers () {\n        const context = this.firebolt.context;\n        const metaInf = context.metaInf();\n        const layerRegistry = context.registry().layerRegistry;\n        const layerDefsVal = context.layerDef();\n        context.store().registerImmediateListener(\n            `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}.layerDef`, ([, layerDefs]) => {\n                this._layers = addLayer(layerDefs, layerRegistry, context, this);\n            });\n        this._layers = addLayer(layerDefsVal, layerRegistry, context, this);\n        return this;\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n\n    /**\n     * Returns the default area value of the anchor point.\n     * @return { number } Default area value of anchor.\n     */\n    defaultSizeValue () {\n        return 100;\n    }\n\n    apply (selectionSet) {\n        const self = this;\n        const dataModel = selectionSet.mergedEnter.model;\n        if (selectionSet.isSourceFieldPresent !== false) {\n            const drawingInf = this.drawingContext();\n            const sideEffectGroup = drawingInf.sideEffectGroup;\n            const className = `${this.config().className}`;\n            const layers = this._layers;\n            const parentGroup = this.createElement(sideEffectGroup, 'g', [1], `${className}-container`);\n            const anchorGroups = this.createElement(parentGroup, 'g', Object.values(layers));\n            anchorGroups.each(function (layer) {\n                const instances = layer.instances;\n                const elems = self.createElement(this, 'g', instances, className);\n                const linkedLayer = self.firebolt.context.getLayerByName(layer.linkedLayer);\n                const [transformedData, schema] = linkedLayer.getTransformedDataFromIdentifiers(dataModel);\n                const transformedDataModel = new DataModel(transformedData, schema);\n                elems.each(function (d, i) {\n                    instances[i].data(transformedDataModel).mount(this);\n                });\n            });\n        }\n        return this;\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\n\nexport default class PersistentAnchors extends AnchorEffect {\n    static formalName () {\n        return 'persistent-anchors';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-persistent-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\n\nexport default class BrushAnchors extends AnchorEffect {\n    static formalName () {\n        return 'brush-anchors';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-brush-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import * as BEHAVIOURS from './enums/behaviours';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: ['selectionBox', {\n        name: 'highlighter',\n        options: {\n            strategy: 'fade'\n        }\n    }, 'brush-anchors'],\n    [`${BEHAVIOURS.BRUSH},${BEHAVIOURS.SELECT}`]: [{\n        name: 'tooltip',\n        options: {\n            strategy: 'showSelectedItems',\n            order: 0,\n            filter: context => context.config().mode === 'fragmented'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'highlight'\n        }\n    }, 'crossline', {\n        name: 'tooltip',\n        options: {\n            order: 9999\n        }\n    }, 'anchors'],\n    [BEHAVIOURS.FILTER]: ['filter'],\n    [BEHAVIOURS.SELECT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'focus'\n        }\n    }, 'persistent-anchors']\n};\n","export const CLASSPREFIX = 'muze';\nexport const STACK = 'stack';\nexport const GROUP = 'group';\nexport const IDENTITY = 'identity';\nexport const ANGLE = 'angle';\nexport const RADIUS = 'radius';\nexport const SIZE = 'size';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const OUTER_RADIUS_VALUE = 'outerRadiusValue';\nexport const TEXT_ANCHOR_MIDDLE = 'middle';\nexport const ENCODING = {\n    X: 'x',\n    Y: 'y',\n    X0: 'x0',\n    Y0: 'y0'\n};\n\nexport const ASCENDING = 'asc';\n\nexport const AGG_FN_SUM = 'sum';\n\nexport const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { CLASSPREFIX, STACK } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-area',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: STACK\n    },\n    interaction: {\n\n    },\n    nearestPointThreshold: 10,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        y0: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * This is an interface class which any new layer class has to extend.\n *\n * @example\n * class BarLayer extends BaseLayer {\n *   update (params) {\n *       // super.update(params);\n *       // Update the bar layer\n *   }\n * }\n * @class\n */\nexport default class SimpleLayer {\n\n    formalName () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets or gets the dependencies.\n     * @param {Object} dependencies Dependencies needed by layer\n     * @return {BaseLayer} Instance of base layer.\n     */\n    dependencies () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the config of the layer\n     *\n     * @param {Object} config Configuration of layer\n     * @return {Object} configuration of layer\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Acts as a getter or setter function\n     * When setter\n     * Returns the datamodel of the layer\n     * @param { DataModel } dataModel instance of DataModel\n     * @return { DataModel } DataModel instance of the layer\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized schema of the layer\n     * @return {Object} Serialized schema\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the unique identifier of this layer\n     * @return {string} id of the layer\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n    /*\n     * This method resolves the x, y, x0 and y0 values from the transformed data.\n     * It also checks the type of transformed data for example, if it is a stacked data\n     * then it fetches the y and y0 values from the stacked data.\n     * @param {Array.<Array>} transformedData transformed data\n     * @param {Object} fieldMap field definitions\n     * @param {string} transformType type of transformed data - stack, group or identity.\n     * @return {Array.<Object>} Normalized data\n     * @private\n     */\n    normalizeTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of dataModel\n     * @param {Object} config configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     * @private\n     */\n    getTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a nominal field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @return {Array} Domain values array.\n     */\n    _calculateDomainFromData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, color, etc.\n     * @return {Object} Axis domains\n     */\n    getDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for getting nearest point\n     * @return {BaseLayer} Instance of base layer\n     */\n    getNearestPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for highlighting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    highlightPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for deselecting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    dehighlightPoint () {\n        return this;\n    }\n\n    linkLayerStore () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets the container element for the layer to be renderered.\n     * @param {SVGElement} mountPoint SVG element or group element.\n     */\n    mount () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n","export const props = {\n    axes: {},\n    mount: {},\n    measurement: {},\n    metaInf: {},\n    data: {},\n    config: {},\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { Symbols } from 'muze-utils';\nimport * as AxisOrientation from '../enums/axis-orientation';\n\n/**\n * @module Axis\n * This file exports constants that are used to reference axis orientations\n * in a consistent manner.\n */\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\n\n/**\n  * This object is used to associate the axis orientation with the d3 class\n  * used to represent that axis.\n  */\nexport const axisOrientationMap = {\n    [AxisOrientation.LEFT]: Symbols.axisLeft,\n    [AxisOrientation.BOTTOM]: Symbols.axisBottom,\n    [AxisOrientation.RIGHT]: Symbols.axisRight,\n    [AxisOrientation.TOP]: Symbols.axisTop\n};\n","/**\n * @module axis\n * This file exports constants used to reference scale type\n * consistently throughout the project.\n */\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\nexport const TIME = 'temporal';\nexport const COLOR = 'color';\nexport const ORDINAL = 'ordinal';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\nexport const LOG = 'log';\nexport const POW = 'pow';\nexport const IDENTITY = 'identity';\nexport const SEQUENTIAL = 'sequential';\nexport const THRESHOLD = 'threshold';\n","export const CLASSPREFIX = 'muze';\n\nexport const CONTINOUS = 'continous';\nexport const DISCRETE = 'discrete';\nexport const SEQUENTIAL = 'sequential';\nexport const ORDINAL = 'ordinal';\nexport const LINEAR = 'linear';\nexport const THRESHOLD = 'threshold';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\n\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\n\nexport const DOMAIN = 'domain';\nexport const BAND = 'band';\nexport const HIDDEN = 'hidden';\nexport const NUMBER = 'number';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\n\nexport const RGB = 'rgb';\nexport const HEX = 'hex';\nexport const HSLA = 'hsla';\nexport const HSL = 'hsl';\n\n","import { scales, colorSchemes } from 'muze-utils';\n\nimport {\n    SEQUENTIAL,\n    ORDINAL,\n    LINEAR,\n    CONTINOUS,\n    THRESHOLD,\n    QUANTIZE\n} from './enums/constants';\n\nimport * as ScaleType from './enums/scale-type';\n\nconst {\n    scaleLinear,\n    scaleThreshold,\n    scaleLog,\n    scalePow,\n    scaleIdentity,\n    scaleOrdinal,\n    scaleSequential,\n    scaleQuantize,\n    scaleQuantile,\n    schemeCategory10,\n    schemeCategory20,\n    schemeCategory20b,\n    scaleBand,\n    scaleTime\n} = scales;\nexport const scaleMap = {\n    [ScaleType.LINEAR]: scaleLinear,\n    [ScaleType.BAND]: scaleBand,\n    [ScaleType.QUANTIZE]: scaleQuantize,\n    [ScaleType.QUANTILE]: scaleQuantile,\n    [ScaleType.THRESHOLD]: scaleThreshold,\n    [ScaleType.SEQUENTIAL]: scaleSequential,\n    [ScaleType.LOG]: scaleLog,\n    [ScaleType.POW]: scalePow,\n    [ScaleType.IDENTITY]: scaleIdentity,\n    [ScaleType.TIME]: scaleTime,\n    [ScaleType.COLOR]: scaleLinear,\n    [ScaleType.ORDINAL]: scaleOrdinal\n};\nexport const SCHEMES = {\n    SCHEME1: schemeCategory10,\n    SCHEME2: schemeCategory20,\n    SCHEME3: schemeCategory20b\n};\n\n/**\n * Accepts a scheme in a string format and returns the scale from d3-scale-chromatic\n *\n * @export\n * @param {string} scheme a string representing the kind of scheme for the color axis\n * @return {Object} The corresponding scale from a scheme type from d3 chromatic scale\n */\nexport function getScheme (scheme) {\n    if (scheme[0] === 'i') {\n        return scaleSequential(colorSchemes[scheme]);\n    }\n    return scaleOrdinal(colorSchemes[scheme]);\n}\n\n/**\n *\n *\n * @export\n * @param {*} scheme\n *\n */\nexport function getSchemeType (scheme) {\n    let schemeType = '';\n    if (scheme && typeof (scheme) === 'string') {\n        schemeType = scheme[0] === 'i' ? SEQUENTIAL : ORDINAL;\n    } else {\n        schemeType = ORDINAL;\n    }\n    return schemeType;\n}\n\n/**\n * This function is used to create a scale that is assigned to\n * an instance of axis.\n *\n * @export\n * @param {Object} params the input parameters to create a Scale object\n * @param {string} params.type the type of scale\n * @param {Array} params.range the range of scale\n * @return {Object} instance of scale\n */\nexport function createScale (params) {\n    if (!params.type || !scaleMap[params.type]) {\n        throw new Error(`${params.type} is not a valid scale type`);\n    }\n    if (!Array.isArray(params.range)) {\n        throw new Error('range parameter must be an array');\n    }\n    let scaleFactory = null;\n    const range = params.range;\n    // @todo: do it using scale decorator\n    if (params.type === LINEAR && params.interpolator) {\n        scaleFactory = scaleMap[params.interpolator];\n        if (params.interpolator === ScaleType.POW) {\n            return scaleFactory().range(range).exponent(params.exponent);\n        } else if (params.interpolator === ScaleType.LOG) {\n            return scaleFactory().range(range).base([params.base]);\n        }\n    } else {\n        scaleFactory = scaleMap[params.type];\n    }\n\n    if (params.type === QUANTIZE) {\n        scaleFactory().nice();\n    }\n    return scaleFactory().range(range);\n}\n\n/**\n * This method is used to update the range of a scale\n * so that the core module can remain agnostic of the d3\n * scale api.\n *\n * @export\n * @param {Scale} scale Instance of d3 Scale.\n * @param {Array} range new range of the scale.\n * @return {Scale} Updated scale.\n */\nexport function updateScaleRange (scale, range) {\n    return scale.range(range);\n}\n\n/**\n *\n *\n * @export\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} steps\n *\n */\nexport function getScaleType (domainType, rangeType, steps) {\n    if (rangeType === CONTINOUS) {\n        return LINEAR;\n    }\n    if (domainType === CONTINOUS) {\n        if (steps instanceof Array) {\n            return THRESHOLD;\n        }\n        return QUANTIZE;\n    }\n    return ORDINAL;\n}\n","import { getUniqueId } from 'muze-utils';\nimport { CLASSPREFIX } from '../enums/constants';\n\n/**\n *\n *\n */\nexport const defaultConfig = {\n    id: getUniqueId(),\n    axisName: {\n        defClassName: 'axis-name'\n    },\n    axisNamePadding: 12,\n    base: 10,\n    classPrefix: CLASSPREFIX,\n    className: `${CLASSPREFIX}-axis`,\n    exponent: 1,\n    interpolator: 'linear',\n    fixedBaseline: true,\n    labels: {\n        rotation: null,\n        smartTicks: null\n    },\n    orientation: 'left',\n    numberFormat: val => val,\n    padding: 0.3,\n    nice: true,\n    numberOfTicks: 10,\n    rotate: false,\n    show: true,\n    showAxisName: true,\n    showInnerTicks: true,\n    showOuterTicks: true,\n    style: {},\n    type: 'linear',\n    tickFormat: null,\n    tickValues: null,\n    xOffset: 0,\n    yOffset: 0\n};\n\n","/**\n * This file exports functionality that is used to render axis.\n */\nimport { selectElement, makeElement, angleToRadian } from 'muze-utils';\nimport * as AxisOrientation from './enums/axis-orientation';\nimport { LINEAR, HIDDEN, BOTTOM, TOP } from './enums/constants';\n\n/**\n *\n *\n * @param {*} instance\n * @param {*} container\n * @param {*} labelManager\n * @param {*} config\n */\nconst rotateAxis = (instance, tickText, labelManager) => {\n    let rotation;\n    const axis = instance.axis();\n    const config = instance.config();\n    const renderConfig = instance.renderConfig();\n    const smartTicks = instance.smartTicks();\n    const scale = axis.scale();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n    const ticks = labelFunc();\n    const {\n        orientation,\n        fixedBaseline,\n        type\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n\n    rotation = labels.rotation;\n\n    const tickSize = instance.getTickSize();\n    tickText.each(function (d, index) {\n        let yShift;\n        let xShift;\n        let datum = smartTicks[index] ? smartTicks[index].text : d;\n\n        const tickFormatter = axis.tickFormat() ? axis.tickFormat : null;\n\n        const temp = tickSize ? (tickFormatter ? tickFormatter()(d) : datum) : '';\n\n        datum = temp.toString();\n\n        const tickLabelDim = labelManager.getOriSize(datum);\n\n        const width = tickLabelDim.width * 0.5;\n        const height = tickLabelDim.height * 0.5;\n\n        if (rotation < 0) {\n            rotation = 360 + rotation;\n        }\n\n        const quadrant = 4 - Math.floor(rotation / 90);\n        const rotationNormalizer = ((quadrant % 2 === 0) ? rotation : 180 * Math.ceil(rotation / 180) - rotation) % 180;\n\n        yShift = Math.sqrt(height ** 2 + width ** 2) * Math.sin(angleToRadian(rotationNormalizer));\n\n        if ((quadrant === 3 || quadrant === 2) && !(rotationNormalizer > 67.5 && rotationNormalizer <= 90)) {\n            yShift += height * 2;\n        }\n        xShift = width;\n\n        if (rotation === 90) {\n            xShift = height;\n        } else if (rotation === 270) {\n            xShift = -height;\n        } else {\n            xShift = 0;\n        }\n\n        if (orientation === AxisOrientation.TOP) {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift + xShift / 2 : xShift;\n            selectElement(this)\n                            .attr('transform', `translate(${-xShift + tickSize}\n                                ${-yShift - tickSize}) rotate(${rotation})`);\n        } else {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift - xShift / 2 : xShift;\n\n            selectElement(this)\n                            .attr('transform', `translate(${xShift - tickSize}\n                                ${yShift + tickSize}) rotate(${rotation})`);\n        }\n        selectElement(this).transition()\n                        .duration(1000).text(datum);\n    });\n    return tickText;\n};\n\n/**\n *\n *\n * @param {*} tickText\n * @param {*} axisInstance\n */\nconst changeTickOrientation = (selectContainer, axisInstance, tickSize) => {\n    const {\n        _smartTicks\n    } = axisInstance;\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const {\n        orientation,\n        classPrefix\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n    const {\n        rotation,\n        smartTicks: isSmartTicks\n    } = labels;\n\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.selectAll('tspan').remove();\n\n   // rotate labels if not enough space is available\n    if (rotation && (orientation === TOP || orientation === BOTTOM)) {\n        rotateAxis(axisInstance, tickText, labelManager);\n    } else if (!rotation && !isSmartTicks) {\n        tickText.attr('transform', '');\n    } else {\n        tickText.text('');\n        if (orientation === TOP || orientation === BOTTOM) {\n            tickText.attr('y', 0)\n                            .attr('x', 0)\n                            .attr('transform', '')\n                            .text('');\n            const tspan = makeElement(tickText, 'tspan', (d, i) => {\n                if (_smartTicks[i]) {\n                    return _smartTicks[i].lines;\n                } return [];\n            }, `${classPrefix}-smart-text`);\n\n            tspan.attr('dy', '0')\n                            .style('opacity', '0')\n\n                            .transition()\n                            .duration(1000)\n                            .on('end', axisInstance.registerAnimationDoneHook())\n                            .attr('dy', (d, i) => {\n                                if (orientation === BOTTOM || i !== 0) {\n                                    return _smartTicks[0].oriTextHeight;\n                                }\n                                return -_smartTicks[0].oriTextHeight * (_smartTicks[0].lines.length - 1) - tickSize;\n                            })\n                            .style('opacity', 1)\n                            .text(e => e)\n                            .attr('x', 0);\n        } else {\n            const tspan = makeElement(tickText, 'tspan', (d, i) => _smartTicks[i].lines, `${classPrefix}-smart-text`);\n            tspan.text(e => e);\n        }\n    }\n\n    return tickText;\n};\n\nconst setFixedBaseline = (axisInstance) => {\n    const {\n        fixedBaseline\n    } = axisInstance.config();\n    const domain = axisInstance.domain();\n    if (fixedBaseline && domain.length) {\n        axisInstance.setFixedBaseline();\n    }\n};\n\n/**\n *\n *\n * @param {*} textNode\n * @param {*} orientation\n * @param {*} measures\n */\nconst setAxisNamePos = (textNode, orientation, measures) => {\n    const {\n        axisNameHeight,\n        yOffset,\n        labelOffset,\n        availableSpace\n    } = measures;\n    switch (orientation) {\n    case AxisOrientation.LEFT:\n        textNode.attr('transform',\n            `translate(${-(availableSpace.width - axisNameHeight)},${yOffset + labelOffset})rotate(-90)`);\n        break;\n    case AxisOrientation.RIGHT:\n        textNode.attr('transform',\n             `translate(${(availableSpace.width - axisNameHeight)},${yOffset + labelOffset})rotate(90)`);\n        break;\n    case AxisOrientation.TOP:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${-availableSpace.height + axisNameHeight})`);\n        break;\n    case AxisOrientation.BOTTOM:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${availableSpace.height - axisNameHeight / 2})`);\n        break;\n    default:\n    }\n    return textNode;\n};\n\n/**\n * This method is used to render the axis inside an\n * svg container.\n *\n * @export\n * @param {Object} axisInstance the nput object required to render axis\n * @param {string} axisInstance.orientation the orientation of axis\n * @param {Object} axisInstance.scale instance of d3 scale\n * @param {SVGElement} axisInstance.container the container in which to render\n */\nexport function renderAxis (axisInstance) {\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const mount = axisInstance.mount();\n    const range = axisInstance.range();\n    const axis = axisInstance.axis();\n    const scale = axisInstance.scale();\n    const {\n        _axisNameStyle: axisNameStyle,\n        _tickLabelStyle: tickLabelStyle,\n        _tickFormatter: axisTickFormatter,\n        tickValues\n     } = axisInstance;\n    const {\n        orientation,\n        name,\n        xOffset,\n        yOffset,\n        axisNamePadding,\n        className,\n        id,\n        classPrefix\n     } = config;\n    const {\n        show,\n        showAxisName,\n        labels\n    } = renderConfig;\n\n    if (!show) {\n        return;\n    }\n\n    const tickSize = axisInstance.getTickSize();\n\n    const selectContainer = makeElement(selectElement(mount), 'g', [axisInstance], `${className}`, {},\n        key => key.config().id);\n\n    // Set style for tick labels\n    labelManager.setStyle(tickLabelStyle);\n\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    axis.tickFormat(axisTickFormatter(tickValues || axis.tickValues() || labelFunc()));\n\n    // Get range(length of range)\n    const availableSpace = Math.abs(range[0] - range[1]);\n\n    // Get width and height taken by axis labels\n    const labelProps = axisInstance.axisComponentDimensions().largestTickDimensions;\n\n    // Draw axis ticks\n    selectContainer.attr('transform', `translate(${xOffset},${yOffset})`);\n    setFixedBaseline(axisInstance);\n    if (labels.smartTicks === false || tickSize === 0) {\n        selectContainer.transition()\n                        .duration(1000)\n                        .on('end', axisInstance.registerAnimationDoneHook())\n                        .call(axis);\n    } else {\n        selectContainer.call(axis);\n    }\n    selectContainer.selectAll('.tick').classed(`${classPrefix}-ticks`, true);\n    selectContainer.selectAll('.tick line').classed(`${classPrefix}-tick-lines`, true);\n\n    // Set classes for ticks\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.classed(`${classPrefix}-ticks`, true)\n                    .classed(`${classPrefix}-ticks-${id}`, true);\n\n    changeTickOrientation(selectContainer, axisInstance, tickSize);\n\n    // Create axis name\n    const textNode = makeElement(selectContainer, 'text', [name], `${classPrefix}-axis-name`)\n                    .attr('text-anchor', 'middle')\n                    .classed(`${classPrefix}-axis-name-${id}`, true)\n                    .text(d => d);\n\n    // Hide axis name if show is off\n    textNode.classed(HIDDEN, !showAxisName);\n\n     // render labels based on orientation of axis\n    const labelOffset = availableSpace / 2;\n\n    // Set style for axis name\n    labelManager.setStyle(axisNameStyle);\n    const axisNameSpace = labelManager.getOriSize(name);\n    const measures = {\n        labelProps,\n        tickSize,\n        axisNamePadding,\n        axisNameHeight: axisNameSpace.height,\n        axisNameWidth: axisNameSpace.width,\n        yOffset,\n        xOffset,\n        labelOffset,\n        availableSpace: axisInstance.availableSpace()\n    };\n    // Set position for axis name\n    setAxisNamePos(textNode, orientation, measures);\n}\n","import { BOTTOM, TOP } from '../enums/axis-orientation';\n\nconst setAxisRange = (context, type, rangeBounds, offset) => {\n    context.range(rangeBounds);\n    offset && context.config({ [`${type}Offset`]: offset });\n};\n\nconst getAxisOffset = (timeDiff, range, domain) => {\n    const pvr = Math.abs(range[1] - range[0]) / (domain[1] - domain[0]);\n    const width = (pvr * timeDiff);\n    const avWidth = (range[1] - range[0]);\n    const bars = avWidth / width;\n    const barWidth = avWidth / (bars + 1);\n    const diff = avWidth - barWidth * bars;\n\n    return diff / 2;\n};\n\nexport const adjustRange = (minDiff, range, domain, orientation) => {\n    const diff = getAxisOffset(minDiff, range, domain);\n\n    if (orientation === TOP || orientation === BOTTOM) {\n        range[0] += diff;\n        range[1] -= diff;\n    } else {\n        range[0] -= diff;\n        range[1] += diff;\n    }\n    return range;\n};\n\nexport const spaceSetter = (context, spaceConfig) => {\n    let tickInterval;\n    let heightForTicks;\n    const {\n        width: availWidth,\n        height: availHeight,\n        padding\n    } = context.availableSpace();\n    const {\n        top,\n        left,\n        bottom,\n        right\n    } = padding;\n    const {\n        isOffset\n    } = spaceConfig;\n    const {\n        showAxisName,\n        labels\n    } = context.renderConfig();\n    const {\n        rotation\n    } = labels;\n    const {\n        orientation,\n        fixedBaseline,\n        axisNamePadding,\n        tickValues\n    } = context.config();\n    const {\n        tickDimensions,\n        allTickDimensions,\n        axisNameDimensions,\n        tickSize\n    } = context.getAxisDimensions();\n    const {\n        height: tickDimHeight,\n        width: tickDimWidth\n    } = tickDimensions;\n    const namePadding = showAxisName ? axisNamePadding : 0;\n    const labelConfig = { smartTicks: true, rotation: labels.rotation };\n    const minTickDistance = context._minTickDistance;\n    const minTickSpace = context._minTickSpace;\n    const minDiff = context._minDiff;\n    const domain = context.domain();\n    const axisNameHeight = axisNameDimensions.height;\n\n    return {\n        time: {\n            x: () => {\n                const tickShifter = tickDimWidth / 2;\n\n                setAxisRange(context, 'y', adjustRange(minDiff,\n                    [tickShifter, availWidth - left - right - tickShifter], domain, orientation),\n                        isOffset ? availHeight : null);\n\n                tickInterval = ((availWidth) / context.getTickValues().length)\n                                     - minTickDistance.width;\n\n                heightForTicks = availHeight - axisNameDimensions.availHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickSpace.width && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = labels.rotation === null ? -90 : rotation;\n\n                    // Remove ticks if not enough height\n                    if (tickInterval < minTickSpace.height) {\n                        heightForTicks = availHeight;\n                        tickInterval = minTickSpace.height;\n                        context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n                return labelConfig;\n            },\n            y: () => {\n                let widthForTicks = availWidth;\n                const tickShifter = tickDimHeight / 2;\n\n                setAxisRange(context, 'x', adjustRange(minDiff,\n                    [availHeight - top - bottom - tickShifter, tickShifter], domain, orientation),\n                        isOffset ? availWidth : null);\n\n                if ((availWidth - axisNameHeight - namePadding) <= minTickDistance.width) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        band: {\n            x: () => {\n                setAxisRange(context, 'y', [0, availWidth - left - right], isOffset ? availHeight : null);\n                const range = context.range();\n\n                // Get Tick Interval\n                tickInterval = ((range[1] - range[0]) / (tickValues || domain).length) - minTickDistance.width;\n\n                // Get height available for ticks\n                heightForTicks = availHeight - axisNameHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickSpace.width && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = rotation === null ? -90 : rotation;\n                    labelConfig.smartTicks = false;\n\n                    // Ticks with overlapping height\n                    if (tickInterval < minTickSpace.height) {\n                        heightForTicks = 0;\n                        tickInterval = 0;\n                        context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                        context.range([minTickSpace.height / 2, availWidth - minTickSpace.height / 2]);\n                    }\n                } else if (tickValues) {\n                    const interval = (availWidth / domain.length) - minTickDistance.width;\n                    if (interval < minTickSpace.width) {\n                        context.range([minTickSpace.height / 2, availWidth - minTickSpace.height / 2]);\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false, showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n                return labelConfig;\n            },\n            y: () => {\n                setAxisRange(context, 'x', [availHeight - bottom, top], isOffset ? availWidth : null);\n\n                let widthForTicks = availWidth - axisNameHeight - tickSize - namePadding;\n                if (widthForTicks <= minTickDistance.width) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        continous: {\n            x: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimensions.width / 2;\n                const baseline = fixedBaseline ? 0 : tickShifter;\n\n                setAxisRange(context, 'y', [baseline + left, availWidth - right - tickShifter],\n                    isOffset ? availHeight : null);\n\n                const range = context.range();\n\n                // Get Tick widths and available space\n                const totalTickWidth = allTickDimensions.length * (tickDimensions.width + minTickDistance.width);\n                const availableSpace = range[1] - range[0];\n\n                 // Rotate labels if not enough width\n                if (availableSpace < totalTickWidth && labels.rotation === null) {\n                    labelConfig.rotation = -90;\n                }\n\n                // Remove ticks if not enough height\n                if (availHeight - axisNameHeight - namePadding < tickDimensions.height) {\n                    context.renderConfig({ showInnerTicks: false });\n                    if (availHeight < axisNameHeight) {\n                        context.renderConfig({ show: false });\n                    }\n                }\n                return labelConfig;\n            },\n            y: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimensions.height / 2;\n                const baseline = fixedBaseline ? 1 : tickShifter;\n\n                setAxisRange(context, 'x', [availHeight - bottom - baseline, tickShifter + top],\n                    isOffset ? availWidth : null);\n\n                // Remove display of ticks if no space is left\n                if (availWidth < tickDimensions.width + axisNameHeight + namePadding) {\n                    context.renderConfig({ showInnerTicks: false });\n                    if (availWidth < axisNameHeight) {\n                        context.renderConfig({ show: false });\n                    }\n                }\n                return labelConfig;\n            }\n        }\n    };\n};\n","import { defaultValue } from 'muze-utils';\nimport { TOP, LEFT, BOTTOM } from '../enums/axis-orientation';\n\nexport const getRotatedSpaces = (rotation = 0, width, height) => {\n    let rotatedHeight = height;\n    let rotatedWidth = width;\n    if (rotation) {\n        const angle = ((rotation || 0) * Math.PI) / 180;\n        rotatedWidth = Math.abs(height * Math.sin(angle)) + Math.abs(width * Math.cos(angle));\n        rotatedHeight = Math.abs(width * Math.sin(angle)) + Math.abs(height * Math.cos(angle));\n    }\n    return { width: rotatedWidth, height: rotatedHeight };\n};\n\nexport const setOffset = (context) => {\n    let x = 0;\n    let y = 0;\n    const logicalSpace = context.logicalSpace();\n    const config = context.config();\n    const {\n        orientation,\n        xOffset,\n        yOffset\n    } = config;\n    if (orientation === LEFT) {\n        x = xOffset === undefined ? logicalSpace.width : xOffset;\n    }\n    if (orientation === TOP) {\n        y = yOffset === undefined ? logicalSpace.height : yOffset;\n    }\n    context.config({ xOffset: x, yOffset: y });\n};\n\nexport const getNumberOfTicks = (availableSpace, labelDim, axis, axisInstance) => {\n    const ticks = axis.scale().ticks();\n    const { numberOfTicks } = axisInstance.config();\n    const tickLength = ticks.length;\n    let numberOfValues = tickLength;\n\n    if (tickLength * (labelDim * 1.5) > availableSpace) {\n        numberOfValues = Math.floor(availableSpace / (labelDim * 1.5));\n    }\n\n    numberOfValues = Math.min(numberOfTicks, Math.max(2, numberOfValues));\n\n    return axis.scale().ticks(numberOfValues);\n};\n\nexport const getAxisComponentDimensions = (context) => {\n    let largestTick = '';\n    let largestTickDimensions = { width: 0, height: 0 };\n    let smartTick = {};\n    let axisTicks;\n    const allTickDimensions = [];\n    const scale = context.scale();\n    const { showAxisName } = context.renderConfig();\n    const { tickValues, name } = context.config();\n    const { labelManager } = context.dependencies();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    // set the style on the shared label manager instance\n    labelManager.setStyle(context._tickLabelStyle);\n\n    // get the values along the domain\n    axisTicks = tickValues || labelFunc();\n\n    // Get the tick labels\n    axisTicks = axisTicks.map((originalLabel, i) => {\n        const label = context.getFormattedText(originalLabel, i, axisTicks);\n\n    // convert to string for quant values\n        const tickDimensions = labelManager.getOriSize(label);\n\n    // Get spaces for all labels\n        allTickDimensions.push(tickDimensions);\n\n    // Getting largest label\n        if (tickDimensions.width > largestTickDimensions.width) {\n            largestTick = label;\n            smartTick = context.smartTicks() ? context.smartTicks()[i] : {};\n            largestTickDimensions = tickDimensions;\n        }\n        return label;\n    });\n\n    labelManager.setStyle(context._axisNameStyle);\n    const axisNameDimensions = showAxisName ? labelManager.getOriSize(name) : { width: 0, height: 0 };\n\n    return {\n        axisNameDimensions,\n        largestTick,\n        largestTickDimensions,\n        allTickDimensions,\n        axisTicks,\n        smartTick,\n        tickSize: context.getTickSize()\n    };\n};\n\nexport const computeAxisDimensions = (context) => {\n    let tickDimensions = {};\n    const { labels } = context.renderConfig();\n    const { smartTicks, rotation } = labels;\n    const {\n        largestTickDimensions,\n        axisTicks,\n        smartTick,\n        axisNameDimensions,\n        allTickDimensions,\n        tickSize\n    } = getAxisComponentDimensions(context);\n    const { height: labelHeight, width: labelWidth } = largestTickDimensions;\n\n    // get the domain of axis\n    const domain = context.domain();\n    // const angle = ((rotation || 0) * Math.PI) / 180;\n\n    if (domain.length === 0) {\n        return null;\n    }\n    if (smartTicks) {\n        tickDimensions = smartTick;\n    } else {\n        tickDimensions = { width: labelWidth, height: labelHeight };\n    }\n    tickDimensions = getRotatedSpaces(rotation, tickDimensions.width, tickDimensions.height);\n\n    if (tickSize === 0) {\n        tickDimensions = { width: 0, height: 0 };\n    }\n    return {\n        allTickDimensions,\n        tickSize,\n        tickDimensions,\n        axisNameDimensions,\n        largestTickDimensions,\n        axisTicks\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getHorizontalAxisSpace = (context, axisDimensions, range) => {\n    let width;\n    let height;\n    const domain = context.domain();\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    width = range && range.length ? range[1] - range[0] : 0;\n\n    height = 0;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        width = ((max - min) / Math.abs(minTickDiff)) * (tickDimWidth + context._minTickDistance.width);\n    }\n    if (!width || width === 0) {\n        height = Math.max(tickDimWidth, tickDimHeight);\n    } else {\n        height = tickDimHeight;\n    }\n    height += (showAxisName ? axisDimHeight + axisNamePadding : 0) + tickSize;\n\n    return {\n        width,\n        height\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getVerticalAxisSpace = (context, axisDimensions) => {\n    let height;\n    let width;\n    const domain = context.domain();\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    height = 0;\n    width = tickDimWidth;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        height = ((max - min) / Math.abs(minTickDiff)) * tickDimHeight;\n    }\n    width += (showAxisName ? axisDimHeight : 0) + tickSize + axisNamePadding;\n\n    return {\n        height,\n        width\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateBandSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n    const { orientation } = context.config();\n    const { show } = context.renderConfig();\n    const { largestTickDimensions, axisTicks, allTickDimensions } = axisDimensions;\n    const { height: largestDimHeight } = largestTickDimensions;\n    const minTickWidth = context._minTickDistance.width;\n    if (orientation === TOP || orientation === BOTTOM) {\n        let {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n\n        if (!width || width === 0) {\n            width = allTickDimensions.reduce((t, n) =>\n                t + Math.min(n.width, n.height) + minTickWidth, 0);\n        }\n        if (show === false) {\n            height = 0;\n            width = 0;\n        }\n\n        return {\n            width,\n            height\n        };\n    }\n\n    let {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    if (!height || height === 0) {\n        height = axisTicks.length * (largestDimHeight + context._minTickDistance.height) + largestDimHeight;\n    }\n    if (show === false) {\n        width = 0;\n    }\n\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateContinousSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n    const { orientation } = context.config();\n    const { show, showAxisName } = context.renderConfig();\n    const { axisNameDimensions } = axisDimensions;\n\n    if (show === false) {\n        return {\n            width: 0,\n            height: 0\n        };\n    }\n\n    const { width: axisNameWidth } = axisNameDimensions;\n\n    if (orientation === TOP || orientation === BOTTOM) {\n        const {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n        const axisWidth = Math.max(width, axisNameWidth);\n\n        return {\n            width: axisWidth,\n            height\n        };\n    }\n    const {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    const effHeight = Math.max(height, showAxisName ? axisNameWidth : 0);\n\n    return {\n        width,\n        height: effHeight\n    };\n};\n\n/**\n * Overwrites domain with user defined domain (if present)\n * @param {Object} context reference to current axes\n * @param {Array} domain default domain\n *\n * @return {Array} domain\n */\nexport const getValidDomain = (context, domain) => {\n    const { domain: userDom } = context.config();\n\n    if (userDom) {\n        domain = userDom;\n    }\n\n    return defaultValue(domain, []);\n};\n\nexport const setContinousAxisDomain = (context, domain) => {\n    const { nice } = context.config();\n    const scale = context.scale.bind(context);\n\n    scale().domain(domain);\n    nice && scale().nice();\n    context._domain = scale().domain();\n};\n\n/**\n * Checks if any of the properties have changed between two objects\n * @param {Object} obj first object\n * @param {Object} obj1 second object\n * @param {Array} properties properties to be compared between two objects\n *\n * @return {Boolean} boolean value\n */\nexport const hasAxesConfigChanged = (obj = {}, obj1 = {}, properties) => {\n    if (!Object.keys(obj).length || !Object.keys(obj1).length) {\n        return false;\n    }\n    return properties.some(key => obj[key] !== obj1[key]);\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { hasAxesConfigChanged } from './helper';\n\nexport const PROPS = {\n    availableSpace: {},\n    axisDimensions: {},\n    axisComponentDimensions: {},\n    config: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._config || {});\n            const mockedOldConfig = mergeRecursive({}, oldConfig);\n            value = mergeRecursive(mockedOldConfig, value);\n\n            value.axisNamePadding = Math.max(value.axisNamePadding, 0);\n            const shouldAxesScaleUpdate = hasAxesConfigChanged(\n                value, oldConfig, ['interpolator', 'exponent', 'base', 'orientation']\n            );\n            const tickFormatter = context.sanitizeTickFormatter(value);\n\n            if (shouldAxesScaleUpdate) {\n                context._scale = context.createScale(value);\n                context._axis = context.createAxis(value);\n            }\n\n            context._tickFormatter = ticks => tickFormatter(ticks);\n\n            const {\n                labels,\n                show,\n                showInnerTicks,\n                showOuterTicks,\n                showAxisName\n            } = value;\n            context.renderConfig({\n                labels,\n                show,\n                showInnerTicks,\n                showOuterTicks,\n                showAxisName\n            });\n            return value;\n        }\n    },\n    renderConfig: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._renderConfig || {});\n            value = mergeRecursive(oldConfig, value);\n            return value;\n        }\n    },\n    logicalSpace: {},\n    mount: {\n    },\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.logicalSpace(null);\n            return value;\n        }\n    },\n\n    smartTicks: {},\n    tickSize: {},\n    maxTickSpaces: {},\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import {\n    mergeRecursive,\n    getSmartComputedStyle,\n    selectElement,\n    generateGetterSetters,\n    getUniqueId\n} from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { axisOrientationMap, BOTTOM, TOP } from '../enums/axis-orientation';\nimport { defaultConfig } from './default-config';\nimport { renderAxis } from '../axis-renderer';\nimport { spaceSetter } from './space-setter';\nimport {\n    getAxisComponentDimensions,\n    computeAxisDimensions,\n    calculateContinousSpace,\n    setOffset,\n    getValidDomain\n} from './helper';\nimport { PROPS } from './props';\n\nexport default class SimpleAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @memberof SimpleAxis\n     */\n    constructor (config, dependencies) {\n        this._id = getUniqueId();\n\n        this._dependencies = dependencies;\n        this._mount = null;\n        this._range = [];\n        this._domain = [];\n        this._domainLock = false;\n        this._axisDimensions = {};\n        this._smartTicks = [];\n\n        const defCon = mergeRecursive({}, this.constructor.defaultConfig());\n        const simpleConfig = mergeRecursive(defCon, config);\n\n        const bodyElem = selectElement('body');\n        const classPrefix = simpleConfig.classPrefix;\n        this._tickLabelStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-ticks`);\n        this._axisNameStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-axis-name`);\n\n        dependencies.labelManager.setStyle(this._tickLabelStyle);\n        const dist = dependencies.labelManager.getOriSize('w');\n\n        this._minTickDistance = { width: dist.width * 3 / 4, height: dist.height / 2 };\n        this._minTickSpace = dependencies.labelManager.getOriSize('www');\n\n        generateGetterSetters(this, PROPS);\n        this.config(simpleConfig);\n\n        this._scale = this.createScale(this._config);\n        this._axis = this.createAxis(this._config);\n        this._animationDonePromises = [];\n    }\n\n    /**\n     * Returns the default configuration of simple axis\n     *  @return {Object} default configurations\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    scale (...params) {\n        if (params.length) {\n            this._scale = params[0];\n            return this;\n        }\n        return this._scale;\n    }\n\n    resetDomain () {\n        this._domain = [];\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    axis (...params) {\n        if (params.length) {\n            this._axis = params[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainValue = getValidDomain(this, domain[0]);\n            this.scale().domain(domainValue);\n            this._domain = this.scale().domain();\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    setAxisComponentDimensions () {\n        this.axisComponentDimensions(getAxisComponentDimensions(this));\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const scale = createScale({\n            padding,\n            interpolator,\n            exponent,\n            base,\n            range,\n            type: this.constructor.type()\n        });\n\n        return scale;\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat, numberFormat } = value;\n\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(numberFormat(val), val, i, ticks);\n        }\n\n        return () => val => numberFormat(val);\n    }\n\n    resetLogicalSpace () {\n        this.logicalSpace(null);\n        this.range([]);\n        const {\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName\n        } = this.config();\n        this.renderConfig({\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName\n        });\n    }\n\n    getFormattedText (text, index, axisTicks) {\n        const formatter = this._tickFormatter;\n\n        return formatter(axisTicks)(text, index);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createAxis (config) {\n        const { orientation } = config;\n        const axisClass = axisOrientationMap[orientation];\n\n        if (axisClass) {\n            const axis = axisClass(this.scale());\n            return axis;\n        }\n        return null;\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).continous.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).continous.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        return this;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this.scale()(domainVal);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        return this.axis().tickSize();\n    }\n\n    /**\n     * Gets the space occupied by the parts of an axis\n     *\n     * @return {Object} object with details about sizes of the axis.\n     * @memberof SimpleAxis\n     */\n    getAxisDimensions (...params) {\n        this.axisDimensions(computeAxisDimensions(this, ...params));\n        return this.axisDimensions();\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateContinousSpace(this));\n            this.logicalSpace();\n            setOffset(this);\n        }\n\n        return this.logicalSpace();\n    }\n\n    /**\n     * Returns the value from the domain when given a value from the range.\n     * @param {number} value Value from the range.\n     * @return {number} Value\n     */\n    invert (value) {\n        return this.scale().invert(value);\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     *\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        return [v1, v2];\n    }\n\n    invertExtent (v1, v2) {\n        return [this.invert(v1), this.invert(v2)];\n    }\n\n    getMinTickDifference () {\n        return this.domain();\n    }\n\n    getFormattedTickValues (tickValues) {\n        return tickValues;\n    }\n\n    /**\n     * This method returns the width in pixels for one\n     * unit along the axis. It is only applicable to band scale\n     * and returns undefined for other scale type.\n     *\n     * @return {number} the width of one band along band scale axis\n     * @memberof SimpleAxis\n     */\n    getUnitWidth () {\n        return 0;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof SimpleAxis\n     */\n    serialize () {\n        return {\n            name: this.name,\n            type: this.type,\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to render the axis inside\n     * the supplied svg container.\n     *\n     * @param {SVGElement} svg the svg element in which to render the path\n     * @memberof SimpleAxis\n     */\n    /* istanbul ignore next */render () {\n        if (this.mount()) {\n            this.setTickConfig();\n            renderAxis(this);\n        }\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    remove () {\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    unsubscribe () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    isReverse () {\n        const range = this.range();\n        return range[0] > range[1];\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getPixelToValueRatio () {\n        const scale = this.scale();\n        const range = scale.range();\n        const domain = scale.domain();\n\n        return Math.abs(range[1] - range[0]) / (domain[1] - domain[0]);\n    }\n\n     /**\n     * Notifies when all animations/transitions of the axis are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n}\n\n","import { scaleMap } from '../../scale-creator';\n\nexport default class LinearInterpolator {\n\n    createScale (config) {\n        const {\n            range\n        } = config;\n        const scaleFactory = scaleMap.linear;\n        this._scale = scaleFactory().range(range);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain.length && domain[0] === domain[1]) {\n            domain = [0, +domain[0] * 2];\n        }\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class LogInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            base\n        } = config;\n        const scaleFactory = scaleMap.log;\n        this._scale = scaleFactory().range(range).base(base);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        const scale = this._scale;\n        if (domainVal <= 0) {\n            return scale(scale.domain()[0]);\n        }\n\n        return scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain[0] <= 0) {\n            domain[0] = Math.max(1, domain[0]);\n        }\n        if (domain[1] <= 0) {\n            domain[1] = Math.max(1, domain[1]);\n        }\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class PowInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            exponent\n        } = config;\n        const scaleFactory = scaleMap.pow;\n        this._scale = scaleFactory().range(range).exponent(exponent);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        return domain;\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\nimport { spaceSetter } from './space-setter';\nimport { LINEAR, LOG, POW } from '../enums/scale-type';\nimport { LogInterpolator, PowInterpolator, LinearInterpolator } from './interpolators';\nimport {\n    getNumberOfTicks,\n    getValidDomain,\n    setContinousAxisDomain\n} from './helper';\n\nexport const interpolatorMap = {\n    [LOG]: LogInterpolator,\n    [POW]: PowInterpolator,\n    [LINEAR]: LinearInterpolator\n};\n\nexport default class ContinousAxis extends SimpleAxis {\n    constructor (config, dependencies) {\n        config.tickFormat = config.tickFormat || (val => val);\n        super(config, dependencies);\n    }\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const InterpolatorCls = interpolatorMap[interpolator];\n\n        this._interpolator = new InterpolatorCls();\n        let scale = this._interpolator.createScale({\n            padding,\n            exponent,\n            base,\n            range\n        });\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ContinousAxis\n     */\n    static type () {\n        return LINEAR;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this._interpolator.getScaleValue(domainVal);\n    }\n /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n\n        return axis.tickSize();\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainVal = this._interpolator.sanitizeDomain(getValidDomain(this, domain[0]));\n            setContinousAxisDomain(this, domainVal);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).continous.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).continous.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} tickValues\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        const {\n            tickValues\n        } = this.config();\n        const {\n            showInnerTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        if (!showInnerTicks) {\n            axis.tickValues([]);\n            return this;\n        }\n\n        if (tickValues) {\n            tickValues instanceof Array && this.axis().tickValues(tickValues);\n            return this;\n        }\n        axis.tickValues(this.getTickValues());\n\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickValues () {\n        let labelDim = 0;\n        const {\n            orientation,\n            tickValues\n        } = this.config();\n        const range = this.range();\n        const axis = this.axis();\n\n        const availableSpace = Math.abs(range[0] - range[1]);\n\n        const labelProps = this.axisComponentDimensions().largestTickDimensions;\n\n        if (tickValues) {\n            return axis.scale().ticks(tickValues);\n        }\n        labelDim = labelProps[orientation === BOTTOM || orientation === TOP ? 'width' : 'height'];\n\n        return getNumberOfTicks(availableSpace, labelDim, axis, this);\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.config().tickValues);\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline (tickText) {\n        const {\n            orientation\n        } = this.config();\n        const {\n            labels\n        } = this.renderConfig();\n\n        const {\n            rotation\n        } = labels;\n        const axis = this.axis();\n        const ticks = axis.scale().ticks();\n        const { width, height } = this.axisComponentDimensions().allTickDimensions[0];\n        axis.tickTransform((d) => {\n            if (d === ticks[0]) {\n                if ((orientation === LEFT || orientation === RIGHT)) {\n                    return `translate(0, -${(height) / 3}px)`;\n                }\n                if ((orientation === TOP || orientation === BOTTOM) && !rotation) {\n                    return `translate(${width / 2}px,  ${0}px)`;\n                }\n            } return '';\n        });\n        return tickText;\n    }\n\n}\n","import SimpleAxis from './simple-axis';\nimport { BAND } from '../enums/scale-type';\nimport { TOP, BOTTOM } from '../enums/axis-orientation';\nimport { calculateBandSpace, setOffset, getRotatedSpaces } from './helper';\nimport { spaceSetter } from './space-setter';\n\nexport default class BandAxis extends SimpleAxis {\n\n    /**\n     *\n     *\n     * @param {*} config axes configuration\n     *\n     * @memberof BandAxis\n     */\n    createScale (config) {\n        return super.createScale(config);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BandAxis\n     */\n    static type () {\n        return BAND;\n    }\n\n     /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).band.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).band.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks = '';\n        let smartlabel;\n        const domain = this.domain();\n        const { labelManager } = this._dependencies;\n        const { tickValues, padding } = this.config();\n        const { labels } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        tickValues && this.axis().tickValues(tickValues);\n        smartTicks = tickValues || domain;\n\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        // Update padding between plots\n        if (typeof padding === 'number' && padding >= 0 && padding <= 1) {\n            this.scale().padding(padding);\n        }\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            const tickFormatter = this._tickFormatter(values);\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n        this.smartTicks(smartTicks);\n        return this;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n            setOffset(this);\n            this.logicalSpace();\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     *\n     *\n     * @memberof BandAxis\n     */\n    getTickValues () {\n        return this.axis().scale().domain();\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat } = value;\n\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(val, val, i, ticks);\n        }\n        return () => val => this.valueParser()(val);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    getUnitWidth () {\n        return this.scale().bandwidth();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        axis.tickSizeInner(showInnerTicks ? 6 : 0);\n        axis.tickSizeOuter(showOuterTicks ? 6 : 0);\n        return axis.tickSize();\n    }\n\n    invertExtent (v1, v2) {\n        return this.scale().invertExtent(v1, v2);\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        const scale = this.scale();\n        const range = scale.range();\n        const reverse = range[0] > range[1];\n\n        const extent = this.invertExtent(v1, v2);\n        const p1 = scale(reverse ? extent[extent.length - 1] : extent[0]);\n        const p2 = scale(reverse ? extent[0] : extent[extent.length - 1]) + scale.bandwidth();\n        return [p1, p2];\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { TIME } from '../enums/scale-type';\nimport { axisOrientationMap, BOTTOM, TOP } from '../enums/axis-orientation';\nimport { calculateBandSpace, getRotatedSpaces, getValidDomain, setContinousAxisDomain, setOffset } from './helper';\nimport { spaceSetter } from './space-setter';\n\n/**\n *\n *\n * @export\n * @class TimeAxis\n * @extends {SimpleAxis}\n */\nexport default class TimeAxis extends SimpleAxis {\n\n    constructor (...params) {\n        super(...params);\n        this._minDiff = Infinity;\n    }\n\n    /**\n     *\n     *\n     * @param {*} range\n     *\n     * @memberof TimeAxis\n     */\n    createScale (range) {\n        let scale = super.createScale(range);\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TimeAxis\n     */\n    static type () {\n        return TIME;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof SimpleAxis\n     */\n    createAxis (config) {\n        const { orientation } = config;\n        const axisClass = axisOrientationMap[orientation];\n\n        if (axisClass) {\n            const axis = axisClass(this.scale());\n            return axis;\n        }\n        return null;\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat } = value;\n\n        if (tickFormat) {\n            return (ticks) => {\n                const rawTicks = ticks.map(t => t.getTime());\n                return (val, i) => tickFormat(val, val.getTime(), i, rawTicks);\n            };\n        }\n        return () => text => this.scale().tickFormat()(text);\n    }\n\n     /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n        return super.getTickSize();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TimeAxis\n     */\n    getTickValues () {\n        return this.config().tickValues || this.scale().ticks();\n    }\n\n    /**\n     *\n     *\n     * @param {*} diff\n     *\n     * @memberof TimeAxis\n     */\n    minDiff (diff) {\n        this._minDiff = Math.min(this._minDiff, diff);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainValue = getValidDomain(this, domain[0]);\n            setContinousAxisDomain(this, domainValue);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n            this.logicalSpace();\n            setOffset(this);\n        }\n        return this.logicalSpace();\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.config().tickValues);\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).time.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).time.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks;\n        let smartlabel;\n        const { tickValues } = this.config();\n        const { labels } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { labelManager } = this._dependencies;\n        const domain = this.getTickValues();\n\n        tickValues && this.axis().tickValues(tickValues);\n\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        smartTicks = tickValues || domain;\n\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            const tickFormatter = this._tickFormatter(values);\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n        this.smartTicks(smartTicks);\n        return this;\n    }\n}\n","export const x11Colors = {\n    Pink: { hex: 'ffc0cb', rgb: '255,192,203' },\n    LightPink: { hex: 'ffb6c1', rgb: '255,182,193' },\n    HotPink: { hex: 'ff69b4', rgb: '255,105,180' },\n    DeepPink: { hex: 'ff1493', rgb: '255,20,147' },\n    PaleVioletRed: { hex: 'db7093', rgb: '219,112,147' },\n    MediumVioletRed: { hex: 'c71585', rgb: '199,21,133' },\n    LightSalmon: { hex: 'ffa07a', rgb: '255,160,122' },\n    Salmon: { hex: 'fa8072', rgb: '250,128,114' },\n    DarkSalmon: { hex: 'e9967a', rgb: '233,150,122' },\n    LightCoral: { hex: 'f08080', rgb: '240,128,128' },\n    IndianRed: { hex: 'cd5c5c', rgb: '205,92,92' },\n    Crimson: { hex: 'dc143c', rgb: '220,20,60' },\n    FireBrick: { hex: 'b22222', rgb: '178,34,34' },\n    DarkRed: { hex: '8b0000', rgb: '139,0,0' },\n    Red: { hex: 'ff0000', rgb: '255,0,0' },\n    OrangeRed: { hex: 'ff4500', rgb: '255,69,0' },\n    Tomato: { hex: 'ff6347', rgb: '255,99,71' },\n    Coral: { hex: 'ff7f50', rgb: '255,127,80' },\n    DarkOrange: { hex: 'ff8c00', rgb: '255,140,0' },\n    Orange: { hex: 'ffa500', rgb: '255,165,0' },\n    Gold: { hex: 'ffd700', rgb: '255,215,0' },\n    Yellow: { hex: 'ffff00', rgb: '255,255,0' },\n    LightYellow: { hex: 'ffffe0', rgb: '255,255,224' },\n    LemonChiffon: { hex: 'fffacd', rgb: '255,250,205' },\n    LightGoldenrodYellow: { hex: 'fafad2', rgb: '250,250,210' },\n    PapayaWhip: { hex: 'ffefd5', rgb: '255,239,213' },\n    Moccasin: { hex: 'ffe4b5', rgb: '255,228,181' },\n    PeachPuff: { hex: 'ffdab9', rgb: '255,218,185' },\n    PaleGoldenrod: { hex: 'eee8aa', rgb: '238,232,170' },\n    Khaki: { hex: 'f0e68c', rgb: '240,230,140' },\n    DarkKhaki: { hex: 'bdb76b', rgb: '189,183,107' },\n    Cornsilk: { hex: 'fff8dc', rgb: '255,248,220' },\n    BlanchedAlmond: { hex: 'ffebcd', rgb: '255,235,205' },\n    Bisque: { hex: 'ffe4c4', rgb: '255,228,196' },\n    NavajoWhite: { hex: 'ffdead', rgb: '255,222,173' },\n    Wheat: { hex: 'f5deb3', rgb: '245,222,179' },\n    BurlyWood: { hex: 'deb887', rgb: '222,184,135' },\n    Tan: { hex: 'd2b48c', rgb: '210,180,140' },\n    RosyBrown: { hex: 'bc8f8f', rgb: '188,143,143' },\n    SandyBrown: { hex: 'f4a460', rgb: '244,164,96' },\n    Goldenrod: { hex: 'daa520', rgb: '218,165,32' },\n    DarkGoldenrod: { hex: 'b8860b', rgb: '184,134,11' },\n    Peru: { hex: 'cd853f', rgb: '205,133,63' },\n    Chocolate: { hex: 'd2691e', rgb: '210,105,30' },\n    SaddleBrown: { hex: '8b4513', rgb: '139,69,19' },\n    Sienna: { hex: 'a0522d', rgb: '160,82,45' },\n    Brown: { hex: 'a52a2a', rgb: '165,42,42' },\n    Maroon: { hex: '800000', rgb: '128,0,0' },\n    DarkOliveGreen: { hex: '556b2f', rgb: '85,107,47' },\n    Olive: { hex: '808000', rgb: '128,128,0' },\n    OliveDrab: { hex: '6b8e23', rgb: '107,142,35' },\n    YellowGreen: { hex: '9acd32', rgb: '154,205,50' },\n    LimeGreen: { hex: '32cd32', rgb: '50,205,50' },\n    Lime: { hex: '00ff00', rgb: '0,255,0' },\n    LawnGreen: { hex: '7cfc00', rgb: '124,252,0' },\n    Chartreuse: { hex: '7fff00', rgb: '127,255,0' },\n    GreenYellow: { hex: 'adff2f', rgb: '173,255,47' },\n    SpringGreen: { hex: '00ff7f', rgb: '0,255,127' },\n    MediumSpringGreen: { hex: '00fa9a', rgb: '0,250,154' },\n    LightGreen: { hex: '90ee90', rgb: '144,238,144' },\n    PaleGreen: { hex: '98fb98', rgb: '152,251,152' },\n    DarkSeaGreen: { hex: '8fbc8f', rgb: '143,188,143' },\n    MediumSeaGreen: { hex: '3cb371', rgb: '60,179,113' },\n    SeaGreen: { hex: '2e8b57', rgb: '46,139,87' },\n    ForestGreen: { hex: '228b22', rgb: '34,139,34' },\n    Green: { hex: '008000', rgb: '0,128,0' },\n    DarkGreen: { hex: '006400', rgb: '0,100,0' },\n    MediumAquamarine: { hex: '66cdaa', rgb: '102,205,170' },\n    Aqua: { hex: '00ffff', rgb: '0,255,255' },\n    Cyan: { hex: '00ffff', rgb: '0,255,255' },\n    LightCyan: { hex: 'e0ffff', rgb: '224,255,255' },\n    PaleTurquoise: { hex: 'afeeee', rgb: '175,238,238' },\n    Aquamarine: { hex: '7fffd4', rgb: '127,255,212' },\n    Turquoise: { hex: '40e0d0', rgb: '64,224,208' },\n    MediumTurquoise: { hex: '48d1cc', rgb: '72,209,204' },\n    DarkTurquoise: { hex: '00ced1', rgb: '0,206,209' },\n    LightSeaGreen: { hex: '20b2aa', rgb: '32,178,170' },\n    CadetBlue: { hex: '5f9ea0', rgb: '95,158,160' },\n    DarkCyan: { hex: '008b8b', rgb: '0,139,139' },\n    Teal: { hex: '008080', rgb: '0,128,128' },\n    LightSteelBlue: { hex: 'b0c4de', rgb: '176,196,222' },\n    PowderBlue: { hex: 'b0e0e6', rgb: '176,224,230' },\n    LightBlue: { hex: 'add8e6', rgb: '173,216,230' },\n    SkyBlue: { hex: '87ceeb', rgb: '135,206,235' },\n    LightSkyBlue: { hex: '87cefa', rgb: '135,206,250' },\n    DeepSkyBlue: { hex: '00bfff', rgb: '0,191,255' },\n    DodgerBlue: { hex: '1e90ff', rgb: '30,144,255' },\n    CornflowerBlue: { hex: '6495ed', rgb: '100,149,237' },\n    SteelBlue: { hex: '4682b4', rgb: '70,130,180' },\n    RoyalBlue: { hex: '4169e1', rgb: '65,105,225' },\n    Blue: { hex: '0000ff', rgb: '0,0,255' },\n    MediumBlue: { hex: '0000cd', rgb: '0,0,205' },\n    DarkBlue: { hex: '00008b', rgb: '0,0,139' },\n    Navy: { hex: '000080', rgb: '0,0,128' },\n    MidnightBlue: { hex: '191970', rgb: '25,25,112' },\n    Lavender: { hex: 'e6e6fa', rgb: '230,230,250' },\n    Thistle: { hex: 'd8bfd8', rgb: '216,191,216' },\n    Plum: { hex: 'dda0dd', rgb: '221,160,221' },\n    Violet: { hex: 'ee82ee', rgb: '238,130,238' },\n    Orchid: { hex: 'da70d6', rgb: '218,112,214' },\n    Fuchsia: { hex: 'ff00ff', rgb: '255,0,255' },\n    Magenta: { hex: 'ff00ff', rgb: '255,0,255' },\n    MediumOrchid: { hex: 'ba55d3', rgb: '186,85,211' },\n    MediumPurple: { hex: '9370db', rgb: '147,112,219' },\n    BlueViolet: { hex: '8a2be2', rgb: '138,43,226' },\n    DarkViolet: { hex: '9400d3', rgb: '148,0,211' },\n    DarkOrchid: { hex: '9932cc', rgb: '153,50,204' },\n    DarkMagenta: { hex: '8b008b', rgb: '139,0,139' },\n    Purple: { hex: '800080', rgb: '128,0,128' },\n    Indigo: { hex: '4b0082', rgb: '75,0,130' },\n    DarkSlateBlue: { hex: '483d8b', rgb: '72,61,139' },\n    SlateBlue: { hex: '6a5acd', rgb: '106,90,205' },\n    MediumSlateBlue: { hex: '7b68ee', rgb: '123,104,238' },\n    White: { hex: 'ffffff', rgb: '255,255,255' },\n    Snow: { hex: 'fffafa', rgb: '255,250,250' },\n    Honeydew: { hex: 'f0fff0', rgb: '240,255,240' },\n    MintCream: { hex: 'f5fffa', rgb: '245,255,250' },\n    Azure: { hex: 'f0ffff', rgb: '240,255,255' },\n    AliceBlue: { hex: 'f0f8ff', rgb: '240,248,255' },\n    GhostWhite: { hex: 'f8f8ff', rgb: '248,248,255' },\n    WhiteSmoke: { hex: 'f5f5f5', rgb: '245,245,245' },\n    Seashell: { hex: 'fff5ee', rgb: '255,245,238' },\n    Beige: { hex: 'f5f5dc', rgb: '245,245,220' },\n    OldLace: { hex: 'fdf5e6', rgb: '253,245,230' },\n    FloralWhite: { hex: 'fffaf0', rgb: '255,250,240' },\n    Ivory: { hex: 'fffff0', rgb: '255,255,240' },\n    AntiqueWhite: { hex: 'faebd7', rgb: '250,235,215' },\n    Linen: { hex: 'faf0e6', rgb: '250,240,230' },\n    LavenderBlush: { hex: 'fff0f5', rgb: '255,240,245' },\n    MistyRose: { hex: 'ffe4e1', rgb: '255,228,225' },\n    Gainsboro: { hex: 'dcdcdc', rgb: '220,220,220' },\n    LightGray: { hex: 'd3d3d3', rgb: '211,211,211' },\n    Silver: { hex: 'c0c0c0', rgb: '192,192,192' },\n    DarkGrey: { hex: 'a9a9a9', rgb: '169,169,169' },\n    Grey: { hex: '808080', rgb: '128,128,128' },\n    DimGrey: { hex: '696969', rgb: '105,105,105' },\n    LightSlateGrey: { hex: '778899', rgb: '119,136,153' },\n    SlateGrey: { hex: '708090', rgb: '112,128,144' },\n    DarkSlateGrey: { hex: '2f4f4f', rgb: '47,79,79' },\n    Black: { hex: '000000', rgb: '0,0,0' }\n};\n","import {\n    LINEAR\n} from '../enums/constants';\n/**\n * Set of default colors\n */\nexport const palette = [\n    '#086bb6',\n    '#f37d45',\n    '#f5ce02',\n    '#67bda0',\n    '#c54e4e',\n    '#ae70af'\n];\n\nexport const DEFAULT_GRADIENT_COLOR = '#eaeaea';\n\nexport const DEFAULT_CONFIG = {\n    range: palette,\n    value: palette[0],\n    step: false,\n    stops: 5,\n    type: LINEAR\n};\n","import { mergeRecursive, detectColor, hexToHsv, rgbToHsv } from 'muze-utils';\nimport { x11Colors } from './color-maps';\nimport { palette, DEFAULT_GRADIENT_COLOR } from './defaults';\nimport { LINEAR, RGB, HEX, HSL, HSLA } from '../enums/constants';\n\nexport const getHslString = hslArr => `hsla(${hslArr[0] * 360},${hslArr[1] * 100}%,${hslArr[2] * 100}%,\\\n${hslArr[3] || 1})`;\n\nexport const convertToXllString = baseString => (baseString.split(' ') || [])\n                .reduce((x, e) => `${x}${e.charAt(0).toUpperCase()}${e.slice(1)}`, '');\n\nexport const getActualHslColor = (e, paletteColor) => {\n    let color = '';\n    if (typeof e === 'string') {\n        e = e.replace(/ /g, '');\n        e = e.toLowerCase();\n        if (detectColor(e) === HSL || detectColor(e) === HSLA) {\n            color = e.match(/(\\d+(\\.\\d+)?)/g);\n            color = [color[0] / 360, color[1] / 100, color[2] / 100, color[3] || 1];\n        } else if (detectColor(e) === HEX) {\n            color = hexToHsv(e);\n        } else if (detectColor(e) === RGB) {\n            const col = e.substring(e.indexOf('(') + 1, e.lastIndexOf(')')).split(/,\\s*/);\n            color = rgbToHsv(...col);\n        } else if (x11Colors[convertToXllString(e)]) {\n            color = rgbToHsv(...x11Colors[convertToXllString(e)].rgb.split(','));\n        }\n    } else if (!(e instanceof Array)) {\n        color = rgbToHsv(paletteColor);\n    } else {\n        color = e;\n    }\n    return color;\n};\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, config) => {\n            const defCon = mergeRecursive({}, context.constructor.defaultConfig());\n            if (config.type === LINEAR) {\n                config.range = config.range || [defCon.range[0]];\n                config.range = config.range.length > 1 ? config.range : [DEFAULT_GRADIENT_COLOR, ...config.range];\n            }\n            const oldConfig = mergeRecursive(defCon, context.config());\n            const newConfig = mergeRecursive(oldConfig, config);\n\n            if (newConfig.range instanceof Array) {\n                newConfig.range = newConfig.range.map((e, i) => getActualHslColor(e, palette[i]));\n                newConfig.stops = config.stops || newConfig.range.length;\n            }\n            newConfig.value = getActualHslColor(newConfig.value, newConfig.value);\n            return newConfig;\n        }\n    },\n    domain: {},\n    scale: {},\n    uniqueValues: {}\n};\n","import { InvalidAwareTypes } from 'muze-utils';\n\nexport const treatNullMeasures = (domainVal, scaledVal, minDomainScaledVal) => {\n    if (domainVal instanceof InvalidAwareTypes) {\n        return minDomainScaledVal;\n    }\n    return scaledVal;\n};\n","import { numberInterpolator, piecewiseInterpolator, hslInterpolator } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, SEQUENTIAL, ORDINAL, QUANTILE } from '../enums/scale-type';\nimport { getHslString } from './props';\nimport { treatNullMeasures } from '../helper';\n\nconst getStops = (domain, stops) => {\n    let newStops = [];\n\n    if (stops instanceof Array) {\n        newStops = stops.slice().sort();\n        newStops = [...new Set([domain[0], ...stops, domain[1]])].sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i <= stops; i++) {\n            newStops[i] = interpolator(i / stops);\n        }\n    }\n\n    if (newStops[0] < domain[0]) {\n        newStops.shift();\n    }\n    return { domain, newStops };\n};\n\nconst rangeStops = (newStopsLength, range) => {\n    let newRange = [];\n    const maxRangeLength = Math.min(range.length, 18);\n\n    if (newStopsLength > maxRangeLength) {\n        const interpolator = piecewiseInterpolator()(hslInterpolator(), range.map(e => getHslString(e)));\n        for (let i = 0; i < newStopsLength; i++) {\n            newRange[i] = interpolator(i / (newStopsLength - 1));\n        }\n    } else {\n        newRange = range.slice(0, newStopsLength);\n    }\n    return { newRange };\n};\n\n/**\n*\n*\n* @param {*} domain\n*\n*/\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomainMeasure = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { domain, uniqueVals, scaleDomain: [0, 1], range };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain, nice: true, range };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} stops\n *\n */\nconst steppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(domain, stops);\n    const { newRange } = rangeStops(newStops.length - 1, range);\n\n    return { uniqueVals, domain: newStops, nice: true, range: newRange };\n};\n\nconst continousSteppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(domain, range.length - 1);\n    const hslRange = range.map(e => getHslString(e));\n    return { uniqueVals, domain: newStops, nice: true, range: hslRange };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst uniqueRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    return scale(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst indexedRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n\n    return treatNullMeasures(domainValue, scale(numVal), scale(0));\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale, domain) => treatNullMeasures(domainValue, scale(domainValue),\n    scale(domain[0]));\n\n/**\n *\n *\n * @param {*} stops\n */\nconst strategies = () => ({\n    [`${CONTINOUS}-${CONTINOUS}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomain,\n        value: () => uniqueRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${ORDINAL}`]: {\n        scale: ORDINAL,\n        domainRange: () => normalDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}-${ORDINAL}`]: {\n        scale: LINEAR,\n        domainRange: () => continousSteppedDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${ORDINAL}`]: {\n        scale: QUANTILE,\n        domainRange: () => steppedDomain,\n        value: () => normalRange\n\n    }\n});\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} stops\n */\nexport const strategyGetter = (domainType, rangeType, schemeType, stops) =>\n     strategies(stops)[`${domainType}-${rangeType}-${schemeType || ''}`];\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters, rgbToHsv } from 'muze-utils';\nimport { createScale, getScheme, getSchemeType } from '../scale-creator';\nimport { CONTINOUS, DISCRETE, COLOR } from '../enums/constants';\nimport { strategyGetter } from './color-strategy';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { PROPS, getHslString } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ColorAxis {\n\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} config input parameters.\n    * @param {Object | undefined} params.range Type of color range.\n    * @param {string} params.name the label to show on axis.\n    * @param {string} params.type The type of scale to handle.\n    * @memberof ColorAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n        this.config(config);\n\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = (this._config.type === 'linear' && !this._config.step) ? CONTINOUS : DISCRETE;\n\n        this._schemeType = getSchemeType(this._config.range);\n\n        this._colorStrategy = this.setColorStrategy(this._domainType, this._rangeType, this._schemeType);\n        this._scale = this.createScale(this._colorStrategy);\n\n        this._id = getUniqueId();\n\n        this.updateDomain(config.domain);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return COLOR;\n    }\n\n    /**\n     *\n     *\n     * @param {*} colorStrategy\n     *\n     * @memberof ColorAxis\n     */\n    createScale (colorStrategy) {\n        const { range } = this.config();\n        if (range && typeof (range) === 'string') {\n            return getScheme(range);\n        }\n        return createScale({\n            type: colorStrategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setColorStrategy (domainType, rangeType, schemeType) {\n        const { stops } = this.config();\n\n        return strategyGetter(domainType, rangeType, schemeType, stops);\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getHslString (hslColorArray) {\n        return getHslString(hslColorArray);\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getColor (domainVal) {\n        return this.getHslString(this.getRawColor(domainVal));\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getRawColor (domainVal) {\n        if (this.domain() && domainVal !== undefined) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const color = this._colorStrategy.value(range)(domainVal, scale, this.domain(), this.uniqueValues());\n            if (color) {\n                if (typeof color === 'string') {\n                    const col = color.substring(color.indexOf('(') + 1, color.lastIndexOf(')')).split(/,\\s*/);\n                    return rgbToHsv(...col);\n                }\n                return [...color];\n            }\n        }\n        return [...this.config().value];\n    }\n\n    /**\n     *\n     *\n     * @param {*} [domain=[]]\n     *\n     * @memberof ColorAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const domainRangeFn = this._colorStrategy.domainRange();\n            const scaleInfo = domainRangeFn(domain, this.config().stops, range);\n\n            this.domain(scaleInfo.domain);\n            scaleInfo.range && this.scale().range(scaleInfo.range);\n            this.uniqueValues(scaleInfo.uniqueVals);\n            this.scale().domain(scaleInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            config: this.config()\n        };\n    }\n\n    transformColor (color, transformationArr) {\n        const h = color[0] * 360;\n        const s = color[1] * 100;\n        const l = color[2] * 100;\n        const a = color[3] || 1;\n        const newH = h + transformationArr[0];\n        const newS = s + transformationArr[1];\n        const newL = l + transformationArr[2];\n        const newA = a + transformationArr[3] || 0;\n\n        return { color: `hsla(${newH},${newS}%,${newL}%,${newA})`, hsla: [newH / 360, newS / 100, newL / 100, newA] };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n\n}\n","export const DEFAULT_CONFIG = {\n    value: 36,\n    range: [36, 1000]\n};\n","import { numberInterpolator, piecewiseInterpolator } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, THRESHOLD } from '../enums/scale-type';\nimport { treatNullMeasures } from '../helper';\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} intervals\n *\n */\nconst steppedDomain = (domain, intervals) => {\n    let newIntervals = [];\n    if (intervals instanceof Array) {\n        newIntervals = intervals.slice().sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i < intervals; i++) {\n            newIntervals[i] = interpolator(i / (intervals - 1));\n        }\n    }\n    if (newIntervals[0] < domain[0]) {\n        newIntervals.shift();\n    }\n    const retDomain = newIntervals;\n    return { uniqueVals: newIntervals, domain: retDomain, nice: true };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst discreteRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n    const interpolator = numberInterpolator()(...scale.range());\n    return treatNullMeasures(domainValue, interpolator(numVal), interpolator(domain[0]));\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst pieceWiseRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    const fn = piecewiseInterpolator()(numberInterpolator(), [...scale.range()]);\n    return fn(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale, domain) =>\n    treatNullMeasures(domainValue, scale(domainValue), scale(domain[0]));\n\n/**\n *\n *\n * @param {*} intervals\n */\nconst strategies = {\n    [`${DISCRETE}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: indexedDomain,\n        range: pieceWiseRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: normalDomain,\n        range: normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}`]: {\n        scale: THRESHOLD,\n        domain: steppedDomain,\n        range: discreteRange\n    }\n};\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} intervals\n */\nexport const strategyGetter = (domainType, rangeType) =>\n     strategies[`${domainType}-${rangeType}`];\n","export const PROPS = {\n    config: {},\n    domain: {\n        sanitization: (context, value) => {\n            context.scale().domain(value);\n            return value;\n        }\n    },\n    range: {},\n    scale: {},\n    uniqueValues: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SIZE, CONTINOUS, DISCRETE } from '../enums/constants';\nimport { strategyGetter } from './size-strategy';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class SizeAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @param {Object} config input parameters.\n     * @memberof SizeAxis\n     */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig(), config);\n        // @todo: Will use configuration override using scale decorator\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = CONTINOUS;\n\n        this._sizeStrategy = this.setStrategy(this._domainType, this._rangeType);\n        this._scale = this.createScale(this._sizeStrategy);\n        this._range = this._config.range;\n\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setStrategy (domainType, rangeType) {\n        return strategyGetter(domainType, rangeType);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SizeAxis\n     */\n    createScale (strategy) {\n        const {\n            range\n        } = this.config();\n        return createScale({\n            type: strategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SIZE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof SizeAxis\n     */\n    getSize (domainVal = 0) {\n        let sizeVal = 1;\n        const {\n            value\n        } = this.config();\n        const scale = this.scale();\n        const domain = this.domain() || [1, 1];\n\n        if (!scale || domain[0] === domain[1]) {\n            sizeVal = value;\n        } else {\n            return this._sizeStrategy.range(domainVal, scale, this.domain(), this.uniqueValues());\n        }\n        return sizeVal;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof SizeAxis\n     */\n    updateDomain (domain) {\n        if (domain) {\n            const domainFn = this._sizeStrategy.domain;\n\n            const domainInfo = domainFn(domain, this.config().intervals);\n\n            this.domain(domainInfo.domain);\n            this.uniqueValues(domainInfo.uniqueVals);\n\n            this.scale().domain(domainInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","export const DEFAULT_CONFIG = {\n    generator: null,\n    value: 'circle',\n    range: ['circle', 'diamond', 'star', 'cross', 'square', 'wye', 'triangle']\n};\n","export const PROPS = {\n    config: {},\n    domain: {},\n    scale: {},\n    uniqueValues: {},\n    generator: {}\n};\n\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, getSymbol, generateGetterSetters, mergeRecursive, InvalidAwareTypes } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SHAPE } from '../enums/constants';\nimport { shapeGenerator } from './helper';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ShapeAxis {\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} params input parameters.\n    * @param {Object | undefined} params.range Type of color scheme.\n    * @memberof ShapeAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(this._config, config);\n\n        this._scale = createScale({\n            type: 'ordinal',\n            range: this._config.range\n        });\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SHAPE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} value\n     *\n     * @memberof ShapeAxis\n     */\n    getShape (value) {\n        if (!this.scale() || !this.domain() || !value || value instanceof InvalidAwareTypes) {\n            return this.config().value;\n        }\n\n        if (this._generatedShapes) {\n            return this._generatedShapes[value];\n        }\n\n        const shapeType = this.scale()(value);\n        if (shapeType === 'string') {\n            return getSymbol(shapeType);\n        }\n\n        return shapeType;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof ShapeAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            this.uniqueValues(domain);\n            this.domain(domain);\n            this.scale().domain(domain);\n\n            if (this.config().generator) {\n                this._generatedShapes = shapeGenerator(domain, this.config().generator);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.config().range,\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","/**\n *\n *\n * @param {*} domain\n * @param {*} generatorFn\n *\n */\nexport const shapeGenerator = (domain, generatorFn) => {\n    const generatedShapes = {};\n    domain.forEach((value) => {\n        generatedShapes[value] = generatorFn(value);\n    });\n    return generatedShapes;\n};\n","import * as ScaleType from './enums/scale-type';\n\nconst DATA_TYPES = {\n    DIMENSION: 'dimension',\n    CATEGORICAL: 'categorical',\n    MEASURE: 'measure',\n    TEMPORAL: 'temporal'\n};\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    [DATA_TYPES.DIMENSION]: ScaleType.BAND,\n    [DATA_TYPES.MEASURE]: ScaleType.LINEAR,\n    [DATA_TYPES.TEMPORAL]: ScaleType.TIME\n};\n\n","import { nestCollection, InvalidAwareTypes } from 'muze-utils';\n\n/**\n * Create multiple datasets from a single dataset by grouping the data using\n * a dimensional field.\n * @param {Array} schema Name and type of fields are stored in schema\n * @param {Array} data Data array\n * @param {Object} config Configuration object\n * @return {Array} Grouped data array\n */\nexport default (schema, data, config) => {\n    const groupBy = config.groupBy instanceof Array ? config.groupBy : [config.groupBy];\n    const groupByIndices = groupBy.map(fieldName => schema.findIndex(d => d.name === fieldName));\n\n    if (groupByIndices.find(d => d === -1) !== undefined) {\n        throw new Error(`Groupby field ${groupBy} not found in schema`);\n    }\n\n    const groupedData = nestCollection({\n        keys: groupByIndices,\n        data\n    });\n\n    groupedData.forEach((d) => {\n        const key = d.key;\n        if (InvalidAwareTypes.isInvalid(key)) {\n            d.key = InvalidAwareTypes.getInvalidType(key);\n        }\n    });\n    return groupedData;\n};\n","/**\n * @module Transform\n * This file exports a function that is used to implement\n * the identity transform\n */\n /* eslint no-unused-vars: 0 */\n /**\n  * This function accepts data and returns the data unchanged.\n  * @param {Object} schema The schema.\n  * @param {Array} data The data array.\n  * @param {Object} config The config object.\n  * @return {Array} The unchanged data.\n  */\n function identityTransform (schema, data, config) {\n     return data;\n }\n\n export default identityTransform;\n","/**\n * @module Transform\n * This file exports the transform factory.\n */\nimport * as TransformType from '../enums/transform-type';\nimport identity from '../identity-transform';\nimport group from '../group-transform';\nimport stack from '../stack-transform';\n\n/* istanbul ignore next */\nconst transformMap = {\n    [TransformType.IDENTITY]: identity,\n    [TransformType.GROUP]: group,\n    [TransformType.STACK]: stack\n};\n\n/**\n * This function is used to retirn a transform associated\n * with the given type.\n *\n * @param {string} type The type of the transform.\n * @return {Function} The transform function.\n */\nfunction transformFactory (type) {\n    const transform = transformMap[type];\n    if (typeof transform !== 'function') {\n        throw new Error('Invalid transform type supplied.');\n    }\n    return transform;\n}\n\nexport default transformFactory;\n","/**\n * @module Transform\n * This module exports constants that are used to reference transforms in\n * a consistent manner throughout the project.\n */\n/* eslint one-var: 0 */\n export const IDENTITY = 'identity';\n export const GROUP = 'group';\n export const STACK = 'stack';\n export const FRACTURE = 'fracture';\n","import { stack } from 'muze-utils';\n\nimport group from '../group-transform';\n/*\n    Normalize the data to a form which can be given to d3 stack for stacking the data\n    ['Product', 'Sales', 'Region'],\n    0 ['A', 2000, 'North'],\n    1 ['A', 3000, 'South'],\n    2 ['B', 3000, 'South'],\n    3 ['B', 2000, 'North'],\n    4 ['C', 3000, 'South'],\n    5 ['C', 2000, 'North']\n            |\n            |\n    ['Product', 'North', 'South'],\n    ['A', 2000, 3000],\n    ['B', 2000, 3000],\n    ['C', 2000, 3000]\n*/\n// eslint-disable-next-line require-jsdoc\nconst normalizeData = (data, schema, valueField, uniqueField, groupBy) => {\n    const groupedData = group(schema, data, {\n        groupBy: uniqueField\n    });\n    const uniqueFieldIndex = schema.findIndex(d => d.name === uniqueField);\n    const valueFieldIndex = schema.findIndex(d => d.name === valueField);\n    const seriesKeyIndex = schema.findIndex(d => d.name === groupBy);\n    const seriesKeys = data.map(d => d[seriesKeyIndex]).filter((item, pos, arr) => arr.indexOf(item) === pos).sort();\n    const fieldNames = schema.reduce((acc, obj, i) => {\n        acc[i] = obj.name;\n        return acc;\n    }, {});\n    const dataArr = groupedData.map((arr) => {\n        const tuples = {};\n        const rowObj = arr.values.reduce((acc, row) => {\n            acc = row.reduce((obj, value, i) => {\n                if (i === seriesKeyIndex) {\n                    obj[value] = row[valueFieldIndex];\n                    tuples[value] = row;\n                } else if (i !== valueFieldIndex) {\n                    obj[fieldNames[i]] = value;\n                }\n                return obj;\n            }, acc);\n            return acc;\n        }, {});\n        rowObj._tuple = tuples;\n            // Set missing values field to zero value\n        seriesKeys.forEach((seriesKey) => {\n            if (rowObj[seriesKey] === undefined) {\n                rowObj[seriesKey] = 0;\n                const newArr = new Array(arr.values[0].length);\n                newArr[uniqueFieldIndex] = arr.key;\n                newArr[seriesKeyIndex] = seriesKey;\n                rowObj._tuple[seriesKey] = newArr;\n            }\n        });\n        return rowObj;\n    });\n\n    return {\n        data: dataArr,\n        keys: seriesKeys\n    };\n};\n/**\n * Generate a stacked representation of data\n * @param {Array} schema schema Array\n * @param {Array} data data array\n * @param {Object} config Configuration object\n * @return {Array} stacked data\n */\nexport default (schema, data, config) => {\n    const uniqueField = config.uniqueField;\n    const valueField = config.value;\n    const groupBy = config.groupBy;\n    const sort = config.sort || 'descending';\n    const normalizedData = normalizeData(data, schema, valueField, uniqueField, groupBy);\n    const keys = normalizedData.keys;\n    const map = {};\n    const orderBy = config.orderBy;\n    const orderIndex = schema.findIndex(d => d.name === orderBy);\n    const groupByIndex = schema.findIndex(d => d.name === groupBy);\n    if (orderIndex !== -1) {\n        keys.forEach((key) => {\n            const name = data.find(d => d[groupByIndex] === key);\n            map[key] = name[orderIndex];\n        });\n        normalizedData.keys.sort((a, b) => map[a].localeCompare(map[b]));\n    }\n\n    const stackData = stack({\n        keys: normalizedData.keys,\n        offset: config.offset || 'diverging',\n        order: sort,\n        data: normalizedData.data\n    });\n    stackData.forEach((seriesData) => {\n        seriesData.forEach((dataObj) => {\n            dataObj.data = dataObj.data._tuple[seriesData.key];\n        });\n    });\n    return stackData;\n};\n\n","import {\n    FieldType,\n    getDomainFromData,\n    setStyles,\n    easeFns,\n    selectElement,\n    DimensionSubtype,\n    STATE_NAMESPACES,\n    retrieveNearestGroupByReducers,\n    getObjProp\n} from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { transformFactory } from '@chartshq/transform';\nimport { IDENTITY, STACK, GROUP, COLOR, SHAPE, SIZE, ENCODING, AGG_FN_SUM } from '../enums/constants';\n\nconst BAND = ScaleType.BAND;\n\nexport const getLayerColor = ({ datum, index }, { colorEncoding, colorAxis, colorFieldIndex }) => {\n    let rawColor = '';\n    let color = '';\n    if (colorEncoding && colorEncoding.value instanceof Function) {\n        color = colorEncoding.value(datum, index);\n        rawColor = colorEncoding.value(datum, index);\n    } else {\n        rawColor = colorAxis.getRawColor(datum._data[colorFieldIndex]);\n        color = colorAxis.getHslString(rawColor);\n    }\n    return { color, rawColor };\n};\n\nconst transfromColor = (colorAxis, datum, styleType, intensity) => {\n    datum.meta.stateColor[styleType] = datum.meta.stateColor[styleType] || datum.meta.originalColor;\n    const fillColorInfo = colorAxis.transformColor(datum.meta.stateColor[styleType], intensity);\n    datum.meta.stateColor[styleType] = fillColorInfo.hsla;\n\n    return fillColorInfo;\n};\n\nexport const applyInteractionStyle = (context, selectionSet, interactionStyles, config) => {\n    const elements = context.getPlotElementsFromSet(selectionSet);\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const apply = config.apply;\n    const interactionType = config.interactionType;\n    interactionStyles.forEach((style) => {\n        const styleType = style.type;\n        elements.style(styleType, ((d) => {\n            const { colorTransform, stateColor, originalColor } = d.meta;\n            colorTransform[interactionType] = colorTransform[interactionType] || {};\n            if (apply && !colorTransform[interactionType][styleType]) {\n                // fade selections\n                colorTransform[interactionType][styleType] = style.intensity;\n                const color = transfromColor(colorAxis, d, styleType, style.intensity).color;\n                return color;\n            }\n            if (!apply && colorTransform[interactionType][styleType]) {\n                 // unfade selections\n                colorTransform[interactionType][styleType] = null;\n                return transfromColor(colorAxis, d, styleType, style.intensity.map(e => -e)).color;\n            }\n            const [h, s, l, a] = stateColor[styleType] ? stateColor[styleType] : originalColor;\n            return `hsla(${h * 360},${s * 100}%,${l * 100}%, ${a || 1})`;\n        }));\n    });\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const fadeUnfadeSelection = (context, selectionSet, hasFaded, interaction) => {\n    const interactionConfig = { interaction, apply: hasFaded };\n    applyInteractionStyle(context, selectionSet, 'fade', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const focusUnfocusSelection = (context, selectionSet, isFocussed, interaction) => {\n    const interactionConfig = { interaction, apply: isFocussed };\n    applyInteractionStyle(context, selectionSet, 'focus', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} axes\n *\n */\nexport const getAxesScales = (axes) => {\n    const [xAxis, yAxis] = [ENCODING.X, ENCODING.Y].map(e => axes[e]);\n    const [xScale, yScale] = [xAxis, yAxis].map(e => e && e.scale());\n    return {\n        xAxis,\n        yAxis,\n        xScale,\n        yScale\n    };\n};\n\n/**\n *\n *\n * @param {*} encoding\n * @param {*} fieldsConfig\n *\n */\nexport const getEncodingFieldInf = (encoding, fieldsConfig) => {\n    const [xField, yField, x0Field, y0Field, colorField, shapeField, sizeField] =\n        [ENCODING.X, ENCODING.Y, ENCODING.X0, ENCODING.Y0, COLOR, SHAPE, SIZE].map(e => encoding[e] &&\n            encoding[e].field);\n\n    const [xFieldType, yFieldType] = [xField, yField, x0Field, y0Field].map(e => fieldsConfig[e] &&\n        fieldsConfig[e].def.type);\n\n    const [xFieldSubType, yFieldSubType] = [xField, yField].map(e => fieldsConfig[e] && (fieldsConfig[e].def.subtype ||\n        fieldsConfig[e].def.type));\n\n    const [xFieldIndex, yFieldIndex, x0FieldIndex, y0FieldIndex] = [xField, yField, x0Field, y0Field]\n        .map(e => fieldsConfig[e] && fieldsConfig[e].index);\n\n    return {\n        xField,\n        yField,\n        colorField,\n        shapeField,\n        sizeField,\n        x0Field,\n        y0Field,\n        xFieldType,\n        yFieldType,\n        xFieldSubType,\n        yFieldSubType,\n        xFieldIndex,\n        yFieldIndex,\n        x0FieldIndex,\n        y0FieldIndex\n    };\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} config\n * @param {*} transformType\n *\n */\nexport const transformData = (dataModel, config, transformType, encodingFieldInf) => {\n    const data = dataModel.getData({ withUid: true });\n    const schema = data.schema;\n    const transform = config.transform;\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = encodingFieldInf;\n    const uniqueField = xFieldType === FieldType.MEASURE ? yField : xField;\n\n    return transformFactory(transformType)(schema, data.data, {\n        groupBy: transform.groupBy,\n        uniqueField,\n        sort: transform.sort || 'none',\n        offset: transform.offset,\n        orderBy: transform.orderBy,\n        value: yFieldType === FieldType.MEASURE ? yField : xField\n    }, data.uids);\n};\n\nexport const getIndividualClassName = (d, i, data, context) => {\n    const className = context.config().individualClassName;\n    let classNameStr = '';\n    if (className instanceof Function) {\n        classNameStr = className(d, i, data, context);\n    }\n    return classNameStr;\n};\n\n/*\n * This method resolves the x, y, x0 and y0 values from the transformed data.\n * It also checks the type of transformed data for example, if it is a stacked data\n * then it fetches the y and y0 values from the stacked data.\n * @param {Array.<Array>} transformedData transformed data\n * @param {Object} fieldsConfig field definitions\n * @param {string} transformType type of transformed data - stack, group or identity.\n * @return {Array.<Object>} Normalized data\n*/\nexport const getNormalizedData = (transformedData, fieldsConfig, encodingFieldInf, transformType) => {\n    const transformedDataArr = transformType === IDENTITY ? [transformedData] : transformedData;\n    const {\n        xFieldType,\n        xFieldIndex,\n        yFieldIndex,\n        x0FieldIndex,\n        y0FieldIndex\n    } = encodingFieldInf;\n    const fieldsLen = Object.keys(fieldsConfig).length;\n    /**\n     * Returns normalized data from transformed data. It recursively traverses through\n     * the transformed data if there it is nested.\n     */\n    return transformedDataArr.map((data) => {\n        const values = transformType === GROUP ? data.values : data;\n        return values.map((d) => {\n            let pointObj = {};\n            let tuple;\n            if (transformType === STACK) {\n                tuple = d.data || [];\n                let y;\n                let y0;\n                let x;\n                let x0;\n                if (d[1] >= d[0]) {\n                    y = x0 = d[1];\n                    x = y0 = d[0];\n                } else {\n                    y = x0 = d[0];\n                    x = y0 = d[1];\n                }\n\n                pointObj = xFieldType === FieldType.MEASURE ? {\n                    x,\n                    x0,\n                    y: tuple[yFieldIndex],\n                    y0: tuple[yFieldIndex]\n                } : {\n                    x: tuple[xFieldIndex],\n                    x0: tuple[xFieldIndex],\n                    y,\n                    y0\n                };\n                pointObj._data = tuple;\n                pointObj._id = tuple[fieldsLen];\n            } else {\n                pointObj = {\n                    x: d[xFieldIndex],\n                    y: d[yFieldIndex],\n                    x0: d[x0FieldIndex],\n                    y0: d[y0FieldIndex]\n                };\n                pointObj._data = d;\n                pointObj._id = d[fieldsLen];\n            }\n            return pointObj;\n        });\n    }).filter(d => d.length);\n};\n\nexport const calculateDomainFromData = (data, encodingFieldInf, transformType) => {\n    const {\n        xFieldSubType,\n        yFieldSubType,\n        xField,\n        yField,\n        x0Field,\n        y0Field\n    } = encodingFieldInf;\n    const domains = {};\n    const yEnc = ENCODING.Y;\n    const xEnc = ENCODING.X;\n    if (xField) {\n        domains.x = getDomainFromData(data, x0Field || transformType === STACK ? [xEnc, ENCODING.X0] : [xEnc, xEnc],\n            xFieldSubType);\n    }\n    if (yField) {\n        domains.y = getDomainFromData(data, y0Field || transformType === STACK ? [ENCODING.Y0, ENCODING.Y] :\n            [yEnc, yEnc], yFieldSubType);\n    }\n\n    return domains;\n};\n\nexport const attachDataToVoronoi = (voronoi, points) => {\n    voronoi.data([].concat(...points).filter(d => d._id !== undefined).map((d) => {\n        const point = d.update;\n        return {\n            x: point.x,\n            y: point.y,\n            data: d\n        };\n    }));\n};\n\n/**\n *\n *\n * @param {*} target\n * @param {*} styles\n * @param {*} remove\n */\nexport const updateStyle = (target, styles, remove) => {\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            target.style(key, remove ? null : styles[key]);\n        }\n    }\n};\n\n/**\n *\n *\n * @param {*} mount\n * @param {*} context\n */\nexport const animateGroup = (mount, context) => {\n    let groupTransition;\n    let update;\n    const { transition, groupAnimateStyle } = context;\n    const { duration, effect, disabled } = transition;\n    if (groupAnimateStyle) {\n        setStyles(mount.node(), groupAnimateStyle.enter);\n        update = groupAnimateStyle.update;\n        if (!disabled) {\n            groupTransition = mount.transition()\n                .ease(easeFns[effect])\n                .duration(duration)\n                .on('end', function () {\n                    updateStyle(selectElement(this), update, true);\n                });\n        } else {\n            groupTransition = mount;\n        }\n        updateStyle(groupTransition, update);\n    }\n};\n\nexport const positionPoints = (context, points) => {\n    const positioner = context.encodingTransform();\n    if (positioner) {\n        return positioner(points, context, { smartLabel: context._dependencies.smartLabel });\n    }\n    return points;\n};\n\n/**\n  * Gets the width of each group. It gets the width from axis if it is available for\n  * example when the scale is nominal else it calculates the width from the\n  * range of the axis and number of data points.\n  *\n  * @param {SimpleAxis} axis instance of axis\n  * @param {number} minDiff Minimum difference between data points\n  * @return {number} width of each bar\n  * @private\n*/\nexport const getGroupSpan = (axis, minDiff) => {\n    let groupSpan;\n    const width = axis.getUnitWidth();\n    const scale = axis.scale();\n    const range = scale.range();\n    const domain = scale.domain();\n    !width ? groupSpan = (Math.abs(range[1] - range[0]) / Math.abs(domain[1] - domain[0])) * minDiff :\n        (groupSpan = width);\n\n    return groupSpan;\n};\n\nexport const getPlotMeasurement = (context, dimensionalValues) => {\n    const fieldInfo = context.encodingFieldsInf();\n    const axes = context.axes();\n    const transformType = context.transformType();\n    const config = context.config();\n    const bandScale = context._bandScale;\n\n    return ['x', 'y'].map((type) => {\n        let span = 0;\n        let groupSpan = 0;\n        let padding = 0;\n        let offsetValues = [];\n        if (fieldInfo[`${type}FieldType`] === FieldType.DIMENSION) {\n            let actualGroupWidth;\n            const isTemporal = fieldInfo[`${type}FieldSubType`] === DimensionSubtype.TEMPORAL;\n            const timeDiff = isTemporal ? context.dataProps().timeDiffs[type] : 0;\n            const axis = axes[type];\n            const pad = config[`pad${type.toUpperCase()}`];\n            const innerPadding = config.innerPadding;\n            const keys = dimensionalValues;\n            const scale = axis.scale();\n            groupSpan = getGroupSpan(axis, timeDiff);\n            const isAxisBandScale = axis.constructor.type() === BAND;\n            const axisPadding = axis.config().padding;\n            // If it is a grouped bar then the width of each bar in a grouping is retrieved from\n            // a band scale. The band scale will have range equal to width of one group of bars and\n            // the domain is set to series keys.\n            if (transformType === 'group') {\n                const groupPadding = isAxisBandScale ? 0 : axisPadding * groupSpan / 2;\n                bandScale.range([groupPadding, groupSpan - groupPadding]).domain(keys).paddingInner(innerPadding);\n                span = bandScale.bandwidth();\n                actualGroupWidth = groupSpan - (isAxisBandScale ? 0 : axisPadding * groupSpan);\n                offsetValues = keys.map(key => bandScale(key) - (isAxisBandScale ? 0 : (groupSpan / 2)));\n            } else if (pad !== undefined) {\n                let offset;\n                if (isAxisBandScale) {\n                    const step = scale.step();\n                    offset = scale.padding() * step;\n                    span = scale.bandwidth() + offset;\n                } else {\n                    span = groupSpan;\n                }\n                offsetValues = keys.map(() => (isAxisBandScale ? -(offset / 2) : -(span / 2)));\n            } else {\n                padding = isAxisBandScale ? 0 : axisPadding * groupSpan;\n                span = groupSpan - padding;\n                actualGroupWidth = span;\n                offsetValues = keys.map(() => (isAxisBandScale ? 0 : -(span / 2)));\n            }\n\n            groupSpan = actualGroupWidth;\n            padding = isAxisBandScale ? axisPadding * axis.scale().step() : axisPadding * groupSpan;\n        }\n\n        return {\n            span,\n            offsetValues,\n            groupSpan,\n            padding\n        };\n    });\n};\n\nexport const initializeGlobalState = (context) => {\n    const store = context.store();\n    const globalState = context.constructor.getState()[0];\n    const namespace = context.metaInf().namespace;\n    for (const prop in globalState) {\n        store.append(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${prop}`, {\n            [namespace]: null\n        });\n    }\n};\n\nexport const resolveInvalidTransformType = (context) => {\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = context.encodingFieldsInf();\n    const groupByField = context.config().transform.groupBy;\n    const fieldsConfig = context.data().getFieldsConfig();\n    const groupByFieldMeasure = fieldsConfig[groupByField] && fieldsConfig[groupByField].def.type === FieldType.MEASURE;\n    if (!xField || !yField || groupByFieldMeasure || !groupByField || xFieldType === FieldType.DIMENSION &&\n        yFieldType === FieldType.DIMENSION) {\n        return IDENTITY;\n    }\n    return null;\n};\n\nexport const getValidTransform = context => resolveInvalidTransformType(context) || context.config().transform.type;\n\nexport const getValidTransformForAggFn = (context) => {\n    const resolvedInvalidTransformType = resolveInvalidTransformType(context);\n    if (resolvedInvalidTransformType) {\n        return resolvedInvalidTransformType;\n    }\n\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = context.encodingFieldsInf();\n    const groupByField = context.config().transform.groupBy;\n    const isCustomTransformTypeProvided = !!getObjProp(context._customConfig, 'transform', 'type');\n    let transformType = context.config().transform.type;\n\n    if (!isCustomTransformTypeProvided && groupByField && xFieldType !== yFieldType) {\n        const measureField = xFieldType === FieldType.MEASURE ? xField : yField;\n        const { [measureField]: aggFn } = retrieveNearestGroupByReducers(context.data(), measureField);\n        transformType = aggFn === AGG_FN_SUM ? STACK : GROUP;\n    }\n\n    return transformType;\n};\n\nexport const getMarkId = (source, schema) => source.filter((val, i) => schema[i] &&\n    schema[i].type === FieldType.DIMENSION).join();\n","import { CommonProps, STATE_NAMESPACES } from 'muze-utils';\nimport { getEncodingFieldInf } from '../helpers';\nimport * as PROPS from '../enums/props';\n\nconst renderLayer = (context) => {\n    const mount = context.mount();\n    if (mount) {\n        context.render(mount);\n        context.dependencies().throwback.commit(CommonProps.ON_LAYER_DRAW, true);\n    }\n};\n\nexport const listenerMap = (context, ns) => [\n    {\n        props: [`${ns.local}.${PROPS.DATA}`],\n        listener: ([, data]) => {\n            const config = context.config();\n            const encodingValue = config.encoding;\n            if (data && encodingValue) {\n                const fieldsConfig = data.getFieldsConfig();\n                const encodingFieldsInf = getEncodingFieldInf(encodingValue, fieldsConfig);\n                context.encodingFieldsInf(encodingFieldsInf);\n                context.resolveTransformType();\n                context._transformedData = context.getTransformedData(data, config,\n                    context.transformType(), encodingFieldsInf);\n                context._normalizedData = context.getNormalizedData(context._transformedData, fieldsConfig);\n                const domain = context.calculateDomainFromData(context._normalizedData, context.encodingFieldsInf(),\n                    context.data().getFieldsConfig());\n                context._domain = domain;\n                !context._updateLock && context.domain(domain);\n            }\n        },\n        type: 'registerImmediateListener'\n    },\n    {\n        props: [`${ns.local}.${PROPS.CONFIG}`],\n        listener: ([, config]) => {\n            const calculateDomain = config.calculateDomain;\n            const props = context.getRenderProps();\n            const store = context.store();\n            const namespaceInf = {\n                namespace: `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${context.metaInf().namespace}`,\n                key: 'renderListener'\n            };\n            store.unsubscribe(namespaceInf);\n            if (calculateDomain === false) {\n                props.push(`${ns.local}.${PROPS.DATA}`);\n            }\n            store.registerChangeListener(props,\n                () => {\n                    renderLayer(context);\n                }, false, namespaceInf);\n        },\n        type: 'registerImmediateListener'\n    }\n];\n\n","export const DATA = 'data';\nexport const CONFIG = 'config';\nexport const MEASUREMENT = 'measurement';\nexport const DOMAIN = 'domain';\nexport const MOUNT = 'mount';\n","import { mergeRecursive } from 'muze-utils';\nimport * as PROPS from '../enums/props';\n\nexport const defaultOptions = {\n    [PROPS.CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig, context) => {\n                context._customConfig = config;\n                const constructor = context.constructor;\n                const newConf = mergeRecursive({}, constructor.defaultConfig());\n                return constructor.defaultPolicy(newConf, config);\n            }\n        }\n    },\n    [PROPS.DATA]: {\n        value: null,\n        meta: {\n            preset: (data, context) => {\n                if (context._cacheEnabled) {\n                    context._cachedData.push(data);\n                } else {\n                    context._cachedData = [data];\n                }\n            }\n        }\n    }\n    // [PROPS.MOUNT]: {\n    //     value: null\n    // },\n    // [PROPS.AXES]: {\n    //     value: null\n    // },\n    // [PROPS.MEASUREMENT]: {\n    //     value: null\n    // }\n};\n","import {\n    getUniqueId,\n    mergeRecursive,\n    FieldType,\n    selectElement,\n    ReservedFields,\n    registerListeners,\n    transactor,\n    DataModel,\n    clone,\n    generateGetterSetters,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { SimpleLayer } from '../simple-layer';\nimport * as PROPS from '../enums/props';\nimport { props } from './props';\nimport {\n    transformData,\n    calculateDomainFromData,\n    getNormalizedData,\n    applyInteractionStyle,\n    initializeGlobalState,\n    getValidTransform\n} from '../helpers';\nimport { listenerMap } from './listener-map';\nimport { defaultOptions } from './default-options';\n\n/**\n * An abstract class which gives definition of common layer functionality like\n * - transforming data for various modes. Supported modes: identity, group and stack.\n * - calculating data domain\n * - linking dependent layers\n * - merging policy of configuration\n * - interaction sideffect helpers\n * - retrieving dom elements from data using id\n * - retrieving the physical dimensions of marks\n * - disposing layer\n *\n * Every layer has to extend base layer and give concrete definition.\n * This layer does not have any default visual. A new layer has to define the logic of `render` for rendering the\n * visuals\n *\n * @public\n * @class\n * @module BaseLayer\n */\nexport default class BaseLayer extends SimpleLayer {\n\n    /**\n     * Creates a layer using a configuration and data.\n     *\n     * @public\n     * @constructor\n     * @param {DataModel} data Instance of DataModel to be used. This DataModel instance serves as the data for a layer.\n     * @param {Object} axes Axes instances to be used for rendering the layer. Axes are used for mapping data from\n     *      value to px.\n     * @param {SimpleAxis} axes.x X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {SimpleAxis} axes.y X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {ColorAxis} axes.color Axis for coloring a layer using color interpolators\n     * @param {ShapeAxis} axes.shape Axis for providing a shape\n     * @param {SizeAxis} axes.size Axis for determining size of a mark using size interpolator\n     * @param {LayerConfig} config Configuration of the layer\n     * @param {Object} dependencies Dependencies of the layer\n     * @param {SmartLabel} dependencies.smartLabel Smartlabel singleton instance\n     */\n    constructor (data, axes, config, dependencies = {}) {\n        super();\n\n        generateGetterSetters(this, props);\n        this.data(data);\n        this.axes(axes);\n        this.config(config);\n        this.alias(this.constructor.formalName() + getUniqueId());\n        this.dependencies(dependencies);\n        this._points = [];\n        this._cachedData = [];\n        this._id = getUniqueId();\n        this._measurement = {};\n        this._animationDonePromises = [];\n        this._customConfig = null;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: {}\n            },\n            {\n                config: {},\n                data: {}\n            }\n        ];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            const metaInf = this.metaInf();\n            const localNs = `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${metaInf.namespace}`;\n            initializeGlobalState(this);\n            const store = this.store();\n            store.append(`${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}`, {\n                [metaInf.namespace]: null\n            });\n\n            transactor(this, defaultOptions, store.model, {\n                namespace: localNs\n            });\n            registerListeners(this, listenerMap, {\n                local: localNs,\n                global: STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE\n            }, {\n                unitRowIndex: metaInf.unitRowIndex,\n                unitColIndex: metaInf.unitColIndex\n            });\n            return this;\n        }\n        return this._store;\n    }\n\n    domain (...dom) {\n        const prop = `${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${this.metaInf().namespace}`;\n        if (dom.length) {\n            this.store().commit(prop, dom[0]);\n            return this;\n        }\n        return this.store().get(prop);\n    }\n\n    /**\n     * Creates a layer instance\n     * @return {BaseLayer} Instance of a layer\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Default configuration of the layer. This configuration gets merged to the user passed configuration using a\n     * plolicy. Base layer only returns part of configuraion, any layer overridding base layer should return its own\n     * configuration.\n     *\n     * @public\n     * @static\n     *\n     * @return {Object} Default configuration\n     */\n    static defaultConfig () {\n        return {\n            transform: {\n                type: 'identity'\n            }\n        };\n    }\n\n    /**\n     * Policy defines how user config gets merged to default config. The default policy here does a deep copy\n     * operation.\n     * Any policy which does more than deep copying should define the policy as a static member.\n     *\n     * @static\n     * @public\n     *\n     * @param {LayerConfig} conf Configuration with which the user config will be merged\n     * @param {LayerConfig} userConf Configuration given by the user\n     *\n     * @return {LayerConfig} Merged layer configuration\n     */\n    static defaultPolicy (conf, userConf) {\n        return mergeRecursive(conf, userConf);\n    }\n\n    /**\n     * Determines a name for a layer. This name of the layer is used in the input data to refer to this layer.\n     * ```\n     *  .layers([\n     *      mark: 'bar',\n     *      encoding: { ... }\n     *  ])\n     * ```\n     *\n     * @static\n     * @public\n     *\n     * @return {string} name of layer\n     */\n    static formalName () {\n        return 'base';\n    }\n\n    encodingFieldsInf (...fieldsInf) {\n        if (fieldsInf.length) {\n            this._encodingFieldsInf = fieldsInf[0];\n            return this;\n        }\n        return this._encodingFieldsInf;\n    }\n\n    encodingTransform (...encodingTransform) {\n        if (encodingTransform.length) {\n            this._encodingTransform = encodingTransform[0];\n            return this;\n        }\n        return this._encodingTransform;\n    }\n\n    /**\n     * Provides a alias for a layer. Like it's possible to have same layer (like bar) multiple times, but among multiple\n     * layers of same type if one layer has to be referred, alias is used. If no alias is given then `formalName` is set\n     * as the alias name.\n     *\n     *\n     * If used as setter\n     * @param  {string} alias Name of the alias\n     * @return {BaseLayer} Instance of current base layer\n     *\n     * If used as getter\n     * @return {string} Alias of the current layer\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            this._alias = params[0];\n            return this;\n        }\n        return this._alias || this.constructor.formalName();\n    }\n\n    dependencies (...params) {\n        if (params.length) {\n            this._dependencies = params[0];\n            return this;\n        }\n        return this._dependencies;\n    }\n\n    enableCaching () {\n        this._cacheEnabled = true;\n        return this;\n    }\n\n    clearCaching () {\n        this._cacheEnabled = false;\n        return this.data(this._cachedData[0]);\n    }\n\n    /**\n     * Serialize the schema. Merge config is used for serialization.\n     *\n     * @public\n     *\n     * @return {LayerConfig} Serialized schema\n     */\n    serialize () {\n        return this.config();\n    }\n\n    /**\n     * Returns the unique identifier of this layer. Id is auto generated during the creation proceess of a schema.\n     *\n     * @public\n     *\n     * @return {string} id of the layer\n     */\n    id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the transformed data based on given transform type.\n     * It first gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of DataModel\n     * @param {Object} config Configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     */\n    getTransformedData (dataModel, config, transformType, encodingFieldsInf) {\n        return transformData(dataModel, config, transformType, encodingFieldsInf);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a categorical field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @param {Object} fieldsConfig Configuration of fields\n     * @return {Array} Domain values array.\n     */\n    calculateDomainFromData (data) {\n        let domains = {};\n        const isEmpty = this.data().isEmpty();\n\n        if (!isEmpty) {\n            domains = calculateDomainFromData(data, this.encodingFieldsInf(), this.transformType());\n        }\n        return domains;\n    }\n\n    static shouldDrawAnchors () {\n        return false;\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getDataDomain (encodingType) {\n        const domains = this.store()\n            .get(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${this.metaInf().namespace}`);\n        return encodingType !== undefined ? domains[encodingType] || [] : domains;\n    }\n\n    /**\n     * Normalizes the transformed data and returns it.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getNormalizedData (transformedData, fieldsConfig) {\n        return getNormalizedData(transformedData, fieldsConfig, this.encodingFieldsInf(), this.transformType());\n    }\n\n    /**\n     * Gets the nearest point closest to the given x and y coordinate. If no nearest point is found, then it returns\n     * null.\n     *\n     * @public\n     *\n     * @param {number} x X Coordinate.\n     * @param {number} y Y Coordinate.\n     *\n     * @return {Object} Information of the nearest point.\n     * ```\n     *      {\n     *          // id property contains the field names and their corresponding values in a 2d array. This is the data\n     *          // associated with the nearest point.\n     *          id: // Example data: [['Origin'], ['USA']],\n     *          dimensions: // Physical dimensions of the point.\n     *          layerId: // Id of the layer instance.\n     *      }\n     * ```\n     */\n    getNearestPoint () {\n        return null;\n    }\n\n    applyInteractionStyle (interactionType, selectionSet, apply, styles) {\n        const interactionConfig = this.config().interaction || {};\n\n        let interactionStyles = interactionConfig[interactionType];\n        interactionStyles = styles || interactionStyles;\n        if (interactionStyles) {\n            applyInteractionStyle(this, selectionSet, interactionStyles, {\n                apply,\n                interactionType\n            });\n        }\n    }\n\n    disableUpdate () {\n        this._updateLock = true;\n        return this;\n    }\n\n    enableUpdate () {\n        this._updateLock = false;\n        return this;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransform(this);\n    }\n\n    transformType () {\n        return this._transformType;\n    }\n\n    /**\n     * Renders the layer\n     * @return {BaseLayer} Instance of the layer.\n     */\n    render () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BaseLayer\n     */\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Disposes the entire layer.\n     *\n     * @return {BaseLayer} Instance of layer.\n     */\n    remove () {\n        this.store().unsubscribe({\n            namespace: `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${this.metaInf().namespace}`\n        });\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     * Stores point in an object with key as the categorical value or temporal value\n     *\n     * @param {string} key categorical value or temporal value\n     * @param {Object} data Information of the data point\n     * @return {BarLayer} Instance of bar layer\n     */\n    cachePoint (key, data) {\n        if (key === null) {\n            return this;\n        }\n        const pointMap = this._pointMap;\n        !pointMap[key] && (pointMap[key] = []);\n        pointMap[key].push(data);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} dataProps\n     *\n     * @memberof BaseLayer\n     */\n    dataProps (...dataProps) {\n        if (dataProps.length) {\n            this._dataProps = dataProps[0];\n            return this;\n        }\n        return this._dataProps;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} id\n     *\n     * @memberof BaseLayer\n     */\n    getIdentifiersFromData (data) {\n        const schema = this.data().getData().schema;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const identifiers = [[], []];\n        const {\n                xFieldType,\n                yFieldType,\n                xField,\n                yField\n            } = this.encodingFieldsInf();\n\n        const [xMeasure, yMeasure] = [xFieldType, yFieldType].map(type => type === FieldType.MEASURE);\n        schema.forEach((d, i) => {\n            const name = d.name;\n            if (fieldsConfig[name].def.type === FieldType.DIMENSION) {\n                identifiers[0].push(name);\n                identifiers[1].push(data[i]);\n            }\n        });\n\n        if (xMeasure && yMeasure) {\n            const xMeasureIndex = fieldsConfig[xField].index;\n            const yMeasureIndex = fieldsConfig[yField].index;\n            identifiers[0].push(...[xField, yField]);\n            identifiers[1].push(...[data[xMeasureIndex], data[yMeasureIndex]]);\n        }\n        return identifiers;\n    }\n\n    getPlotSpan () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    getPlotPadding () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    /**\n     * Returns the information of the marks corresponding to the supplied identifiers. Identifiers are a set of field\n     * names and their corresponding values in an array. It can also be an instance of datamodel.\n     *\n     * For example,\n     * ```\n     *  const identifiers = [\n     *      ['Origin', 'Cylinders'],\n     *      ['USA', '8']\n     *  ];\n     *  const points = barLayer.getPointsFromIdentifiers(identifiers);\n     * ```\n     * @public\n     * @param {Array|DataModel} identifiers Identifiers of the marks.\n     * @param {Object} config Optional configuration which describes how to get the information.\n     * @param {boolean} config.getAllAttrs If true, then returns all the information of the points, else returns only\n     * the positions of the points.\n     * @param {boolean} config.getBBox If true, then returns the bounding box of all the marks.\n     *\n     * @return {Array} Array of points contains\n     */\n    getPointsFromIdentifiers (identifiers, config = {}) {\n        const getAllAttrs = config.getAllAttrs;\n        const getBBox = config.getBBox;\n        if (!this.data()) {\n            return [];\n        }\n        let fieldNames;\n        let values;\n        if (identifiers instanceof DataModel) {\n            const dataObj = identifiers.getData();\n            fieldNames = dataObj.schema.map(d => d.name);\n            values = dataObj.data;\n        } else {\n            fieldNames = identifiers[0];\n            values = identifiers.slice(1, identifiers.length);\n        }\n\n        const points = this._points;\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPoints = [].concat(...points).filter((point) => {\n            const { _data, _id } = point;\n\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === _data[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === _id) !== -1;\n                } return true;\n            });\n        });\n        return getAllAttrs ? filteredPoints : filteredPoints.map((d) => {\n            const obj = clone(d);\n            if (getBBox) {\n                const update = obj.update || obj;\n                if (obj.size !== undefined) {\n                    const sizeVal = Math.sqrt(obj.size / Math.PI) * 2;\n                    update.width = sizeVal;\n                    update.height = sizeVal;\n                    update.x -= sizeVal / 2;\n                    update.y -= sizeVal / 2;\n                } else {\n                    if (update.width === undefined) {\n                        update.width = 2;\n                    }\n                    if (update.height === undefined) {\n                        update.height = 2;\n                    }\n                }\n            }\n\n            return obj.update || obj;\n        }).sort((a, b) => a.y - b.y);\n    }\n\n    getTransformedDataFromIdentifiers (identifiers) {\n        const { data: identifierData, schema: identifierSchema } = identifiers.getData();\n        const normalizedData = this._normalizedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n            yField,\n            xField,\n            yFieldType,\n            xFieldType\n        } = this.encodingFieldsInf();\n        let measureIndex;\n        let enc;\n        if (xFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[xField].index;\n            enc = 'x';\n        } else if (yFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[yField].index;\n            enc = 'y';\n        }\n\n        const transformedData = [];\n        normalizedData.forEach((dataArr) => {\n            dataArr.forEach((dataObj) => {\n                const tupleArr = dataObj._data;\n                const exist = identifierSchema.every((obj, i) =>\n                    identifierData.findIndex(d => tupleArr[fieldsConfig[obj.name].index] === d[i]) !== -1);\n                if (exist) {\n                    const transformedVal = dataObj[enc];\n                    const row = dataObj._data;\n                    const tuple = {};\n                    for (const key in fieldsConfig) {\n                        const index = fieldsConfig[key].index;\n                        tuple[key] = row[index];\n                        if (index === measureIndex) {\n                            tuple[key] = transformedVal;\n                        }\n                    }\n                    transformedData.push(tuple);\n                }\n            });\n        });\n\n        return [transformedData, this.data().getData().schema];\n    }\n\n    /**\n     * Returns the dom elements associated with the supplied set of row ids.\n     * Each element in the layer is mapped with a row of the datamodel. When given an array of row ids, it returns all\n     * the elements which is mapped with those row ids.\n     *\n     * @public\n     * @param {Array} set Array of row ids\n     *\n     * @return {Selection} D3 Selection of dom elements.\n     */\n    getPlotElementsFromSet (set) {\n        return selectElement(this.mount()).selectAll(this.elemType()).filter(data =>\n            (data ? set.indexOf(data._id) !== -1 : false));\n    }\n\n    /**\n     * Notifies when all animations/transitions of the layer are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n\n    getRenderProps () {\n        const metaInf = this.metaInf();\n        return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${metaInf.unitRowIndex}0`,\n            `${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${metaInf.unitColIndex}0`];\n    }\n}\n","import {\n    selectElement,\n    makeElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\nimport { updateStyle } from '../../helpers';\n\nconst line = Symbols.line;\n\nconst filterFn = (d) => {\n    const { update } = d;\n    return update.y !== null && update.x !== null;\n};\n\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nexport const drawLine = (context) => {\n    let filteredPoints;\n    const { layer, container, points, interpolate, connectNullData, className, style, transition } = context;\n    const mount = selectElement(container).attr('class', className);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const linepath = line()\n                .curve(curveInterpolatorFn)\n                .x(d => d.update.x)\n                .y(d => d.update.y)\n                .defined(filterFn);\n\n    filteredPoints = points;\n    if (connectNullData) {\n        filteredPoints = points.filter(filterFn);\n    }\n\n    updateStyle(mount, style);\n    let element = makeElement(mount, 'path', [1]);\n    element.classed(points[0].className, true);\n    if (!transition.disabled) {\n        element = element.transition()\n        .duration(transition.duration)\n        .on('end', layer.registerAnimationDoneHook());\n    }\n    element.attr('d', linepath(filteredPoints))\n                    .style('fill-opacity', 0);\n    return element;\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-line',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: 'group'\n    },\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    nearestPointThreshold: 20,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n\n","import {\n    Voronoi,\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    FieldType,\n    getObjProp,\n    InvalidAwareTypes\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawLine } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    animateGroup,\n    getLayerColor,\n    positionPoints,\n    getIndividualClassName\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to render straight or smoothed line paths. The mark type of this layer is ```line```.\n *\n * @public\n *\n * @class\n * @module LineLayer\n * @extends BaseLayer\n */\nexport default class LineLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of LineLayer.\n     * @param {*} args\n     * @memberof LineLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof LineLayer\n     */\n    static formalName () {\n        return 'line';\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof LineLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Default configuration of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @param {*} conf\n     * @param {*} userConf\n     *\n     * @memberof LineLayer\n     */\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField && !transform.groupBy) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     * Returns the draw method for line\n     * @return {Function} Draw method of line layer\n     */\n    getDrawFn () {\n        return drawLine;\n    }\n\n    static shouldDrawAnchors () {\n        return true;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @param {number} seriesIndex index of series\n     * @return {Array} Array of points\n     */\n    translatePoints (data, encodingFieldsInf, axes) {\n        let points = [];\n        const xAxis = axes.x;\n        const yAxis = axes.y;\n        const colorAxis = axes.color;\n        const encoding = this.config().encoding;\n        const { xFieldType, yFieldType } = encodingFieldsInf;\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding.field;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const colorFieldIndex = colorField && fieldsConfig[colorField].index;\n        const style = {};\n        const meta = {};\n\n        points = data.map((d, i) => {\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y) + yAxis.getUnitWidth() / 2;\n            const { color, rawColor } = getLayerColor({ datum: d, index: i }, {\n                colorEncoding, colorAxis, colorFieldIndex });\n\n            style.stroke = color;\n            style['fill-opacity'] = 0;\n            meta.stateColor = {};\n            meta.originalColor = rawColor;\n            meta.colorTransform = {};\n\n            const point = {\n                enter: {},\n                update: {\n                    x: d.x instanceof InvalidAwareTypes ? null : xPx,\n                    y: d.y instanceof InvalidAwareTypes ? null : yPx\n                },\n                style,\n                _data: d._data,\n                _id: d._id,\n                rowId: d._id,\n                source: d._data,\n                meta\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    /**\n     * Renders the line plot\n     * @param {SVGElement} container svg element\n     * @return {LineLayer} instance of line layer\n     */\n    render (container) {\n        let points;\n        let seriesClassName;\n        let style;\n\n        const config = this.config();\n        const {\n            encoding,\n            interpolate,\n            className,\n            defClassName,\n            transition\n        } = config;\n        const normalizedData = this._normalizedData;\n        const transformedData = this._transformedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const keys = transformedData.map(d => d.key);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const containerSelection = selectElement(container);\n        const colorField = encoding.color.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n\n        this._points = [];\n        this._pointMap = {};\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        makeElement(container, 'g', normalizedData, null, {\n            enter: (group) => {\n                animateGroup(group, {\n                    transition,\n                    groupAnimateStyle: {\n                        enter: {\n                            'stroke-opacity': 0,\n                            'fill-opacity': this.getPathStyle()['fill-opacity']\n                        },\n                        update: {\n                            'stroke-opacity': encoding.strokeOpacity.value\n                        }\n                    }\n                });\n            },\n            update: (group, dataArr, i) => {\n                points = this.translatePoints(dataArr, this.encodingFieldsInf(), axes, i);\n                this._points.push(points);\n                seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n\n                let color;\n                const colorValFn = encoding.color.value;\n                const colorVal = points.find(d => d._data[colorFieldIndex] !== null &&\n                        d._data[colorFieldIndex] !== undefined);\n\n                if (colorValFn) {\n                    color = colorValFn(dataArr, i, normalizedData);\n                } else {\n                    color = axes.color.getColor(colorVal && colorVal._data[colorFieldIndex]);\n                }\n\n                style = this.getPathStyle(color);\n                this.getDrawFn()({\n                    layer: this,\n                    container: group.node(),\n                    interpolate,\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: style || {},\n                    connectNullData: config.connectNullData\n                });\n            }\n        }, d => d[0]._data[colorFieldIndex] || d[0]._id);\n\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            stroke: color,\n            'fill-opacity': '0'\n        };\n    }\n\n    /**\n     * Gets the nearest point closest to the given position\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point information\n     */\n    getNearestPoint (x, y, config) {\n        let searchRadius = config.searchRadius;\n        const data = this.data();\n\n        if (!data || (data && data.isEmpty())) {\n            return null;\n        }\n\n        searchRadius = searchRadius !== undefined ? searchRadius : this.config().nearestPointThreshold;\n        const point = this._voronoi.find(x, y, searchRadius);\n        const dimensions = getObjProp(point, 'data', 'data', 'update');\n\n        if (point) {\n            const { _data, _id } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(_data, _id);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: 2,\n                    height: 2\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import {\n    easeFns,\n    selectElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\n\nconst area = Symbols.area;\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nconst /* istanbul ignore next */ drawArea = (params) => {\n    let filteredPoints;\n    const { layer, container, points, style, transition, className, connectNullData, interpolate } = params;\n\n    const { effect: easeEffect, duration } = transition;\n    const mount = selectElement(container);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const selection = mount.selectAll('path').data([params.points]);\n    const [enterAreaPath, updateAreaPath] = ['enter', 'update'].map(e => area().curve(curveInterpolatorFn)\n                    .x(d => d[e].x)\n                    .y1(d => d[e].y)\n                    .y0(d => d[e].y0)\n                    .defined(d => d[e].y !== null\n            ));\n\n    filteredPoints = points;\n    mount.attr('class', className);\n    if (connectNullData) {\n        filteredPoints = points.filter(d => d.update.y !== null);\n    }\n    const selectionEnter = selection.enter().append('path').attr('d', enterAreaPath(filteredPoints));\n    selection.merge(selectionEnter).transition().ease(easeFns[easeEffect])\n                    .duration(duration)\n                    .on('end', layer.registerAnimationDoneHook())\n                    .attr('d', updateAreaPath(filteredPoints))\n                    .each(function (d) {\n                        const element = selectElement(this);\n\n                        element.classed(d[0].className, true);\n                        Object.keys(style).forEach(key => element.style(key, style[key]));\n                    });\n};\n\nexport default drawArea;\n","import { FieldType, InvalidAwareTypes } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { LineLayer } from '../line';\nimport drawArea from './renderer';\nimport './styles.scss';\nimport { STACK, ENCODING } from '../../enums/constants';\nimport {\n    getAxesScales,\n    positionPoints,\n    getLayerColor,\n    getIndividualClassName,\n    getValidTransformForAggFn\n} from '../../helpers';\n\n/**\n * Area layer renders a closed path. The mark type of this layer is ```area```. This layer can be used\n * to create stacked or multi-series areas and vertical range area plots by using the encoding properties.\n *\n * To create this layer using layer configuration from canvas,\n * ```\n *      canvas.layers([{\n *          mark: 'area',\n *          transform: {\n *              type: 'stack' // Produces a stacked area.\n *          }\n *      }]);\n * ```\n *\n * @public\n *\n * @class\n * @module AreaLayer\n * @extends LineLayer\n */\nexport default class AreaLayer extends LineLayer {\n    /** oation of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof AreaLayer\n     */\n    static formalName () {\n        return 'area';\n    }\n\n    /**\n     * Calculates the domain from data. It calls its parent class's method which is line layer\n     * to get the domain and overwrites the domain according to its need.\n     * @return {Array} Domain values\n     */\n    calculateDomainFromData (data, encodingFieldsInf, fieldsConfig) {\n        const domains = super.calculateDomainFromData(data, fieldsConfig);\n        [ENCODING.X, ENCODING.Y].forEach((type) => {\n            const { [`${type}FieldType`]: fieldType } = encodingFieldsInf;\n            if (fieldType === FieldType.MEASURE && domains[type] !== undefined) {\n                domains[type][0] = Math.min(domains[type][0], 0);\n                domains[type][1] = Math.max(0, domains[type][1]);\n            }\n        });\n        return domains;\n    }\n\n    /**\n     * Returns the drawing method of this layer\n     * @return {Function} Draw method\n     */\n    getDrawFn () {\n        return drawArea;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @return {Array} Array of points\n     */\n    translatePoints (data, encodingFieldsInf, axes) {\n        let points = [];\n        const transformType = this.transformType();\n        const colorAxis = axes.color;\n        const config = this.config();\n        const encoding = config.encoding;\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding.field;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const colorFieldIndex = colorField && fieldsConfig[colorField].index;\n        const { xField, yField, y0Field } = encodingFieldsInf;\n        const {\n            xAxis,\n            yAxis\n       } = getAxesScales(axes);\n        const classNameFn = config.individualClassName;\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n        const minYVal = yAxis.domain()[0];\n        const basePos = minYVal < 0 ? yAxis.getScaleValue(0) : yAxis.getScaleValue(minYVal);\n        points = data.map((d, i) => {\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y);\n            const y0Px = (y0Field || transformType === STACK) ? yAxis.getScaleValue(d.y0) : basePos;\n            const { color, rawColor } = getLayerColor({ datum: d, index: i }, {\n                colorEncoding, colorAxis, colorFieldIndex });\n            const style = {};\n            const meta = {};\n            style.fill = color;\n            // style['fill-opacity'] = 0;\n            meta.stateColor = {};\n            meta.originalColor = rawColor;\n            meta.colorTransform = {};\n            const invalidY = d.y instanceof InvalidAwareTypes;\n            const invalidY0 = d.y0 instanceof InvalidAwareTypes;\n            const point = {\n                enter: {\n                    x: xPx,\n                    y: invalidY ? null : basePos,\n                    y0: invalidY0 ? null : basePos\n                },\n                update: {\n                    x: xPx,\n                    y: invalidY ? null : yPx,\n                    y0: invalidY0 ? null : y0Px\n                },\n                _id: d._id,\n                _data: d._data,\n                source: d._data,\n                rowId: d._id,\n                className: classNameFn ? classNameFn(d, i, data, this) : '',\n                style,\n                meta\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransformForAggFn(this);\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            fill: color\n        };\n    }\n}\n\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-arc',\n    padding: { top: 1, bottom: 1, left: 1, right: 1 },\n    className: '',\n    minOuterRadius: 10,\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    height: 100,\n    width: 100,\n    sort: '',\n    cornerRadius: 0,\n    padAngle: 0,\n    padRadius: 0,\n    startAngle: 0,\n    endAngle: 360,\n    colors: ['#F44336', 'blue', 'green', 'yellow', 'orange', 'purple'],\n    transform: {\n        type: 'identity'\n    },\n    encoding: {\n        'stroke-width': {\n            value: '2px'\n        },\n        'stroke-linejoin': {\n            value: 'round'\n        },\n        angle: {\n            value: '1'\n        },\n        radius: {\n            value: '1'\n        },\n        opacity: {\n            value: '1'\n        },\n        color: {\n            value: '1'\n        },\n        shape: {\n            value: '1'\n        },\n        size: {\n            value: '1'\n        }\n    },\n    innerRadiusFixer: 10,\n    transition: {\n        effect: 'cubic',\n        duration: 500\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-arc-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-arc-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-arc-selected`\n        }\n    }\n};\n\n","import {\n    makeElement,\n    selectElement,\n    getQualifiedClassName,\n    isSimpleObject,\n    getDomainFromData,\n    Symbols,\n    FieldType,\n    ReservedFields,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { BaseLayer } from '../../base-layer';\nimport { ASCENDING, OUTER_RADIUS_VALUE } from '../../enums/constants';\nimport { getIndividualClassName } from '../../helpers';\nimport { getRangeValue, getRadiusRange, tweenPie, tweenExitPie, getFieldIndices, getPreviousPoint } from './arc-helper';\nimport './styles.scss';\n\nconst pie = Symbols.pie;\nconst arc = Symbols.arc;\n\n/**\n * Arc Layer creates a plot with polar coordinates.\n *\n * @public\n *\n * @class\n * @module ArcLayer\n * @extends BaseLayer\n */\nexport default class ArcLayer extends BaseLayer {\n\n    constructor (data, axes, config, dependencies) {\n        super(data, axes, config, dependencies);\n        this._prevPieData = {};\n    }\n\n    /**\n     * returns the default configuration of the layer\n     *\n     * @static\n     * @return {Object} Default configuration for arc layer\n     * @memberof ArcLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ArcLayer\n     */\n    static formalName () {\n        return 'arc';\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof ArcLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Transforms data in the appropriate data structure to be consumed by the layer for rendering\n     *\n     * @param {Object} data data model associated with the layer\n     * @param {Object} config configuration of the layer that contains encoding and other parameters\n     * @return {Object} Transformed pie data\n     * @memberof ArcLayer\n     */\n    getTransformedData (dataModel, config) {\n        let pieData = [];\n        const pieIndex = {};\n        const {\n            startAngle,\n            endAngle,\n            encoding,\n            sort,\n            minOuterRadius\n        } = config;\n        const prevData = this._transformedData || [];\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n            angleIndex,\n            sizeIndex,\n            radiusIndex,\n            colorIndex\n        } = getFieldIndices(encoding, fieldsConfig);\n        const dataVal = dataModel.getData();\n        const data = dataVal.data;\n        const uids = dataVal.uids;\n\n        this._prevPieData = {};\n\n        prevData.forEach((e, index) => {\n            this._prevPieData[e.uid] = [e, index];\n            pieIndex[e.index] = e;\n        });\n        // Creating pie data using angle field provided. If the angle field is a dimension,\n        // all the angles will be equal(360/number of dimensions)\n\n        pieData = pie()\n            .startAngle((startAngle / 180) * Math.PI)\n            .endAngle(Math.PI * endAngle / 180)\n            .value(d => d[angleIndex] || 1)\n            .sortValues(null);\n\n        sort.length && radiusIndex && pieData.sort((a, b) => {\n            if (sort === ASCENDING) {\n                return a[radiusIndex] - b[radiusIndex];\n            } return b[radiusIndex] - a[radiusIndex];\n        });\n        const sizeVal = data.reduce((acc, d) => acc + (d[sizeIndex] || 0), 1);\n\n        // Adding the radius field values to each data point in pie data\n        pieData = pieData(data).map((d, i) => {\n            d.outerRadiusValue = data[i][radiusIndex] || minOuterRadius;\n            d.innerRadius = config.innerRadius;\n            d.colorVal = data[i][colorIndex];\n            d.angleVal = data[i][angleIndex];\n            d.sizeVal = sizeVal;\n            d.uid = uids[i];\n            d.rowId = d.uid;\n            d.source = data[i];\n            d._previousInfo = this._prevPieData[d.uid] ? this._prevPieData[d.uid][0] :\n                getPreviousPoint(pieIndex, d.index, config);\n            return d;\n        });\n        return pieData;\n    }\n\n    /**\n     * Returns normalized data after transformation (it is the same in the case of pie layer)\n     *\n     * @param {Object} data transformed data\n     * @return {Object} normalized data\n     * @memberof ArcLayer\n     */\n    getNormalizedData (data) {\n        return data;\n    }\n\n    /**\n     *\n     *\n     * @param {Object} data\n     * @return {}\n     * @memberof ArcLayer\n     */\n    calculateDomainFromData (data) {\n        const domainKey = OUTER_RADIUS_VALUE;\n        return {\n            radius: getDomainFromData([data], [domainKey, domainKey])\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {Object} x\n     * @param {Object} y\n     * @return {}\n     * @memberof ArcLayer\n     */\n    getNearestPoint (x, y, config = {}) {\n        const dataPoint = selectElement(config.event.target).data()[0];\n        if (isSimpleObject(dataPoint)) {\n            const { data, uid } = dataPoint.datum;\n            return {\n                id: this.getIdentifiersFromData(data, uid),\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n\n    /**\n     *\n     *\n     * @param {*} set\n     *\n     * @memberof ArcLayer\n     */\n    getPlotElementsFromSet (set) {\n        return selectElement(this.mount()).selectAll(this.elemType()).filter(d => set.indexOf(d.datum.uid) !== -1);\n    }\n\n    /**\n     *\n     *\n     * @param {Object} container\n     * @return {}\n     * @memberof ArcLayer\n     */\n    render (container) {\n        const {\n            height,\n            width\n        } = this.measurement();\n        const {\n            classPrefix,\n            defClassName,\n            minOuterRadius,\n            innerRadius,\n            outerRadius,\n            cornerRadius,\n            padAngle,\n            padRadius,\n            padding,\n            transition,\n            innerRadiusFixer\n       } = this.config();\n        const sizeAxis = this.axes().size;\n        const transformedData = this._transformedData;\n        const chartHeight = height - padding.top - padding.bottom;\n        const chartWidth = width - padding.left - padding.right;\n        const qualClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        // Sets range for radius\n        const range = getRadiusRange(chartWidth, chartHeight, {\n            minOuterRadius,\n            innerRadius,\n            outerRadius,\n            innerRadiusFixer\n        });\n        const colorAxis = this.axes().color;\n        const defaultRadius = outerRadius || Math.min(chartHeight, chartWidth) / 2;\n        const radiusDomain = this.domain().radius;\n        const rangeValueGetter = d => getRangeValue(d, range, radiusDomain, defaultRadius, sizeAxis);\n        // This returns a function that generates the arc path based on the datum provided\n        const path = arc()\n                // .outerRadius(d => rangeValueGetter(d))\n                .innerRadius(innerRadius ? Math.min(chartHeight / 2, chartWidth / 2, innerRadius) : 0)\n                .cornerRadius(cornerRadius)\n                .padAngle(padAngle)\n                .padRadius(padRadius);\n        this._chartWidth = chartWidth;\n        this._chartHeight = chartHeight;\n        // Creating the group that holds all the arcs\n        const g = makeElement(selectElement(container), 'g', [1], `${qualClassName[0]}-group`)\n                .classed(`${qualClassName[1]}-group`, true)\n                .attr('transform', `translate(${chartWidth / 2},${chartHeight / 2})`);\n        const tween = (elem) => {\n            makeElement(elem, 'path', (d, i) => [{\n                datum: d,\n                index: i,\n                arcFn: path,\n                meta: {\n                    originalColor: colorAxis.getRawColor(d.colorVal),\n                    stateColor: {},\n                    colorTransform: {}\n                }\n            }], `${qualClassName[0]}-path`)\n                            .style('fill', d => colorAxis.getColor(d.datum.colorVal))\n                            .transition()\n                            .duration(transition.duration)\n                            .on('end', this.registerAnimationDoneHook())\n                            .attrTween('d', (...params) => tweenPie(path, rangeValueGetter, params))\n                            .attr('class', (d, i) => {\n                                const individualClass = getIndividualClassName(d, i, transformedData, this);\n                                return `${qualClassName[0]}-path ${qualClassName[1]}-path-${d.index}\n                                    ${individualClass}`;\n                            });\n        };\n        const consecutiveExits = [];\n        let exitCounter = 0;\n        const tweenExit = (elem, d) => {\n            let exitArr = consecutiveExits[exitCounter];\n            const oldExitCounter = exitCounter;\n            if (!exitArr) {\n                exitArr = [{ elem, datum: d }];\n            } else if (exitArr[exitArr.length - 1].datum.index === d.index - 1) {\n                exitArr.push({ elem, datum: d });\n            } else {\n                exitCounter++;\n            }\n            consecutiveExits[oldExitCounter] = exitArr;\n        };\n        // Creating groups for all the arcs present individually\n        makeElement(g, 'g', transformedData, `${qualClassName[0]}`,\n            {\n                update: tween,\n                exit: tweenExit\n            })\n                        .attr('class', (d, i) => `${qualClassName[0]} ${qualClassName[1]}-${i}`);\n        tweenExitPie(consecutiveExits, transition, rangeValueGetter, path);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} identifiers\n     *\n     * @memberof BaseLayer\n     */\n    getPointsFromIdentifiers (identifiers) {\n        if (!this.data()) {\n            return [];\n        }\n        const fieldNames = identifiers[0];\n        const values = identifiers.slice(1, identifiers.length);\n        const pieSlices = selectElement(this.mount()).selectAll('path').data();\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPies = pieSlices.filter((tData) => {\n            const data = tData.datum.data;\n            const uid = tData.datum.uid;\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === data[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === uid) !== -1;\n                } return true;\n            });\n        });\n\n        const pieSliceInf = filteredPies[0];\n        if (pieSliceInf) {\n            const centroid = pieSliceInf.arcFn.centroid(pieSliceInf.datum);\n            return [{\n                x: centroid[0] + this._chartWidth / 2,\n                y: centroid[1] + this._chartHeight / 2,\n                width: 2,\n                height: 2\n            }];\n        }\n        return [];\n    }\n\n    getRenderProps () {\n        return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.radius`];\n    }\n}\n","import { getObjProp, interpolator, FieldType, selectElement } from 'muze-utils';\nimport { ANGLE, RADIUS, SIZE, COLOR } from '../../enums/constants';\n\n/**\n * Returns the range value from a value inside the domain\n *\n * @param {Object} domainValue Value whose range has to be returned\n * @return {number} range value\n * @memberof ArcLayer\n */\nexport const getRangeValue = (datum, range, domain, defaultRadius, sizeAxis) => {\n    let domainMultiplier = 1;\n    const {\n        outerRadiusValue,\n        sizeVal\n    } = datum;\n    const sizeAxisDomain = sizeAxis.domain();\n    const sizeMultiplier = sizeAxis.getSize(sizeVal) / (sizeAxisDomain ? sizeAxis.range()[1] : sizeAxis.config().value);\n\n    domainMultiplier *= (range[1] - range[0]) / (domain[1] - domain[0]);\n    const rangeVal = (range[0] + (outerRadiusValue - domain[0]) * domainMultiplier);\n    return (rangeVal || defaultRadius) * sizeMultiplier;\n};\n\n/**\n *\n *\n * @memberof ArcLayer\n */\nexport const getRadiusRange = (width, height, config) => {\n    const {\n        minOuterRadius,\n        innerRadius,\n        outerRadius,\n        innerRadiusFixer\n    } = config;\n\n    return [Math.max((innerRadius + innerRadiusFixer || 0), minOuterRadius), outerRadius || Math.min(height,\n        width) / 2];\n};\nexport const getPreviousPoint = (prevData, currIndex, config) => {\n    const prevArc = prevData[currIndex - 1];\n    const nextArc = prevData[currIndex];\n\n    if (prevArc && nextArc) {\n        return {\n            startAngle: prevArc.endAngle,\n            endAngle: nextArc.startAngle\n        };\n    } else if (!nextArc) {\n        return {\n            startAngle: config.endAngle * Math.PI * 2 / 360,\n            endAngle: config.endAngle * Math.PI * 2 / 360\n        };\n    }\n    return {\n        startAngle: config.startAngle * Math.PI * 2 / 360,\n        endAngle: config.startAngle * Math.PI * 2 / 360\n    };\n};\n\n/**\n *\n *\n * @param {*} path\n * @param {*} b\n *\n * @memberof ArcLayer\n */\nexport const tweenPie = (path, rangeValueGetter, b) => {\n    const { datum } = b[0];\n    const outerRadius = rangeValueGetter(datum);\n    datum.outerRadius = outerRadius;\n    datum._previousInfo.outerRadius = datum._previousInfo.outerRadius || outerRadius;\n    return function (t) {\n        return path(interpolator()(datum._previousInfo, datum)(t));\n    };\n};\n\n/**\n *\n *\n * @param {*} path\n * @param {*} b\n *\n * @memberof ArcLayer\n */\nexport const tweenExitPie = (consecutiveExits, transition, rangeValueGetter, path) => {\n    if (consecutiveExits.length > 0) {\n        consecutiveExits.forEach((consecutiveExitArr) => {\n            const startAngle = consecutiveExitArr[0].datum.startAngle;\n            const endAngle = consecutiveExitArr[consecutiveExitArr.length - 1].datum.endAngle;\n            const mid = (Math.PI * 2 * startAngle) / ((Math.PI * 2) + startAngle - endAngle);\n\n            consecutiveExitArr.forEach((e) => {\n                const { elem, datum } = e;\n\n                elem.each(function () {\n                    const gElem = selectElement(this);\n                    gElem.selectAll('path')\n                                    .transition()\n                                    .duration(transition.duration)\n                                    .attrTween('d', () => function (t) {\n                                        const outerRadius = rangeValueGetter(datum);\n                                        datum.outerRadius = outerRadius;\n                                        return path(interpolator()(datum, {\n                                            startAngle: mid,\n                                            endAngle: mid,\n                                            outerRadius\n                                        })(t));\n                                    })\n                                    .remove();\n                    gElem.remove();\n                });\n            });\n        });\n    }\n};\n\nexport const getFieldIndices = (encoding, fieldsConfig) => {\n    const [angleField, radiusField, colorField, sizeField] = [ANGLE, RADIUS, COLOR, SIZE]\n            .map(e => encoding[e].field);\n    const [angleIndex, sizeIndex, radiusIndex] = [angleField, sizeField, radiusField]\n        .map((e) => {\n            const conf = fieldsConfig[e];\n            if (conf && conf.def.type === FieldType.MEASURE) {\n                return conf.index;\n            }\n            return null;\n        });\n    const colorIndex = getObjProp(fieldsConfig, colorField, 'index');\n    return {\n        angleIndex,\n        sizeIndex,\n        radiusIndex,\n        colorIndex\n    };\n};\n","import {\n    setAttrs,\n    setStyles,\n    selectElement,\n    makeElement,\n    getSmartComputedStyle\n} from 'muze-utils';\n\n/**\n * Draws svg text in the specified container.\n * @param {SVGElement} container Container where labels will be appended.\n * @param {Array.<Object>} data Data of the elements.\n * @return {Selection} d3 selection of the elements.\n */\nconst drawText = (container, data, config, smartLabel) => {\n    const selection = selectElement(container).selectAll('g').data(data);\n\n    const selectionMerge = selection.enter().append('g')\n        .each(function (dataObj) {\n            setAttrs(this, dataObj.enter);\n        })\n        .merge(selection);\n    const style = getSmartComputedStyle(selectElement(container), config.className);\n    const fontSize = parseInt(style.fontSize, 10);\n\n    smartLabel.setStyle(style);\n    selectionMerge.each(function (dataObj) {\n        const element = selectElement(this);\n        const { update, text, color, textanchor, style: textStyle } = dataObj;\n        const background = dataObj.background;\n        let backgroundVal;\n        if (backgroundVal = background.value) {\n            const backgroundPadding = background.padding;\n            let diff;\n            const { width, height } = smartLabel.getOriSize(dataObj.text);\n            const backgroundEl = makeElement(element, 'rect', [1]);\n\n            if (textanchor === 'end') {\n                diff = width;\n            } else if (textanchor === 'start') {\n                diff = 0;\n            } else {\n                diff = width / 2;\n            }\n\n            setAttrs(backgroundEl.node(), {\n                x: update.x - diff - backgroundPadding / 2,\n                y: update.y - fontSize - backgroundPadding / 2,\n                width: width + backgroundPadding,\n                height: height + backgroundPadding\n            });\n            background && setStyles(backgroundEl, {\n                background: backgroundVal\n            });\n        }\n        const textEl = makeElement(element, 'text', d => [d]).text(text);\n        const textNode = textEl.node();\n        textStyle && setStyles(textNode, textStyle);\n        color && setStyles(textNode, {\n            fill: color\n        });\n        dataObj.className && textEl.classed(dataObj.className, true);\n        setAttrs(textNode, update);\n        textEl.attr('text-anchor', textanchor);\n    });\n    selection.exit().remove();\n    return selection;\n};\n\nexport default drawText;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-text',\n    classPrefix: CLASSPREFIX,\n    className: '',\n    transform: {\n        type: 'identity'\n    },\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        color: {},\n        text: {\n            value: '',\n            formatter: (val, i, data, context) => {\n                const valueParser = context.valueParser();\n                return valueParser(val);\n            },\n            background: {\n                padding: 10\n            }\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-text-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-text-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-text-selected`\n        }\n    }\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    setStyles,\n    createElements\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawText from './renderer';\nimport { defaultConfig } from './default-config';\nimport { getLayerColor, positionPoints, getIndividualClassName } from '../../helpers';\nimport { TEXT_ANCHOR_MIDDLE, ENCODING } from '../../enums/constants';\n\nimport './styles.scss';\n\n/**\n * This layer is used to create labels for each data point. It has an encoding property ```text```\n * which determines from which field's data the value of the label will be taken. The text encoding\n * property is necessary for the layer to render the text.The mark type of this layer is ```text```.\n *\n * @public\n *\n * @class\n * @module TextLayer\n * @extends BaseLayer\n */\nexport default class TextLayer extends BaseLayer {\n    /**\n     * Returns the default configuration of the text layer\n     * @return {Object} Default configuration of the text layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'text';\n    }\n\n    elemType () {\n        return 'text';\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, encoding, axes) {\n        let points = [];\n        const colorAxis = axes.color;\n        const textEncoding = encoding.text;\n        const { field: textField, value, formatter: textFormatter } = textEncoding;\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding && colorEncoding.field;\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const backgroundEncoding = encoding.text.background;\n        const backgroundPadding = backgroundEncoding.padding;\n        const backgroundValue = backgroundEncoding.value;\n        const colorFieldIndex = fieldsConfig[colorField] ? fieldsConfig[colorField].index : -1;\n        const textFieldIndex = textField ? fieldsConfig[textField] && fieldsConfig[textField].index : -1;\n        const xEnc = ENCODING.X;\n        const yEnc = ENCODING.Y;\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const row = d._data;\n            const textValue = textField ? row[textFieldIndex] : value;\n\n            const [xPx, yPx] = [xEnc, yEnc].map(type => (axes[type] ? axes[type].getScaleValue(d[type]) +\n                    axes[type].getUnitWidth() / 2 : 0));\n\n            const { color, rawColor } = getLayerColor({ datum: d, index: i },\n                { colorEncoding, colorAxis, colorFieldIndex });\n\n            const point = {\n                enter: {},\n                update: {\n                    x: xPx,\n                    y: yPx\n                },\n                text: textFormatter(textValue, i, data, this),\n                color,\n                background: {\n                    value: backgroundValue instanceof Function ? backgroundValue(d, i, data, this) : null,\n                    padding: backgroundPadding\n                },\n                meta: {\n                    stateColor: {},\n                    originalColor: rawColor,\n                    colorTransform: {}\n                },\n                style: {},\n                _data: row,\n                _id: d._id,\n                source: d._data,\n                rowId: d._id\n            };\n\n            point.className = getIndividualClassName(d, i, data, this);\n            points.push(point);\n        }\n\n        points = positionPoints(this, points);\n        points = points.filter((d) => {\n            const update = d.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {textLayer} Instance of text layer\n     */\n    render (container) {\n        let points;\n        const config = this.config();\n        const encoding = config.encoding;\n        const normalizedData = this._normalizedData;\n        const className = config.className;\n        const qualifiedClassName = getQualifiedClassName(config.defClassName, this.id(), config.classPrefix);\n        const axes = this.axes();\n        const containerSelection = selectElement(container);\n\n        containerSelection.classed(`${qualifiedClassName.join(' ')} ${className}`, true);\n        createElements({\n            data: normalizedData,\n            append: 'g',\n            selector: 'g',\n            container,\n            each: (dataArr, group, i) => {\n                const node = group.node();\n                points = this.translatePoints(dataArr, encoding, axes, i);\n                setStyles(node, {\n                    'text-anchor': TEXT_ANCHOR_MIDDLE\n                });\n                drawText(node, points, {\n                    className: qualifiedClassName[0]\n                }, this._dependencies.smartLabel);\n            }\n        });\n        return this;\n    }\n}\n","/* global Element, document  */\nimport {\n    makeElement,\n    selectElement,\n    easeFns,\n    objectIterator,\n    getSymbol\n} from 'muze-utils';\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, groupElement) {\n    const { shape, size, update } = d;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            createShape(d, groupElement);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        if (newShape.nodeName === 'path' || newShape.nodeName === 'image') {\n            shapeElement.attr('transform', `scale(${size / 100})`);\n        } else {\n            shapeElement.attr('height', size);\n            shapeElement.attr('width', size);\n        }\n        shapeElement.attr('x', -size / 2);\n        shapeElement.attr('y', -size / 2);\n        makeElement(groupElement, () => newShape, [1]);\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = getSymbol(shape).size(size)(update);\n        }\n        makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    } else {\n        d.shape = 'circle';\n        createShape(d, groupElement);\n    }\n};\n\n/**\n * Draws symbols using d3 symbol api\n * @param {Object} params Contains the svg container, points and other symbol related attributes.\n */\n/* istanbul ignore next */ const drawSymbols = (params) => {\n    const { layer, container, points, transition, className } = params;\n    const { duration, effect, disabled } = transition;\n    const mount = selectElement(container);\n\n    mount.attr('class', className);\n    return makeElement(mount, 'g', points, null, {\n        enter: (group, d) => {\n            const { enter } = d;\n            group.attr('transform', `translate(${enter.x},${enter.y})`);\n        },\n        update: (group, d) => {\n            createShape(d, group);\n            const { update, style } = d;\n            objectIterator(style, key => group.style(key, style[key]));\n            group.attr('class', className);\n            group.classed(d.className, true);\n            if (!disabled) {\n                group = group.transition()\n                    .duration(transition.duration)\n                    .on('end', layer.registerAnimationDoneHook());\n            }\n            group.attr('transform', `translate(${update.x},${update.y})`);\n        },\n        exit: (exitGroup) => {\n            if (!disabled) {\n                exitGroup.transition().ease(easeFns[effect])\n                .duration(duration)\n                .on('end', () => exitGroup.remove())\n                .style('fill-opacity', 0)\n                .style('stroke-opacity', 0);\n            } else {\n                exitGroup.remove();\n            }\n        }\n    }, params.keyFn);\n};\n\nexport default drawSymbols;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-point',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    defColorStyle: 'stroke',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -20, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }\n        ]\n    },\n    innerPadding: 0.1,\n    nearestPointThreshold: 10,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        size: {\n            value: 30\n        },\n        color: { },\n        shape: {\n            value: 'circle'\n        },\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    shapes: ['circle', 'cross', 'diamond', 'square', 'star', 'wye', 'triangle'],\n    sizes: [20, 30, 40, 50, 60, 70]\n};\n","import {\n    Voronoi,\n    selectElement,\n    getQualifiedClassName,\n    makeElement,\n    FieldType,\n    Scales\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawSymbols from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    getLayerColor,\n    positionPoints,\n    getPlotMeasurement,\n    getIndividualClassName,\n    getMarkId\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to create various symbols for each data point. This is commonly used in\n * scatterplot visualizations. The mark type of this layer is ```point```.\n *\n * @public\n *\n * @class\n * @module PointLayer\n * @extends BaseLayer\n */\nexport default class PointLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of PointLayer.\n     * @param {*} args\n     * @memberof PointLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n        this._bandScale = Scales.band();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PointLayer\n     */\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Returns the default configuration of the point layer\n     * @return {Object} Default configuration of the point layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof PointLayer\n     */\n    static formalName () {\n        return 'point';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof PointLayer\n     */\n    static drawFn () {\n        return drawSymbols;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, encoding, axes, config = {}) {\n        let points = [];\n        const {\n            size: sizeEncoding,\n            shape: shapeEncoding,\n            color: colorEncoding,\n            x,\n            y\n        } = encoding;\n        const sizeField = sizeEncoding.field;\n        const sizeValue = sizeEncoding.value;\n        const shapeField = shapeEncoding.field;\n        const xField = x.field;\n        const yField = y.field;\n        const { size: sizeAxis, shape: shapeAxis } = axes;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const colorField = colorEncoding && colorEncoding.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n        const measurement = this.measurement();\n        const shapeFieldIndex = fieldsConfig[shapeField] && fieldsConfig[shapeField].index;\n        const sizeFieldIndex = fieldsConfig[sizeField] && fieldsConfig[sizeField].index;\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const row = d._data;\n            const size = sizeValue instanceof Function ? sizeValue(d, i) : sizeAxis.getSize(row[sizeFieldIndex]);\n            const shape = shapeAxis.getShape(row[shapeFieldIndex]);\n\n            let [xPx, yPx] = [ENCODING.X, ENCODING.Y].map((type) => {\n                const value = d[type] === null ? undefined : d[type];\n                const measure = type === ENCODING.X ? measurement.width : measurement.height;\n                return !encoding[type].field ? measure / 2 : axes[type].getScaleValue(value);\n            });\n\n            xPx += offsetX;\n            yPx += offsetY;\n\n            const { color, rawColor } = getLayerColor({ datum: d, index: i },\n                { colorEncoding, colorAxis, colorFieldIndex });\n\n            const style = {\n                fill: color,\n                stroke: color\n            };\n\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: {\n                        x: xPx,\n                        y: yPx\n                    },\n                    update: {\n                        x: xPx,\n                        y: yPx\n                    },\n                    shape,\n                    size: Math.abs(size),\n                    meta: {\n                        stateColor: {},\n                        originalColor: rawColor,\n                        colorTransform: {}\n                    },\n                    style,\n                    _data: row,\n                    _id: d._id,\n                    source: d._data,\n                    rowId: d._id\n                };\n                point.className = getIndividualClassName(d, i, data, this);\n                points.push(point);\n                this.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    /**\n     * Renders the plot in the given container.\n     *\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {BarLayer} Instance of bar layer\n     */\n    render (container) {\n        let maxSize = 0;\n        let seriesClassName;\n        const config = this.config();\n        const keys = this._transformedData.map(d => d.key);\n        const { transition, className, defClassName, classPrefix } = config;\n        const normalizedData = this._normalizedData;\n        const containerSelection = selectElement(container);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        this._points = [];\n        this._pointMap = {};\n\n        containerSelection.classed(qualifiedClassName.join(' '), true).classed(className, true);\n\n        this._points = this.generateDataPoints(normalizedData, keys);\n        const schema = this.data().getSchema();\n        makeElement(container, 'g', this._points, null, {\n            update: (group, points) => {\n                maxSize = Math.max(maxSize, ...points.map(d => d.size));\n                seriesClassName = `${qualifiedClassName[0]}`;\n                this.constructor.drawFn()({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    keyFn: v => getMarkId(v.source, schema)\n                });\n            }\n        }, data => data[0]._id);\n        this._maxSize = Math.sqrt(maxSize / Math.PI) * 2;\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    generateDataPoints (normalizedData, keys) {\n        const encoding = this.config().encoding;\n        const axes = this.axes();\n        const [widthMetrics, heightMetrics] = getPlotMeasurement(this, keys);\n        const offsetXValues = widthMetrics.offsetValues || [];\n        const offsetYValues = heightMetrics.offsetValues || [];\n        return normalizedData.map((dataArr, i) => {\n            const measurementConf = this.getMeasurementConfig(offsetXValues[i], offsetYValues[i], widthMetrics.span,\n                heightMetrics.span);\n            return this.translatePoints(dataArr, encoding, axes, measurementConf);\n        }).filter(d => d.length);\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0) + widthSpan / 2,\n                y: (offsetY || 0) + heightSpan / 2\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n\n    /**\n     * Gets the nearest point from a position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Point details\n     */\n    getNearestPoint (x, y) {\n        const distanceLimit = Math.max(this._maxSize, this.config().nearestPointThreshold);\n\n        if (!this.data()) {\n            return null;\n        }\n\n        const point = this._voronoi.find(x, y, distanceLimit);\n        const dimensions = point && point.data.data.update;\n        const radius = point ? Math.sqrt(point.data.data.size / Math.PI) : 0;\n\n        if (point) {\n            const { _data, _id } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(_data, _id);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: radius,\n                    height: radius\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import { makeElement, easeFns } from 'muze-utils';\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} datum\n * @param {*} index\n * @param {*} context\n */\nconst transitionBars = (layer, elem, datum, index, context) => {\n    const { transition } = context;\n    const { duration, disabled, effect } = transition;\n    const selection = elem;\n\n    const selTransition = disabled ? selection :\n        selection.transition()\n        .duration(duration)\n        .ease(easeFns[effect])\n        .on('end', layer.registerAnimationDoneHook());\n    const update = datum.update || datum;\n    const updateStyle = datum.style || {};\n    datum.className && selection.classed(datum.className, true);\n    Object.entries(update).forEach(attr => (!isNaN(attr[1]) && selTransition.attr(attr[0], attr[1])));\n    Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n};\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} d\n */\nconst barEnterFn = (elem, d) => {\n    const selection = elem;\n    const enter = d.enter || {};\n    Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n};\n\n/**\n * Draws rectangles by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Bar Selection\n */\n/* istanbul ignore next */ export const drawRects = (params) => {\n    const { layer, points, container, keyFn } = params;\n    const updateFns = {\n        enter (elem, d) { barEnterFn(elem, d); },\n        update (elem, d, i) { transitionBars(layer, elem, d, i, params); }\n    };\n    return makeElement(container, 'rect', points, null, updateFns, keyFn);\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-bar',\n    className: '',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transform: {\n        type: 'stack'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    innerPadding: 0.1,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        x0: {},\n        y0: {}\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-bar-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-bar-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-bar-selected`\n        }\n    }\n};\n\n","import { MeasureSubtype, DimensionSubtype } from 'muze-utils';\nimport { STACK } from '../../enums/constants';\nimport { getLayerColor, positionPoints, getIndividualClassName } from '../../helpers';\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fieldInfo\n * @param {*} config\n * @param {*} data\n *\n */\nconst resolveDimByField = (type, axesInfo, config, data) => {\n    const spaceType = type === 'x' ? 'width' : 'height';\n    const [fieldType, axis] = [config[`${type}FieldType`], axesInfo[`${type}Axis`]];\n    const minDomVal = axis.domain()[0];\n    const {\n        transformType,\n        sizeEncoding,\n        sizeConfig,\n        measurement\n    } = config;\n\n    const sizeValue = sizeEncoding.value;\n    let enter = 0;\n    let pos;\n    let space = 0;\n    let enterSpace = 0;\n    if (fieldType !== undefined) {\n        if (config[`${type}0Field`]) {\n            const minVal = data[type];\n            const maxVal = data[`${type}0`];\n            let min;\n            let max;\n            if (minVal === null || maxVal === null) {\n                return {\n                    enterSpace: undefined,\n                    enter: undefined,\n                    pos: undefined,\n                    space: undefined\n                };\n            } else if (fieldType === MeasureSubtype.CONTINUOUS || fieldType === DimensionSubtype.TEMPORAL) {\n                min = Math.min(minVal, maxVal);\n                max = Math.max(minVal, maxVal);\n            } else {\n                min = minVal;\n                max = maxVal;\n            }\n            const scales = type === 'x' ? [min, max] : [max, min];\n            pos = axis.getScaleValue(scales[0]) + axis.getUnitWidth() / 2;\n            space = Math.abs(axis.getScaleValue(scales[1]) - pos) + axis.getUnitWidth() / 2;\n\n            enter = pos;\n            enterSpace = 0;\n        } else if (fieldType === DimensionSubtype.CATEGORICAL || fieldType === DimensionSubtype.TEMPORAL) {\n            pos = axis.getScaleValue(data[type]) +\n                (sizeConfig[type === 'x' ? 'barWidthOffset' : 'barHeightOffset'] || 0);\n\n            space = sizeConfig[type === 'x' ? 'barWidth' : 'barHeight'];\n            if (sizeValue !== undefined) {\n                const diffPx = sizeValue * space;\n                space -= diffPx;\n                pos += diffPx / 2;\n            }\n            enter = pos;\n            enterSpace = space;\n        } else {\n            const barBasePos = minDomVal < 0 ? axis.getScaleValue(0) : axis.getScaleValue(minDomVal);\n            const axisType = axis.getScaleValue(data[type]);\n            const axisType0 = axis.getScaleValue(data[`${type}0`]);\n\n            enterSpace = 0;\n            if (type === 'x') {\n                pos = data[type] < 0 || transformType === STACK ? axisType : barBasePos;\n                space = Math.abs(pos - (transformType === STACK ? axisType0 : (data[type] >= 0 ? axisType :\n                    barBasePos)));\n            } else {\n                pos = transformType === STACK || data[type] >= 0 ? axisType : barBasePos;\n                space = Math.abs(pos - (transformType === STACK ? axisType0 : (data[type] >= 0 ? barBasePos :\n                    axisType)));\n            }\n            enter = barBasePos;\n        }\n    } else {\n        pos = 0;\n        space = measurement[spaceType];\n    }\n\n    return {\n        enterSpace,\n        enter,\n        pos,\n        space\n    };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} config\n * @param {*} axes\n *\n */\nconst resolveDimensions = (data, config, axes) => {\n    const axesInfo = {\n        xAxis: axes.x,\n        yAxis: axes.y\n    };\n    const {\n        enterSpace: enterWidth,\n        enter: enterX,\n        pos: xPos,\n        space: width\n    } = resolveDimByField('x', axesInfo, config, data);\n\n    const {\n        enterSpace: enterHeight,\n        enter: enterY,\n        pos: yPos,\n        space: height\n    } = resolveDimByField('y', axesInfo, config, data);\n    return {\n        enter: {\n            x: enterX,\n            y: enterY,\n            width: enterWidth,\n            height: enterHeight\n        },\n        update: {\n            x: xPos,\n            y: yPos,\n            width,\n            height\n        }\n    };\n};\n\n/**\n * Generates an array of objects containing x, y, width and height of the bars from the data\n * @param  {Array.<Array>} data Data Array\n * @param  {Object} encoding  Config\n * @param  {Object} axes     Axes object\n * @param {Object} conf config object for point generation\n * @return {Array.<Object>}  Array of points\n */\nexport const getTranslatedPoints = (context, data, sizeConfig) => {\n    let points = [];\n    const encoding = context.config().encoding;\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const fieldsConfig = context.data().getFieldsConfig();\n    const colorEncoding = encoding.color;\n    const colorField = colorEncoding.field;\n    const sizeEncoding = encoding.size || {};\n    const {\n            x0Field,\n            y0Field,\n            xFieldSubType,\n            yFieldSubType\n        } = context.encodingFieldsInf();\n    const measurement = context.measurement();\n    const isXDim = xFieldSubType === DimensionSubtype.CATEGORICAL || xFieldSubType === DimensionSubtype.TEMPORAL;\n    const isYDim = yFieldSubType === DimensionSubtype.CATEGORICAL || yFieldSubType === DimensionSubtype.TEMPORAL;\n    const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n    const transformType = context.transformType();\n    const colorFieldIndex = colorField && fieldsConfig[colorField] && fieldsConfig[colorField].index;\n\n    for (let i = 0, len = data.length; i < len; i++) {\n        const d = data[i];\n        const style = {};\n        const meta = {};\n        const dimensions = resolveDimensions(d, {\n            xFieldType: xFieldSubType,\n            yFieldType: yFieldSubType,\n            x0Field,\n            y0Field,\n            transformType,\n            measurement,\n            sizeConfig,\n            sizeEncoding\n        }, axes);\n\n        const { color, rawColor } = getLayerColor({ datum: d, index: i },\n            { colorEncoding, colorAxis, colorFieldIndex });\n\n        style.fill = color;\n        meta.stateColor = {};\n        meta.originalColor = rawColor;\n        meta.colorTransform = {};\n\n        const update = dimensions.update;\n\n        if (!isNaN(update.x) && !isNaN(update.y) && d._id !== undefined) {\n            let point = null;\n            point = {\n                enter: dimensions.enter,\n                update,\n                style,\n                _data: d._data,\n                _id: d._id,\n                source: d._data,\n                rowId: d._id,\n                meta\n            };\n            point.className = getIndividualClassName(d, i, data, context);\n            points.push(point);\n            // Store each point in a hashmap with key as the dimensional or temporal field value\n            context.cachePoint(d[key], point);\n        }\n    }\n\n    points = positionPoints(context, points);\n    return points;\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    createElements,\n    clipElement,\n    DimensionSubtype,\n    FieldType,\n    MeasureSubtype,\n    Scales,\n    getNearestValue\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawRects } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { getPlotMeasurement, getValidTransformForAggFn } from '../../helpers';\nimport './styles.scss';\nimport { getTranslatedPoints } from './bar-helper';\n\nconst MEASURE = FieldType.MEASURE;\nconst scaleBand = Scales.band;\n\n/**\n * Bar layer creates rectangle marks. The mark type of this layer is ```bar```. This layer can be used\n * to create stacked or grouped bars, range bars, heatmap plots and also reference bands by using\n * the encoding properties.\n *\n * @public\n *\n * @class\n * @module BarLayer\n * @extends BaseLayer\n */\nexport default class BarLayer extends BaseLayer {\n    /**\n     * Creates an instance of bar layer\n     */\n    constructor (...params) {\n        super(...params);\n        this._bandScale = scaleBand();\n        this._plotPadding = {\n            x: 0,\n            y: 0\n        };\n        this._plotSpan = {\n            x: 0,\n            y: 0\n        };\n        this._pointMap = {};\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BarLayer\n     */\n    elemType () {\n        return 'rect';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BarLayer\n     */\n    static formalName () {\n        return 'bar';\n    }\n\n    /**\n     * Returns the default configuration of the bar layer\n     * @return {Object} Default configuration of the bar layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @param {*} conf\n     * @param {*} userConf\n     *\n     * @memberof BarLayer\n     */\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const colorField = encoding.color.field;\n        const transform = config.transform;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} fieldsConfig\n     *\n     * @memberof BarLayer\n     */\n    calculateDomainFromData (data, encodingFieldInf, fieldsConfig) {\n        const domain = super.calculateDomainFromData(data, encodingFieldInf, fieldsConfig);\n        ['x', 'y'].forEach((d) => {\n            if (encodingFieldInf[`${d}FieldType`] === MEASURE && domain[d]) {\n                if (encodingFieldInf[`${d}0Field`]) {\n                    domain[d] = domain[d].sort((a, b) => a - b);\n                } else {\n                    domain[d][0] = Math.min(domain[d][0], 0);\n                    domain[d][1] = Math.max(0, domain[d][1]);\n                }\n            }\n        });\n        return domain;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the bars from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @param {Object} conf config object for point generation\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, sizeConfig) {\n        return getTranslatedPoints(this, data, sizeConfig);\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGGroup} container SVGGroup where plot will be rendered.\n     * @return {BarLayer} Instance of bar layer.\n     */\n    render (container) {\n        const config = this.config();\n        const transition = config.transition;\n        const normalizedDataArr = this._normalizedData;\n        const transformedData = this._transformedData;\n        const keys = transformedData.map(d => d.key);\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const height = axes.y && axes.y.scale().range()[0];\n        const width = axes.x && axes.x.scale().range()[1];\n        const defClassName = config.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const className = config.className;\n        const containerSelection = selectElement(container);\n        const dimensions = Object.values(fieldsConfig).filter(e => e.def.type === FieldType.DIMENSION)\n            .map(e => e.index);\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        clipElement(container, {\n            x: 0,\n            y: 0,\n            width,\n            height\n        }, `id-${this.id()}`);\n\n        this._points = this.generateDataPoints(normalizedDataArr, keys);\n\n        createElements({\n            data: this._points,\n            container,\n            selector: 'g',\n            append: 'g',\n            each: (points, group, i) => {\n                const seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n                group.style('display', 'block');\n                drawRects({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: {},\n                    keyFn: d => dimensions.map(key => d._data[key]).join('-')\n                });\n            }\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} normalizedData\n     * @param {*} keys\n     *\n     * @memberof BarLayer\n     */\n    generateDataPoints (normalizedData, keys) {\n        const [barWidthMetrics, barHeightMetrics] = getPlotMeasurement(this, keys);\n        const barWidthOffsets = barWidthMetrics.offsetValues || [];\n        const barHeightOffsets = barHeightMetrics.offsetValues || [];\n        this._plotSpan = {\n            x: barWidthMetrics.groupSpan || 0,\n            y: barHeightMetrics.groupSpan || 0\n        };\n        this._plotPadding = {\n            x: barWidthMetrics.padding || 0,\n            y: barHeightMetrics.padding || 0\n        };\n\n        this._pointMap = {};\n        return normalizedData.map((data, i) => this.translatePoints(data,\n            {\n                barWidth: barWidthMetrics.span,\n                barWidthOffset: barWidthOffsets[i] || 0,\n                barHeight: barHeightMetrics.span,\n                barHeightOffset: barHeightOffsets[i] || 0\n            }));\n    }\n\n    getPlotPadding () {\n        return this._plotPadding;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransformForAggFn(this);\n    }\n\n    /**\n     * Gets the nearest point of the position passed.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point.\n     */\n    getNearestPoint (x, y) {\n        if (!this.data()) {\n            return null;\n        }\n        let axis;\n        let value;\n        let points;\n        let uniqueFieldType;\n        let uniqueFieldIndex;\n        let filterData;\n        let identifiers;\n        let pointFound = null;\n        const dataModel = this.data();\n        const dataObj = dataModel.getData();\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const axes = this.axes();\n        const data = dataObj.data;\n        const pointMap = this._pointMap;\n        const {\n                xField,\n                yField,\n                xFieldSubType,\n                yFieldSubType\n            } = this.encodingFieldsInf();\n\n        if (xFieldSubType === MeasureSubtype.CONTINUOUS) {\n            axis = axes.y;\n            value = axis.invert(y);\n            uniqueFieldIndex = fieldsConfig[yField].index;\n            uniqueFieldType = yFieldSubType;\n        } else {\n            axis = axes.x;\n            value = axis.invert(x);\n            uniqueFieldIndex = fieldsConfig[xField].index;\n            uniqueFieldType = xFieldSubType;\n        }\n\n        if (uniqueFieldType === DimensionSubtype.CATEGORICAL) {\n            points = pointMap[value];\n        }\n\n        if (uniqueFieldType === DimensionSubtype.TEMPORAL) {\n            filterData = [...new Set(data.map(d => d[uniqueFieldIndex]))];\n            value = getNearestValue(filterData, value);\n            points = pointMap[value];\n        }\n        const len = points && points.length;\n        points && points.sort((p1, p2) => p1.update.y - p2.update.y);\n        for (let i = 0; i < len; i++) {\n            const point = points[i];\n            const update = point.update;\n            if (x >= update.x && x <= (update.width + update.x) && y >= update.y && y <= (update.height + update.y)) {\n                pointFound = point;\n                break;\n            }\n            pointFound = null;\n        }\n\n        const values = pointFound && pointFound._data;\n        if (values) {\n            identifiers = this.getIdentifiersFromData(values, pointFound._id);\n        }\n        return pointFound ? {\n            dimensions: [pointFound.update],\n            id: identifiers,\n            layerId: this.id()\n        } : pointFound;\n    }\n\n    getPlotSpan () {\n        return this._plotSpan;\n    }\n}\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-tick',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }]\n    },\n    innerPadding: 0.1,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        color: { },\n        x: {},\n        y: {},\n        x0: {},\n        y0: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-tick-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-tick-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-tick-selected`\n        }\n    }\n};\n","import { selectElement } from 'muze-utils';\n\n/**\n * Draws ticks by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Ticks Selection\n */\nexport default /* istanbul ignore next */ (params) => {\n    const { points, container, keyFn, className } = params;\n    const mount = selectElement(container);\n    const ticks = mount.selectAll('path').data(points, keyFn);\n    const ticksEnter = ticks.enter().append('path');\n\n    mount.attr('class', className || '');\n    ticksEnter.each(function (d) {\n        const selection = selectElement(this);\n        const enter = d.enter || {};\n        Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n    });\n\n    ticks.exit().remove();\n    return ticks.merge(ticksEnter)\n                    .each(function (d) {\n                        const selection = selectElement(this);\n                        const update = d.update;\n                        const updateStyle = d.style || {};\n                        const x0 = update.x0 !== undefined ? update.x0 : update.x;\n                        const y0 = update.y0 !== undefined ? update.y0 : update.y;\n                        const path = `M ${update.x} ${update.y} L ${x0} ${y0}`;\n                        d.className && selection.classed(d.className, true);\n                        selection.attr('d', path);\n                        Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n                    });\n};\n\n","import { FieldType } from 'muze-utils';\nimport { PointLayer } from '../point';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport drawTicks from './renderer';\nimport './styles.scss';\nimport { getAxesScales, getLayerColor, positionPoints, getIndividualClassName } from '../../helpers';\n\n/**\n * This layer is used to create small lines. The orientation of the line is determined by the positional\n * encoding properties x0 and y0. The mark type of the layer is ```tick```.\n *\n * @public\n *\n * @class\n * @module TickLayer\n * @extends BaseLayer\n */\nexport default class TickLayer extends PointLayer {\n\n    /**\n     *\n     *\n     * @staticg\n     *\n     * @memberof TickLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static formalName () {\n        return 'tick';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static drawFn () {\n        return drawTicks;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TickLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, encoding, axes, config = {}) {\n        let points = [];\n        const {\n                xAxis,\n                yAxis\n            } = getAxesScales(axes);\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n                xField,\n                yField,\n                x0Field,\n                y0Field,\n                xFieldType,\n                yFieldType\n            } = this.encodingFieldsInf();\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding && colorEncoding.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n        const measurement = this.measurement();\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n        const { x: xSpan, y: ySpan } = config.span;\n        for (let i = 0, len = data.length; i < len; i++) {\n            let xPx;\n            let x0Px;\n            let y0Px;\n            let yPx;\n            const d = data[i];\n            const row = d._data;\n            if (xField) {\n                xPx = xAxis.getScaleValue(d.x) + offsetX;\n                x0Px = xPx + xSpan;\n            }\n\n            if (yField) {\n                yPx = yAxis.getScaleValue(d.y) + offsetY;\n                y0Px = yPx !== null ? yPx + ySpan : null;\n            }\n\n            if (!xField) {\n                xPx = 0;\n                x0Px = measurement.width;\n                if (!isNaN(yPx)) {\n                    yPx += ySpan / 2;\n                    y0Px = yPx;\n                }\n            }\n\n            if (!yField) {\n                yPx = 0;\n                y0Px = measurement.height;\n                x0Px = xPx += xSpan / 2;\n            }\n\n            if (x0Field) {\n                x0Px = xAxis.getScaleValue(d.x0) + xSpan;\n                yPx += ySpan / 2;\n                y0Px -= ySpan / 2;\n            }\n\n            if (y0Field) {\n                y0Px = yAxis.getScaleValue(d.y0) + ySpan;\n                xPx += xSpan / 2;\n                x0Px -= xSpan / 2;\n            }\n            const style = {};\n            const meta = {};\n            const { color, rawColor } = getLayerColor({ datum: d, index: i },\n                { colorEncoding, colorAxis, colorFieldIndex });\n\n            style.stroke = color;\n            meta.stateColor = {};\n            meta.originalColor = rawColor;\n            meta.colorTransform = {};\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: {},\n                    update: {\n                        x: xPx,\n                        y: yPx,\n                        x0: x0Px,\n                        y0: y0Px\n                    },\n                    style,\n                    _data: row,\n                    _id: d._id,\n                    source: row,\n                    rowId: d._id,\n                    meta\n                };\n                point.className = getIndividualClassName(d, i, data, this);\n                points.push(point);\n                this.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0),\n                y: (offsetY || 0)\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n}\n","export const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { isSimpleObject, mergeRecursive, getObjProp } from 'muze-utils';\n\nconst parseLayerDefinition = (sink, definition, layerDef, layerType) => {\n    for (const key in definition) {\n        if (Object.hasOwnProperty.call(definition, key)) {\n            let strs;\n            let propValue;\n            const def = definition[key];\n            if (isSimpleObject(def)) {\n                sink[key] = {};\n                parseLayerDefinition(sink[key], def, layerDef, layerType);\n            } else if (typeof def === 'string' && (strs = def.split('.')) && strs[0] === layerType) {\n                propValue = getObjProp(layerDef, ...strs.slice(1, strs.length));\n                if (propValue !== undefined) {\n                    sink[key] = propValue;\n                }\n            } else {\n                sink[key] = def;\n            }\n        }\n    }\n};\n\nconst sanitizeEncoding = (encoding) => {\n    // Create object for each encoding value if encoding value is a string\n    for (const key in encoding) {\n        if (typeof encoding[key] === 'string') {\n            encoding[key] = {\n                field: encoding[key]\n            };\n        }\n    }\n};\n\n/**\n * Layer Factory creates layers based on the layer type. All types of layers needs to register in\n * the layer factory. For getting a layer instance, getLayer method needs to invoked with the\n * layerType and other arguments. It also registers the definition of composite layers.\n *\n * @public\n *\n * @module LayerFactory\n */\nconst layerFactory = (() => {\n    const compositeLayers = {};\n    const factoryObj = {\n        setLayerRegistry: (reg) => {\n            factoryObj._layerRegistry = reg;\n        },\n        getSerializedConf: (mark, layerDef) => {\n            let serializedDefs;\n            const defs = compositeLayers[mark];\n            const newConf = mergeRecursive({}, layerDef);\n\n                // If it is a composite layer then resolve all the definitions of each unit layer\n            if (defs) {\n                serializedDefs = defs.map((unitLayerDef) => {\n                    const sDef = {};\n                    parseLayerDefinition(sDef, unitLayerDef, newConf, mark);\n                    sanitizeEncoding(sDef.encoding);\n                    return sDef;\n                });\n            } else {\n                const encoding = newConf.encoding;\n                // Create object for each encoding value if encoding value is a string\n                sanitizeEncoding(encoding);\n                serializedDefs = newConf;\n            }\n\n            return serializedDefs;\n        },\n        getLayerInstance: (layerDef, ...params) => {\n            const layerRegistry = factoryObj._layerRegistry;\n            layerDef = !(layerDef instanceof Array) ? [layerDef] : layerDef;\n            const instances = layerDef.map((layerObj) => {\n                const layerConstructor = layerRegistry[layerObj.mark];\n                return layerConstructor.create(...params);\n            });\n            return instances.length === 1 ? instances[0] : instances;\n        },\n        getLayerClass: mark => factoryObj._layerRegistry[mark],\n        /**\n         * Registers a new composite layer definition in the layer factory.\n         *\n         * @public\n         *\n         * @param {string} layerType Mark type of the new composite layer.\n         * @param {Array} layerDefs Layer definitions of the composite layer.\n         */\n        composeLayers: (layerType, layerDefs) => {\n            compositeLayers[layerType] = layerDefs;\n        },\n        sanitizeLayerConfig: (layerDef) => {\n            const newConf = mergeRecursive({}, layerDef);\n            sanitizeEncoding(newConf.encoding);\n            return newConf;\n        }\n    };\n    return factoryObj;\n})();\n\nexport default layerFactory;\n","import layerFactory from './layer-factory';\n\nexport default layerFactory;\n","import { AreaLayer } from './layers/area';\nimport { ArcLayer } from './layers/arc';\nimport { LineLayer } from './layers/line';\nimport { TextLayer } from './layers/text';\nimport { PointLayer } from './layers/point';\nimport { BarLayer } from './layers/bar';\nimport { BaseLayer } from './base-layer';\nimport * as LAYER_TYPES from './enums/layer-types';\nimport { TickLayer } from './layers/tick';\n\nexport const DEFAULT_LAYERS = {\n    [LAYER_TYPES.AREA_LAYER]: AreaLayer,\n    [LAYER_TYPES.ARC_LAYER]: ArcLayer,\n    [LAYER_TYPES.LINE_LAYER]: LineLayer,\n    [LAYER_TYPES.TEXT_LAYER]: TextLayer,\n    [LAYER_TYPES.POINT_LAYER]: PointLayer,\n    [LAYER_TYPES.TICK_LAYER]: TickLayer,\n    [LAYER_TYPES.BAR_LAYER]: BarLayer,\n    [LAYER_TYPES.BASE_LAYER]: BaseLayer\n};\n","/**\n * This file exports constants that are used as enums in the\n *  crosstab group implementation.\n */\n/**\n * Width of the crosstab.\n */\nexport const X = 'x';\n/**\n * Width of the crosstab.\n */\nexport const Y = 'y';\n/**\n * Width of the crosstab.\n */\nexport const WIDTH = 'width';\n\n/**\n * Height of the crosstab.\n */\nexport const HEIGHT = 'height';\n\n/**\n * Field referring to object storing measurement configuration.\n */\nexport const MEASUREMENT = 'measurement';\n\n/**\n * Field referring to object storing configuration properties.\n */\nexport const CONFIG = 'config';\n\n/**\n * Width of visual unit in crosstab.\n */\nexport const MIN_UNIT_WIDTH = 'minUnitWidth';\n\n/**\n * Height of visual unit.\n */\nexport const MIN_UNIT_HEIGHT = 'minUnitHeight';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSIONS = 'dimensions';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURES = 'measures';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSION = 'dimension';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURE = 'measure';\n\n/**\n * Flag to specify if model should be pivoted.\n */\nexport const PIVOT = 'pivot';\n\n/**\n * Flag to specify format\n */\nexport const FORMAT = 'format';\n\n/**\n * Mount point where the variable will be hosted\n */\nexport const MOUNT = 'mount';\n\n/**\n * Data update flag\n */\nexport const HAS_DATA_UPDATED = 'hasDataUpdated';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROWS = 'rows';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMNS = 'columns';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COL = 'col';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROW = 'row';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMN = 'column';\n\n/**\n * Field referring to object storing color field\n */\nexport const COLOR = 'color';\n\n/**\n * Field referring to object storing shape field\n */\nexport const SHAPE = 'shape';\n\n/**\n * Field referring to object storing size field\n */\nexport const SIZE = 'size';\n\n/**\n * Field referring to object storing detail field\n */\nexport const DETAIL = 'detail';\n\n/**\n * Field referring to object storing set of layers\n */\nexport const LAYERS = 'layers';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const TRANSFORM = 'transform';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const ORDINAL = 'ordinal';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const LINEAR = 'linear';\n/**\n * Field referring to object storing the transforms\n */\nexport const LEFT = 'left';\n/**\n * Field referring to object storing the transforms\n */\nexport const RIGHT = 'right';\n/**\n * Field referring to object storing the transforms\n */\nexport const TOP = 'top';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTTOM = 'bottom';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const RETINAL = 'retinal';\n/**\n * Field referring to object storing the transforms\n */\nexport const CELL = 'cell';\n/**\n * Field referring to object storing the transforms\n */\nexport const X_AXES = 'xAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const Y_AXES = 'yAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const ENTRY_CELLS = 'entryCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const INITIALIZED = 'initialized';\n/**\n * Field referring to object storing the transforms\n */\nexport const EXIT_CELLS = 'exitCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const AXIS = 'axis';\n/**\n * Field referring to object storing the transforms\n */\nexport const UNIT = 'unit';\n/**\n * Field referring to object storing the transforms\n */\nexport const UPDATED = 'updated';\n/**\n * Field referring to object storing the transforms\n */\nexport const BEFORE_UPDATE = 'beforeupdate';\n/**\n * Field referring to object storing the transforms\n */\nexport const VALUE_MATRIX = 'valueMatrix';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET_HEADERS = 'facet-headers';\n/**\n * Field referring to object storing the transforms\n */\nexport const RADIUS = 'radius';\n/**\n * Field referring to object storing the transforms\n */\nexport const ANGLE = 'angle';\n/**\n * Field referring to object storing the transforms\n */\nexport const ARC = 'arc';\n/**\n * Field referring to object storing the transforms\n */\nexport const CARTESIAN = 'cartesian';\n/**\n * Field referring to object storing the transforms\n */\nexport const POLAR = 'polar';\n/**\n * Field referring to object storing the transforms\n */\nexport const CATEGORICAL = 'categorical';\n/**\n * Field referring to object storing the transforms\n */\nexport const TEMPORAL = 'temporal';\n/**\n * Field referring to object storing the transforms\n */\nexport const BAR = 'bar';\n/**\n * Field referring to object storing the transforms\n */\nexport const LINE = 'line';\n/**\n * Field referring to object storing the transforms\n */\nexport const POINT = 'point';\n/**\n * Field referring to object storing the transforms\n */\nexport const PRIMARY = 'Primary';\n/**\n * Field referring to object storing the transforms\n */\nexport const SECONDARY = 'Secondary';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTH = 'both';\n/**\n * Field referring to object storing the transforms\n */\nexport const INTERACTION = 'interaction';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_LINES = 'gridLines';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_BANDS = 'gridBands';\n/**\n * Field referring to object storing the transforms\n */\nexport const HEADER = 'header';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET = 'facet';\n\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Artboard.\n * Artboard merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module\n */\n\nexport default {\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * Interfaces for VisualGroup. Any new VisualGroup has to implement this class.\n * @class  SimpleGroup\n */\nclass SimpleGroup {\n\n    /**\n     * This method is used to set or get the DataModel instance.\n     *\n     * @param {DataModel | undefined} dataModel Instance of datamodel.\n\n     * @memberof  SimpleGroup\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to set or get the group specific configuration\n     * properties\n     *\n     * @param {Object | undefined} configObj The input configuration.\n     *                                or instance of visual group.\n     * @memberof  SimpleGroup\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to return a serialized representation of the\n     * instance's properties.\n     *\n     * @memberof  SimpleGroup\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to get or set the measurement object which houses\n     * layout properties like width and height.\n     *\n     * @param {Object  | undefined} mObj The measurement properties.\n     * @memberof  SimpleGroup\n     */\n    measurement () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n\nexport default SimpleGroup;\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n *\n *\n * @export\n * @class Variable\n */\nexport default class Variable {\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    type () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    toString () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n}\n","import Variable from './variable';\n\n/**\n * This is a wrapper on top of multiple variables which are of same type but they are shown in the same axis.This is\n * required in case of range plots or ohlc plots where one plot is mapped to multiple measure fields. At that time,\n * we need to create a composed variable from multiple variables. This class just wraps them into one variable instance\n * and provides methods to get the type and other common functionalities which can be performed on a simple variable\n * instance.\n *\n * @public\n * @class ComposeVars\n */\nclass ComposedVars extends Variable {\n\n    /**\n     * Creates an instance of ComposeVars.\n     *\n     * @param {Array} texts Array of field names\n     */\n    constructor (...texts) {\n        super(...texts);\n        this.vars(texts);\n    }\n\n    vars (...params) {\n        if (params.length) {\n            this._vars = params[0];\n            return this;\n        }\n        return this._vars;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this.vars().forEach(d => d.data(dm[0]));\n            return this;\n        }\n        return this._data;\n    }\n\n    /**\n     * Get all the field names from composed variable instance.\n     *\n     * @public\n     * @return {Array} Array of field names.\n     */\n    getMembers () {\n        const vars = this.vars();\n        return vars.map(member => member.getMembers()[0]);\n    }\n\n    /**\n     * Type of field associated with this composed variable.\n     *\n     * @return {string} Type of variable (Measure/Dimension).\n     */\n    type () {\n        return this.vars()[0].type();\n    }\n\n    toString () {\n        return this.vars().map(d => d.toString()).join(',');\n    }\n\n    /**\n     * Returns the number formatter function of the variable.\n     *\n     * @return {Function} Number formatter function of the variable.\n     */\n    numberFormat () {\n        return this.vars()[0].numberFormat();\n    }\n\n    format (values) {\n        return this.vars()[0].format(values);\n    }\n\n    /**\n     * Returns the subtype of the fields associated with this variable instance.\n     *\n     * @public\n     * @return {string} Subtype of the variable.\n     */\n    subtype () {\n        return this.vars()[0].subtype();\n    }\n\n    /**\n     * Returns the consecutive minimum difference of the field values.\n     *\n     * @public\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        return this.vars()[0].getMinDiff();\n    }\n}\n\nexport default ComposedVars;\n","import { DateTimeFormatter } from 'muze-utils';\nimport Variable from './variable';\n\n/**\n * This is a wrapper on top of fields passed in rows or columns in canvas. This is used to get the type of field or\n * get min difference from the field values.\n *\n * @public\n * @class SimpleVariable\n */\nexport default class SimpleVariable extends Variable {\n\n    /**\n     * Creates an instance of simple variable instance.\n     *\n     * @param {string} text Field name.\n     */\n    constructor (text) {\n        super();\n        this.oneVar(text);\n    }\n\n    /**\n     * Gets the field name associated with this variable instance.\n     *\n     * @public\n     * @return {string} Name of the field.\n     */\n    oneVar (...oneV) {\n        if (oneV.length) {\n            this._oneVar = oneV[0];\n            return this;\n        }\n        return this._oneVar;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this._data = dm[0];\n            return this;\n        }\n        return this._data;\n    }\n\n    toString () {\n        return this.oneVar();\n    }\n\n    /**\n     * Gets the number formatter function of this variable.\n     *\n     * @public\n     * @return {Function} Number formatter function.\n     */\n    numberFormat () {\n        if (this.type() === 'measure') {\n            const formatter = this.data().getFieldspace().getMeasure()[this.oneVar()];\n            return formatter.numberFormat();\n        } return val => val;\n    }\n\n    format (values) {\n        if (values && this.subtype() === 'temporal') {\n            const formatter = this.data().getFieldspace().getDimension()[this.oneVar()].schema().format;\n            const dtFormat = new DateTimeFormatter(formatter);\n            values = values.map(e => dtFormat.getNativeDate(e));\n        }\n        return values;\n    }\n\n    /**\n     * Return the field names associated with this variable instance.\n     *\n     * @public\n     * @return {Array} Array of fields.\n     */\n    getMembers () {\n        return [this.oneVar()];\n    }\n\n    /**\n     * Returns the type of the variable. Whether it is measure or dimension.\n     *\n     * @public\n     * @return {string} Type of variable.\n     */\n    type () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.type;\n    }\n\n    /**\n     * Returns the subtype of the variable. Subtype can be categorical or temporal. If no subtype is found, then it\n     * returns the type of the variable.\n     *\n     * @public\n     * @return {string} Subtype of variable.\n     */\n    subtype () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.subtype || fieldDef.type;\n    }\n\n    /**\n     * Returns the minimum consecutive difference between the data values of this variable.\n     *\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        const fieldSpace = this.data().getFieldspace();\n        return fieldSpace.fieldsObj()[this.oneVar()].minimumConsecutiveDifference();\n    }\n\n    /**\n     * Returns true if two variable instances are same.If both variable has the same field names, they are equal.\n     *\n     * @return {Boolean} Whether two variable instances are same.\n     */\n    equals (varInst) {\n        return this.oneVar() === varInst.oneVar();\n    }\n}\n","import { ComposedVars, SimpleVariable } from '../variable';\nimport { DIMENSION, COLUMNS, ROWS, TEMPORAL } from '../enums/constants';\n\n/**\n * Gets the list of fields in a sorted order by measurement and dimension\n *\n * @param {Array} fieldList List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields sorted by measurement and dimensions\n */\nconst orderFields = (fieldArray, type) => {\n    const dimensionArr = [[], []];\n    const measureArr = [[], []];\n    const temporalArr = [[], []];\n    const categoricalArr = [[], []];\n\n    fieldArray.forEach((fieldList, index) => {\n        fieldList.forEach((field) => {\n            if (field.type() === DIMENSION) {\n                dimensionArr[index].push(field);\n                field.subtype() === TEMPORAL ? temporalArr[index].push(field) : categoricalArr[index].push(field);\n            } else {\n                measureArr[index].push(field);\n            }\n        });\n    });\n\n    const numOfMeasures = measureArr[0].length + (measureArr[1] ? measureArr[1].length : 0);\n\n    // Single array of fields\n    if (!fieldArray[1]) {\n        // Push measures to bottom\n        measureArr[1] = type === COLUMNS ? measureArr[0] : [];\n        // Push measures to left\n        measureArr[0] = type !== COLUMNS ? measureArr[0] : [];\n        // Bottom and right dimensions empty\n        dimensionArr[1] = [];\n        // Left and top filled with dimensions\n        dimensionArr[0] = dimensionArr[0];\n        if (numOfMeasures === 0) {\n            const allDimensions = [...dimensionArr[0], ...dimensionArr[1]];\n            if (type === COLUMNS) {\n                dimensionArr[1] = allDimensions[allDimensions.length - 1] ? [allDimensions[allDimensions.length - 1]]\n                        : [];\n                allDimensions.splice(-1, 1);\n            } else {\n                dimensionArr[1] = [];\n            }\n            dimensionArr[0] = [...allDimensions];\n        }\n    }\n\n    if (dimensionArr[0].length && dimensionArr[1].length && numOfMeasures > 0) {\n        dimensionArr[0] = [...dimensionArr[0], ...dimensionArr[1]];\n        dimensionArr[1] = [];\n    }\n    return {\n        fields: dimensionArr.map((list, i) => (i === 1 ?\n            measureArr[i].concat(dimensionArr[i]) : dimensionArr[i].concat(measureArr[i]))),\n        dimensions: [...dimensionArr[0], ...dimensionArr[1]],\n        measures: [...measureArr[0], ...measureArr[1]],\n        temporal: [...temporalArr[0], ...temporalArr[1]],\n        categorical: [...categoricalArr[0], ...categoricalArr[1]]\n    };\n};\n\n/**\n * Gets the list of normalized fields\n *\n * @param {Array} fields List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields normalized by measurement and dimensions\n */\nconst normalizeFields = (config, type) => {\n    const fieldsArr = [];\n    const fields = config[type];\n\n    if (!(fields[0] instanceof Array)) {\n        fieldsArr[0] = fields;\n    } else {\n        fieldsArr[0] = fields[0] || [];\n        fieldsArr[1] = fields[1] || [];\n    }\n    return fieldsArr;\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} datamodel\n *\n */\nconst convertToVar = (datamodel, fields) => {\n    const vars = [];\n\n    fields && fields.forEach((field) => {\n        if (field instanceof ComposedVars) {\n            vars.push(field);\n            field.data(datamodel);\n        } else {\n            vars.push(new SimpleVariable(field).data(datamodel));\n        }\n    });\n    return vars;\n};\n\n/**\n *\n *\n * @param {*} rows\n * @param {*} columns\n * @param {*} datamodel\n *\n */\nexport const transformFields = (datamodel, config) => {\n    const [rowsInfo, columnsInfo] = [ROWS, COLUMNS].map((fields) => {\n        const normalizedFields = normalizeFields(config, fields);\n        const norFields = [convertToVar(datamodel, normalizedFields[0])];\n\n        if (normalizedFields[1]) {\n            norFields[1] = convertToVar(datamodel, normalizedFields[1]);\n        }\n        return orderFields(norFields, fields);\n    });\n    const {\n        fields: rows,\n        dimensions: rowDimensions,\n        measures: rowMeasures,\n        temporal: rowTemporalFields,\n        categorical: rowCategoricalFields\n    } = rowsInfo;\n    const {\n        fields: columns,\n        dimensions: columnDimensions,\n        measures: columnMeasures,\n        temporal: columnTemporalFields,\n        categorical: columnCategoricalFields\n    } = columnsInfo;\n    return {\n        rows,\n        rowDimensions,\n        rowMeasures,\n        rowTemporalFields,\n        rowCategoricalFields,\n        columns,\n        columnTemporalFields,\n        columnCategoricalFields,\n        columnDimensions,\n        columnMeasures\n    };\n};\n","import { ERROR_MSG, mergeRecursive } from 'muze-utils';\nimport { transformFields } from './field-sanitizer';\nimport { getHeaderAxisFrom } from '../group-helper/group-utils';\nimport { ROW, COLUMN } from '../enums/constants';\n\n/**\n *\n *\n * @export\n * @class VisualEncoder\n */\nexport default class VisualEncoder {\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    createAxis () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    setCommonDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    getLayerConfig () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    fieldInfo (...info) {\n        if (info.length) {\n            this._fieldInfo = mergeRecursive(this._fieldInfo || {}, info[0]);\n            return this;\n        }\n        return this._fieldInfo;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof VisualEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        this.fieldInfo(transformFields(datamodel, config));\n        return this.fieldInfo();\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    axisFrom (...params) {\n        if (params.length) {\n            this._axisFrom = params[0];\n            return this;\n        }\n        return this._axisFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    headerFrom (...params) {\n        if (params.length) {\n            this._headerFrom = params[0];\n            return this;\n        }\n        return this.__headerFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axisFrom\n     *\n     * @memberof CartesianEncoder\n     */\n    setAxisAndHeaders (axisFrom = {}, fields) {\n        const [rowHeader, rowAxis] = getHeaderAxisFrom(ROW, fields.rows, axisFrom);\n        const [colHeader, colAxis] = getHeaderAxisFrom(COLUMN, fields.columns, axisFrom);\n\n        this.axisFrom({\n            row: rowAxis,\n            column: colAxis\n        });\n        this.headerFrom({\n            row: rowHeader,\n            column: colHeader\n        });\n        return this;\n    }\n}\n","import { ContinousAxis, BandAxis, TimeAxis, ColorAxis, SizeAxis, ShapeAxis } from '@chartshq/muze-axis';\n\nexport const scaleMaps = {\n    linear: ContinousAxis,\n    band: BandAxis,\n    temporal: TimeAxis,\n    size: SizeAxis,\n    color: ColorAxis,\n    shape: ShapeAxis\n};\n","import { ScaleType } from '@chartshq/muze-axis';\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    dimension: ScaleType.BAND,\n    categorical: ScaleType.BAND,\n    temporal: ScaleType.TIME,\n    measure: ScaleType.LINEAR,\n    continuous: ScaleType.LINEAR\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { AxisOrientation } from '@chartshq/muze-axis';\nimport { scaleMaps } from '../enums/scale-maps';\nimport { getAxisType, getAxisKey } from '../group-helper';\nimport { dataTypeScaleMap } from '../data-type-scale-map';\nimport { CATEGORICAL, TEMPORAL, BAR, LINE, POINT, BOTH, Y } from '../enums/constants';\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst getAxisConfig = (axisInfo, field, axesCreators) => {\n    let axisOrientation;\n    const { index, axisIndex, axisType } = axisInfo;\n    const { config, position } = axesCreators;\n    const userAxisConfig = config.axes ? (config.axes[axisType] || {}) : {};\n    const {\n        LEFT,\n        RIGHT,\n        TOP,\n        BOTTOM\n    } = AxisOrientation;\n    const allOrientations = axisType === Y ? [LEFT, RIGHT] : [TOP, BOTTOM];\n\n    if (position === BOTH) {\n        axisOrientation = allOrientations[axisIndex];\n    } else {\n        axisOrientation = position;\n    }\n    const axisConfig = {\n        id: `${axisType}-${index}-${axisIndex}`,\n        name: field.toString(),\n        field: field.toString(),\n        numberFormat: field.numberFormat(),\n        orientation: axisOrientation,\n        showAxisName: true,\n        show: true,\n        type: dataTypeScaleMap[field.subtype()]\n    };\n    userAxisConfig.tickValues = field.format(userAxisConfig.tickValues);\n    userAxisConfig.domain = field.format(userAxisConfig.domain);\n\n    return mergeRecursive(axisConfig, userAxisConfig);\n};\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst createSimpleAxis = (axisConfig, field, axesCreators) => {\n    const { labelManager } = axesCreators;\n    const Cls = scaleMaps[dataTypeScaleMap[field.subtype()]];\n    const simpleAxis = new Cls(axisConfig, { labelManager });\n    return simpleAxis;\n};\n\nexport const getAdjustedDomain = (max, min) => {\n    const y1ratio = max[0] / (max[0] - min[0]);\n    const y2ratio = max[1] / (max[1] - min[1]);\n\n    // adjust min/max values for positive negative values zero line etc\n    let allSameSign = false;\n\n    // if all numbers are positive set floor to zero\n    if (min[0] > 0 && min[1] > 0 && min[1] > 0 && max[1] > 0) {\n        allSameSign = true;\n        min[0] = 0;\n        min[1] = 0;\n    }\n\n    // if all numbers are negative set ceiling to zero\n    if (min[0] < 0 && min[1] < 0 && min[1] < 0 && max[1] < 0) {\n        allSameSign = true;\n        max[0] = 0;\n        max[1] = 0;\n    }\n\n    // align zero line if necessary\n    if (!allSameSign && y1ratio !== y2ratio) {\n        if (y1ratio < y2ratio) {\n                    // adjust min[1]\n            min[1] = min[0] / max[0] * max[1];\n        } else {\n                    // adjust min[0]\n            min[0] = min[1] / max[1] * max[0];\n        }\n    }\n    return [\n        [min[0], max[0]],\n        [min[1], max[1]]\n    ];\n};\n\n/**\n *\n *\n * @param {*} axisType\n * @param {*} fieldInfo\n * @param {*} axesCreators\n * @param {*} groupAxes\n *\n */\nexport const generateAxisFromMap = (axisType, fieldInfo, axesCreators, axesInfo) => {\n    let axisKey;\n    const { groupAxes, valueParser } = axesInfo;\n    const currentAxes = [];\n    const { fields, index } = fieldInfo;\n    const { cacheMaps } = axesCreators;\n    const map = cacheMaps[`${axisType}AxesMap`];\n\n    const commonAxisKey = getAxisKey(axisType, index);\n    fields.forEach((field, axisIndex) => {\n        axisKey = getAxisKey(axisType, index, axisIndex, dataTypeScaleMap[field.subtype()]);\n        const axisConfig = getAxisConfig({ index, axisIndex, axisType }, field, axesCreators);\n\n        let axis;\n        if (!map.has(axisKey)) {\n            axis = createSimpleAxis(axisConfig, field, axesCreators);\n        } else {\n            axis = map.get(axisKey);\n            axis._rotationLock = false;\n            axis.config(axisConfig);\n            axisConfig.domain ? axis.domain(axisConfig.domain) : axis.resetDomain();\n        }\n        axis.valueParser(valueParser);\n        currentAxes.push(axis);\n        map.set(axisKey, axis);\n    });\n\n    if (currentAxes.length) {\n        map.set(commonAxisKey, currentAxes);\n        groupAxes.add(commonAxisKey);\n    }\n\n    return currentAxes;\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n    const xAxes = [];\n    const yAxes = [];\n\n    xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes.push(xAxis);\n    });\n    yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes.push(yAxis);\n    });\n    return {\n        xAxes, yAxes\n    };\n};\n\n/**\n * return a default mark based on predefined set of rules of type and subtype of the fields\n *\n * @param {string} colFieldType dimension/measure - temporal/ordinal/nominal\n * @param {string} rowFieldType dimension/measure - temporal/ordinal/nominal\n * @return {Object} return mark type\n */\nexport const getDefaultMark = (colFieldType, rowFieldType) => {\n    let mark;\n\n    if (colFieldType === CATEGORICAL || rowFieldType === CATEGORICAL) {\n        mark = BAR;\n    } else if (colFieldType === TEMPORAL || rowFieldType === TEMPORAL) {\n        mark = LINE;\n    } else {\n        mark = POINT;\n    }\n\n    return mark;\n};\n\n/**\n *\n *\n * @param {*} axesCreators\n * @param {*} [fieldInfo=[]]\n *\n */\nexport const createRetinalAxis = (axesCreators, fieldProps = {}) => {\n    const { axisType, fieldsConfig } = axesCreators;\n    const field = fieldProps.field;\n    const axis = [];\n    const Cls = scaleMaps[axisType];\n\n    fieldProps.type = fieldProps.type ? fieldProps.type : getAxisType(fieldsConfig, field || null);\n    axis.push(new Cls(fieldProps));\n    return axis;\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} val\n *\n */\nexport const getIndex = (arr, val) => {\n    let i = 0;\n    let arrIndex = -1;\n\n    while (arrIndex === -1 && i < arr.length) {\n        if (arr[i].toString() === val.toString()) {\n            arrIndex = i;\n        }\n        i++;\n    }\n    return arrIndex;\n};\n\n/**\n *\n *\n * @param {*} colFields\n * @param {*} rowFields\n * @param {*} userLayerConfig\n *\n * @memberof CartesianEncoder\n */\nexport const getLayerConfFromFields = (colFields, rowFields, userLayerConfig) => userLayerConfig.filter((conf) => {\n    const userConf = conf instanceof Array ? conf : [conf];\n    const encodingArr = [].concat(...userConf.map(d => d.encoding).filter(d => d !== undefined));\n\n    if (!encodingArr.length) {\n        return true;\n    }\n\n    const xFields = [].concat(...encodingArr.map(d => [d.x && d.x.field, d.x0 && d.x0.field]))\n                .filter(d => d !== undefined && d !== null);\n    const yFields = [].concat(...encodingArr.map(d => [d.y && d.y.field, d.y0 && d.y0.field]))\n                .filter(d => d !== undefined && d !== null);\n\n    if (!xFields.length && !yFields.length) {\n        return true;\n    }\n\n    const colFieldExist = xFields.length ? xFields.every(d => colFields.indexOf(d) !== -1) : false;\n    const rowFieldExist = yFields.length ? yFields.every(d => rowFields.indexOf(d) !== -1) : false;\n    if (xFields.length && yFields.length) {\n        return colFieldExist && rowFieldExist;\n    }\n    return colFieldExist || rowFieldExist;\n});\n","import { layerFactory } from '@chartshq/visual-layer';\nimport { mergeRecursive, STATE_NAMESPACES, unionDomain } from 'muze-utils';\nimport {\n    generateAxisFromMap,\n    getDefaultMark,\n    getIndex,\n    getLayerConfFromFields,\n    getAdjustedDomain\n} from './encoder-helper';\nimport { retriveDomainFromData } from '../group-helper';\n\nimport { ROW, COLUMN, COL, LEFT, TOP, CARTESIAN, MEASURE, BOTH, X, Y } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\n/**\n *\n *\n * @export\n * @class CartesianEncoder\n * @extends {VisualEncoder}\n */\nexport default class CartesianEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     *\n     * @memberof CartesianEncoder\n     */\n    static type () {\n        return CARTESIAN;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof CartesianEncoder\n     */\n    createAxis (axesCreators, fieldInfo, context) {\n        const geomCellAxes = {};\n        const {\n            axes\n        } = axesCreators;\n        const {\n            projections,\n            indices\n        } = fieldInfo;\n        const {\n            rowFields,\n            columnFields\n        } = projections;\n        const {\n             rowIndex,\n             columnIndex\n        } = indices;\n        const axisFields = [{\n            fields: rowFields,\n            index: rowIndex\n        }, {\n            fields: columnFields,\n            index: columnIndex\n        }];\n        const xAxes = axes.x || [];\n        const yAxes = axes.y || [];\n\n        [rowFields, columnFields].forEach((fields, i) => {\n            const type = i === 0 ? ROW : COLUMN;\n            const axis = i === 0 ? Y : X;\n\n            if (fields.length > 1) {\n                axesCreators.position = BOTH;\n            } else {\n                axesCreators.position = this.axisFrom()[type];\n            }\n            geomCellAxes[axis] = generateAxisFromMap(axis, axisFields[i], axesCreators, {\n                groupAxes: axis === X ? xAxes : yAxes,\n                valueParser: context.resolver.valueParser()\n            });\n        });\n        return geomCellAxes;\n    }\n\n    updateDomains (store, axes) {\n        const xAxes = axes.x;\n        const yAxes = axes.y;\n        store.model.lock();\n        for (let i = 0; i < xAxes.length; i++) {\n            for (let j = 0; j < xAxes[i].length; j++) {\n                store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${0}${i}0`, xAxes[i][j].domain());\n            }\n        }\n        for (let i = 0; i < yAxes.length; i++) {\n            for (let j = 0; j < yAxes[i].length; j++) {\n                store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${i}${0}0`, yAxes[i][j].domain());\n                yAxes[i][j]._domainLock = false;\n            }\n        }\n\n        store.model.unlock();\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        const unitDomains = store.get(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`);\n        const resolver = context.resolver();\n        const units = resolver.units();\n        const domains = {\n            0: {},\n            1: {}\n        };\n\n        for (let rIdx = 0, len = units.length; rIdx < len; rIdx++) {\n            const unitsArr = units[rIdx];\n            for (let cIdx = 0, len2 = unitsArr.length; cIdx < len2; cIdx++) {\n                const unit = unitsArr[cIdx];\n                const axisFields = unit.fields();\n                [axisFields.x, axisFields.y].forEach((fieldArr, axisType) => {\n                    fieldArr.forEach((field, axisIndex) => {\n                        const key = !axisType ? `0${cIdx}${axisIndex}` : `${rIdx}0${axisIndex}`;\n                        const dom = unitDomains[`${rIdx}${cIdx}`];\n                        if (dom && Object.keys(dom).length !== 0) {\n                            domains[axisType][key] = unionDomain([(domains[axisType] && domains[axisType][key]) || [],\n                                dom[`${field}`]], field.subtype());\n                        }\n                    });\n                });\n            }\n        }\n\n        const { x: xAxes, y: yAxes } = resolver.axes();\n        store.model.lock();\n        [xAxes, yAxes].forEach((axesArr, axisType) => {\n            axesArr.forEach((axes, idx) => {\n                const min = [];\n                const max = [];\n                let domain = [];\n                let adjustedDomain = [];\n                if (axes.length > 1 && axes[0].constructor.type() === 'linear' && axes[0].config().alignZeroLine) {\n                    axes.forEach((axis, i) => {\n                        const key = !axisType ? `0${idx}${i}` : `${idx}0${i}`;\n                        domain = domains[axisType][key];\n                        min[i] = domain[0];\n                        max[i] = domain[1];\n                    });\n                    adjustedDomain = getAdjustedDomain(max, min);\n                }\n\n                axes.forEach((axis, index) => {\n                    const key = !axisType ? `0${idx}${index}` : `${idx}0${index}`;\n                    domain = adjustedDomain[index] || domains[axisType][key];\n                    axis.domain(domain);\n                    const type = !axisType ? 'x' : 'y';\n                    store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${type}.${idx}${index}`, domain);\n                });\n            });\n        });\n        store.model.unlock();\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields, type) {\n        let facets = [];\n        let projections = [];\n        let counter = 0;\n        const primaryFacets = [];\n        const secondaryFacets = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n        const axisFrom = this.axisFrom();\n\n        for (let i = 0; i < primaryLen; i++) {\n            let projArr = [primaryFields[i]];\n            const primaryField = primaryFields[i];\n\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter];\n                if (secondaryField && secondaryField.type() === MEASURE) {\n                    counter++;\n                    projArr = [primaryField, secondaryField];\n                }\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n                primaryFacets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                    secondaryFacets.push(secondaryField);\n                }\n            }\n        }\n        if ((primaryFacets.length || secondaryFacets.length) && !projections.length) {\n            type = type === COL ? COLUMN : type;\n            if ((axisFrom[type] === LEFT || axisFrom[type] === TOP) && primaryFacets.length) {\n                const axisFromIndex = primaryFacets.length - 1;\n                const facet = primaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(secondaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    secondaryFacets.splice(existIndex, 1);\n                }\n                primaryFacets.splice(axisFromIndex, 1);\n            } else {\n                const axisFromIndex = 0;\n                const facet = secondaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(primaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    primaryFacets.splice(existIndex, 1);\n                }\n                secondaryFacets.splice(axisFromIndex, 1);\n            }\n        }\n\n        facets = [...primaryFacets, ...secondaryFacets];\n        facets = facets.filter((el, index, self) => index === self.findIndex(t => (t.toString() === el.toString())));\n        return {\n            facets,\n            projections\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof CartesianEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        return super.fieldSanitizer(datamodel, config);\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     *\n     * @memberof CartesianEncoder\n     */\n    getRetinalFieldsDomain (dataModels, encoding) {\n        const groupedModel = dataModels.groupedModel;\n        const domains = {};\n        for (const key in encoding) {\n            if ({}.hasOwnProperty.call(encoding, key)) {\n                const encodingObj = encoding[key];\n                const field = encodingObj.field;\n                if (!encodingObj.domain && field) {\n                    const domain = retriveDomainFromData(groupedModel, field);\n                    domains[field] = domain;\n                }\n            }\n        }\n        return domains;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     * @memberof CartesianEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n        // let currentLayerIndex = 0;\n        layerArray.length && layerArray.forEach((layer, i) => {\n            const def = layerFactory.sanitizeLayerConfig(layer);\n            def.order = i;\n            serializedLayers.push(def);\n        });\n        return serializedLayers;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof CartesianEncoder\n     */\n    getLayerConfig (fields, userLayerConfig) {\n        const layerConfig = [];\n        const {\n            columnFields,\n            rowFields\n        } = fields;\n\n        // let currentLayerIndex = 0;\n        columnFields.forEach((colField) => {\n            const colFieldName = colField.toString();\n            rowFields.forEach((rowField) => {\n                let configs = [];\n                const rowFieldName = rowField.toString();\n                const encoding = {\n                    x: {\n                        field: colFieldName\n                    },\n                    y: {\n                        field: rowFieldName\n                    }\n                };\n                const rowFieldType = rowField.subtype();\n                const colFieldType = colField.subtype();\n                const mark = getDefaultMark(colFieldType, rowFieldType);\n\n                const defConfigs = [{\n                    mark,\n                    def: {\n                        mark,\n                        encoding\n                    }\n                }];\n\n                const layerConfigs = getLayerConfFromFields(colField.getMembers(),\n                    rowField.getMembers(), userLayerConfig || []);\n                if (layerConfigs.length) {\n                    configs = layerConfigs.map((layerConf) => {\n                        const mergedLayerConf = mergeRecursive(mergeRecursive({}, defConfigs[0].def), layerConf);\n                        const serializedLayerConfig = layerFactory.getSerializedConf(mergedLayerConf.mark,\n                            mergedLayerConf);\n                        return {\n                            mark: mergedLayerConf.mark,\n                            order: mergedLayerConf.order,\n                            def: serializedLayerConfig\n                        };\n                    });\n                } else {\n                    configs = defConfigs;\n                }\n\n                layerConfig.push(...configs);\n            });\n        });\n        return layerConfig;\n    }\n}\n","import { layerFactory } from '@chartshq/visual-layer';\nimport { mergeRecursive, STATE_NAMESPACES } from 'muze-utils';\nimport VisualEncoder from './visual-encoder';\nimport { RADIUS, ANGLE, SIZE, MEASURE, ARC, POLAR, COLOR } from '../enums/constants';\n/**\n *\n *\n * @export\n * @class PolarEncoder\n * @extends {VisualEncoder}\n */\nexport default class PolarEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof PolarEncoder\n     */\n    createAxis (axesCreators, fieldInfo) {\n        const {\n            axes\n        } = axesCreators;\n        const geomCellAxes = axes;\n        const {\n            indices\n        } = fieldInfo;\n        const {\n            rowIndex,\n            columnIndex\n        } = indices;\n        // Dummy axes for polar, to create blank cells\n        const pieAxes = geomCellAxes.pie || [];\n\n        pieAxes[rowIndex] = pieAxes[rowIndex] || [];\n        pieAxes[rowIndex][columnIndex] = [];\n\n        geomCellAxes.pie = pieAxes;\n        geomCellAxes.x = null;\n        geomCellAxes.y = null;\n\n        return geomCellAxes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields) {\n        let counter = 0;\n        const facets = [];\n        const projections = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n\n        for (let i = 0; i < primaryLen; i++) {\n            const primaryField = primaryFields[i];\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter++];\n                const projArr = secondaryField ? [primaryField, secondaryField] : [primaryField];\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                }\n            }\n        }\n        return {\n            facets,\n            projections\n        };\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        const domains = store.get(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`);\n        const domainProps = {\n            radius: [Infinity, -Infinity]\n        };\n        Object.values(domains).forEach((domainVal) => {\n            for (const key in domainVal) {\n                domainProps[key] = [Math.min(domainVal[key][0], domainProps[key][0]),\n                    Math.min(domainVal[key][1], domainProps[key][1])];\n            }\n        });\n        store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.radius`, domainProps.radius);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    setCommonDomain () {\n        // No domain to be set\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    static type () {\n        return POLAR;\n    }\n\n    layers (...layers) {\n        if (layers.length) {\n            this._layers = layers[0];\n            return this;\n        }\n        return this._layers;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof PolarEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        let sanitizedRows = [[], []];\n        let sanitizedColumns = [[], []];\n        const fields = super.fieldSanitizer(datamodel, config);\n        const {\n            layers\n        } = config;\n        const {\n            rows,\n            columns\n        } = fields;\n        const layer = layers[0];\n        const encoding = layer.encoding;\n        const radius = encoding && encoding.radius ? encoding.radius.field : null;\n        const angle = encoding && encoding.angle ? encoding.angle.field : null;\n        const sanitizedFields = [sanitizedRows, sanitizedColumns];\n\n        [rows, columns].forEach((fieldType, typeIndex) => {\n            fieldType.forEach((fieldSet, i) => fieldSet.forEach((field) => {\n                if (field.toString() !== radius && field.toString() !== angle && field.type() !== MEASURE) {\n                    sanitizedFields[typeIndex][i].push(field);\n                }\n            }));\n        });\n        sanitizedColumns = [...new Set(sanitizedColumns)];\n        sanitizedRows = [...new Set(sanitizedRows)];\n        this.fieldInfo({ rows: sanitizedRows, columns: sanitizedColumns });\n        return this.fieldInfo();\n    }\n\n    getRetinalFieldsDomain (dataModels, encoding, facetFields, groupBy) {\n        let sizeField;\n        let colorField;\n        const fields = [];\n        const layers = this.layers();\n        const dataModel = dataModels.groupedModel;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const domains = {};\n        if (layers && layers[0]) {\n            const layer = layers[0];\n            const layerEncoding = layer.def.encoding || {};\n\n            [RADIUS, ANGLE, SIZE, COLOR].forEach((encType) => {\n                const field = layerEncoding[encType] ? layerEncoding[encType].field : '';\n                const measureField = fieldsConfig[field] && fieldsConfig[field].def.type === MEASURE;\n                if (encType === SIZE && measureField) {\n                    sizeField = field;\n                }\n                if (encType === COLOR) {\n                    colorField = field;\n                }\n                fieldsConfig[field] && !measureField && fields.push(field);\n            });\n        }\n\n        if (sizeField) {\n            domains[sizeField] = dataModel.groupBy(facetFields, {\n                [sizeField]: 'sum'\n            }).getFieldspace().fieldsObj()[sizeField].domain();\n        }\n\n        if (colorField) {\n            const dm = dataModel.groupBy([...facetFields, ...fields], groupBy.measures);\n            domains[colorField] = dm.getFieldspace().fieldsObj()[colorField].domain();\n        }\n        return domains;\n    }\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof PolarEncoder\n     */\n    getLayerConfig (fields, userLayerConfig) {\n        let layerConfig = [];\n        const {\n                columnFields,\n                rowFields\n            } = fields;\n        const allFields = [...columnFields, ...rowFields];\n\n        allFields.forEach(() => {\n            const encoding = {};\n            let config = {\n                mark: ARC,\n                def: {\n                    encoding\n                }\n            };\n            if (userLayerConfig && userLayerConfig.length > 0) {\n                config = mergeRecursive(config, userLayerConfig[0]);\n            }\n            layerConfig.push(config);\n        });\n        if (layerConfig.length === 0) {\n            layerConfig = userLayerConfig;\n        }\n\n        this.layers(layerConfig);\n        return layerConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     *\n     * @memberof PolarEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n\n        layerArray.length && layerArray.forEach((layer) => {\n            const def = layerFactory.getSerializedConf(layer.mark, layer);\n            serializedLayers.push({\n                mark: layer.mark,\n                def\n            });\n        });\n        return serializedLayers;\n    }\n}\n","import { createRetinalAxis } from './encoder-helper';\nimport { COLOR, SHAPE, SIZE } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\n/**\n *\n *\n * @export\n * @class RetinalEncoder\n * @extends {VisualEncoder}\n */\nexport default class RetinalEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     *\n     * @memberof RetinalEncoder\n     */\n    createAxis (axesCreators) {\n        const { fieldsConfig, config } = axesCreators;\n        const newAxes = {};\n\n        [COLOR, SHAPE, SIZE].forEach((axisType) => {\n            newAxes[`${axisType}`] = createRetinalAxis({ axisType, fieldsConfig }, config[axisType]);\n        });\n        return newAxes;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof RetinalEncoder\n     */\n    static type () {\n        return 'retinal';\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof RetinalEncoder\n     */\n    getLayerConfig (encodingConfigs, userLayerConfig) {\n        const layerConfig = [];\n        userLayerConfig.forEach((e) => {\n            const config = e;\n            [COLOR, SHAPE, SIZE].forEach((axis) => {\n                if (encodingConfigs[axis] && encodingConfigs[axis].field) {\n                    const def = config.def;\n                    if (config.def instanceof Array) {\n                        def.forEach((conf) => {\n                            conf.encoding = conf.encoding || {};\n                            !conf.encoding[axis] && (conf.encoding[axis] = {});\n                            conf.encoding[axis].field = encodingConfigs[axis].field;\n                        });\n                    } else {\n                        def.encoding = def.encoding || {};\n                        !def.encoding[axis] && (def.encoding[axis] = {});\n                        def.encoding[axis].field = encodingConfigs[axis].field;\n                    }\n                }\n            });\n            layerConfig.push(config);\n        });\n        return layerConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} context\n     *\n     * @memberof RetinalEncoder\n     */\n    setCommonDomain (context) {\n        const { domains, axes, encoding } = context;\n\n        Object.entries(encoding).forEach((enc) => {\n            if (enc[1] && enc[1].field) {\n                const encType = enc[0];\n                const field = enc[1].field;\n\n                if (field) {\n                    axes[encType].forEach((axis) => {\n                        const domain = domains[field];\n                        !enc[1].domain && axis.updateDomain(domain);\n                    });\n                }\n            }\n        });\n        return axes;\n    }\n}\n","import { Store, FieldType } from 'muze-utils';\nimport { DATA_UPDATE_COUNTER } from '../enums/defaults';\nimport { Variable } from '../variable';\nimport { PolarEncoder, CartesianEncoder } from '../encoder';\nimport {\n    DIMENSION,\n    MEASURE,\n    ORDINAL,\n    LINEAR,\n    ROW,\n    COLUMN,\n    COL,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    COLOR,\n    SIZE,\n    TEMPORAL,\n    SHAPE,\n    INTERACTION,\n    GRID_LINES,\n    GRID_BANDS,\n    HEADER,\n    FACET,\n    X,\n    Y,\n    POLAR\n} from '../enums/constants';\n\n/**\n * Creates an instance of a store which contains the arguments to make the class reactive\n *\n * @return {Object} instance of store\n * @memberof VisualGroup\n */\nexport const initStore = () => new Store({\n    [DATA_UPDATE_COUNTER]: DATA_UPDATE_COUNTER\n});\n\n/**\n *\n *\n * @param {*} arr\n */\nexport const isDistributionEqual = arr => [...arr[0], ...arr[1]].reduce((isEqual, row) => {\n    const rowType = row.type();\n\n    if (rowType === MEASURE || rowType === TEMPORAL) {\n        isEqual = true;\n    }\n    return isEqual;\n}, false);\n\n/**\n *\n *\n */\nexport const initializeCacheMaps = () => ({\n    cellMap: new Map(),\n    xAxesMap: new Map(),\n    yAxesMap: new Map(),\n    entryCellMap: new Map(),\n    exitCellMap: new Map()\n});\n\n/**\n *\n *\n * @param {*} axisName\n * @param {*} id\n */\nexport const getAxisKey = (axisName, ...params) => `${axisName}-axis-${params.join('-')}`;\n\n/**\n *\n *\n * @param {*} rowId\n * @param {*} columnId\n */\nexport const getCellKey = (rowId, columnId) => `cell-${rowId}-${columnId}`;\n\n/**\n *\n *\n * @param {*} config\n *\n */\nexport const extractUnitConfig = (config) => {\n    const unitConfig = {};\n    const attrNames = [INTERACTION, GRID_LINES, GRID_BANDS];\n\n    attrNames.forEach((attr) => {\n        if (config[attr] !== undefined) {\n            unitConfig[attr] = config[attr];\n        }\n    });\n    return unitConfig;\n};\n\n/**\n *\n *\n * @param {*} headers\n * @param {*} index\n * @param {*} rowLength\n *\n * @memberof MatrixResolver\n */\nexport const getHeaderText = (headers, index, rowLength) => {\n    let header = '';\n\n    if (index === rowLength - 1 && headers.length > rowLength) {\n        for (let i = index; i < headers.length - 1; i++) {\n            header += `${headers[i].toString()} / `;\n        }\n        header += headers[headers.length - 1].toString();\n        return header;\n    } else if (headers[index]) {\n        return headers[index].toString();\n    }\n    return '';\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} fieldHeaders\n * @param {*} TextCell\n * @param {*} labelManager\n *\n */\nexport const headerCreator = (fields, fieldHeaders, TextCell, { classPrefix, labelManager }) => {\n    const headers = fields.length > 0 ? fields[0].map((cell, i) => new TextCell({\n        type: HEADER,\n        className: `${classPrefix}-grid-headers`\n    }, {\n        labelManager\n    }).source(getHeaderText(fieldHeaders, i, fields[0].length))\n                    .config({ show: cell.config().show })) : [];\n    return headers;\n};\n\n/**\n *\n *\n * @param {*} variable\n * @param {*} allFields\n *\n */\nexport const findInGroup = (variable, allFields) => {\n    let channel = null;\n\n    [COLOR, SIZE, SHAPE].forEach((e) => {\n        if (this.store.get(e) && variable === this.store.get(e)[0]) {\n            channel = e;\n        }\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    [ROW, COL].forEach((facetType) => {\n        allFields[`${facetType}Facets`].forEach((e) => {\n            if (e.toString() === variable) {\n                channel = { channel: FACET, type: facetType === COL ? COLUMN : ROW };\n            }\n        });\n    });\n\n    if (channel) {\n        return channel;\n    }\n\n    [ROW, COL].forEach((projType) => {\n        allFields[`${projType}Projections`].forEach((e) => {\n            e.forEach((m) => {\n                if (m.toString() === variable) {\n                    channel = projType === COL ? X : Y;\n                }\n            });\n        });\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    return null;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} field\n */\nexport const getAxisType = (fieldsConfig, field) => {\n    let fieldType = ORDINAL;\n\n    if (field && fieldsConfig[field].def.type !== DIMENSION) {\n        fieldType = LINEAR;\n    }\n    return fieldType;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} fieldName\n *\n */\nexport const retriveDomainFromData = (datamodel, fieldName) => {\n    const field = datamodel.getFieldspace().fields.find(d => d.name() === fieldName.toString());\n    return field.domain();\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    let xAxes = null;\n    let yAxes = null;\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n\n    xAxisSet && xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes = xAxes || [];\n        xAxes.push(xAxis);\n    });\n\n    yAxisSet && yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes = yAxes || [];\n        yAxes.push(yAxis);\n    });\n\n    return {\n        xAxes, yAxes\n    };\n};\n\n/**\n *\n *\n * @param {*} layers\n *\n */\nexport const getEncoder = (layers) => {\n    let encoder = new CartesianEncoder();\n\n    if (layers.length) {\n        // Figuring out the kind of layers the group will have\n        encoder = layers.every(e => e.mark === 'arc') ? new PolarEncoder() : encoder;\n    }\n    return encoder;\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} userAxisFromConfig\n *\n */\nexport const getHeaderAxisFrom = (type, fields, userAxisFromConfig) => {\n    let axisFrom = userAxisFromConfig[type];\n    let headerFrom = '';\n    const options = type === ROW ? [LEFT, RIGHT] : [BOTTOM, TOP];\n    const [firstField, secondField] = fields;\n    const firstFieldType = i => (firstField.length ? firstField[i].type() : null);\n    const secondFieldType = i => (secondField.length ? secondField[i].type() : null);\n\n    if (firstFieldType(firstField.length - 1) === DIMENSION && secondFieldType(0) === DIMENSION) {\n        headerFrom = axisFrom ? options[1 - options.indexOf(axisFrom)] : options[1];\n\n        if (type === COLUMN && (firstField[firstField.length - 1].toString() === secondField[0].toString())) {\n            axisFrom = TOP;\n        } else {\n            axisFrom = axisFrom || options[0];\n        }\n    } else if (secondFieldType(secondField.length - 1) === DIMENSION) {\n        headerFrom = type === ROW ? RIGHT : BOTTOM;\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else {\n        headerFrom = type === ROW ? LEFT : TOP;\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    if (firstFieldType(firstField.length - 1) === MEASURE && secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    } else if (secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else if (firstFieldType(firstField.length - 1) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    return [headerFrom, axisFrom];\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} layers\n *\n * @memberof MatrixResolver\n */\nexport const setFacetsAndProjections = (context, fieldInfo, encoder) => {\n    const {\n        fields,\n        type\n    } = fieldInfo;\n    const { facets, projections } = encoder.simpleEncoder.getFacetsAndProjections(fields, type);\n\n    context.facets({ [`${type}Facets`]: facets });\n    context.projections({ [`${type}Projections`]: projections });\n\n    return { facets, projections, fields };\n};\n\nconst getRowBorders = (left, right) => {\n    const borders = {};\n    borders.top = false;\n    borders.bottom = false;\n    if (left.length > 1 || right.length > 1) {\n        borders.top = true;\n        borders.bottom = true;\n    }\n    return borders;\n};\n\nconst getColumnsBorders = (top, bottom) => {\n    const borders = {};\n    borders.left = false;\n    borders.right = false;\n    if (top.length || bottom.length) {\n        if ((top[0] && top[0].length > 1) || (bottom[0] && bottom[0].length > 1)) {\n            borders.left = true;\n            borders.right = true;\n        }\n    }\n    return borders;\n};\n\nconst getValueBorders = (rows, columns) => {\n    const borders = { top: true, left: true, bottom: true, right: true };\n    const borderTypeRow = [LEFT, RIGHT];\n    const borderTypeCol = [TOP, BOTTOM];\n    rows.forEach((e, i) => {\n        if (e[0] && e[0].length) {\n            borders[borderTypeRow[i]] = true;\n        } else {\n            borders[borderTypeRow[i]] = false;\n        }\n    });\n    columns.forEach((e, i) => {\n        if (e.length) {\n            borders[borderTypeCol[i]] = true;\n        } else {\n            borders[borderTypeCol[i]] = false;\n        }\n    });\n\n    return borders;\n};\n\nexport const getBorders = (matrices, encoder) => {\n    let showRowBorders = { top: false, bottom: false };\n    let showColBorders = { left: false, right: false };\n    let showValueBorders = { top: false, bottom: false, left: false, right: false };\n    const {\n        rows,\n        columns,\n        values: valueMatrix\n    } = matrices;\n    const [leftRows, rightRows] = rows;\n    const [topColumns, bottomColumns] = columns;\n    const {\n        rowDimensions,\n        columnDimensions,\n        rowTemporalFields,\n        columnTemporalFields,\n        columnMeasures,\n        rowMeasures\n    } = encoder.fieldInfo();\n    const allDimensionLength = rowDimensions.length + columnDimensions.length;\n    const allMeasuresLength = rowMeasures.length + columnMeasures.length;\n    const allTemporalFieldsLength = rowTemporalFields.length + columnTemporalFields.length;\n\n    if (encoder.constructor.type() === POLAR) {\n        if (!allDimensionLength) {\n            return { showRowBorders, showColBorders, showValueBorders };\n        }\n    } else if (!allMeasuresLength && !allTemporalFieldsLength && allDimensionLength <= 2) {\n        return { showRowBorders, showColBorders, showValueBorders };\n    }\n\n    showRowBorders = getRowBorders(leftRows, rightRows);\n    showColBorders = getColumnsBorders(topColumns, bottomColumns);\n    showValueBorders = getValueBorders([leftRows, rightRows], [topColumns, bottomColumns]);\n\n    if (valueMatrix.length > 1) {\n        showValueBorders.top = true;\n        showValueBorders.bottom = true;\n    }\n    if (valueMatrix.length && valueMatrix[0].length > 1) {\n        showValueBorders.left = true;\n        showValueBorders.right = true;\n    }\n    return { showRowBorders, showColBorders, showValueBorders };\n};\n\nexport const getFieldsFromSuppliedLayers = (suppliedLayerConfig, fieldsConfig) => {\n    let fields = [];\n    const encodingArr = suppliedLayerConfig.map(conf => (conf.encoding || {}));\n    fields = [...fields, [].concat(...encodingArr.map(enc => Object.values(enc).map(d => d.field)))];\n    fields = fields.filter(field => fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION);\n    return fields;\n};\n\nexport const extractFields = (facetsAndProjections, layerFields) => {\n    const fields = Object.values(facetsAndProjections).map((arr) => {\n        const flattenArray = [].concat(...arr);\n        return [].concat(...flattenArray.map((field) => {\n            if (field instanceof Variable) {\n                return field.getMembers();\n            }\n            return field;\n        }));\n    });\n    return [].concat(...fields, ...layerFields);\n};\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: false\n    },\n    [ACTIONS.HOVER]: {\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.LONGTOUCH]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: true\n    },\n    [ACTIONS.TOUCHDRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: true\n    },\n    [ACTIONS.CLICK]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: false\n    }\n};\n","import {\n    FieldType,\n    getDependencyOrder,\n    getObjProp,\n    defaultValue,\n    objectIterator,\n    unionDomain,\n    makeElement,\n    DimensionSubtype,\n    toArray,\n    MeasureSubtype,\n    getNearestValue\n} from 'muze-utils';\nimport { layerFactory } from '@chartshq/visual-layer';\n\nexport const getDimensionMeasureMap = (layers, fieldsConfig) => {\n    const retinalEncodingsAndMeasures = {};\n\n    layers.forEach((layer) => {\n        const {\n            colorField,\n            sizeField,\n            shapeField,\n            xField,\n            yField\n        } = layer.encodingFieldsInf();\n        const measures = [xField, yField].filter(field => fieldsConfig[field] && fieldsConfig[field].def.type ===\n            FieldType.MEASURE);\n        [colorField, sizeField, shapeField].forEach((field) => {\n            if (fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                !retinalEncodingsAndMeasures[field] && (retinalEncodingsAndMeasures[field] = []);\n                retinalEncodingsAndMeasures[field].push(...measures);\n            }\n        });\n    });\n\n    for (const key in retinalEncodingsAndMeasures) {\n        if ({}.hasOwnProperty.call(retinalEncodingsAndMeasures, key)) {\n            retinalEncodingsAndMeasures[key] = [...new Set(retinalEncodingsAndMeasures[key])];\n        }\n    }\n    return retinalEncodingsAndMeasures;\n};\n\nexport const transformDataModels = (transform, dataModel) => {\n    const dataModels = {};\n    for (const key in transform) {\n        if ({}.hasOwnProperty.call(transform, key)) {\n            const transformVal = transform[key];\n            dataModels[key] = transformVal(dataModel);\n        }\n    }\n\n    return dataModels;\n};\n\nexport const getLayerFromDef = (context, definition, existingLayer, namespaces) => {\n    let instances = existingLayer;\n    const dependencies = context._layerDeps;\n    const metaInf = context.metaInf();\n    if (!existingLayer) {\n        instances = layerFactory.getLayerInstance(definition);\n        toArray(instances).forEach((inst, i) => {\n            inst.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: namespaces[i]\n            });\n            inst.store(context.store());\n        });\n    }\n    const layers = {};\n    const instanceArr = toArray(instances);\n    definition = toArray(definition);\n    definition.reduce((acc, def, idx) => {\n        const instance = instanceArr[idx];\n        instance.config(def);\n        instance.valueParser(context.valueParser());\n        instance.dependencies(dependencies);\n        instance.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        if (def.name) {\n            instance.alias(def.name);\n        }\n        layers[instance.alias()] = instance;\n        return acc;\n    }, {});\n    return layers;\n};\n\nexport const resolveEncodingTransform = (layerInst, store) => {\n    const encodingTransform = layerInst.config().encodingTransform || {};\n    const resolvable = encodingTransform.resolvable;\n    let depArr = [];\n    if (resolvable) {\n        const resolved = resolvable(store);\n        depArr = resolved.depArr;\n        layerInst.encodingTransform(resolved.fn);\n    } else if (encodingTransform instanceof Function) {\n        layerInst.encodingTransform(encodingTransform);\n    }\n    return depArr;\n};\n\nexport const createLayers = (context, layerDefinitions) => {\n    const layersMap = context._layersMap;\n    const markSet = {};\n    const store = {\n        layers: {},\n        components: {\n            unit: context\n        }\n    };\n    let layerIndex = 0;\n    let layers = layerDefinitions.sort((a, b) => a.order - b.order).reduce((layersArr, layerDef, i) => {\n        const mark = layerDef.mark;\n        const definition = layerDef.def;\n        const markId = `${mark}-${i}`;\n        const defArr = toArray(definition);\n        defArr.forEach((def) => {\n            def.order = layerDef.order + layerIndex;\n        });\n        layerIndex += defArr.length;\n        const instances = getLayerFromDef(context, definition, layersMap[markId], i);\n        store.layers = Object.assign(store.layers, instances);\n        const instanceValues = Object.values(instances);\n        layersArr = layersArr.concat(...instanceValues);\n        layersMap[markId] = instanceValues;\n        markSet[markId] = markId;\n        return layersArr;\n    }, []);\n    store.unit = context;\n    const layerdeps = {};\n    layers.forEach((layer) => {\n        const depArr = resolveEncodingTransform(layer, store);\n        layerdeps[layer.alias()] = depArr;\n    });\n\n    const order = getDependencyOrder(layerdeps);\n    layers = order.map(name => store.layers[name]);\n    for (const key in layersMap) {\n        if (!(key in markSet)) {\n            layersMap[key].forEach(layer => layer.remove());\n            delete layersMap[key];\n        }\n    }\n    return layers;\n};\n\nexport const sanitizeLayerDef = (layerDefs) => {\n    const sanitizedDefs = [];\n    layerDefs.forEach((layerDef, i) => {\n        const def = layerDef.def;\n        const mark = layerDef.mark;\n        if (!def) {\n            const sConf = layerFactory.getSerializedConf(layerDef.mark, layerDef);\n            if (!sConf.name) {\n                sConf.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push({\n                mark: layerDef.mark,\n                def: sConf\n            });\n        } else {\n            if (!def.name) {\n                def.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push(layerDef);\n        }\n    });\n    return sanitizedDefs;\n};\n\nexport const attachDataToLayers = (layers, dm, transformedDataModels) => {\n    layers.forEach((layer) => {\n        const dataSource = layer.config().source;\n        const dataModel = dataSource instanceof Function ? dataSource(dm) :\n            (transformedDataModels[dataSource] || dm);\n        if (layer.data() !== dataModel) {\n            layer.data(dataModel);\n        }\n    });\n};\n\nexport const attachAxisToLayers = (axes, layers, layerAxisIndex) => {\n    layers.forEach((layer) => {\n        const layerId = layer.id();\n        const axesObj = {};\n\n        objectIterator(axes, (key) => {\n            const axisInf = layerAxisIndex[layerId];\n            if (axisInf) {\n                axes[key] && (axesObj[key] = axes[key][axisInf[key] || 0]);\n            }\n        });\n        Object.keys(axesObj).length && layer.axes(axesObj);\n    });\n};\n\nexport const getLayerAxisIndex = (layers, fields) => {\n    const layerAxisIndex = {};\n    layers.forEach((layer) => {\n        const { axis, encoding } = layer.config();\n        const id = layer.id();\n        ['x', 'y'].forEach((type) => {\n            let index;\n            const field = defaultValue(getObjProp(axis, type), encoding[type] && encoding[type].field);\n            if (fields[type]) {\n                index = fields[type].findIndex(fieldInst => fieldInst.getMembers().indexOf(field) !== -1);\n            } else {\n                index = 0;\n            }\n            !layerAxisIndex[id] && (layerAxisIndex[id] = {});\n            layerAxisIndex[id][type] = index;\n        });\n    });\n    return layerAxisIndex;\n};\n\nexport const unionDomainFromLayers = (layers, axisFields, layerAxisIndex, fieldsConfig) => {\n    let domains = {};\n    layers = layers.filter(layer => layer.getDataDomain() !== null);\n    layers.forEach((layer) => {\n        let domainValues = {};\n        const config = layer.config();\n        const encoding = config.encoding;\n        const layerDomain = layer.getDataDomain();\n        const layerId = layer.id();\n\n        if (layerDomain !== null && config.calculateDomain !== false) {\n            domainValues = Object.entries(layerDomain);\n            domains = domainValues.reduce((fieldDomain, domain) => {\n                const encodingType = domain[0];\n                const field = encoding[encodingType].field;\n                const axisIndex = layerAxisIndex[layerId][encodingType];\n                if (encodingType in axisFields) {\n                    const fieldStr = `${axisFields[encodingType][axisIndex]}`;\n                    fieldDomain[fieldStr] = fieldDomain[fieldStr] || [];\n                    fieldDomain[fieldStr] = unionDomain(([fieldDomain[fieldStr], domain[1]]),\n                        fieldsConfig[field].def.subtype ? fieldsConfig[field].def.subtype :\n                                fieldsConfig[field].def.type);\n                } else {\n                    fieldDomain[encodingType] = domain[1];\n                }\n                return fieldDomain;\n            }, domains);\n        }\n    });\n    return domains;\n};\n\nexport const renderLayers = (context, container, layers, measurement) => {\n    context._lifeCycleManager.notify({ client: layers, action: 'beforedraw', formalName: 'layer' });\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const orderedLayers = context.layers().sort((a, b) => a.config().order - b.config().order);\n    const layerParentGroup = makeElement(container, 'g', [1], `${classPrefix}-layer-group`);\n    const layerDepOrder = getDependencyOrder(context._layerDepOrder);\n    const groups = {};\n    makeElement(layerParentGroup, 'g', orderedLayers, null, {\n        update: (group, layer) => {\n            groups[layer.alias()] = {\n                group,\n                layer\n            };\n        }\n    });\n    const layerSeq = layerDepOrder.map(name => groups[name]);\n    layerSeq.forEach((o) => {\n        const layer = o.layer;\n        const group = o.group;\n        layer.measurement(measurement);\n        layer.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        layer.config().render !== false && layer.mount(group.node());\n    });\n    return this;\n};\n\nexport const getNearestDimensionalValue = (context, position) => {\n    const fields = context.fields();\n    if (!fields.x.length || !fields.y.length) {\n        return null;\n    }\n    const data = context.data();\n    const axes = context.axes();\n    const fieldsConfig = data.getFieldsConfig();\n    const xField = getObjProp(fields, 'x', 0).getMembers()[0];\n    const yField = getObjProp(fields, 'y', 0).getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n\n    const entryVal = [['x', xFieldType, xField], ['y', yFieldType, yField]].find(entry =>\n        entry[1] === DimensionSubtype.CATEGORICAL || entry[1] === DimensionSubtype.TEMPORAL);\n\n    if (!entryVal || (xFieldType !== MeasureSubtype.CONTINUOUS && yFieldType !== MeasureSubtype.CONTINUOUS)) {\n        return null;\n    }\n    const field = entryVal[2];\n    const index = fieldsConfig[field].index;\n    let key = axes[entryVal[0]][0].invert(position[entryVal[0]]);\n    if (entryVal[1] === DimensionSubtype.TEMPORAL) {\n        const filterData = [...new Set(data.getData().data.map(d => d[index]))];\n        key = getNearestValue(filterData, key);\n    }\n\n    return key !== undefined ? [[field], [key]] : null;\n};\n\nexport const getLayersBy = (layers, searchBy, value) => layers.filter((layer) => {\n    const name = searchBy === 'type' ? layer.constructor.formalName() : layer.alias();\n    return name === value;\n});\n\nexport const removeLayersBy = (layers, searchBy, value) => {\n    layers.filter((inst) => {\n        const name = searchBy === 'type' ? inst.config().mark : inst.alias();\n        if (name === value) {\n            inst.remove();\n            return false;\n        }\n        return true;\n    });\n};\n\nexport const createSideEffectGroup = (container, className) => makeElement(container, 'g', [1], className).node();\n\nexport const createRenderPromise = (unit) => {\n    const renderedPromise = unit._renderedPromise;\n    renderedPromise.then(() => {\n        unit._renderedPromise = new Promise((resolve) => {\n            unit._renderedResolve = resolve;\n        });\n        createRenderPromise(unit);\n    });\n};\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const GRID_LINE_PARENT_GROUP_CLASS = 'grid-lines';\nexport const GRID_BAND_PARENT_GROUP_CLASS = 'grid-bands';\nexport const GRID_PARENT_GROUP = 'grid-parent-group';\nexport const BAND = 'band';\nexport const TICK = 'tick';\nexport const GRID_BAND = 'gridBands';\nexport const GRID_LINE = 'gridLines';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const RETINAL_FIELDS = 'retinalFields';\nexport const PARENT_ALIAS = 'parentAlias';\nexport const LAYERS = 'layers';\nexport const CACHED_DATA = 'cachedData';\nexport const STORE = 'store';\n","import { getObjProp, defaultValue, makeElement, DimensionSubtype, DataModel } from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { layerFactory, LAYER_TYPES } from '@chartshq/visual-layer';\nimport {\n    GRID_BAND,\n    GRID_LINE,\n    GRID_BAND_PARENT_GROUP_CLASS,\n    GRID_LINE_PARENT_GROUP_CLASS,\n    GRID_PARENT_GROUP\n} from '../enums/constants';\n\nconst { BAR_LAYER, TICK_LAYER } = LAYER_TYPES;\n\nconst LINEAR = ScaleType.LINEAR;\n\nconst getLayerDefinition = (context, axes, type, orientation) => {\n    let encoding;\n    const config = context.config();\n    const { classPrefix, gridLines, gridBands } = config;\n    const gridLineColor = gridLines.color;\n    const zeroLineColor = gridLines.zeroLineColor;\n    const defClassName = type === GRID_BAND ? gridBands.defClassName : gridLines.defClassName;\n    const gridBandColor = gridBands[orientation].color;\n    const axis = axes[orientation][0];\n    const isLinearScale = axis.constructor.type() === LINEAR;\n\n    if (type === GRID_BAND && isLinearScale) {\n        encoding = {\n            [orientation]: `${orientation}value`,\n            [`${orientation}0`]: `${orientation}value0`\n        };\n    } else {\n        encoding = {\n            [orientation]: isLinearScale ? `${orientation}value` : `${orientation}dim`\n        };\n    }\n    encoding.color = {\n        value: (data, i) => {\n            const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n            if (type === GRID_BAND) {\n                return gridBandColor[i % 2];\n            }\n            return isNegativeDomain && data[orientation] === 0 ? zeroLineColor : gridLineColor;\n        }\n    };\n\n    return {\n        definition: {\n            defClassName: `${defClassName}-${orientation}`,\n            className: config.className,\n            name: orientation,\n            individualClassName: (data, i) => {\n                let className;\n                const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n                if (isNegativeDomain && data.y === 0 && type !== GRID_BAND) {\n                    className = `${classPrefix}-axis-zero-line`;\n                } else {\n                    className = `${classPrefix}-grid-${type}-${orientation}-${i % 2}`;\n                }\n                return className;\n            },\n            [`pad${orientation.toUpperCase()}`]: type === GRID_BAND ? 0 : undefined,\n            encoding\n        },\n        axes: {\n            [orientation]: axis\n        },\n        interactive: false\n    };\n};\n\nconst getDefaultVisibilty = (show, axis) => {\n    if (axis.constructor.type() === LINEAR) {\n        return show;\n    }\n    return false;\n};\n\nexport const getGridLayerDefinitions = (context, config, type) => ['x', 'y'].map((axisType) => {\n    const axes = context.axes();\n    if (!axes[axisType]) {\n        return null;\n    }\n    const show = defaultValue(config[axisType] && config[axisType].show,\n        getDefaultVisibilty(config.show, axes[axisType][0]));\n\n    return show ? getLayerDefinition(context, axes, type, axisType) : null;\n}).filter(d => d !== null);\n\nexport const getGridLayerData = (axes, fields, fieldsConfig) => {\n    const gridData = {};\n    ['x', 'y'].forEach((type) => {\n        let ticks = axes[type][0].getTickValues();\n        const subtype = getObjProp(fieldsConfig, getObjProp(fields, type, 0).getMembers()[0], 'def', 'subtype');\n        const jsonData = [];\n        const schema = [\n            {\n                name: 'yvalue',\n                type: 'measure'\n            }, {\n                name: 'xvalue',\n                type: 'measure'\n            },\n            {\n                name: 'yvalue0',\n                type: 'measure'\n            }, {\n                name: 'xvalue0',\n                type: 'measure'\n            }, {\n                name: 'xdim',\n                type: 'dimension',\n                subtype\n            }, {\n                name: 'ydim',\n                type: 'dimension',\n                subtype\n            }\n        ];\n        const len = Math.max(ticks.length);\n        ticks = subtype === DimensionSubtype.TEMPORAL ? ticks.map(d => d.getTime()) : ticks;\n        for (let i = 0; i < len; i += 1) {\n            jsonData.push({\n                [`${type}value`]: ticks[i],\n                [`${type}value0`]: ticks[i + 1],\n                [`${type}dim`]: ticks[i],\n                [`${type}dim`]: ticks[i]\n            });\n        }\n        gridData[type] = new DataModel(jsonData, schema);\n    });\n    return gridData;\n};\n\n// @todo Use dataSelect method to reuse instances when the method is fixed. #110\nexport const createGridLines = (instances = {}, createFn, definitions, iteratorFn) => {\n    const map = {};\n    definitions.forEach((def) => {\n        const name = def.definition.name;\n        let instance = instances[name];\n        if (!instance) {\n            instances[name] = instance = createFn(def);\n        }\n        iteratorFn(instance, def, name);\n        map[name] = 1;\n    });\n    for (const key in instances) {\n        if (!(key in map)) {\n            instances[key].remove();\n            delete instances[key];\n        }\n    }\n    return instances;\n};\n\nexport const createGridLineLayer = (context) => {\n    const vuConf = context.config();\n    const metaInf = context.metaInf();\n    const store = context.store();\n    const timeDiffs = context._timeDiffs;\n    [GRID_BAND, GRID_LINE].forEach((type) => {\n        let mark;\n        let config;\n        if (type === GRID_BAND) {\n            mark = BAR_LAYER;\n            config = vuConf.gridBands;\n        } else {\n            mark = TICK_LAYER;\n            config = vuConf.gridLines;\n        }\n        const definitions = getGridLayerDefinitions(context, config, type);\n\n        const sel = `_${type}Selection`;\n        context[sel] = createGridLines(context[sel], () => {\n            const inst = layerFactory.getLayerInstance({ mark });\n            inst.dependencies(context._layerDeps);\n            return inst;\n        }, definitions, (layer, atomicDef, key) => {\n            const definition = atomicDef.definition;\n            const sConf = layerFactory.getSerializedConf(mark, definition);\n            const axesObj = atomicDef.axes;\n            layer.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: `${metaInf.namespace}${type}${key}`\n            })\n                .store(store)\n                .config(sConf)\n                .dataProps({\n                    timeDiffs\n                })\n                .axes(axesObj);\n        });\n        context[`_${type}`] = Object.values(context[sel]);\n    });\n};\n\nexport const attachDataToGridLineLayers = (context) => {\n    const axes = context.axes();\n    const measurement = {\n        width: context.width(),\n        height: context.height()\n    };\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n    const gridLayerData = getGridLayerData(axes, context.fields(), context.data().getFieldsConfig());\n    [].concat(...gridBands, ...gridLines).forEach((inst) => {\n        inst.data(inst.axes().x ? gridLayerData.x : gridLayerData.y).measurement(measurement);\n    });\n};\n\nexport const renderGridLineLayers = (context, container) => {\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n\n    const gridLineParentGroup = makeElement(container, 'g', [1], `${classPrefix}-${GRID_PARENT_GROUP}`);\n    [[gridLines, `${classPrefix}-${GRID_LINE_PARENT_GROUP_CLASS}`],\n            [gridBands, `${classPrefix}-${GRID_BAND_PARENT_GROUP_CLASS}`]].forEach((entry) => {\n                const [instances, parentGroupClass] = entry;\n                const mountPoint = makeElement(gridLineParentGroup, 'g', [1], `.${parentGroupClass}`);\n                const className = `${parentGroupClass}-group`;\n                makeElement(mountPoint, 'g', instances, `.${className}`, {\n                    update: (group, instance) => {\n                        instance.dataProps({ timeDiffs: context._timeDiffs }).mount(group.node());\n                    }\n                });\n            });\n};\n","import { CLASSPREFIX, CONSOLIDATED } from './enums/constants';\n\n/**\n * Returns the default configuration of the visual unit\n * @return {Object} Default configuration of visual unit\n */\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'visual-unit',\n    className: '',\n    trackerClassName: 'visual-unit-tracker',\n    gridLines: {\n        defClassName: 'axis-grid-lines',\n        className: '',\n        show: true,\n        color: '#efefef',\n        zeroLineColor: '#b6b6b6'\n    },\n    gridBands: {\n        defClassName: 'axis-grid-bands',\n        className: '',\n        show: false,\n        y: {\n            color: ['#fff', '#fbfbfb']\n        },\n        x: {\n            color: ['#fff', '#f9f9f9']\n        }\n    },\n    arcLayerClassName: 'layer-arc',\n    interaction: {\n        tooltip: {\n            mode: CONSOLIDATED\n        }\n    },\n    sideEffectClassName: 'side-effect-container'\n};\n","import { mergeRecursive, DataModel } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { CONFIG, LAYERDEFS, TRANSFORM, DATA, LAYERS, TRANSFORMEDDATA } from './enums/reactive-props';\nimport { sanitizeLayerDef } from './helper';\n\nexport default {\n    [CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig) => (\n                mergeRecursive(oldConfig || mergeRecursive({}, defaultConfig), config)\n            )\n        }\n    },\n    [LAYERDEFS]: {\n        value: null,\n        meta: {\n            preset: layerDef => sanitizeLayerDef(layerDef)\n        }\n    },\n    [TRANSFORM]: {\n        value: null\n    },\n    [LAYERS]: {\n        value: null\n    },\n    [DATA]: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel,\n            preset: (data, context) => {\n                if (context._cache) {\n                    const cachedData = context.cachedData();\n                    context.cachedData([...cachedData, data]);\n                } else {\n                    const oldData = context.data();\n                    oldData && oldData.unsubscribe('propagation');\n                    context.cachedData([data]);\n                }\n            }\n        }\n    },\n    [TRANSFORMEDDATA]: {\n        value: null,\n        meta: {\n            addAsMethod: false\n        }\n    }\n};\n","export const CONFIG = 'config';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const MOUNT = 'mount';\nexport const TRANSFORM = 'transform';\nexport const TRANSFORMEDDATA = 'transformedData';\nexport const DATADOMAIN = 'dataDomain';\nexport const FIELDS = 'fields';\nexport const LAYERAXISINDEX = 'layerAxisIndex';\nexport const LAYERS = 'layers';\nexport const DOMAIN = 'domain';\n\n","import { STATE_NAMESPACES, temporalFields } from 'muze-utils';\nimport * as PROPS from './enums/reactive-props';\nimport {\n    transformDataModels,\n    getDimensionMeasureMap,\n    attachDataToLayers,\n    attachAxisToLayers,\n    unionDomainFromLayers\n} from './helper';\n\nimport { createGridLineLayer, attachDataToGridLineLayers } from './helper/grid-lines';\n\nconst removeExitLayers = (layerDefs, context) => {\n    const layersMap = context._layersMap;\n    const markSet = {};\n    layerDefs.forEach((layerDef, i) => {\n        const id = `${layerDef.mark}-${i}`;\n        markSet[id] = true;\n    });\n\n    for (const key in layersMap) {\n        if (!(key in markSet)) {\n            layersMap[key].forEach(layer => layer.remove());\n            delete layersMap[key];\n        }\n    }\n};\n\nexport const calculateDomainListener = (context, namespace) => () => {\n    const domain = unionDomainFromLayers(context.layers(), context.fields(), context._layerAxisIndex,\n        context.data().getFieldsConfig());\n    context.store().commit(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${namespace}`, domain);\n};\n\nexport const listenerMap = (context, namespace, metaInf) => ([\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.CONFIG}`],\n        listener: ([, config]) => {\n            config && context.firebolt().config(config.interaction);\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.LAYERDEFS}`],\n        listener: ([, layerDefs]) => {\n            const fieldsVal = context.fields();\n            if (layerDefs && fieldsVal) {\n                removeExitLayers(layerDefs, context);\n                const axes = context.axes();\n                if (axes.x || axes.y) {\n                    const props = [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${metaInf.rowIndex}0`,\n                        `${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${metaInf.colIndex}0`];\n                    const store = context.store();\n                    const listenerInf = {\n                        namespace: namespace.local,\n                        key: 'gridLineListener'\n                    };\n                    store.unsubscribe(listenerInf);\n                    store.registerChangeListener(props, () => {\n                        attachDataToGridLineLayers(context);\n                    }, false, listenerInf);\n                }\n\n                context.addLayer(layerDefs);\n                context._lifeCycleManager.notify({\n                    client: context.layers(),\n                    action: 'initialized',\n                    formalName: 'layer'\n                });\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.DATA}`],\n        listener: ([, dataModel]) => {\n            const axesObj = context.axes();\n            const timeDiffs = {};\n            const timeDiffsByField = {};\n\n            Object.entries(temporalFields(dataModel)).forEach(([fieldName, fieldObj]) => {\n                timeDiffsByField[fieldName] = fieldObj.minimumConsecutiveDifference();\n            });\n\n            Object.entries(context.fields()).forEach(([type, [field]]) => {\n                if (field) {\n                    const timeDiff = timeDiffsByField[`${field}`];\n                    if (timeDiff) {\n                        timeDiffs[type] = timeDiff;\n                        axesObj[type].forEach(axis => axis.minDiff(timeDiff));\n                    }\n                }\n            });\n\n            context._timeDiffsByField = timeDiffsByField;\n            context._timeDiffs = timeDiffs;\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.CONFIG}`],\n        listener: () => {\n            createGridLineLayer(context);\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.DATA}`,\n            `${namespace.local}.${PROPS.TRANSFORM}`],\n        listener: ([, dataModel], [, transform]) => {\n            if (dataModel) {\n                const dataModels = transformDataModels(transform, dataModel);\n                context.store().commit(`${namespace.local}.${PROPS.TRANSFORMEDDATA}`, dataModels);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.TRANSFORMEDDATA}`,\n            `${namespace.local}.${PROPS.LAYERS}`],\n        listener: ([, transformedData], [, layers]) => {\n            const layerAxisIndexVal = context._layerAxisIndex;\n            const axesVal = context.axes();\n            const dataModel = context.data();\n            if (transformedData && layers && axesVal && layerAxisIndexVal) {\n                context._lifeCycleManager.notify({ client: layers, action: 'beforeupdate', formalName: 'layer' });\n                const model = context.store().model;\n                layers.forEach(lyr => lyr.disableUpdate());\n                attachDataToLayers(layers, dataModel, transformedData);\n                model.lock();\n                layers.forEach((lyr) => {\n                    lyr.enableUpdate().domain(lyr._domain);\n                });\n                model.unlock();\n                context._dimensionMeasureMap = getDimensionMeasureMap(layers,\n                    dataModel.getFieldsConfig(), context.retinalFields());\n                attachAxisToLayers(axesVal, layers, layerAxisIndexVal);\n                context._lifeCycleManager.notify({ client: layers, action: 'updated', formalName: 'layer' });\n            }\n        }\n    }\n]);\n","import { FACET_BY_FIELDS, RETINAL_FIELDS, PARENT_ALIAS, LAYERS, CACHED_DATA } from './enums/constants';\n\nexport const PROPS = {\n    [FACET_BY_FIELDS]: {},\n    [RETINAL_FIELDS]: {},\n    [PARENT_ALIAS]: {},\n    [LAYERS]: {},\n    [CACHED_DATA]: {},\n    detailFields: {},\n    axes: {\n        defaultValue: {\n            x: [],\n            y: []\n        }\n    },\n    fields: {},\n    metaInf: {},\n    registry: {},\n    width: {},\n    height: {},\n    parentContainerInf: {},\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import { CommonProps } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { DATA } from '../enums/reactive-props';\n\nexport const initSideEffects = (sideEffects, firebolt) => {\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            sideEffects[key] instanceof SpawnableSideEffect && sideEffects[key].drawingContext(() => {\n                const context = firebolt.context;\n                return context.getDrawingContext();\n            });\n            sideEffects[key].valueParser(firebolt.context.valueParser());\n        }\n    }\n};\n\nexport const clearActionHistory = (context) => {\n    const actionHistory = context._actionHistory;\n    for (const key in actionHistory) {\n        if (actionHistory[key].isMutableAction) {\n            delete context._actionHistory[key];\n        }\n    }\n};\n\nexport const dispatchQueuedSideEffects = (context) => {\n    const queuedSideEffects = context._queuedSideEffects;\n    Object.entries(queuedSideEffects).forEach((entry) => {\n        const sideEffect = entry[1];\n        context.dispatchSideEffect(sideEffect.name, ...sideEffect.params);\n    });\n    context._queuedSideEffects = {};\n};\n\nexport const registerListeners = (firebolt) => {\n    const context = firebolt.context;\n    const store = context.store();\n\n    store.registerImmediateListener([`local.units.${context.metaInf().namespace}.${DATA}`], (dataModel) => {\n        const dm = dataModel[1];\n\n        if (dm) {\n            firebolt.createSelectionSet(firebolt.context.data().getData().uids);\n            firebolt.initializeSideEffects();\n            const originalData = firebolt.context.cachedData()[0];\n            firebolt.attachPropagationListener(originalData);\n        }\n    });\n\n    store.registerChangeListener([`local.units.${context.metaInf().namespace}.${DATA}`], () => {\n        if (!firebolt.context.mount()) {\n            const originalData = firebolt.context.cachedData()[0];\n            originalData.unsubscribe('propagation');\n        }\n    });\n\n    context._layerDeps.throwback.registerChangeListener([CommonProps.ON_LAYER_DRAW],\n        ([, onlayerdraw]) => {\n            if (onlayerdraw) {\n                dispatchQueuedSideEffects(firebolt);\n                clearActionHistory(firebolt);\n            }\n        });\n};\n","import { DimensionSubtype } from 'muze-utils';\n\nconst getRangeFromData = (instance, selectionDataModel, propConfig) => {\n    let criteria;\n    const dataObj = selectionDataModel[0].getData();\n    const propCriteria = propConfig.payload.criteria;\n    const sourceIdentifiers = propConfig.sourceIdentifiers;\n    const schema = dataObj.schema;\n    const fieldMap = instance.data().getFieldsConfig();\n    const data = dataObj.data;\n    const isActionSourceSame = instance.id() === propConfig.sourceId;\n\n    if (isActionSourceSame) {\n        criteria = propCriteria;\n    } else {\n        criteria = (sourceIdentifiers !== null) ? schema.reduce((acc, obj, index) => {\n            let range;\n            const field = obj.name;\n            const fieldObj = fieldMap[field];\n            const type = fieldObj && (fieldObj.def.subtype ? fieldObj.def.subtype : fieldObj.def.type);\n            const isDimension = type === DimensionSubtype.CATEGORICAL;\n\n            if (!fieldObj) {\n                return acc;\n            }\n\n            if (!isDimension) {\n                range = [Math.min(...data.map(d => d[index])), Math.max(...data.map(d => d[index]))];\n            } else {\n                range = data.map(d => d[index]);\n            }\n            acc[field] = range;\n            return acc;\n        }, {}) : null;\n    }\n    return criteria;\n};\n\nexport const payloadGenerator = {\n    brush: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const criteria = getRangeFromData(instance, selectionDataModel, propConfig);\n        const payload = Object.assign({}, propPayload);\n        payload.criteria = criteria;\n        return payload;\n    },\n\n    __default: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const sourceIdentifiers = propConfig.sourceIdentifiers;\n        const dataObj = selectionDataModel[0].getData();\n        let schema = dataObj.schema;\n        const payload = Object.assign({}, propPayload);\n        schema = dataObj.schema;\n        const data = dataObj.data;\n        const sourceFields = schema.map(d => d.name);\n        payload.criteria = !sourceIdentifiers && selectionDataModel[0].isEmpty() ? null :\n            [sourceFields, ...data];\n        payload.sourceFields = sourceIdentifiers ? sourceIdentifiers.getSchema().map(d => d.name) : [];\n        return payload;\n    }\n};\n\n","import { isSimpleObject, FieldType, DataModel } from 'muze-utils';\n\nconst getModelWithFacetData = (dm, data) => {\n    const dataObj = dm.getData();\n    const schema1 = dataObj.schema;\n    const data1 = dataObj.data;\n    const jsonData = [];\n    const schema2 = data[0].map(d => ({\n        name: `${d}`,\n        type: FieldType.DIMENSION\n    }));\n    const data2 = data[1];\n\n    data1.forEach((d) => {\n        const tuple = {};\n        schema1.forEach((obj, i) => {\n            tuple[obj.name] = d[i];\n        });\n        schema2.forEach((obj, i) => {\n            tuple[obj.name] = data2[i];\n        });\n        jsonData.push(tuple);\n    });\n\n    return new DataModel(jsonData, [...schema1, ...schema2]);\n};\n\nexport const propagateValues = (instance, action, config = {}) => {\n    let propagationData;\n    const payload = config.payload;\n    const selectionSet = config.selectionSet;\n    const propagationFieldInf = config.propagationFields[action] || {};\n    const propagationFields = propagationFieldInf.fields || [];\n    const append = propagationFieldInf.append;\n    const criteria = payload.criteria;\n    const context = instance.context;\n    const dataModel = context.cachedData()[0];\n    const sourceId = context.id();\n    const sideEfffects = instance.sideEffects();\n    const behaviourEffectMap = instance._behaviourEffectMap;\n    const mergedModel = selectionSet.mergedEnter.model;\n    const fieldsConfig = dataModel.getFieldsConfig();\n    payload.sourceUnit = sourceId;\n    payload.action = action;\n    payload.sourceCanvas = context.parentAlias();\n    const propagationBehaviourMap = instance._propagationBehaviourMap;\n    const propagationBehaviour = propagationBehaviourMap[action] || action;\n\n    let propFields = [];\n    if (criteria === null) {\n        propagationData = null;\n    } else if (isSimpleObject(criteria)) {\n        propFields = Object.keys(criteria || {});\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    } else {\n        propFields = criteria[0];\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    }\n\n    const facetByFields = context.facetByFields();\n    if (propagationData !== null && propagationFields.length) {\n        const fields = propagationData.getData().schema.map(d => d.name);\n        propagationData = getModelWithFacetData(propagationData, facetByFields);\n        propFields = append ? [...fields, ...propagationFields] : propagationFields;\n        propagationData = propagationData.project(propFields);\n    }\n\n    let propagateInterpolatedValues = false;\n    if (propFields.length && propFields.every(field => fieldsConfig[field] &&\n        fieldsConfig[field].def.type === FieldType.MEASURE)) {\n        propagateInterpolatedValues = true;\n    }\n\n    const groupId = context.parentAlias();\n    payload.action = action;\n    const behaviourInstance = instance._actions.behavioural[propagationBehaviour];\n    const isMutableAction = behaviourInstance ? behaviourInstance.constructor.mutates() : false;\n\n    const filterFn = (entry, propagationConf) => {\n        const effects = behaviourEffectMap[entry.config.action];\n        const mutates = entry.config.groupId ?\n            effects.some(d => sideEfffects[d.name || d].constructor.mutates()) : true;\n        return entry.config.groupId !== propagationConf.groupId && mutates;\n    };\n\n    const sourceBehaviour = instance._actions.behavioural[action];\n    const mutates = sourceBehaviour ? sourceBehaviour.constructor.mutates() : false;\n    let propConfig = {\n        payload,\n        action,\n        criteria: propagationData,\n        isMutableAction: mutates,\n        propagateInterpolatedValues,\n        groupId,\n        sourceId: mutates ? groupId : sourceId,\n        filterFn,\n        enabled: (propConf, firebolt) => (action !== propagationBehaviour ?\n            propConf.payload.sourceCanvas === firebolt.context.parentAlias() : true)\n    };\n\n    dataModel.propagate(propagationData, propConfig, true);\n\n    if (action !== propagationBehaviour) {\n        propConfig = {\n            payload,\n            sourceId: isMutableAction ? groupId : sourceId,\n            criteria: propagationData,\n            isMutableAction,\n            propagateInterpolatedValues,\n            action: propagationBehaviour,\n            groupId,\n            applyOnSource: action === propagationBehaviour,\n            enabled: (propConf, firebolt) => propConf.payload.sourceCanvas !== firebolt.context.parentAlias(),\n            filterFn\n        };\n\n        dataModel.propagate(propagationData, propConfig, true, {\n            filterImmutableAction: (actionInf, propInf) => actionInf.groupId !== propInf.groupId\n        });\n    }\n};\n","import { FieldType } from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\nimport { registerListeners } from './helper';\nimport { payloadGenerator } from './payload-generator';\nimport { propagateValues } from './data-propagator';\n\n/**\n * This class manages the interactions of visual unit. It associates physical actions with\n * behavioural actions. It also propagates the behavioural actions to other datamodels.\n */\nexport default class UnitFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        registerListeners(this);\n    }\n\n    propagate (behaviour, payload, selectionSet, sideEffects) {\n        propagateValues(this, behaviour, {\n            payload,\n            selectionSet,\n            sideEffects,\n            propagationFields: this._propagationFields\n        });\n    }\n\n    getApplicableSideEffects (sideEffects, payload, propagationInf) {\n        const context = this.context;\n        const unitId = context.id();\n        const aliasName = context.parentAlias();\n        const propagationSourceCanvas = propagationInf.propPayload && propagationInf.propPayload.sourceCanvas;\n        const sourceUnitId = propagationInf.propPayload && propagationInf.propPayload.sourceUnit;\n        const sourceSideEffects = this._sourceSideEffects;\n        const sideEffectInstances = this.sideEffects();\n        const actionOnSource = sourceUnitId ? sourceUnitId === unitId : true;\n\n        const applicableSideEffects = payload.sideEffects ? [{\n            effects: payload.sideEffects,\n            behaviours: [payload.action]\n        }] : sideEffects;\n        applicableSideEffects.forEach((d) => {\n            let mappedEffects = d.effects;\n            mappedEffects = mappedEffects.filter((se) => {\n                const mutates = sideEffectInstances[se.name || se].constructor.mutates();\n                if (mutates && propagationInf.isMutableAction === false) {\n                    return false;\n                }\n                if (!actionOnSource && payload.criteria !== null) {\n                    const sideEffectChecker = sourceSideEffects[se.name || se];\n                    return sideEffectChecker ? sideEffectChecker(propagationInf.propPayload, context) : true;\n                }\n                if (propagationSourceCanvas === aliasName || actionOnSource) {\n                    return se.applyOnSource !== false;\n                }\n\n                return true;\n            });\n            d.effects = mappedEffects;\n        });\n        return applicableSideEffects;\n    }\n\n    shouldApplySideEffects (propagate) {\n        return propagate === false;\n    }\n\n    onDataModelPropagation () {\n        return (data, config) => {\n            let isSourceFieldPresent = true;\n            let isMutableAction = false;\n            const propPayload = config.payload;\n            const sourceIdentifiers = config.sourceIdentifiers;\n            const enabledFn = config.enabled;\n            const action = config.action;\n            const payloadFn = payloadGenerator[action] || payloadGenerator.__default;\n\n            if (sourceIdentifiers) {\n                const fieldsConfig = sourceIdentifiers.getFieldsConfig();\n                const sourceIdentifierFields = Object.keys(fieldsConfig);\n                const propFields = Object.keys(data[0].getFieldsConfig());\n                if (!Object.values(fieldsConfig).some(d => d.def.type === FieldType.MEASURE)) {\n                    isSourceFieldPresent = sourceIdentifierFields.some(d => propFields.indexOf(d) !== -1);\n                }\n            }\n\n            const payload = payloadFn(this.context, data, config);\n            const sourceBehaviours = this._sourceBehaviours;\n            const filterFn = sourceBehaviours[action] || sourceBehaviours['*'];\n            let enabled = true;\n\n            if (filterFn) {\n                enabled = filterFn(propPayload || {}, this.context);\n            }\n\n            if (enabledFn) {\n                enabled = enabledFn(config, this) && enabled !== false;\n            }\n\n            if (enabled) {\n                const effects = this._behaviourEffectMap[action];\n                const sideEffectInstances = this.sideEffects();\n                isMutableAction = config.groupId ?\n                    effects.some(d => sideEffectInstances[d.name || d].constructor.mutates()) : config.isMutableAction;\n\n                const propagationInf = {\n                    propagate: false,\n                    data,\n                    propPayload,\n                    sourceIdentifiers,\n                    persistent: false,\n                    isSourceFieldPresent,\n                    sourceId: config.propagationSourceId,\n                    isMutableAction: config.isMutableAction\n                };\n\n                this._actionHistory[action] = {\n                    payload,\n                    propagationInf,\n                    isMutableAction\n                };\n                this.dispatchBehaviour(action, payload, propagationInf);\n            }\n        };\n    }\n\n    prepareSelectionSets (behaviours) {\n        const data = this.context.data();\n        if (data) {\n            this.createSelectionSet(data.getData().uids, behaviours);\n        }\n        return this;\n    }\n\n    initializeSideEffects () {\n        if (this.context.data()) {\n            super.initializeSideEffects();\n        }\n        return this;\n    }\n\n    remove () {\n        this.context.cachedData()[0].unsubscribe('propagation');\n        return this;\n    }\n}\n","import { layerFactory } from '@chartshq/visual-layer';\nimport {\n    Store,\n    setAttrs,\n    getUniqueId,\n    getQualifiedClassName,\n    selectElement,\n    transactor,\n    makeElement,\n    registerListeners,\n    generateGetterSetters,\n    getDataModelFromIdentifiers,\n    isSimpleObject,\n    transposeArray,\n    CommonProps,\n    toArray,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { actionBehaviourMap } from './firebolt/action-behaviour-map';\nimport {\n    renderLayers,\n    getNearestDimensionalValue,\n    removeLayersBy,\n    getLayersBy,\n    getLayerFromDef,\n    getLayerAxisIndex,\n    sanitizeLayerDef,\n    createSideEffectGroup,\n    resolveEncodingTransform,\n    createRenderPromise\n} from './helper';\nimport { renderGridLineLayers } from './helper/grid-lines';\nimport localOptions from './local-options';\nimport { listenerMap, calculateDomainListener } from './listener-map';\nimport {\n    DOMAIN\n} from './enums/reactive-props';\nimport { PROPS } from './props';\nimport UnitFireBolt from './firebolt';\nimport { initSideEffects } from './firebolt/helper';\nimport './styles.scss';\n\nconst FORMAL_NAME = 'unit';\n\n/**\n * Visual Unit is hierarchical component created by {@link VisualGroup}. This component accepts layer definitions\n * and creates concrete layer instances from them, binds data and attaches axis to them. It also retreives the domain\n * from the layers and unions them and sets them on corresponding axis instances. This also creates the parent svg\n * groups for all the layers and delegates the rendering to all the layers.\n *\n * @public\n * @module VisualUnit\n * @class\n */\nexport default class VisualUnit {\n\n    /**\n     * Creates instance of visualization unit.\n     *\n     * @param {Object} registry  Component registry\n     * @param {Object} dependencies  Dependencies required by visual unit.\n     */\n    constructor (registry, dependencies) {\n        this._id = getUniqueId();\n        this._dependencies = dependencies;\n        this._layerDeps = {\n            throwback: new Store({\n                [CommonProps.ON_LAYER_DRAW]: false\n            }),\n            smartLabel: dependencies.smartLabel,\n            lifeCycleManager: dependencies.lifeCycleManager\n        };\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        createRenderPromise(this);\n        this._layerDeps.throwback.registerChangeListener([CommonProps.ON_LAYER_DRAW], () => {\n            this._renderedResolve();\n            this._lifeCycleManager.notify({ client: this.layers(), action: 'drawn', formalName: 'layer' });\n        });\n\n        this._lifeCycleManager = dependencies.lifeCycleManager;\n        this._layersMap = {};\n        this._gridLinesSelection = {};\n        this._gridBandsSelection = {};\n        this._gridLines = [];\n        this._gridBands = [];\n        this._layerNamespaces = {};\n        this._layerAxisIndex = {};\n        this._transformedDataModels = {};\n        layerFactory.setLayerRegistry(registry.layerRegistry);\n        generateGetterSetters(this, PROPS);\n        this.registry(registry);\n        this.cachedData([]);\n    }\n\n    static formalName () {\n        return FORMAL_NAME;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: {}\n            },\n            localOptions\n        ];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            const metaInf = this.metaInf();\n            this.store().append(`${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}`, {\n                [`${metaInf.namespace}`]: null\n            });\n            const localNs = `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`;\n            transactor(this, localOptions, this.store().model, {\n                namespace: localNs\n            });\n            registerListeners(this, listenerMap, {\n                local: localNs,\n                global: STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE\n            }, {\n                rowIndex: metaInf.rowIndex,\n                colIndex: metaInf.colIndex\n            });\n            this.firebolt(new UnitFireBolt(this, {\n                physical: physicalActions,\n                behavioural: behaviouralActions,\n                physicalBehaviouralMap: actionBehaviourMap\n            }, sideEffects, behaviourEffectMap));\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Static helper for creates a unit instance\n     *\n     * @param {Object} [id] optional unique identifier for a unit; , id is calculated internally\n     * @param {DataModel} data instance of datamodel\n     * @param {Array.<Layer>} layers layer configuration\n     * @param {Object} config configurtion for the visual unit\n     * @return {VisualUnit} Instance of a unit\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this visual unit. Firebolt dispatches the behavioural actions\n     * when any physical action happens on the elements of visual unit.\n     *\n     * @public\n     *\n     * @return {Firebolt} Instance of firebolt.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Returns the unique id of this visual unit.\n     *\n     * @public\n     * @return {string} Unique identifier.\n     */\n    id () {\n        return this._id;\n    }\n\n    lockModel () {\n        this._store.model.lock();\n        return this;\n    }\n\n    unlockModel () {\n        this._store.model.unlock();\n        return this;\n    }\n\n    timeDiffsByField (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._timeDiffsByField;\n    }\n\n    /**\n     * Renders the visual unit. It creates the layout and renders the axes and layers.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    render (container) {\n        const config = this.config();\n        const { className, defClassName, sideEffectClassName, classPrefix } = config;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const width = this.width();\n        const height = this.height();\n        const containerSelection = selectElement(container).style('position', 'relative');\n\n        this._rootSvg = makeElement(containerSelection, 'svg', [null], className)\n                        .style('width', `${width}px`).style('height', `${height}px`);\n\n        const node = this._rootSvg.node();\n        setAttrs(node, {\n            width,\n            height,\n            class: qualifiedClassName.join(' ')\n        });\n        renderGridLineLayers(this, node);\n        renderLayers(this, node, this.layers(), {\n            width,\n            height\n        });\n        this._sideEffectGroup = createSideEffectGroup(node, `${classPrefix}-${sideEffectClassName}`);\n        const firebolt = this.firebolt();\n        initSideEffects(firebolt.sideEffects(), firebolt);\n        return this;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Caches all the datamodels in an array from the next `data()` call on visual unit until `clearCaching()` or\n     * `resetData()` is called on it.\n     *\n     * @public\n     * @return {VisualUnit} Instance of visual unit.\n     */\n\n    enableCaching () {\n        this._cache = true;\n        return this;\n    }\n\n    /**\n     * Clears all the previous cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    clearCaching () {\n        this._cache = false;\n        this.cachedData([this.cachedData()[0]]);\n        return this;\n    }\n\n    /**\n     * Returns the drawing information from visual unit.Drawing context contains the dimensions of unit and the svg\n     * container of the visual unit.\n     *\n     * @public\n     *\n     * @return {Object} Drawing information.\n     *      ```\n     *          {\n     *              htmlContainer: // Html container of svg container of the visual unit\n     *              svgContainer: // Root svg container\n     *              width: // Width of the visual unit\n     *              height: // Height of the visual unit\n     *              sideEffectGroup: // Svg group for drawing side effect elements.\n     *              parentContainer: // Parent html container of the visual unit.\n     *              xOffset: // x offset space from the starting x position of the container,\n     *              yOffset: // y offset space from the starting y position of the container\n     *          }\n     *      ```\n     */\n    getDrawingContext () {\n        const rootSvg = this._rootSvg && this._rootSvg.node();\n        const width = this.width();\n        const height = this.height();\n        const { el, dimensions } = this.parentContainerInf();\n        return {\n            htmlContainer: this.mount(),\n            svgContainer: rootSvg,\n            width,\n            height,\n            sideEffectGroup: this._sideEffectGroup,\n            parentContainer: el,\n            parentContainerDimensions: dimensions,\n            xOffset: 0,\n            yOffset: 0\n        };\n    }\n\n    /**\n     * Returns the serialized configuration of visual unit.\n     *\n     * @return {Object} serialized configuration\n     */\n    serialize () {\n        return {\n            layers: this.layers().map(layer => layer.serialize()),\n            config: this.config(),\n            axes: this.axes().map(axis => axis.serialize())\n        };\n    }\n\n    mount (...mount) {\n        if (mount.length) {\n            this._mount = mount[0];\n            this.render(mount[0]);\n            this.firebolt().mapActionsAndBehaviour();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     * Adds a new layer to the visual unit. It takes a layer definition and creates layer instances from them. It does\n     * not render the layers. It returns the layer instances in an array. If the layer definition is a composite layer,\n     * then multiple layer instances will be returned in the array.\n     *\n     * To add a layer in the unit,\n     * ```\n     *      unit.addLayer({\n     *          name: 'bullet',\n     *          mark: 'bar',\n     *          encoding: {\n     *              x: 'Year',\n     *              y: 'Acceleration',\n     *              color: 'Origin'\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} layerDef Definition of new layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    addLayer (layerDefinition) {\n        const layerDefinitions = sanitizeLayerDef(toArray(layerDefinition));\n\n        const layersMap = this._layersMap;\n        const markSet = {};\n        const store = {\n            layers: {},\n            components: {\n                unit: this\n            }\n        };\n        let layerIndex = 0;\n        let startIndex = [].concat(...Object.values(this._layersMap)).length;\n        const metaInf = this.metaInf();\n        const props = this._layerNamespaces;\n        const layers = layerDefinitions.sort((a, b) => a.order - b.order).reduce((layersArr, layerDef) => {\n            const definition = layerDef.def;\n            const markId = definition.name;\n            const defArr = toArray(definition);\n            const namespaces = [];\n            defArr.forEach((def) => {\n                def.order = layerDef.order + layerIndex;\n                const namespace = `${metaInf.namespace}${startIndex}`;\n                if (!layersMap[markId]) {\n                    startIndex++;\n                    if (definition.calculateDomain !== false) {\n                        props[`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${DOMAIN}.${namespace}`] = true;\n                    }\n                }\n                namespaces.push(namespace);\n            });\n            layerIndex += defArr.length;\n            const instances = getLayerFromDef(this, definition, layersMap[markId], namespaces);\n            store.layers = Object.assign(store.layers, instances);\n            const instanceValues = Object.values(instances);\n            layersArr = layersArr.concat(...instanceValues);\n            layersMap[markId] = instanceValues;\n            markSet[markId] = markId;\n            return layersArr;\n        }, []);\n\n        store.unit = this;\n        const layerdeps = {};\n        const layersArr = [].concat(...Object.values(this._layersMap));\n\n        layersArr.forEach((layer) => {\n            const alias = layer.alias();\n            store.layers[alias] = layer;\n            layerdeps[alias] = [];\n        });\n        layers.forEach((layer) => {\n            const depArr = resolveEncodingTransform(layer, store);\n            layerdeps[layer.alias()] = depArr;\n        });\n\n        this._layerDepOrder = layerdeps;\n        this._layerAxisIndex = Object.assign(this._layerAxisIndex, getLayerAxisIndex(layers, this.fields()));\n        const stateStore = this.store();\n\n        stateStore.unsubscribe({\n            key: 'calculateDomainListener',\n            namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`\n        });\n        stateStore.registerImmediateListener(Object.keys(props), calculateDomainListener(this, metaInf.namespace),\n            false, {\n                key: 'calculateDomainListener',\n                namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`\n            });\n        this.layers(layersArr);\n        return layers;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    remove () {\n        const lifeCycleManager = this._dependencies.lifeCycleManager;\n        lifeCycleManager.notify({ client: this, action: 'beforeremove', formalName: 'unit' });\n        this.store().unsubscribe({\n            namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${this.metaInf().namespace}`\n        });\n        selectElement(this.mount()).remove();\n        this.firebolt().remove();\n        // Remove layers\n        lifeCycleManager.notify({ client: this.layers(), action: 'beforeremove', formalName: 'layer' });\n        this.layers().forEach(layer => layer.remove());\n        lifeCycleManager.notify({ client: this.layers(), action: 'removed', formalName: 'layer' });\n        lifeCycleManager.notify({ client: this, action: 'removed', formalName: 'unit' });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} identifiers\n     *\n     * @memberof VisualUnit\n     */\n    getDataModelFromIdentifiers (identifiers, mode, parentModel) {\n        if (identifiers === null) {\n            return null;\n        }\n        const dataModel = parentModel || this.data();\n        return getDataModelFromIdentifiers(dataModel, identifiers, mode);\n    }\n\n    /**\n     * Resets the data of visual unit to original data model. It also clears the cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    resetData () {\n        this.data(this.cachedData()[0]);\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getSourceInfo () {\n        return {\n            dimensionMeasureMap: this._dimensionMeasureMap,\n            fields: this.fields(),\n            data: this.data(),\n            axes: this.axes()\n        };\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getDefaultTargetContainer () {\n        const { classPrefix, defClassName } = this.config();\n        return [`.${classPrefix}-${defClassName}`];\n    }\n\n    /**\n     * Returns an array of layer instances which matches the supplied mark type.\n     *\n     * @public\n     *\n     * @param {string} type Mark type of layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    getLayersByType (type) {\n        const layers = getLayersBy(this.layers(), 'type', type);\n        return layers;\n    }\n\n    /**\n     * Returns the layer instance which matches the supplied layer name. If no layer is found, then it returns\n     * undefined.\n     *\n     * @public\n     * @param {string} name Name of layer.\n     *\n     * @return {VisualUnit} Layer instance.\n     */\n    getLayerByName (name) {\n        const layers = getLayersBy(this.layers(), 'name', name);\n        return layers[0];\n    }\n\n    /**\n     * Returns the point located nearest to the supplied x and y position. It returns the unique identifiers of the\n     * point. This function also accepts an additional configuration `getAllPoints` inside `config` object in the third\n     * argument which if set to true, then it returns the identifiers of all the points which falls on the nearest\n     * x value or y value if any one of the field is a dimension. Additionally, a target property is also returned\n     * which contains the identifier of the nearest point. If no nearest point is found, then it returns identifier\n     * as null.\n     *\n     * @public\n     *\n     * @param {number} x X Position of the point from where nearest point is to be found.\n     * @param {number} y Y Position of the point from where nearest point is to be found.\n     * @param {Object} config Additional configuration options.\n     * @param {boolean} config.getAllPoints If true, then returns all the points nearest to the x value or y value if\n     * it is dimension.\n     * @param {Object} config.data Data associated with the nearest point.\n     * @return {Object} Nearest point information\n     * ```\n     *      {\n     *          id: [['Origin'], ['USA'], ['Japan']], // Identifiers of all the points closest to the x value.\n     *          target: [['Origin'], ['Japan']] // Identifier of the nearest point.\n     *      }\n     * ```\n     */\n    getNearestPoint (x, y, config) {\n        let pointObj = {\n            id: null\n        };\n        const dimValue = getNearestDimensionalValue(this, {\n            x,\n            y\n        });\n\n        if (dimValue !== null && config.getAllPoints) {\n            pointObj.id = dimValue;\n            const pointInf = this.getMarkInfFromLayers(x, y, config);\n            pointObj.target = pointInf && pointInf.id ? pointInf.id : pointObj.id;\n            return pointObj;\n        }\n\n        const markInf = this.getMarkInfFromLayers(x, y, config) || { id: null };\n        pointObj = Object.assign({}, markInf);\n\n        pointObj.target = markInf.id;\n        return pointObj;\n    }\n\n    getMarkInfFromLayers (x, y, args) {\n        const layers = this.layers();\n        const len = layers.length;\n        let point = null;\n        // Iterate through the layers array and fetch the nearest point from each layer. If a valid\n        // nearest point is found from any layer, then return that point.\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            const config = layer.config();\n            if (config.interactive !== false) {\n                point = layer.getNearestPoint(x, y, args);\n            }\n            if (point) {\n                return point;\n            }\n        }\n        return point;\n    }\n\n    /**\n     * Get the information of all the marks such as x, y position and size from supplied identifiers. It\n     * returns an array of points whose data matches the given identifiers.\n     *\n     * @public\n     *\n     * @param {Array|Object} identifiers Field names and their corresponding values.\n     * ```\n     * identifiers can be given in an array of array,\n     *      ['Origin', 'Name'], // Names of the fields supplied in first array\n     *      ['USA', 'ford'], // Data values of each field supplied in rest of the arrays.\n     *      ['Japan', 'ford']\n     * or in an object,\n     *      {\n     *          Origin: ['USA']\n     *      }\n     * ```\n     * @param {Object} config Optional configurations which decides which information of the mark will\n     * be retrieved.\n     * @param {boolean} [config.getAllAttrs = false] If true, then returns all the information of each mark.\n     * @param {boolean} [config.getBBox = false] If true, then returns the bounding box of each mark.\n     *\n     * @return {Array} Array of objects containing the information of each point.\n     * ```\n     * By default, the method returns the array of points in this structure,\n     *      [\n     *          {\n     *              x: 20,\n     *              y: 100,\n     *              width: 200,\n     *              height: 100\n     *          }\n     *      ]\n     * If 'config.getAllAttrs' is true, then it returns all the information of each mark,\n     *      [\n     *      // Positions of mark on initial state of transition.\n     *          enter: {\n     *              x: 0,\n     *              y: 0\n     *          },\n     *          // Final positions of the mark\n     *          update: {\n     *              x: 20,\n     *              y: 10\n     *          },\n     *          style: // css styles of each mark\n     *          source: [200, 'USA'] // Row information of each mark\n     *          id: 20 // Row id of each mark\n     *      ]\n     * ```\n     */\n    getPlotPointsFromIdentifiers (identifiers, config = {}) {\n        let points = [];\n        let parsedIdentifiers = identifiers;\n        if (identifiers === null) {\n            return [];\n        }\n        const layers = this.layers();\n        const len = layers.length;\n        if (isSimpleObject(identifiers)) {\n            parsedIdentifiers = [Object.keys(identifiers)];\n            parsedIdentifiers = [...parsedIdentifiers, ...transposeArray(Object.values(identifiers))];\n        }\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            if (layer.config().interactive !== false) {\n                points = [...points, ...layer.getPointsFromIdentifiers(parsedIdentifiers, config)];\n            }\n        }\n        return points;\n    }\n\n    /**\n     * Removes the layer instance which matches the supplied layer name.\n     *\n     * @public\n     * @param {string} name Name of layer\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayerByName (name) {\n        removeLayersBy('name', name);\n        return this;\n    }\n\n    /**\n     * Removes all the layer instances which matches the supplied mark type.\n     *\n     * @public\n     * @param {string} type Mark type of layer.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayersByType (type) {\n        removeLayersBy('type', type);\n        return this;\n    }\n}\n","import { DataModel } from 'muze-utils';\n\nimport { retriveDomainFromData } from './group-utils';\n\n/**\n * Gets name of fields form the variables\n *\n * @param {*} fields1\n * @param {*} [fields2=[]]\n *\n */\nconst getFieldNames = (fields1, fields2 = []) => [fields1, fields2].map(fields => fields.reduce((acc, d) => {\n    acc = [...acc, ...d.getMembers()];\n    return acc;\n}, []));\n\n/**\n * Creates a selected datamodel from a parent datamodel and a set of field names\n *\n * @param {Object} datamodel provided as input\n * @param {Array} fieldNames schema  names\n * @param {Array} fieldValues values of those schema names to be selected\n * @return {Object} creates a new selected datamodel\n */\nconst createSelectedDataModel = (datamodel, fieldNames, fieldValues) =>\n    datamodel.select(fields => fieldNames.every((field, k) => fields[field].value === fieldValues[k]));\n\n/**\n *\n *\n * @param {*} facets\n * @param {*} keyArray\n *\n */\nconst uniqueKeyGenerator = (keyArray, context, depth = 0, val = []) => {\n    const {\n        facets,\n        dataModel,\n        uniqueValues\n    } = context;\n\n    // Get unique keys for the next depth recursively if required\n    if (facets[depth + 1]) {\n        const field = facets[depth];\n        uniqueValues.forEach((value) => {\n            const newDm = dataModel.select(fields => fields[field].value === value);\n            const nextDepthUniqueValues = retriveDomainFromData(newDm, facets[depth + 1]);\n            const newContext = {\n                facets,\n                dataModel: newDm,\n                uniqueValues: nextDepthUniqueValues\n            };\n\n            uniqueKeyGenerator(keyArray, newContext, depth + 1, [...val, value]);\n        });\n    } else {\n        uniqueValues.forEach((value) => {\n            keyArray.push([...val, value]);\n        });\n    }\n};\n\n/**\n * projects row model based on the set of row and/or column and other projection fields\n *\n * @param {Object} datamodel provided as input\n * @return {Object} Projected datamodel\n */\nconst projectRows = (datamodel, projections) => {\n    const {\n        allColumnProjections,\n        rowProjections,\n        optionalProjections\n    } = projections;\n\n    if (rowProjections.length > 0) {\n        return rowProjections.map((projectFields) => {\n            const [projFieldNames, colProjFieldNames] = getFieldNames(projectFields, allColumnProjections);\n            return datamodel.project([...projFieldNames, ...colProjFieldNames, ...optionalProjections]);\n        });\n    }\n    return [datamodel];\n};\n\n/**\n * Adds the datamodels to current row index based on column fields\n *\n * @param {Array} context current context\n * @param {Array} valueCellCreator List of facets applied to the current datamodel\n */\nconst pushToMatrix = (context, valueCellCreator) => {\n    let cells = [];\n    const {\n        matrix,\n        datamodel,\n        facetInfo,\n        fieldInfo\n    } = context;\n    // Get projected fields for current row\n    const {\n        rowProjections,\n        colProjections,\n        optionalProjections\n    } = fieldInfo;\n    const {\n        rowIndex,\n        columnIndex\n    } = facetInfo;\n    const rowProj = rowProjections[(rowIndex) % rowProjections.length] || [];\n\n    // Get the cells for the matrix from the return function of the callback on the datamodel.\n    // callback function -> (datamodel, {projections, indices}, facets)\n    if (colProjections.length > 0) {\n        cells = colProjections.map((projectFields, projIdx) => {\n            const [colProjFieldNames, rowProjFieldNames] = getFieldNames(projectFields, rowProj);\n            const projectedDm = datamodel.project([...colProjFieldNames, ...rowProjFieldNames, ...optionalProjections]);\n            const projections = { rowFields: rowProj, columnFields: projectFields };\n            const indices = { rowIndex, columnIndex: columnIndex * colProjections.length + projIdx };\n\n            return valueCellCreator(projectedDm, { projections, indices }, facetInfo);\n        });\n    } else {\n        const projections = { rowFields: rowProj, columnFields: [] };\n        const indices = { rowIndex, columnIndex };\n\n        cells = [valueCellCreator(datamodel, { projections, indices }, facetInfo)];\n    }\n\n    matrix[rowIndex] = matrix[rowIndex] || [];\n    matrix[rowIndex].push(...cells);\n};\n\n/**\n * Gets Matrixes for corresponding datamodel, facets and projections\n *\n * @param {Object} dataModel input datamodel\n * @param {Object} fieldMap corresponding fieldmap\n * @param {Array} facetsAndProjections contains the set of facets and projections for the matrices\n * @param {Function} valueCellCreator Callback executed after datamodels are prepared after sel/proj\n * @return {Object} set of matrices with the corresponding row and column keys\n */\nexport const getMatrixModel = (dataModel, facetsAndProjections, valueCellCreator) => {\n    let rowDataModels = [];\n    const rowKeys = [];\n    const columnKeys = [];\n    const allColumnProjections = [];\n    const matrix = [];\n    const facetInfo = [];\n\n    const fieldInfo = Object.assign({}, facetsAndProjections);\n    const {\n        rowFacets,\n        colFacets,\n        colProjections\n    } = fieldInfo;\n\n    colProjections.forEach((colProj) => {\n        allColumnProjections.push(...colProj);\n    });\n    fieldInfo.allColumnProjections = allColumnProjections;\n\n    // Performing row selection and projection\n    if (rowFacets.length > 0) {\n        // Get unique values for the root level of facet\n        const field = rowFacets[0].toString();\n        const firstLevelRowKeys = retriveDomainFromData(dataModel, field);\n\n        // Get unique keys in the form of an array of arrays for each row\n        uniqueKeyGenerator(rowKeys, { facets: rowFacets, dataModel, uniqueValues: firstLevelRowKeys });\n\n        // Apply selection -> projection -> row datamodels\n        rowKeys.forEach((val) => {\n            // Create faceted datamodel\n            const [rowFacetFieldNames] = getFieldNames(rowFacets);\n            const selectedDataModel = createSelectedDataModel(dataModel, rowFacetFieldNames, val);\n\n            // Project the datamodel based on the number of projections (based on last levels)\n            const newProjectedDataModels = projectRows(selectedDataModel, fieldInfo);\n            rowDataModels.push(...newProjectedDataModels);\n\n            newProjectedDataModels.forEach(() => {\n                facetInfo.push([rowFacets, val]);\n            });\n        });\n    } else {\n        // No row facets, hence only row projection\n        rowDataModels.push(...projectRows(dataModel, fieldInfo));\n    }\n\n    // Maintaining set of row datamodels for column resolution\n    rowDataModels = rowDataModels.length > 0 ? rowDataModels : [[]];\n\n    // Performing column selection and projection\n    if (colFacets.length > 0) {\n        const colFacetNames = colFacets.map(d => `${d}`);\n        // Get unique values for the root level of facet\n        const field = colFacetNames[0];\n        const firstLevelColumnKeys = retriveDomainFromData(dataModel, field);\n\n        // Get unique keys to create faceted datamodels: this time for columns\n        uniqueKeyGenerator(columnKeys, {\n            facets: colFacetNames,\n            dataModel,\n            uniqueValues: firstLevelColumnKeys\n        });\n        // For each row in the datamodel, apply selection -> projection -> push the projection to matri\n        rowDataModels.forEach((dme, rIndex) => {\n            facetInfo[rIndex] = facetInfo[rIndex] || [[], []];\n            columnKeys.forEach((val, cIndex) => {\n                matrix[rIndex] = matrix[rIndex] || [];\n\n                // If datamodel is not present in current row, choose parent datamodel\n                const datamodel = dme instanceof DataModel ? dme : dataModel;\n\n                // Selection is made on the datamodel for the current row\n                const selectedDataModel = createSelectedDataModel(datamodel, colFacetNames, val);\n                const context = {\n                    matrix,\n                    datamodel: selectedDataModel,\n                    facetInfo: {\n                        rowFacets: facetInfo[rIndex],\n                        colFacets: [colFacets, val],\n                        rowIndex: rIndex,\n                        columnIndex: cIndex\n                    },\n                    fieldInfo\n                };\n                pushToMatrix(context, valueCellCreator);\n            });\n        });\n    } else {\n        // No column facets, hence only row projection\n        rowDataModels.forEach((dme, rIndex) => {\n            facetInfo[rIndex] = facetInfo[rIndex] || [[], []];\n            const context = {\n                matrix,\n                datamodel: dme || dataModel,\n                facetInfo: {\n                    rowFacets: facetInfo[rIndex],\n                    colFacets: [[], []],\n                    rowIndex: rIndex,\n                    columnIndex: 0\n                },\n                fieldInfo\n            };\n\n            pushToMatrix(context, valueCellCreator);\n        });\n    }\n\n    // Getting column keys\n    const transposedColKeys = columnKeys.length > 0 ? columnKeys[0].map((col, i) =>\n                    columnKeys.map(row => row[i])) : columnKeys;\n\n    return { matrix, rowKeys, columnKeys: transposedColKeys };\n};\n","import { AxisOrientation } from '@chartshq/muze-axis';\nimport {\n    getObjProp,\n    FieldType,\n    STATE_NAMESPACES,\n    retrieveNearestGroupByReducers,\n    mergeRecursive,\n    createSelection\n} from 'muze-utils';\nimport { getMatrixModel } from './matrix-model';\nimport {\n    getCellKey,\n    isDistributionEqual,\n    mutateAxesFromMap,\n    getFieldsFromSuppliedLayers,\n    extractFields\n} from './group-utils';\nimport { ROW, ROWS, COLUMNS, COL, LEFT, RIGHT, TOP, BOTTOM, PRIMARY, SECONDARY, X, Y } from '../enums/constants';\n\n/**\n * Updates row and column cells with the geom cell corresponding to the facet keys\n *\n * @param {*} resolver\n * @param {*} facets\n */\nconst updateCells = (resolver, facets, geomCell) => {\n    [ROW, COL].forEach((field) => {\n        const cells = resolver[`${field}Cells`]();\n        const facetKey = facets[`${field}Facets`][1].join();\n\n        !cells[facetKey] && (cells[facetKey] = []);\n        cells[facetKey].push(geomCell);\n        resolver[`${field}Cells`](cells);\n    });\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} datamodel\n * @param {*} fieldInfo\n * @param {*} facets\n *\n */\nexport const createValueCells = (context, datamodel, fieldInfo, facets) => {\n    const {\n        projections,\n        indices\n    } = fieldInfo;\n    const {\n        rowFields,\n        columnFields\n    } = projections;\n    const {\n         rowIndex,\n         columnIndex\n    } = indices;\n    const {\n        suppliedLayers,\n        cell: GeomCell,\n        resolver,\n        config,\n        encoder,\n        detailFields\n    } = context;\n    const axes = resolver.axes();\n    const cacheMaps = resolver.cacheMaps();\n    const matrixLayers = resolver.matrixLayers();\n    const labelManager = resolver.dependencies().smartlabel;\n    const horizontalAxis = resolver.horizontalAxis();\n    const verticalAxis = resolver.verticalAxis();\n    const datamodelTransform = resolver.datamodelTransform();\n    const {\n        entryCellMap,\n        exitCellMap\n    } = cacheMaps;\n    const layerConfigArr = encoder.getLayerConfig({ columnFields, rowFields }, suppliedLayers || []);\n    const axesCreators = { config, labelManager, axes, cacheMaps };\n\n    fieldInfo.normalizedColumns = verticalAxis.fields;\n    fieldInfo.normalizedRows = horizontalAxis.fields;\n\n    const groupAxes = encoder.createAxis(axesCreators, fieldInfo, context);\n\n    matrixLayers[rowIndex] = matrixLayers[rowIndex] ? matrixLayers[rowIndex] : [];\n    matrixLayers[rowIndex][columnIndex] = layerConfigArr;\n\n    // return from map if already there otherwise create and put in map\n    const geomCellKey = getCellKey(rowIndex, columnIndex);\n    const fields = {\n        y: rowFields,\n        x: columnFields\n    };\n\n    const allFacets = [\n        [...facets.rowFacets[0], ...facets.colFacets[0]],\n        [...facets.rowFacets[1], ...facets.colFacets[1]]\n    ];\n    const geomCell = !exitCellMap.has(geomCellKey) ? new GeomCell() : exitCellMap.get(geomCellKey);\n\n    geomCell.data(datamodel)\n                    .axes(groupAxes)\n                    .fields(fields)\n                    .transform(datamodelTransform)\n                    .detailFields(detailFields)\n                    .facetByFields(allFacets);\n    entryCellMap.set(geomCellKey, geomCell);\n    exitCellMap.delete(geomCellKey);\n\n    updateCells(resolver, facets, geomCell);\n\n    return entryCellMap.get(geomCellKey);\n};\n\n/**\n * Creates axis cells based on the set of axes\n *\n * @param {Selection} selection Contains a selection of the axis units\n * @param {Array} axes Actual axis units\n * @param {number} axisIndex 0-> primary axis, 1-> secondary axis(when dual axis is made)\n * @param {Object} cells Contains a collection of the cells\n * @return {Object} return either set of axis/blank cells depending on the config\n */\n\nconst createAxisCells = (selection, axes, axisIndex, cells) =>\n    createSelection(selection, axis => axis, axes, (item, i) => i + item.reduce((e, n) => {\n        const id = n.id + axisIndex;\n        return e + id;\n    }, '')).map((axis) => {\n        if (axis && axis[axisIndex]) {\n            const axisInst = axis[axisIndex];\n            const { orientation, show } = axisInst.config();\n\n            return new cells.AxisCell().source(axisInst).config({\n                isOffset: orientation === AxisOrientation.LEFT || orientation === AxisOrientation.TOP,\n                show\n            });\n        }\n        return new cells.BlankCell().config({ show: false });\n    });\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @retur\n */\nconst axisPlaceholderGn = (context, selObj, cells) => {\n    const {\n        matrices\n    } = context;\n    const {\n        axesMatrix\n    } = matrices;\n\n    return (type, axisFrom) => {\n        const axes = axesMatrix[`${type}`];\n\n        if (axes && axes.length) {\n            if (type === X || type === Y) {\n                const fieldNames = type === Y ? ROWS : COLUMNS;\n\n                [PRIMARY, SECONDARY].forEach((fieldType, index) => {\n                    const selObjProp = `${fieldNames}${fieldType}`;\n                    let axisIndex = index;\n                    let axesForDraw = axes;\n                    if (axisFrom === RIGHT || axisFrom === BOTTOM) {\n                        axisIndex = 1 - axisIndex;\n                    }\n                    if (!getObjProp(axes, 0, axisIndex)) {\n                        axesForDraw = [];\n                    }\n                    selObj[selObjProp] = createAxisCells(selObj[selObjProp], axesForDraw, axisIndex, cells);\n                });\n            } else {\n                selObj.rowsPrimary = createAxisCells(selObj.rowPrime, axes.map(() => []), 0, cells);\n                selObj.columnsPrimary = createAxisCells(selObj.colPrime, axes[0], 0, cells);\n            }\n        }\n        return selObj;\n    };\n};\n\n/**\n * Creates header cells based on the set of headers\n *\n * @param {Object} selection Contains a selection of the header units\n * @param {string} headers Contains a list of the headers\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} return either set of header cells depending on the config\n */\nconst createTextCells = (selection, headers, cells, labelManager) => createSelection(selection,\n    label => new cells.TextCell({}, { labelManager }).source(label), headers, (key, i) => key + i);\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @param {*} labelManager\n *\n */\nconst headerPlaceholderGn = (context, selectionObj, cells, labelManager) => {\n    const {\n        axis,\n        keys,\n        type,\n        facet\n    } = context;\n    const counter = axis.length / keys.length;\n    const selectionKeys = keys.length ? axis.map((d, i) => keys[Math.floor(i / counter)]) : [];\n\n    return createSelection(selectionObj[`${type}Headers`], keySet => keySet, selectionKeys,\n        (keySet, i) => `${keySet.join(',')}-${i}`)\n                    .map(keySet => createTextCells(null, keySet, cells, labelManager)\n                                    .map((cell, k, i) => cell.source(keySet[i]).config(facet)));\n};\n\n/**\n * Creates a set of placeholders as a part of selection object\n *\n * @param {Array} normalizedOptions contains normalized rows and columns\n * @param {Array} matrices contains axis and value matrices\n * @param {aArrayny} projections contains set of row and column projections\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} Creates a set of placeholders as a part of selections\n */\nconst generatePlaceholders = (context, cells, labelManager) => {\n    let selectionObj;\n    const {\n        matrices,\n        fields,\n        facetsAndProjections,\n        selection,\n        facet,\n        encoders,\n        resolver\n    } = context;\n    const {\n        rows,\n        columns\n    } = fields;\n    const {\n        valuesMatrix\n    } = matrices;\n    const {\n        rowProjections,\n        colProjections\n    } = facetsAndProjections;\n    const {\n        rowKeys,\n        columnKeys\n    } = valuesMatrix;\n    const takeAxisFrom = encoders.simpleEncoder._axisFrom;\n    const takeHeaderFrom = encoders.simpleEncoder._headerFrom;\n\n    selectionObj = selection || {};\n\n    ['pie', X, Y].forEach((axis) => {\n        const axisFrom = axis === X ? takeAxisFrom.column : takeAxisFrom.row;\n        selectionObj = axisPlaceholderGn(context, selectionObj, cells)(axis, axisFrom);\n    });\n\n    const {\n        rowsPrimary,\n        rowsSecondary,\n        columnsPrimary,\n        columnsSecondary\n    } = selectionObj;\n\n    const rowAxis = rowsPrimary && rowsPrimary.getObjects().length ? rowsPrimary.getObjects() :\n        (rowsSecondary && rowsSecondary.getObjects().length ? rowsSecondary.getObjects() : []);\n    const colAxis = columnsPrimary && columnsPrimary.getObjects().length ? columnsPrimary.getObjects() :\n        (columnsSecondary && columnsSecondary.getObjects().length ? columnsSecondary.getObjects() : []);\n\n    const headerConfig = [\n        { type: LEFT, section: rows[0], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: RIGHT, section: rows[1], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: TOP, section: columns[0], axis: colAxis, headerFrom: takeHeaderFrom.column },\n        { type: BOTTOM, section: columns[1], axis: colAxis, headerFrom: takeHeaderFrom.column }\n    ];\n\n    headerConfig.forEach((config, index) => {\n        let keys;\n        let length;\n        const {\n            type,\n            section,\n            axis,\n            headerFrom\n        } = config;\n\n        if (index < 2) {\n            keys = rowKeys;\n            length = rowProjections.length > 0 ? rowProjections.length : 1;\n        } else {\n            keys = columnKeys;\n            length = colProjections.length > 0 ? colProjections.length : 1;\n        }\n        keys = keys.map(arr => arr.map(val => resolver.valueParser()(val)));\n        if (section.length && headerFrom === type && axis && keys.length) {\n            const hContext = { axis, length, type };\n            let headers = [];\n            if (index < 2) {\n                hContext.keys = keys;\n                hContext.facet = facet.rows;\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            } else {\n                hContext.facet = facet.columns;\n                hContext.keys = keys[0].map((key, i) => keys.map(e => e[i]));\n\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            }\n            selectionObj[`${type}Headers`] = headers;\n        } else {\n            selectionObj[`${type}Headers`] = null;\n        }\n    });\n    return selectionObj;\n};\n\n/**\n * Generates matrices\n *\n * @param {Object} config Configuration to generate matrices\n * @param {Array} matrices Matrices containing the set of visual units and axes units\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} contains a collection of matrices\n */\nexport const generateMatrices = (context, matrices, cells, labelManager) => {\n    const {\n        unitHeight,\n        unitWidth,\n        facetsAndProjections,\n        normalizedRows,\n        normalizedColumns,\n        selection,\n        axisFrom,\n        facet,\n        encoders,\n        resolver\n     } = context;\n    const placeholderContext = {\n        fields: {\n            rows: normalizedRows,\n            columns: normalizedColumns\n        },\n        matrices,\n        facetsAndProjections,\n        selection,\n        axisFrom,\n        facet,\n        encoders,\n        resolver\n    };\n    // Generate placeholders for all matrices\n    const selectionObj = generatePlaceholders(placeholderContext, cells, labelManager);\n    const {\n        columnsPrimary,\n        columnsSecondary,\n        rowsPrimary,\n        rowsSecondary,\n        leftHeaders,\n        topHeaders,\n        bottomHeaders,\n        rightHeaders\n    } = selectionObj;\n    const [rowPrime, rowSec, colPrime, colSec] = [rowsPrimary, rowsSecondary, columnsPrimary, columnsSecondary]\n        .map(d => (d ? d.getObjects() : []));\n    const [leftFacets, rightFacets] = [leftHeaders, rightHeaders]\n        .map(e => (e ? e.getObjects()\n                        .map(f => f.getObjects()) : []));\n    let rowPriority = rowSec.length ? 1 : -1;\n    rowPrime.length && rowPriority++;\n    let colPriority = colSec.length ? 1 : -1;\n    colPrime.length && colPriority++;\n\n    // Compute left matrix using left headers and the axes on the rows\n    let leftMatrix = leftFacets.length ? leftFacets.map((d, i) => {\n        rowPrime[i] = rowPrime[i] ? [rowPrime[i]] : [];\n        return [...d, ...rowPrime[i]];\n    }) : (rowPrime ? rowPrime.map(d => [d]) : []);\n\n    // Compute right matrix using right headers and the axes on the rows\n    const rightMatrix = rowSec.length ? rowSec.map((d, i) => [d, ...(rightFacets[i] || [])]) : (rightFacets.length ?\n        rightFacets.map(d => [...d]) : []);\n\n    const topMatrix = [];\n    if (topHeaders) {\n        const headers = topHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                topMatrix[i] = topMatrix[i] || [];\n                topMatrix[i].push(x);\n            });\n        });\n    }\n    // Compute top matrix using the top headers and axes on the columns\n    if (colPrime.length) {\n        topMatrix.push(colPrime);\n    }\n\n    // Bottom and right matrices are prepared using the user config.\n    let bottomMatrix = [];\n    if (colSec.length) {\n        bottomMatrix.push(colSec);\n    }\n    const currentBottomLength = bottomMatrix.length;\n    if (bottomHeaders) {\n        const headers = bottomHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                bottomMatrix[i + currentBottomLength] = bottomMatrix[i + currentBottomLength] || [];\n                bottomMatrix[i + currentBottomLength].push(x);\n            });\n        });\n    }\n\n    if (!leftMatrix.length && !rightMatrix.length) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        leftMatrix = [[cell]];\n    }\n\n    if (!topMatrix.length && (!bottomMatrix.length || !bottomMatrix[0].length)) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        bottomMatrix = [[cell]];\n    }\n\n    return {\n        rows: [leftMatrix, rightMatrix],\n        columns: [topMatrix, bottomMatrix],\n        selectionObj,\n        colPriority,\n        rowPriority\n    };\n};\n\n/**\n * Computes matrices for a group\n *\n * @param {Object} datamodel on which the matrices are to be computed\n * @param {Object} config configuration of the matrices\n * @param {Object} layerRegistry contains the registered layers\n * @return {Object} conputed matrices\n * @memberof MatrixResolver\n */\nexport const computeMatrices = (context, config) => {\n    const {\n        resolver,\n        datamodel,\n        componentRegistry,\n        encoders\n    } = context;\n    const {\n            globalConfig,\n            selection,\n            transform\n        } = config;\n    const groupBy = globalConfig.autoGroupBy;\n    const { smartlabel: labelManager } = resolver.dependencies();\n    const fieldMap = datamodel.getFieldsConfig();\n    const layerConfig = resolver.layerConfig();\n    const registry = resolver.registry();\n    const { fields: normalizedRows } = resolver.horizontalAxis();\n    const { fields: normalizedColumns } = resolver.verticalAxis();\n    const otherEncodings = resolver.optionalProjections(config, layerConfig);\n    const facetsAndProjections = resolver.getAllFields();\n    const matrixGnContext = {\n        // Configuration to be passed to generate the  different matrices.\n        // A common config is used for both value matrices and other matrices\n        normalizedColumns,\n        normalizedRows,\n        facetsAndProjections,\n        layers: layerConfig,\n        fieldMap,\n        otherEncodings,\n        encoders,\n        facet: globalConfig.facet || {},\n        axisFrom: globalConfig.axisFrom || {},\n        selection,\n        resolver\n    };\n    const cells = {\n        GeomCell: resolver.getCellDef(registry.GeomCell),\n        AxisCell: resolver.getCellDef(registry.AxisCell),\n        BlankCell: resolver.getCellDef(registry.BlankCell),\n        TextCell: resolver.getCellDef(registry.TextCell)\n    };\n    const isRowSizeEqual = isDistributionEqual(normalizedRows);\n    const isColumnSizeEqual = isDistributionEqual(normalizedColumns);\n\n    resolver.colCells({});\n    resolver.rowCells({});\n    resolver.datamodelTransform(transform || {});\n\n    // Cell creation begins here\n    resolver.resetSimpleAxes();\n\n    const {\n        entryCellMap\n    } = resolver.cacheMaps();\n    const newCacheMap = {\n        exitCellMap: entryCellMap,\n        entryCellMap: new Map()\n    };\n\n    resolver.cacheMaps(newCacheMap);\n\n    const valueCellContext = {\n        config: globalConfig,\n        suppliedLayers: encoders.simpleEncoder.serializeLayerConfig(resolver.layerConfig()),\n        resolver,\n        cell: cells.GeomCell,\n        encoder: encoders.simpleEncoder,\n        newCacheMap,\n        detailFields: config.detail\n    };\n    const fieldsConfig = datamodel.getFieldsConfig();\n    let groupedModel = datamodel;\n    if (!groupBy.disabled) {\n        const fields = getFieldsFromSuppliedLayers(valueCellContext.suppliedLayers, datamodel.getFieldsConfig());\n        const allFields = extractFields(facetsAndProjections, fields);\n\n        const dimensions = allFields.filter(field =>\n            fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION);\n        const aggregationFns = groupBy.measures;\n        const measureNames = Object.keys(datamodel.getFieldspace().getMeasure());\n        const nearestAggFns = retrieveNearestGroupByReducers(datamodel, ...measureNames);\n        const resolvedAggFns = mergeRecursive(nearestAggFns, aggregationFns);\n\n        groupedModel = datamodel.groupBy(dimensions.length ? dimensions : [''], resolvedAggFns).project(allFields);\n    }\n\n    // return a callback function to create the cells from the matrix\n    const cellCreator = resolver.valueCellsCreator(valueCellContext);\n    // Creates value matrices from the datamodel and configs\n    const valueMatrixInfo = getMatrixModel(groupedModel, facetsAndProjections, cellCreator);\n\n    resolver.cacheMaps().exitCellMap.forEach((placeholder) => {\n        placeholder.remove();\n    });\n    resolver.cacheMaps().exitCellMap.clear();\n    resolver.valueMatrix(valueMatrixInfo.matrix);\n\n    const { xAxes, yAxes } = mutateAxesFromMap(resolver.cacheMaps(), resolver.axes());\n\n    resolver.axes({\n        x: xAxes,\n        y: yAxes\n    });\n    const store = resolver.store();\n\n    [xAxes, yAxes].forEach((axesArr, type) => {\n        const stateProps = {};\n        axesArr = axesArr || [];\n        axesArr.forEach((axes, idx) => {\n            axes.forEach((axis, axisIndex) => {\n                stateProps[`${idx}${axisIndex}`] = null;\n            });\n        });\n        store.append(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${type ? 'y' : 'x'}`, stateProps);\n    });\n    resolver.createUnits(componentRegistry, config);\n\n    const matrices = {\n        valuesMatrix: valueMatrixInfo,\n        axesMatrix: resolver.axes()\n    };\n    // Create all matrices\n    const {\n        rows,\n        columns,\n        selectionObj,\n        rowPriority,\n        colPriority\n    } = generateMatrices(matrixGnContext, matrices, cells, labelManager);\n\n    resolver.rowMatrix(rows);\n    resolver.columnMatrix(columns);\n\n    return {\n        rows: resolver.rowMatrix(),\n        columns: resolver.columnMatrix(),\n        values: resolver.valueMatrix(),\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority: {\n            row: rowPriority,\n            col: colPriority\n        },\n        selection: selectionObj,\n        dataModels: {\n            groupedModel,\n            parentModel: datamodel\n        }\n    };\n};\n","export const RESOLVER_PROPS = {\n    dependencies: {},\n    units: {},\n    datamodelTransform: {},\n    layerConfig: {},\n    matrixLayers: {},\n    colCells: {},\n    rowCells: {},\n    rowMatrix: {},\n    columnMatrix: {},\n    valueMatrix: {},\n    encoder: {},\n    valueParser: {}\n};\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { generateGetterSetters, STATE_NAMESPACES } from 'muze-utils';\nimport {\n     initializeCacheMaps,\n     headerCreator,\n     extractUnitConfig,\n     setFacetsAndProjections\n} from './group-utils';\nimport {\n     ROW, COL, LEFT, RIGHT, COLOR, SIZE, SHAPE, DETAIL, CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS, INITIALIZED,\n     AXIS, UNIT, BEFORE_UPDATE, UPDATED, VALUE_MATRIX, FACET_HEADERS\n} from '../enums/constants';\nimport { createValueCells, computeMatrices } from './cell-creator';\nimport { RESOLVER_PROPS } from './resolver-props';\n\n/**\n * Resolves the matrices from configuration provided\n *\n * @export\n * @class MatrixResolver\n */\nexport default class MatrixResolver {\n\n    /**\n     * Creates an instance of MatrixResolver.\n     * @param {Object} dependencies needed to run the resolver\n     * @memberof MatrixResolver\n     */\n    constructor (dependencies) {\n        this._registry = {};\n        this._layerConfig = [];\n        this._matrixLayers = [];\n        this._dependencies = dependencies;\n        this._rowMatrix = [];\n        this._columnMatrix = [];\n        this._valueMatrix = [];\n        this._facets = { rowFacets: [], colFacets: [] };\n        this._projections = { rowProjections: [], colProjections: [] };\n        this._datamodelTransform = {};\n        this._units = [];\n        this._cacheMaps = {};\n        this._axes = {\n            x: {},\n            y: {},\n            color: [],\n            size: [],\n            shape: []\n        };\n        generateGetterSetters(this, RESOLVER_PROPS);\n        this.cacheMaps(initializeCacheMaps());\n    }\n\n    /**\n     * Set:  Registers placeholders, Get: return {Object} those placeholders\n     *\n     * @param {Object} placeholders cells that will construct the group\n     * @return {Object} Either current instance or the set of placeholders\n     * @memberof MatrixResolver\n     */\n    registry (...placeholders) {\n        if (placeholders.length) {\n            Object.entries(placeholders[0]).forEach((val) => {\n                this._registry[val[0]] = val[1];\n            });\n            return this;\n        }\n        return this._registry;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    cacheMaps (...maps) {\n        if (maps.length) {\n            [CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS].forEach((e) => {\n                this._cacheMaps[`${e}Map`] = maps[0][`${e}Map`] || this._cacheMaps[`${e}Map`];\n            });\n            return this;\n        }\n        return this._cacheMaps;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    axes (...axes) {\n        if (axes.length) {\n            this._axes = Object.assign({}, this._axes, axes[0]);\n            return this;\n        }\n        return this._axes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} facets\n     *\n     * @memberof MatrixResolver\n     */\n    facets (...facets) {\n        if (facets.length) {\n            Object.entries(facets[0]).forEach((e) => {\n                this._facets[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._facets;\n    }\n\n    /**\n     *\n     *\n     * @param {*} projections\n     *\n     * @memberof MatrixResolver\n     */\n    projections (...projections) {\n        if (projections.length) {\n            Object.entries(projections[0]).forEach((e) => {\n                this._projections[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._projections;\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @param {*} layerConfig\n     *\n     * @memberof MatrixResolver\n     */\n    optionalProjections (config, layerConfig) {\n        const otherEncodings = {};\n        const optionalProjections = [];\n        const otherEncodingTypes = [SIZE, COLOR, SHAPE];\n\n        otherEncodingTypes.forEach((type) => {\n            if (config[type] && config[type].field) {\n                const enc = config[type];\n                otherEncodings[type] = enc.field;\n                optionalProjections.push(enc.field);\n            }\n        });\n\n        if (config[DETAIL]) {\n            optionalProjections.push(...config.detail);\n        }\n\n        if (layerConfig.length) {\n            layerConfig.forEach((layer) => {\n                if (layer.encoding) {\n                    Object.values(layer.encoding).forEach((enc) => {\n                        if (enc && optionalProjections.indexOf(enc.field) === -1) {\n                            optionalProjections.push(enc.field ? enc.field : enc);\n                        }\n                    });\n                }\n            });\n        }\n        this.projections({ optionalProjections });\n        return otherEncodings;\n    }\n\n    /**\n     * return the normalized set of rows and facets and projections\n     *\n     * @param {Object} rows parameters needed to set horizontal axis consisiting of rows\n     * @return {Object} facets, projections and normalized rows\n     * @memberof MatrixResolver\n     */\n    horizontalAxis (rows, encoder) {\n        if (rows) {\n            this._horizontalAxis = setFacetsAndProjections(this, { type: ROW, fields: rows }, encoder);\n            return this;\n        }\n        return this._horizontalAxis;\n    }\n\n    /**\n     * return the normalized set of columns and facets and projections\n     *\n     * @param {Object} columns parameters needed to set vertical axis consisiting of columns\n     * @return {Object} facets, projections and normalized columns\n     * @memberof MatrixResolver\n     */\n    verticalAxis (columns, encoder) {\n        if (columns) {\n            this._verticalAxis = setFacetsAndProjections(this, { type: COL, fields: columns }, encoder);\n            return this;\n        }\n        return this._verticalAxis;\n    }\n\n    /**\n     * Gets the class definition of a particular cell type(if the particular type has been extended, that particular\n     * definition is returned)\n     *\n     * @param {Object} cell cell whose class definition is to be retrieved\n     * @return {Object} cell definition\n     * @memberof MatrixResolver\n     */\n    getCellDef (cell) {\n        const registry = this.registry();\n\n        Object.values(registry).forEach((e) => {\n            if (e.prototype instanceof cell) {\n                cell = e;\n            }\n        });\n        return cell;\n    }\n\n    /**\n     * return a visual cell creator along with its axis information to be injected to the datamodel creation\n     * function\n     *\n     * @param {Object} GeomCell Type of cell to be created\n     * @return {Object} Created cell\n     * @memberof MatrixResolver\n     */\n    valueCellsCreator (context) {\n        // reset matrix layers\n        this.matrixLayers([]);\n\n        return (datamodel, fieldInfo, facets) => createValueCells(context, datamodel, fieldInfo, facets);\n    }\n\n    /**\n     * Callback to be applied on each cell of a matrix of a particular type\n     *\n     * @param {string} matrixType type of matrix on which callback is to be applied\n     * @param {Function} callback function to be applied to each cell\n     * @memberof MatrixResolver\n     */\n    forEach (matrixType, callback) {\n        this[matrixType]().forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                callback(rIndex, cIndex, col);\n            });\n        });\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getAllFields () {\n        const retObj = this.projections();\n\n        Object.entries(this.facets()).forEach((e) => {\n            retObj[e[0]] = e[1];\n        });\n        return retObj;\n    }\n\n    /**\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    resetSimpleAxes () {\n        return this.axes({\n            x: new Set(),\n            y: new Set()\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} componentRegistry\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createUnits (componentRegistry, config) {\n        const {\n            globalConfig,\n            alias\n        } = config;\n        const {\n            layerRegistry,\n            sideEffectRegistry\n        } = componentRegistry;\n        const {\n            smartlabel: smartLabel,\n            lifeCycleManager\n        } = this.dependencies();\n        // Provide the source for the matrix\n        const units = [[]];\n        // Setting unit configuration\n        const unitConfig = extractUnitConfig(globalConfig || {});\n        const globalState = VisualUnit.getState()[0];\n        const globalStates = {};\n        const store = this.store();\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            let unit = el.source();\n            if (!unit) {\n                const namespace = `${i}${j}`;\n\n                unit = VisualUnit.create({\n                    layerRegistry,\n                    sideEffectRegistry\n                }, {\n                    smartLabel,\n                    lifeCycleManager\n                });\n                globalStates[namespace] = null;\n                unit.metaInf({\n                    rowIndex: i,\n                    colIndex: j,\n                    namespace\n                });\n                unit.store(store);\n                el.source(unit);\n            }\n            !units[i] && (units[i] = []);\n            units[i][j] = unit;\n            unit.parentAlias(alias);\n            unit.valueParser(this.valueParser());\n            el.config(unitConfig);\n        });\n\n        for (const key in globalState) {\n            store.append(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.${key}`, globalStates);\n        }\n\n        lifeCycleManager.notify({ client: units, action: INITIALIZED, formalName: UNIT });\n        return this.units(units);\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    setDomains (config, datamodel, encoders) {\n        const {\n            color,\n            shape,\n            size,\n            globalConfig\n        } = config;\n        const groupBy = globalConfig.autoGroupBy;\n        const {\n            rowFacets,\n            colFacets\n        } = this.getAllFields();\n        const encoding = {\n            color,\n            shape,\n            size\n        };\n        const facetFields = [...rowFacets.map(e => e.toString()), ...colFacets.map(e => e.toString())];\n        const retContext = {\n            domains: encoders.simpleEncoder.getRetinalFieldsDomain(datamodel, encoding, facetFields, groupBy),\n            axes: this.axes(),\n            encoding\n        };\n        encoders.retinalEncoder.setCommonDomain(retContext);\n        return this;\n    }\n\n    resetFacetsAndProjections () {\n        this._facets = {};\n        this._projections = {};\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getRetinalAxes () {\n        const {\n            color,\n            shape,\n            size\n        } = this.axes();\n\n        return {\n            color: [...color],\n            shape: [...shape],\n            size: [...size]\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} type\n     *\n     * @memberof MatrixResolver\n     */\n    getSimpleAxes (type) {\n        return this.axes()[`${type}`];\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createRetinalAxes (fieldsConfig, config, encoders) {\n        const layerConfig = this.layerConfig();\n        this.optionalProjections(config, layerConfig);\n        const retinalAxes = encoders.retinalEncoder.createAxis({\n            fieldsConfig,\n            config,\n            axes: this.axes()\n        });\n        const {\n            lifeCycleManager\n        } = this.dependencies();\n\n        [COLOR, SHAPE, SIZE].forEach((e) => {\n            this.axes()[e] = retinalAxes[e];\n        });\n\n        lifeCycleManager.notify({ client: this.axes(), action: INITIALIZED, formalName: AXIS });\n        lifeCycleManager.notify({ client: this.units(), action: BEFORE_UPDATE, formalName: UNIT });\n\n        const units = [];\n        const matrixLayers = this.matrixLayers();\n\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            el.axes(retinalAxes);\n            el.source() && el.source().retinalFields(config);\n            el.layerDef(encoders.retinalEncoder.getLayerConfig(config, matrixLayers[i][j]));\n            el.updateModel();\n\n            units.push(el.source());\n        });\n\n        lifeCycleManager.notify({ client: units, action: UPDATED, formalName: UNIT });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} placeholders\n     * @param {*} fieldNames\n     *\n     * @memberof MatrixResolver\n     */\n    createHeaders (placeholders, fieldNames, config) {\n        let bottomLeft = [];\n        let bottomRight = [];\n        const {\n            rows,\n            columns\n        } = placeholders;\n        const {\n            smartlabel: labelManager,\n            lifeCycleManager\n        } = this.dependencies();\n        const {\n            showHeaders,\n            classPrefix\n        } = config;\n        const TextCell = this.getCellDef(this.registry().TextCell);\n        const BlankCell = this.getCellDef(this.registry().BlankCell);\n        const [leftRows, rightRows] = rows;\n        const [topCols, bottomCols] = columns;\n        const rowHeaders = fieldNames.rows;\n        const blankCellCreator = cell => new BlankCell().config({ show: cell.config().show });\n\n        // Headers and footers are created based on the rows. Thereafter, using the column information\n        // they are tabularized into the current structure\n        const headers = {\n            left: headerCreator(leftRows, rowHeaders[0], showHeaders ? TextCell : BlankCell,\n                { classPrefix, labelManager }),\n            right: headerCreator(rightRows, rowHeaders[1], showHeaders ? TextCell : BlankCell,\n                { classPrefix, labelManager })\n        };\n        const footers = {\n            left: leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : [],\n            right: rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []\n        };\n        const [topLeft, topRight] = [LEFT, RIGHT].map(type => topCols.map((col, i) => {\n            if (i === topCols.length - 1) {\n                return headers[type];\n            }\n            return footers[type];\n        }));\n\n        // Creating only bottom matrices if there is no information on the top\n        if (topCols.length === 0) {\n            [bottomLeft, bottomRight] = [LEFT, RIGHT].map(type => bottomCols.map((col, i) => {\n                if (i === 0) {\n                    return headers[type];\n                }\n                return footers[type];\n            }));\n        } else {\n            bottomLeft = bottomCols.map(() => (leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : []));\n            bottomRight = bottomCols.map(() => (rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []));\n        }\n\n        lifeCycleManager.notify({\n            client: [topLeft, topRight, bottomLeft, bottomRight],\n            action: INITIALIZED,\n            formalName: FACET_HEADERS\n        });\n\n        return { topLeft, topRight, bottomLeft, bottomRight };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @param {*} componentRegistry\n     * @param {*} encoders\n     *\n     * @memberof MatrixResolver\n     */\n    getMatrices (datamodel, config, componentRegistry, encoders) {\n        const context = {\n            datamodel,\n            componentRegistry,\n            encoders,\n            resolver: this\n        };\n\n        return computeMatrices(context, config);\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            return this;\n        }\n        return this._store;\n    }\n}\n","/**\n * This is a wrapper class over the matrix of cells which gets created in visual group. Visual Group creates left,\n * right, bottom and top and center matrices and wraps them using this class.\n *\n * @public\n * @class ValueMatrix\n */\nclass ValueMatrix {\n\n    /**\n     * Creates an instance of ValueMatrix.\n     *\n     * @param {Array} matrixArr Matrix array.\n     */\n    constructor (matrixArr) {\n        const instancesById = {};\n\n        this.matrix(matrixArr || []);\n        this.filter(() => true);\n\n        this.each((el, rIdx, cIdx) => {\n            const cellValue = el.valueOf();\n            if (cellValue && cellValue.id) {\n                const id = cellValue.id();\n                instancesById[id] = {\n                    instance: cellValue,\n                    rowIndex: rIdx,\n                    colIndex: cIdx\n                };\n            }\n        });\n\n        this.instancesById(instancesById);\n    }\n\n    instancesById (...id) {\n        if (id.length) {\n            this._instancesById = id[0];\n            return this;\n        }\n        return this._instancesById;\n    }\n\n    /**\n     * Returns the array of matrices contained in this instance.\n     *\n     * @public\n     * @return {Array} Array of matrices.\n     */\n    matrix (...matrix) {\n        if (matrix.length) {\n            this._matrix = matrix[0];\n            return this;\n        }\n        return this._matrix;\n    }\n\n    /**\n     * Sets a filter criteria. This filter criteria gets applied when each function is called.\n     *\n     * @public\n     * @param {Function} fn Filter function.\n     *\n     * @return {ValueMatrix} Instance of value matrix.\n     */\n    filter (...fn) {\n        if (fn.length) {\n            this._filterFn = fn[0];\n            return this;\n        }\n        return this._filterFn;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    width () {\n        let rowWidth = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowWidth = 0;\n            row.forEach((cell) => {\n                currentRowWidth += cell.getLogicalSpace().width;\n            });\n            rowWidth = Math.max(rowWidth, currentRowWidth);\n        });\n        return rowWidth;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    height () {\n        let rowHeight = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowHeight = 0;\n            row.forEach((cell) => {\n                currentRowHeight = Math.max(currentRowHeight, cell.getLogicalSpace().height);\n            });\n            rowHeight += currentRowHeight;\n        });\n        return rowHeight;\n    }\n\n    /**\n     * Iterates through the two dimensional matrix array and calls the given callback function with the cell instance,\n     * row index, column index and the matrix array.\n     *\n     * @param {Function} fn Callback function which will get called for every cell.\n     * @return {ValueMatrix} Instance of the value matrix.\n     */\n    each (fn) {\n        const matrix = this.matrix();\n        const filterFn = this.filter();\n\n        matrix.forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                if (filterFn(col)) {\n                    fn(col, rIndex, cIndex, matrix);\n                }\n            });\n        });\n        return this;\n    }\n\n    findPlaceHolderById (id) {\n        return this.instancesById()[id];\n    }\n}\n\nexport default ValueMatrix;\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { BaseLayer } from '@chartshq/visual-layer';\nimport { getEncoder, getBorders } from '../group-helper';\nimport { RetinalEncoder } from '../encoder';\nimport { registerDomainChangeListener, unsubscribeChangeListeners } from './change-listener';\nimport ValueMatrix from './value-matrix';\n\nexport const createUnitState = (context) => {\n    const [globalState] = VisualUnit.getState();\n    const store = context.store();\n    store.append(STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE, globalState);\n};\n\nexport const initializeGlobalState = (context) => {\n    const globalState = context.constructor.getState()[0];\n    const store = context.store();\n    store.append(STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE, globalState);\n};\n\nexport const createLayerState = (context) => {\n    const [globalState] = BaseLayer.getState();\n    context.store().append(STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE, globalState);\n};\n\nconst sanitizeRetinalConfig = (retinalConf) => {\n    const conf = {};\n    for (const key in retinalConf) {\n        const confValue = retinalConf[key];\n        if (typeof confValue === 'string' || !confValue) {\n            conf[key] = {\n                field: retinalConf[key]\n            };\n        } else {\n            conf[key] = confValue;\n        }\n    }\n    return conf;\n};\n\nexport const setMatrixInstances = (context, placeholder) => {\n    let {\n        values,\n        rows,\n        columns\n    } = placeholder;\n    values = values || [];\n    rows = rows || [];\n    columns = columns || [];\n    context._composition.matrices = {\n        value: new ValueMatrix(values),\n        left: new ValueMatrix(rows[0]),\n        right: new ValueMatrix(rows[1]),\n        top: new ValueMatrix(columns[0]),\n        bottom: new ValueMatrix(columns[1])\n    };\n\n    context._dependencies.throwback.commit(CommonProps.MATRIX_CREATED, true);\n    return context;\n};\n\nexport const createMatrices = (context) => {\n    const rows = context.rows();\n    const columns = context.columns();\n    const color = context.color();\n    const datamodel = context.data();\n    const size = context.size();\n    const detail = context.detail();\n    const layers = context.layers();\n    const transform = context.transform();\n    const config = context.config();\n    const shape = context.shape();\n\n    // Get the resolver for the matrices\n    const resolver = context.resolver();\n    resolver.store(context.store());\n    resolver.valueParser(context.valueParser());\n    // Prepare configuration for matrix preparation\n    let matrixConfig = {\n        selection: context.selection(),\n        alias: context.alias(),\n        globalConfig: config || {},\n        rows,\n        columns,\n        detail,\n        layers,\n        transform\n    };\n\n    unsubscribeChangeListeners(context);\n\n    const retinalConfig = sanitizeRetinalConfig({\n        color,\n        shape,\n        size\n    });\n\n    matrixConfig = Object.assign(matrixConfig, retinalConfig);\n    // Create the encoders for the group\n    const encoders = {};\n    encoders.retinalEncoder = new RetinalEncoder();\n    encoders.simpleEncoder = getEncoder(layers);\n    resolver.encoder(encoders.simpleEncoder);\n\n    // Set the group type\n    context.groupType(encoders.simpleEncoder.constructor.type());\n\n    // Get sanitized fields as instances of the Vars Class\n    const fields = encoders.simpleEncoder.fieldSanitizer(datamodel, matrixConfig);\n    encoders.simpleEncoder.setAxisAndHeaders(config ? config.axisFrom : {}, fields);\n    // Setting layers for the code\n    layers && resolver.layerConfig(layers);\n    // Set the row and column axes\n    resolver.horizontalAxis(fields.rows, encoders).verticalAxis(fields.columns, encoders);\n    // Getting the placeholders\n    const placeholderInfo = resolver.getMatrices(datamodel, matrixConfig, context.registry(), encoders);\n    context._groupedDataModel = placeholderInfo.dataModels.groupedModel;\n    // Set the selection object\n    context.selection(placeholderInfo.selection);\n\n    // Create retinal axes\n    resolver.createRetinalAxes(placeholderInfo.dataModels.parentModel.getFieldsConfig(), retinalConfig,\n            encoders);\n\n    // Domains are evaluated for each of the axes for commonality\n    resolver.setDomains(matrixConfig, placeholderInfo.dataModels, encoders);\n\n    // Create matrix instances\n    setMatrixInstances(context, placeholderInfo);\n\n    // Prepare corner matrices\n    context.cornerMatrices(resolver.createHeaders(placeholderInfo, fields, config));\n\n    // Set placeholder information\n    context.placeholderInfo(placeholderInfo);\n\n    context._composition.axes = resolver.axes();\n    context.metaData({\n        border: getBorders(placeholderInfo, encoders.simpleEncoder)\n    });\n\n    resolver.encoder().unionUnitDomains(context);\n\n    registerDomainChangeListener(context);\n    return context;\n};\n","import { STATE_NAMESPACES } from 'muze-utils';\n\nexport const setupChangeListeners = (context) => {\n    const store = context.store();\n\n    store.registerChangeListener([`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x`], () => {\n        const groupAxes = context.resolver().axes();\n        groupAxes.x.forEach(axes => axes.forEach((axis) => {\n            axis.render();\n        }));\n    });\n\n    store.registerChangeListener([`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y`], () => {\n        const groupAxes = context.resolver().axes();\n        groupAxes.y.forEach(axes => axes.forEach((axis) => {\n            axis.render();\n        }));\n    });\n};\n\nexport const registerDomainChangeListener = (context) => {\n    const store = context.store();\n    store.registerChangeListener([`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`], () => {\n        context.resolver().encoder().unionUnitDomains(context);\n    }, false, {\n        namespace: 'group',\n        key: 'unionDomain'\n    });\n};\n\nexport const unsubscribeChangeListeners = (context) => {\n    context.store().unsubscribe({\n        namespace: 'group',\n        key: 'unionDomain'\n    });\n};\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\nexport const PROPS = {\n    alias: {},\n    data: {},\n    cornerMatrices: {\n        defaultValue: {\n            topLeft: [],\n            topRight: [],\n            bottomLeft: [],\n            bottomRight: []\n        }\n    },\n    groupType: {},\n\n    metaData: {\n        defaultValue: {\n            border: {}\n        }\n    },\n    placeholderInfo: {\n        defaultValue: {}\n    },\n    resolver: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    registry: {\n        sanitization: (context, value) => {\n            if (context.resolver) {\n                context.resolver().registry(value.cellRegistry);\n            }\n            return value;\n        }\n    },\n    selection: {},\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { generateGetterSetters } from 'muze-utils';\nimport localOptions from './local-options';\nimport { SimpleGroup } from '../simple-group';\nimport {\n    MatrixResolver,\n    findInGroup\n} from '../group-helper';\nimport { createUnitState, initializeGlobalState, setMatrixInstances, createMatrices, createLayerState } from './helper';\nimport { setupChangeListeners } from './change-listener';\nimport { PROPS } from './props';\nimport {\n    CONFIG,\n    MOUNT,\n    RETINAL,\n    Y\n} from '../enums/constants';\n\n/**\n * VisualGroup is instantiated by canvas for creating {@link VisualUnit} and axes instances.It creates the\n * the matrix of visual units and axes. It also creates the layout instance which manages the allocation\n * of space of matrices.\n *\n * To get instance of visual group,\n * ```\n *      const visualGroup = canvas.composition().visualGroup;\n * ```\n * @public\n *\n * @class VisualGroup\n */\nclass VisualGroup extends SimpleGroup {\n\n    /**\n     * Creates an instance of VisualGroup. Requires dependencies and other registry options for placeholders\n     * and layers that create individual units.\n     *\n     * @param {Object} registry Key value pair of compostions for the group\n     * @param {Object} dependencies Dependencies needed to run the group\n     * @memberof VisualGroup\n     */\n    constructor (registry, dependencies) {\n        super();\n\n        const {\n            componentSubRegistry\n        } = registry;\n\n        this._dependencies = dependencies;\n        // Generate getter/setter methods for all properties of the class\n        // One can get each property by calling the method and can set it\n        // by passing paramaters for the same. Thus, one can chain setter\n        // getter methods.\n        generateGetterSetters(this, PROPS);\n        generateGetterSetters(this, localOptions);\n        // Populate the store with default values\n        // initialize group compositions\n        this._composition = {};\n        // store reference to data\n        this._data = [];\n        // store reference to mountpoint\n        this._mount = null;\n        // selection object that takes care of updating of components\n        this._selection = {};\n        // Create instance of matrix resolver\n        this.resolver(new MatrixResolver(this._dependencies));\n        // matrix instance store each of the matrices\n        setMatrixInstances(this, {});\n         // Getting indiviual registered items\n        this.registry({\n            layerRegistry: componentSubRegistry.layerRegistry.get(),\n            cellRegistry: componentSubRegistry.cellRegistry.get()\n        });\n    }\n\n    static getState () {\n        return [{\n            domain: {\n                x: {},\n                y: {},\n                radius: {}\n            }\n        }, {}];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            initializeGlobalState(this);\n            createUnitState(this);\n            createLayerState(this);\n            // Register listeners\n            setupChangeListeners(this);\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Return the instances of matrices created by the visual group.\n     *\n     * @return {Object} Instance of matrices.\n     */\n    matrixInstance (...matrices) {\n        if (matrices.length) {\n            return this;\n        }\n        return this.composition().matrices;\n    }\n\n    /**\n     * Returns the composition of visual group.\n     *\n     * @public\n     *\n     * @return {Object} Composition of visual group. It contains instance of matrices {@link ValueMatrix}\n     * and instances of axis.\n     * ```\n     *          {\n     *              matrices: {\n     *                  value: // Instance of center value matrix.\n     *                  left: // Instance of left value matrix\n     *                  right: // Instance of right value matrix\n     *                  bottom: // Instance of bottom value matrix\n     *                  top: // Instance of top value matrix.\n     *              },\n     *              axes: {\n     *                  x: // Array of x axis.\n     *                  y: // Array of y axis\n     *                  color: // Array of color axis\n     *                  shape: // Array of shape axis\n     *                  size: // Array of size axis.\n     *              }\n     *          }\n     * ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    /**\n     * Locks the model to prevent change listeners to be triggered until unlocked\n     *\n     * @return {Object} Instance of class VisualGroup\n     * @memberof VisualGroup\n     */\n    lockModel () {\n        this.store().model.lock();\n        return this;\n    }\n\n    /**\n     * Unlocks the model so that all change listeners can be triggered\n     *\n     * @return {Object} Instance of class VisualGroup\n     */\n    unlockModel () {\n        this.store().model.unlock();\n        return this;\n    }\n\n    /**\n     * Returns the channel name of the variable. Channels are rows, columns, color, shape and size.\n     *\n     * @public\n     * @param {string} variable Name of the variable.\n     *\n     * @return {string} Name of the channel.\n     */\n    where (variable) {\n        return findInGroup(variable, this.resolver().getAllFields());\n    }\n\n    /**\n     * Gets the axis instances of the visual group based on the given axis type.\n     *\n     * @public\n     * @param {string} type Type of axis. X,Y or retinal axes.\n     *\n     * @return {Array} Array of axis instances.\n     */\n    getAxes (type) {\n        if (type === RETINAL) {\n            return this.resolver().getRetinalAxes();\n        }\n        return this.resolver().getSimpleAxes(type);\n    }\n\n    /**\n     * Returns the instances of cells based on the given type. Type can be given as `row' or `col`.\n     *\n     * @public\n     * @return {Array} Two dimensional array of cells.\n     */\n    getCells (type) {\n        return this.resolver()[`${type}Cells`]();\n    }\n\n    getFieldsFromChannel (channel) {\n        const {\n            rowProjections,\n            colProjections\n        } = this.resolver().getAllFields();\n        return channel === Y ? rowProjections : colProjections;\n    }\n\n    getCellsByFacetKey (facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey] || [];\n        return cells;\n    }\n\n    getAxesByFacetKey (axisType, facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey];\n        const axes = cells[0].valueOf().axes()[axisType] || [];\n\n        return axes;\n    }\n\n    /**\n     * This method is used to return a serialized representation of the instance's properties.\n     *\n     * @return {Object} Object with config proprties.\n     * @memberof VisualGroup\n     */\n    serialize () {\n        const store = this.store();\n\n        return {\n            [CONFIG]: store.get(CONFIG),\n            [MOUNT]: store.get(MOUNT)\n        };\n    }\n\n    /**\n     * Returns the grouped datamodel prepared by visual group. If there is no group by performed, then it returns the\n     * original data model passed to visual group.\n     *\n     * @return {DataModel} Grouped data model.\n     */\n    getGroupByData () {\n        return this._groupedDataModel;\n    }\n\n    createMatrices () {\n        createMatrices(this);\n    }\n}\n\nexport default VisualGroup;\n","import { PersistentBehaviour, SELECTION } from '@chartshq/muze-firebolt';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return 'select';\n    }\n\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            // new add set\n            const existingRemoveSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_OLD_EXIT\n                || selectionSet._set[d] === SELECTION.SELECTION_NEW_EXIT);\n                // existing add set\n            if (existingRemoveSet.length) {\n                selectionSet.updateEntry();\n                selectionSet.add(existingRemoveSet);\n            } else {\n                selectionSet.updateExit();\n                selectionSet.remove(addSet);\n            }\n            const { exitSet } = selectionSet.getSets();\n            const mergedExitSet = [...new Set(exitSet[1]), ...new Set(exitSet[0])];\n            const completeSetCount = selectionSet.getCompleteSet().length;\n            if (exitSet[1].length !== completeSetCount && mergedExitSet.length === completeSetCount) {\n                selectionSet.reset();\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n        return this;\n    }\n}\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nconst CLASSPREFIX = 'muze';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        target: `.${CLASSPREFIX}-gradient-rect`,\n        behaviours: [BEHAVIOURS.BRUSH]\n    },\n    [ACTIONS.HOVER]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.CLICK]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.SELECT]\n    }\n};\n\nexport const propagationBehaviourMap = {\n    [BEHAVIOURS.SELECT]: BEHAVIOURS.FILTER,\n    [BEHAVIOURS.BRUSH]: BEHAVIOURS.HIGHLIGHT\n};\n","import * as BEHAVIOURS from '../enums/behaviours';\nimport * as sideEffects from '../enums/side-effects';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: [sideEffects.SELECTIONBOX, {\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [sideEffects.Highlighter],\n    select: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }]\n};\n\nexport const propagationSideEffects = {\n    [BEHAVIOURS.BRUSH]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.SELECT]: ['filter']\n};\n\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n\n","export const SELECTIONBOX = 'selectionBox';\nexport const Highlighter = 'highlighter';\n\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const CONFIG = 'config';\nexport const DATAMODEL = 'dataModel';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const MAXWIDTH = 'max-width';\nexport const HEIGHT = 'height';\nexport const MOUNTPOINT = 'mountPoint';\nexport const GRIDLINEPARENTGROUPCLASS = 'grid-lines';\nexport const TRANSFORM = 'transform';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const DEFAULTCOLOR = '#F44336';\nexport const DEFAULTSIZE = 50;\nexport const DEFAULTSHAPE = 'circle';\nexport const STEP = 'step';\nexport const GRADIENT = 'gradient';\nexport const ORDINAL = 'ordinal';\nexport const SCALE_FUNCTIONS = {\n    size: 'getSize',\n    shape: 'getShape',\n    color: 'getColor'\n};\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const HORIZONTAL = 'horizontal';\nexport const VERTICAL = 'vertical';\nexport const CENTER = 'center';\nexport const VALUE = 'value';\nexport const PATH = 'path';\nexport const SHAPE = 'shape';\nexport const ICON = 'icon';\nexport const RECT = 'rect';\nexport const START = 'start';\nexport const UPPER = 'upper';\nexport const LOWER = 'lower';\nexport const END = 'end';\nexport const SIZE = 'size';\nexport const DISCRETE = 'discrete';\nexport const MEASURE = 'measure';\n\n","import { assembleModelFromIdentifiers, getDataModelFromRange } from 'muze-utils';\nimport { propagationBehaviourMap } from './action-behaviour-map';\nimport { propagationSideEffects } from './behaviour-effect-map';\nimport { STEP, GRADIENT, DISCRETE, MEASURE } from '../enums/constants';\n\nexport const propagate = (firebolt, action, selectionSet, config = {}) => {\n    let propagationData;\n    const type = firebolt.context.constructor.type();\n    const payload = config.payload;\n    const data = firebolt.context.data();\n    const metaData = firebolt.context.metaData();\n    const fieldType = metaData.getData().schema[0].type;\n\n    const propPayload = {};\n    const sourceId = firebolt.context._id;\n    propPayload.action = propagationBehaviourMap[action] || action;\n    propPayload.sideEffects = propagationSideEffects[action];\n    propPayload.sourceCanvas = firebolt.context.canvasAlias();\n    const isMutableAction = firebolt._actions.behavioural[propPayload.action].constructor.mutates();\n    if (payload.criteria === null) {\n        propagationData = null;\n    } else {\n        const entrySet = selectionSet.mergedEnter;\n        let values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.rawVal);\n        if (type === STEP || (type === DISCRETE && fieldType === MEASURE)) {\n            const field = Object.keys(payload.criteria || {})[0];\n            values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.range);\n            propagationData = values.length ? metaData.select((fields) => {\n                let check = false;\n                for (let i = 0; i < values.length; i++) {\n                    check = fields[field].value >= values[i][0] && fields[field].value <= values[i][1];\n                    if (check === true) {\n                        break;\n                    }\n                }\n                return check;\n            }, {\n                saveChild: false\n            }) : null;\n        } else if (type === GRADIENT) {\n            propagationData = getDataModelFromRange(metaData, payload.criteria);\n        } else if (values.length) {\n            propagationData = assembleModelFromIdentifiers(metaData, [payload.criteria[0], ...values.map(d => [d])]);\n        } else {\n            propPayload.criteria = null;\n            propagationData = metaData.select(() => true, {\n                saveChild: false\n            });\n        }\n    }\n\n    let propagateInterpolatedValues = false;\n\n    if (propagationData) {\n        const schema = propagationData.getSchema();\n        propagateInterpolatedValues = schema.every(d => d.type === MEASURE);\n    }\n\n    const propConfig = {\n        sourceId: `legend-${sourceId}`,\n        payload: propPayload,\n        criteria: propPayload.criteria === null ? null : propagationData,\n        isMutableAction,\n        propagateInterpolatedValues,\n        action: propPayload.action\n    };\n\n    metaData.propagate(propagationData, propConfig, true);\n};\n","import { Firebolt } from '@chartshq/muze-firebolt';\nimport { propagate } from './helper';\nimport { STEP, GRADIENT } from '../enums/constants';\n\n/**\n * This class manages the interactions of legend.\n * @export\n * @class LegendFireBolt\n * @extends {Firebolt}\n */\nexport class LegendFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this.initializeSideEffects();\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet[0];\n    }\n\n    propagate (behaviourName, payload, selectionSet) {\n        propagate(this, behaviourName, selectionSet, {\n            payload\n        });\n    }\n\n    getAddSetFromCriteria (criteria) {\n        let values;\n        let uniqueIds;\n        const type = this.context.constructor.type();\n\n        if (criteria === null) {\n            uniqueIds = null;\n        } else if (type === STEP) {\n            values = Object.values(criteria);\n            uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n        } else if (type === GRADIENT) {\n            uniqueIds = [];\n        } else {\n            values = criteria[1];\n            if (values) {\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.rawVal) !== -1).map(d => d.id);\n            } else {\n                values = Object.values(criteria);\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n            }\n        }\n        return {\n            uids: uniqueIds,\n            model: null\n        };\n    }\n\n    getFullData () {\n        return null;\n    }\n}\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\n/**\n * Adds dragging action to the target element.\n * @param {firebolt} firebolt firebolt\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let endPos = {};\n    let payload;\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const boundingBox = context.measurement().gradientDimensions;\n    const axisType = context.config().align === 'horizontal' ? 'x' : 'y';\n    const axisScale = context.axis().source().scale();\n    const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n    }).on('drag', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                    axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n            }\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }).on('end', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n        if (startPos[axisType] === endPos[axisType]) {\n            payload = {\n                criteria: {}\n            };\n        } else {\n            payload = {\n                criteria: {\n                    [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                        axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n                }\n            };\n        }\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }));\n};\n\nexport default drag;\n","import { getEvent } from 'muze-utils';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} Firebolt instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        const event = getEvent();\n                        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, {\n                            criteria: null\n                        }));\n                        event.stopPropagation();\n                    });\n};\n\nexport default hover;\n","/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nconst click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\n\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport click from './click';\nimport * as ACTIONNAMES from '../../enums/actions';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click\n};\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\n","import {\n    getMousePos,\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\nimport { HEIGHT, WIDTH, HORIZONTAL } from '../../enums/constants';\n\nconst getSelectionCriteria = (subject, axis, measures) => {\n    let criteria = [];\n    const {\n        axisScale,\n        axisType\n    } = axis;\n    const {\n        startPos,\n        endPos,\n        selectionBoxMeasure,\n        drawingInfMeasure,\n        offset\n    } = measures;\n    const subjectStartPoint = subject[axisType];\n\n    if (startPos[axisType] === endPos[axisType]) {\n        criteria = [];\n    } else if (subjectStartPoint + selectionBoxMeasure >= drawingInfMeasure + offset) {\n        criteria = [axisScale.invert(drawingInfMeasure + offset - selectionBoxMeasure),\n            axisScale.invert(drawingInfMeasure + offset)];\n    } else if (subjectStartPoint - offset < offset) {\n        criteria = [axisScale.invert(offset * 2), axisScale.invert(selectionBoxMeasure + offset * 2)];\n    } else {\n        criteria = [axisScale.invert(subjectStartPoint), axisScale.invert(subjectStartPoint + selectionBoxMeasure)];\n    }\n    axisType === 'x' ? criteria : criteria.reverse();\n    return criteria;\n};\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let payload;\n    const endPos = {};\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const axisScale = context.axis().source().scale();\n    const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n    const drawingInfMeasure = context.measurement().gradientDimensions[axisType === 'x' ?\n        WIDTH : HEIGHT];\n    const offset = axisScale.range()[axisType === 'x' ? 0 : 1];\n    const measures = {\n        drawingInfMeasure,\n        offset\n    };\n    let subject = {};\n\n    targetEl.call(d3Drag().on('start', function () {\n        const event = getEvent();\n        startPos = getMousePos(this, event.sourceEvent);\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n\n        subject.x += event.dx;\n        subject.y += event.dy;\n\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(subject, { axisScale, axisType }, measures);\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }).on('end', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(event, { axisScale, axisType }, measures);\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true,\n            config: {\n                transition: {\n                    duration: 200\n                }\n            }\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }));\n};\n\n","import { makeElement } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { CLASSPREFIX, HEIGHT, WIDTH, HORIZONTAL, RECT } from '../../../enums/constants';\nimport { SELECTIONBOX } from '../../../enums/side-effects';\nimport { selectionBoxDrag } from '../../physical/selection-box-drag';\nimport './styles.scss';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\n/* istanbul ignore next */ class SelectionBox extends SpawnableSideEffect {\n    static formalName () {\n        return SELECTIONBOX;\n    }\n\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            className: 'legend-selection-box',\n            classPrefix: CLASSPREFIX\n        };\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     */\n    /* istanbul ignore next */ apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const firebolt = this.firebolt;\n        const context = firebolt.context;\n        const config = this.config();\n        const axis = context.axis().source();\n        const className = `${config.classPrefix}-${config.className}`;\n\n        const domain = payload.criteria[firebolt.context.fieldName()];\n        const axisScale = axis.scale();\n        const range = domain ? [axis.getScaleValue(domain[0]), axis.getScaleValue(domain[1])] : [];\n\n        const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n\n        const gradientDimension = firebolt.context.measurement().gradientDimensions[axisType === 'x' ?\n            HEIGHT : WIDTH];\n\n        const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n        const legendGradContainer = context.getDrawingContext().svgContainer;\n        const legendSelGroup = makeElement(legendGradContainer, 'g', [1], `${config.classPrefix}-selection-box-group`);\n\n        if (firebolt.context.config().align === HORIZONTAL) {\n            x = range[0] - rangeShifter || 0;\n            y = 0;\n            width = range[1] - range[0] || 0;\n            height = gradientDimension;\n        } else {\n            x = 0;\n            y = range[1] - rangeShifter || 0;\n            height = range[0] - range[1] || 0;\n            width = gradientDimension;\n        }\n        const enterFn = function (el) {\n            selectionBoxDrag(firebolt)(el, ['brush']);\n        };\n        const selBox = makeElement(legendSelGroup, RECT, [{ domain, x, y, width, height }], className,\n            { enter: enterFn });\n        selBox.attr('y', y)\n                        .attr('x', x)\n                        .attr(WIDTH, width)\n                        .attr(HEIGHT, height);\n    }\n}\n\nexport default SelectionBox;\n\n","import { selectElement } from 'muze-utils';\n\nexport const strategies = (firebolt) => {\n    const context = firebolt.context;\n    const classed = (set, className, change) => {\n        const classPrefix = context.config().classPrefix;\n        selectElement(context.mount())\n                        .selectAll(`.${classPrefix}-legend-columns`)\n                        .filter(d => set.uids.indexOf(d.id) !== -1)\n                        .selectAll('div')\n                        .classed(className, change);\n    };\n\n    return {\n        fade: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-fadeout`, false);\n            } else {\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-fadeout`, true);\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-fadeout`, false);\n            }\n        },\n        brighten: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-brighten`, false);\n            } else {\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-brighten`, true);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n            }\n        }\n    };\n};\n","import { GenericSideEffect } from '@chartshq/muze-firebolt';\nimport { strategies } from './strategies';\nimport { Highlighter } from '../../../enums/side-effects';\n\nexport default class LegendHighlighter extends GenericSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategies = strategies(this.firebolt);\n        this._strategy = 'brighten';\n    }\n\n    static formalName () {\n        return Highlighter;\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        strategy(selectionSet, this);\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    data: {},\n    fieldName: {},\n    legendContainer: {},\n    measurement: {\n        sanitization: (context, value) => {\n            const measurement = mergeRecursive(context._measurement, value);\n            ['padding', 'border', 'margin'].forEach((space) => {\n                measurement[space] = Math.min(measurement[space] > 0 ? measurement[space] : 0,\n                     measurement.maxWidth * 0.1, measurement.maxHeight * 0.1);\n            });\n            return measurement;\n        }\n    },\n    logicalSpace: {},\n    metaData: {},\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.resetLogicalSpace();\n            context.store().commit('range', value);\n            return value;\n        }\n    },\n    scale: {},\n    smartTicks: {},\n    store: {},\n    title: {\n        sanitization: (context, value) => mergeRecursive(context._title || {}, value)\n    },\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import { getSymbol } from 'muze-utils';\nimport {\n    CENTER,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\nexport const ALIGN = {\n    HORIZONTAL: 'horizontal',\n    VERTICAL: 'vertical'\n};\n\nexport const DEFAULT_MEASUREMENT = {\n    height: 30,\n    width: 30,\n    maxWidth: Infinity,\n    maxHeight: Infinity,\n    padding: 2,\n    margin: 2,\n    border: 1\n};\n\nexport const LEGEND_TITLE = {\n    text: '',\n    orientation: (pos) => {\n        if (pos === LEFT || pos === RIGHT) {\n            return LEFT;\n        } return CENTER;\n    }\n};\n\nexport const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    borderStyle: 'solid',\n    borderColor: 'rgba(0,0,0,0)',\n    formatter: {\n        bounds: {\n            lower: 'less than',\n            upper: 'more than'\n        }\n    },\n    item: {\n        text: {\n            orientation: 'right',\n            width: 10,\n            formatter: (val, i, data, context) => context.valueParser()(val)\n        },\n        icon: {\n            className: 'legend-icon',\n            height: 20,\n            width: 20,\n            color: 'rgba(0,0,0,.5)',\n            type: 'square'\n        }\n    }\n};\n\n/**\n * Creates a map of pre defined icons\n *\n * @param {string} icon Accepts a icon name like 'square', 'cross', 'diamond' etc\n * @return {Object} icon object which can be used to draw the icons\n */\nexport const ICON_MAP = (icon) => {\n    if (icon && typeof (icon) === 'string') {\n        return getSymbol(icon);\n    } return icon;\n};\n","import { makeElement, numberInterpolator } from 'muze-utils';\n\nimport {\n    SCALE_FUNCTIONS,\n    WIDTH,\n    HEIGHT,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    MAXWIDTH\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} scale\n *\n */\nexport const getScaleInfo = (scale) => {\n    const scaleType = scale.constructor.type();\n    const domain = scale.uniqueValues();\n    const steps = scale.config().stops || 1;\n    const scaleFn = SCALE_FUNCTIONS[scaleType];\n\n    return { scaleType, domain, steps, scaleFn };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} steps\n *\n */\nexport const getInterpolatedData = (domain, steps) => {\n    const domainForLegend = [];\n    const interpolatedFn = numberInterpolator()(domain[0], domain[1]);\n\n    for (let i = 0; i <= steps; i++) {\n        domainForLegend[i] = interpolatedFn(i / steps);\n    }\n    return domainForLegend;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} text\n * @param {*} measurement\n * @param {*} classPrefix\n */\nexport const titleCreator = (container, title, measurement, config) => {\n    const titleWidth = Math.min(measurement.maxWidth, measurement.width);\n\n    const titleContainer = makeElement(container, 'table', [1], `${config.classPrefix}-legend-title`)\n            .style(WIDTH, `${titleWidth}px`)\n            .style(HEIGHT, `${measurement.height}px`)\n            .style('border-bottom', `${measurement.border}px ${config.borderStyle} ${config.borderColor}`)\n            .style('text-align', title.orientation instanceof Function ?\n            title.orientation(config.position) : title.orientation);\n    return makeElement(titleContainer, 'td', [1], `${config.classPrefix}-legend-title-text`)\n                    .style(WIDTH, `${titleWidth}px`)\n                    .style(MAXWIDTH, `${titleWidth}px`)\n                    .style(HEIGHT, '100%')\n                    .style('line-height', 1)\n                    .style('padding', `${measurement.padding}px`)\n                    .text(title.text)\n                    .style('overflow-x', 'scroll')\n                    .node();\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getMaxMeasures = (data, prop, labelManager) => {\n    let maxHeight = -Infinity;\n    let maxWidth = -Infinity;\n\n    data.forEach((item) => {\n        const value = prop ? item[prop] : item;\n        const space = labelManager.getOriSize(value);\n        maxHeight = Math.max(space.height + 2, maxHeight);\n        maxWidth = Math.max(space.width + 2, maxWidth);\n    });\n\n    return { height: maxHeight, width: maxWidth };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getItemMeasures = (context, prop, formatter) => {\n    const space = [];\n    const data = context.data();\n    const labelManager = context._labelManager;\n\n    data.forEach((item, index) => {\n        const value = prop ? item[prop] : item;\n        const { height, width } = labelManager.getOriSize(formatter(value, index, data, context));\n        space[index] = { height: height + 1, width: width + 1 };\n    });\n    return space;\n};\n\n/**\n *\n *\n * @param {*} textOrientation\n * @param {*} effPadding\n * @param {*} titleSpace\n *\n * @memberof Legend\n */\nexport const computeItemSpaces = (config, measures, data) => {\n    let totalHeight = 0;\n    let totalWidth = 0;\n    let maxItemSpaces = {\n        width: 0, height: 0\n    };\n    const {\n        effPadding,\n        titleWidth,\n        labelSpaces,\n        titleHeight,\n        maxWidth\n    } = measures;\n    const {\n        item,\n        align\n    } = config;\n    const {\n        icon,\n        text\n    } = item;\n    const textOrientation = text.orientation;\n    const itemSpaces = [];\n    const iconSpaces = [];\n    let maxIconWidth = 0;\n    labelSpaces.forEach((labelSpace, i) => {\n        const itemSpace = { width: 0, height: 0 };\n        const iconSpace = { width: 0, height: 0 };\n        const datum = data[i] || {};\n            // Compute each legend item height/width\n        if (textOrientation === LEFT || textOrientation === RIGHT) {\n            // Get label, icon and item widths\n            labelSpace.width += effPadding;\n            iconSpace.width = (datum.size ? 2 * Math.sqrt(datum.size / Math.PI) : icon.width) + effPadding;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n            itemSpace.width = labelSpace.width + maxIconWidth;\n\n            // Get label, icon and item heights\n            labelSpace.height = Math.max(labelSpace.height, icon.height) + effPadding;\n            iconSpace.height = labelSpace.height;\n            itemSpace.height = labelSpace.height;\n        } else {\n            // Get label, icon and item widths\n            labelSpace.width = Math.max(labelSpace.width, datum.size ? 2 * Math.sqrt(datum.size / Math.PI)\n            : icon.width) + effPadding;\n            iconSpace.width = labelSpace.width;\n            itemSpace.width = labelSpace.width;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n\n            // Get label, icon and item heights\n            labelSpace.height += effPadding;\n            iconSpace.height = icon.height + effPadding;\n            itemSpace.height = labelSpace.height + iconSpace.height;\n        }\n        // Compute height and width of legend for each alignment\n        if (align === 'horizontal') {\n            totalHeight = Math.max(totalHeight, itemSpace.height);\n        } else {\n            totalHeight += itemSpace.height;\n            totalWidth = Math.max(totalWidth, itemSpace.width, titleWidth);\n        }\n        maxItemSpaces = {\n            width: Math.max(itemSpace.width, maxItemSpaces.width),\n            height: Math.max(itemSpace.height, maxItemSpaces.height)\n        };\n        itemSpaces.push(itemSpace);\n        iconSpaces.push(iconSpace);\n    });\n    itemSpaces.forEach((itemSpace, i) => {\n        if (align === 'horizontal') {\n            itemSpace.height = totalHeight;\n            iconSpaces[i].width = maxIconWidth;\n            if (textOrientation === LEFT || textOrientation === RIGHT) {\n                labelSpaces[i].height = totalHeight;\n                iconSpaces[i].height = totalHeight;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n            } else {\n                labelSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = maxIconWidth;\n                labelSpaces[i].width = maxIconWidth;\n            }\n            totalWidth = Math.max(totalWidth + itemSpaces[i].width);\n        } else {\n            itemSpace.width = Math.max(totalWidth, maxWidth);\n            if (textOrientation === TOP || textOrientation === BOTTOM) {\n                labelSpaces[i].width = totalWidth;\n                iconSpaces[i].width = totalWidth;\n                maxIconWidth = totalWidth;\n            } else {\n                const labelWidth = labelSpaces[i].width;\n                const newLabelWidth = (maxItemSpaces.width - maxIconWidth);\n                iconSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n                labelSpaces[i].width = Math.max(labelWidth, newLabelWidth);\n                totalWidth = Math.max(totalWidth, itemSpace.width);\n            }\n        }\n    });\n    totalWidth = Math.ceil(Math.max(totalWidth, titleWidth)) + effPadding;\n    totalHeight += titleHeight + effPadding;\n    totalHeight = Math.ceil(totalHeight);\n    return { totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth };\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} scaleInfo\n * @param {*} domainInfo\n *\n */\nexport const getDomainBounds = (type, scaleInfo, domainInfo) => {\n    const {\n        scaleFn,\n        scaleType,\n        scale\n    } = scaleInfo;\n    const {\n        domain,\n        domainBounds,\n        domainLeg,\n        steps\n    } = domainInfo;\n    const ele = domain[type === 'lower' ? 0 : domain.length - 1];\n    const step = steps[type === 'lower' ? 0 : steps.length - 1];\n\n    return {\n        [scaleType]: scaleType === 'size' ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n        value: domainBounds[type],\n        id: type === 'lower' ? 0 : domainLeg.length + 2,\n        range: [ele, step]\n    };\n};\n","import {\n    makeElement,\n    selectElement,\n    getUniqueId,\n    getSmartComputedStyle,\n    generateGetterSetters,\n    mergeRecursive\n} from 'muze-utils';\nimport { behaviouralActions } from '@chartshq/muze-firebolt';\nimport * as legendBehaviours from '../firebolt/behavioural';\n\nimport { LegendFireBolt } from '../firebolt/legend-firebolt';\nimport { actionBehaviourMap } from '../firebolt/action-behaviour-map';\nimport { physicalActions } from '../firebolt/physical';\nimport * as sideEffects from '../firebolt/side-effects';\nimport { behaviourEffectMap } from '../firebolt/behaviour-effect-map';\nimport { VALUE, PATH, RIGHT, LEFT, TOP, BOTTOM } from '../enums/constants';\nimport { PROPS } from './props';\nimport { DEFAULT_MEASUREMENT, DEFAULT_CONFIG, LEGEND_TITLE } from './defaults';\nimport { getItemMeasures, titleCreator, computeItemSpaces } from './legend-helper';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class SimpleLegend\n */\nexport default class SimpleLegend {\n\n    /**\n     * Creates an instance of Legend.\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @memberof Legend\n     */\n    constructor (dependencies) {\n        this._data = [];\n        this._metaData = [];\n        this._mount = null;\n        this._fieldName = null;\n        this._title = Object.assign({}, LEGEND_TITLE);\n        this._metaData = null;\n        this._labelManager = dependencies.labelManager;\n        this._cells = dependencies.cells;\n        this._id = getUniqueId();\n        this._measurement = Object.assign({}, this.constructor.defaultMeasurement());\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n\n        generateGetterSetters(this, PROPS);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'),\n            `${this.config().classPrefix}-legend-item-info`);\n\n        this._firebolt = new LegendFireBolt(this, {\n            behavioural: Object.assign({}, behaviouralActions, legendBehaviours),\n            physical: physicalActions,\n            physicalBehaviouralMap: actionBehaviourMap\n        }, sideEffects, behaviourEffectMap);\n    }\n\n    id () {\n        return this._id;\n    }\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new SimpleLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENT;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleLegend\n     */\n    firebolt (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return PATH;\n    }\n\n    canvasAlias (...alias) {\n        if (alias.length) {\n            this._canvasAlias = alias[0];\n            return this;\n        }\n        return this._canvasAlias;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    mount (...params) {\n        if (params.length) {\n            this._mount = params[0];\n            this.render();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces () {\n        const {\n            item,\n            classPrefix\n        } = this.config();\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n            `${classPrefix}-legend-item-info`));\n        return getItemMeasures(this, VALUE, item.text.formatter);\n    }\n\n    /**\n     * Sets the height and width of a legend based on provided max\n     * height and width and based on its contents\n     *\n     * @return {Instance} Current instance\n     * @memberof Legend\n     */\n    setLegendMeasures () {\n        const {\n            width,\n            height,\n            maxWidth,\n            maxHeight,\n            padding,\n            margin,\n            border\n        } = this.measurement();\n        const {\n            align\n        } = this.config();\n\n        // Effective padding, margin and padding\n        const effPadding = padding * 2;\n        const effBorder = border * 2;\n        const effMargin = margin * 2;\n\n        this.data(this.dataFromScale(this.scale()));\n        // Get space occupied by title\n        const titleSpace = this.getTitleSpace();\n        const titleHeight = titleSpace.height > 0 ? titleSpace.height + effPadding : 0;\n        const titleWidth = titleSpace.width + effPadding;\n\n        // Get space occupied by labels\n        const labelSpaces = this.getLabelSpaces(effPadding, align);\n        const {\n            totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth\n        } = computeItemSpaces(this.config(),\n        { effPadding, titleWidth, labelSpaces, titleHeight, maxWidth, maxHeight }, this.data());\n\n        this.measurement({\n            width: Math.max(totalWidth, width) + effMargin + effBorder,\n            height: Math.max(totalHeight, height) + effMargin + effBorder,\n            labelSpaces,\n            iconSpaces,\n            itemSpaces,\n            maxItemSpaces,\n            maxIconWidth,\n            titleSpaces: {\n                width: Math.min(maxWidth, this.measurement().width) - effMargin - effBorder,\n                height: titleHeight\n            }\n        });\n        return this;\n    }\n\n    /**\n     * Returns the space occupied by the legend title\n     *\n     * @return {Object} Space occupied by title\n     * @memberof Legend\n     */\n    getTitleSpace () {\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n                                                `${this.config().classPrefix}-legend-title`));\n        return this._labelManager.getOriSize(this.title().text ? this.title().text : '');\n    }\n\n    /**\n     * Creates the title for the legend\n     *\n     * @param {DOM} container Container made for the title\n     * @return {Selection} Title and it's node\n     * @memberof Legend\n     */\n    renderTitle (container) {\n        const { titleSpaces, border, padding, width, maxWidth } = this.measurement();\n        const { borderStyle, borderColor } = this.config();\n        return titleCreator(container, this.title(), {\n            height: titleSpaces.height,\n            width,\n            maxWidth,\n            border,\n            padding,\n            borderStyle,\n            borderColor\n        }, this.config());\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const {\n            classPrefix,\n            borderStyle,\n            borderColor,\n            position\n        } = this.config();\n        const {\n            maxWidth,\n            maxHeight,\n            width,\n            height,\n            margin,\n            border\n        } = this.measurement();\n        const legendContainer = makeElement(selectElement(this.mount()), 'div', [1], `${classPrefix}-legend-box`);\n        let marginPosition;\n        switch (position) {\n        case TOP:\n            marginPosition = `margin-${BOTTOM}`;\n            break;\n        case LEFT:\n            marginPosition = `margin-${RIGHT}`;\n            break;\n        case BOTTOM:\n            marginPosition = `margin-${TOP}`;\n            break;\n        default:\n            marginPosition = `margin-${LEFT}`;\n        }\n        legendContainer.classed(`${classPrefix}-legend-box-${this._id}`, true);\n        legendContainer.style('float', 'left');\n        // set height and width\n        legendContainer.style('width', `${Math.min(maxWidth, width) - margin * 2}px`)\n                        .style('height', `${Math.min(maxHeight, height) - margin * 2}px`)\n                        .style(`${marginPosition}`, `${margin}px`)\n                        .style('border', `${border}px ${borderStyle} ${borderColor}`);\n        this.legendContainer(legendContainer.node());\n\n        // create title\n        this.renderTitle(legendContainer);\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n  /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        const type = this.metaData().getData().schema[0].type;\n        if (type === 'measure') {\n            return {\n                [fieldName]: data.range\n            };\n        }\n        return [[fieldName], [data.rawVal]];\n    }\n}\n","import {\n    LEFT,\n    RIGHT,\n    START,\n    END,\n    TOP,\n    BOTTOM,\n    HORIZONTAL,\n    VERTICAL,\n    CENTER,\n    SHAPE,\n    VALUE\n} from '../enums/constants';\n\nconst legendOrientation = {\n    [HORIZONTAL]: {\n        datasets: data => ({\n            row: [1],\n            column: data\n        }),\n        itemContainerMeasures: (measurement) => {\n            const {\n                itemSpaces,\n                width\n            } = measurement;\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                },\n                column: {\n                    width: (d, i) => `${itemSpaces[i].width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, height } = measurement;\n            return {\n                iconHeight: height,\n                iconWidth: maxItemSpaces.width,\n                stepPadding: {\n                    horizontal: true,\n                    vertical: false\n                }\n            };\n        }\n    },\n    [VERTICAL]: {\n        datasets: data => ({\n            row: data,\n            column: d => [d]\n        }),\n        itemContainerMeasures: (measurement, config) => {\n            const {\n                width\n            } = measurement;\n            const { padding } = config;\n\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${padding}px`\n                },\n                column: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, width } = measurement;\n            return {\n                iconHeight: maxItemSpaces.height,\n                iconWidth: width,\n                stepPadding: {\n                    horizontal: false,\n                    vertical: true\n                }\n            };\n        }\n    }\n};\n\nexport const positionConfig = {\n    [LEFT]: legendOrientation[VERTICAL],\n    [RIGHT]: legendOrientation[VERTICAL],\n    [TOP]: legendOrientation[HORIZONTAL],\n    [BOTTOM]: legendOrientation[HORIZONTAL]\n};\n\nexport const alignmentMap = {\n    [LEFT]: END,\n    [RIGHT]: START,\n    [TOP]: CENTER,\n    [BOTTOM]: CENTER\n};\n\n// Reverses data for step legend\nexport const stepData = data => ({\n    [LEFT]: data.reverse(),\n    [RIGHT]: data.reverse(),\n    [TOP]: data,\n    [BOTTOM]: data\n});\n\n// Changes the item layout based on the position of the text\nexport const itemStack = {\n    [LEFT]: [VALUE, SHAPE],\n    [RIGHT]: [SHAPE, VALUE],\n    [TOP]: [VALUE, SHAPE],\n    [BOTTOM]: [SHAPE, VALUE]\n};\n","import { makeElement, selectElement, applyStyle } from 'muze-utils';\nimport { ICON_MAP } from './defaults';\nimport { positionConfig, alignmentMap, itemStack } from './position-config';\nimport {\n    WIDTH,\n    HEIGHT,\n    CENTER,\n    VALUE,\n    RECT,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} legendInstance\n * @param {*} align\n *\n */\nexport const getItemContainers = (container, data, legendInstance) => {\n    const measurement = legendInstance.measurement();\n    const config = legendInstance.config();\n    const {\n        itemSpaces\n    } = measurement;\n    const {\n        classPrefix,\n        position\n    } = config;\n    const positionObj = positionConfig[position];\n    const datasets = positionObj.datasets(data);\n    const measures = positionObj.itemContainerMeasures(measurement, config);\n\n    const rows = makeElement(container, 'div', datasets.row, `${classPrefix}-legend-row`);\n    rows.style(HEIGHT, (d, i) => `${itemSpaces[i].height}px`);\n    rows.style(WIDTH, measures.row.width);\n    rows.style('padding', measures.row.padding);\n\n    const columns = makeElement(rows, 'div', datasets.column, `${classPrefix}-legend-columns`);\n    columns.style(WIDTH, measures.column.width);\n    columns.style('padding', measures.column.padding);\n\n    return columns;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} classPrefix\n * @param {*} data\n *\n * @memberof DiscreteLegend\n */\nexport const createLegendSkeleton = (context, container, classPrefix, data) => {\n    let gradWidth = 0;\n    let gradHeight = 0;\n    let maxGradHeight = 0;\n    let maxGradWidth = 0;\n    const measurement = context.measurement();\n    const {\n            margin,\n            border,\n            titleSpaces,\n            width,\n            height,\n            maxWidth,\n            maxHeight\n        } = measurement;\n\n    gradHeight = height - (titleSpaces.height + 2 * margin + 2 * border);\n    gradWidth = width - (margin * 2 + border * 2);\n\n    maxGradHeight = maxHeight - (titleSpaces.height + margin * 2 + border * 2);\n    maxGradWidth = maxWidth - (margin * 2 + border * 2);\n\n    let legendBody = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    legendBody.select(`.${classPrefix}-legend-overflow`).remove();\n        // Create a div with scroll when overflow\n    if (maxGradWidth && maxGradWidth < gradWidth) {\n        legendBody = legendBody.style(WIDTH, `${maxGradWidth}px`).style('overflow-x', 'scroll');\n    }\n        // Create a div with scroll when overflow\n    if (maxGradHeight && maxGradHeight < gradHeight) {\n        legendBody.style(HEIGHT, `${maxGradHeight}px`).style('overflow-y', 'scroll');\n    }\n\n    legendBody = makeElement(legendBody, 'div', [1], `${classPrefix}-legend-overflow`);\n\n    legendBody.style(WIDTH, `${gradWidth}px`);\n    legendBody.style(HEIGHT, `${gradHeight}px`);\n\n    const legendItem = getItemContainers(legendBody, data, context);\n    return { legendItem };\n};\n\n/**\n * Creates legend item based on alignment and text orientation\n *\n * @param {Selection} container Point where items are to be mounted\n * @return {Instance} Current instance\n * @memberof Legend\n */\nexport const createItemSkeleton = (context, container) => {\n    const {\n        classPrefix,\n        item\n    } = context.config();\n    const textOrientation = item.text.orientation;\n\n    const stack = itemStack[textOrientation];\n    const itemSkeleton = makeElement(container, 'div', (d, i) => stack.map(e => [e, d[e], d.color, d.size,\n        d.value, context.fieldName(), i]), `${classPrefix}-legend-item-info`);\n\n    const alignClass = alignmentMap[textOrientation];\n\n    itemSkeleton.classed(alignClass, true);\n    return { itemSkeleton };\n};\n\n/**\n *\n *\n * @param {*} measureType\n * @param {*} stepColorCheck\n */\nexport const applyItemStyle = (item, measureType, stepColorCheck, context) => {\n    const {\n        padding,\n        labelSpaces,\n        iconSpaces,\n        maxIconWidth\n    } = context.measurement();\n    const diff = stepColorCheck ? -padding * 2 : 0;\n\n    if (item[0] === VALUE) {\n        return `${labelSpaces[item[6]][measureType]}px`;\n    }\n    return `${measureType === 'width' && !stepColorCheck ? maxIconWidth : iconSpaces[item[6]][measureType] - diff}px`;\n};\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, elem, defaultIcon, width, height) {\n    const groupElement = elem;\n    // const { shape, size, update } = d;\n    const size = d[3] || Math.min(width, height) * Math.PI;\n    const shape = d[1] || defaultIcon;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            return createShape(d, elem);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        shapeElement.attr('transform', `scale(${size / 100})`);\n        return selectElement(groupElement.node().appendChild(newShape));\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = ICON_MAP(shape).size(size)();\n        }\n        return makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    }\n    d[1] = 'circle';\n    return createShape(d, elem, 'circle');\n};\n\n/**\n * Returns the icon of the legend item\n *\n * @param {Object} datum Data property attached to the item\n * @param {number} width width of the item\n * @param {number} height height of the item\n * @return {Object|string} returns the path string or the string name of the icon\n * @memberof Legend\n */\nexport const getLegendIcon = (datum, width, height, defaultIcon) => {\n    const icon = ICON_MAP(datum[1]);\n\n    if (icon) {\n        return icon.size(datum[3] || Math.min(width, height) * Math.PI);\n    }\n    return ICON_MAP(datum[3] ? 'circle' : defaultIcon).size(datum[3] || Math.min(width, height) * Math.PI);\n};\n\n/**\n *\n *\n */\nexport const renderIcon = (icon, container, datum, context) => {\n    const {\n        classPrefix,\n        iconHeight,\n        iconWidth,\n        maxIconWidth,\n        padding,\n        color\n    } = context;\n    const svg = makeElement(container, 'svg', f => [f], `${classPrefix}-legend-icon-svg`)\n    .attr(WIDTH, maxIconWidth)\n    .attr(HEIGHT, iconHeight)\n    .style(WIDTH, `${maxIconWidth}px`)\n    .style(HEIGHT, `${iconHeight}px`);\n\n    if (icon !== RECT) {\n        const group = makeElement(svg, 'g', [datum[1]], `${classPrefix}-legend-icon`);\n        createShape(datum, group, datum[3] ? 'circle' : 'square', iconWidth, iconHeight)\n                        .attr('transform', `translate(${maxIconWidth / 2 - padding} ${iconHeight / 2})`)\n                        .attr('fill', datum[2] || color);\n    } else {\n        makeElement(svg, RECT, [datum[1]], `${classPrefix}-legend-icon`)\n                        .attr('x', 0)\n                        .attr('y', 0)\n                        .attr(WIDTH, maxIconWidth)\n                        .attr(HEIGHT, iconHeight)\n                        .attr('fill', datum[2] || color);\n    }\n};\n\n/**\n * Renders the items in the legend i.e, icon and text\n *\n * @param {DOM} container Point where item is to be mounted\n * @memberof Legend\n */\nexport const renderDiscreteItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n           item,\n           classPrefix\n    } = context.config();\n    const {\n        maxIconWidth,\n        padding\n    } = context.measurement();\n    const {\n            width: iconWidth,\n            height: iconHeight,\n            color,\n            className\n        } = item.icon;\n\n    const textOrientation = item.text.orientation;\n    const formatter = item.text.formatter;\n\n    labelManager.useEllipsesOnOverflow(true);\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, false, context),\n        height: d => applyItemStyle(d, HEIGHT, false, context),\n        'text-align': CENTER,\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    const dataArr = container.data();\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1], i, dataArr, context))\n                            .style(`padding-${textOrientation === RIGHT ? LEFT : RIGHT}`, '0px');\n        } else {\n            // const icon = getLegendIcon(d, iconWidth, iconHeight, type);\n            selectElement(this).classed(`${classPrefix}-${className}`, true);\n            selectElement(this).classed(`${classPrefix}-${className}-${i}`, true);\n            renderIcon('circle', selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                // iconWidth: 2 * Math.sqrt(d[3] / Math.PI) || iconWidth,\n                iconHeight,\n                maxIconWidth,\n                padding,\n                color\n            });\n        }\n    });\n};\n\n/**\n* Renders the items in the legend i.e, icon and text\n*\n* @param {DOM} container Point where item is to be mounted\n* @memberof Legend\n*/\nexport const renderStepItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n      item,\n      position,\n      classPrefix\n   } = context.config();\n    const {\n      maxItemSpaces,\n      maxIconWidth,\n      padding\n   } = context.measurement();\n    const {\n       width,\n       height,\n       color\n   } = item.icon;\n    const {\n        formatter\n   } = item.text;\n\n    labelManager.useEllipsesOnOverflow(true);\n    const { iconHeight, iconWidth, stepPadding } = positionConfig[position].getStepSpacesInfo({\n        maxItemSpaces, height, width\n    });\n\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, stepPadding.horizontal, context),\n        height: d => applyItemStyle(d, HEIGHT, stepPadding.vertical, context),\n        'text-align': 'center',\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    const dataArr = container.data();\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1], i, dataArr, context));\n        } else {\n            renderIcon(RECT, selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                iconHeight,\n                maxIconWidth,\n                color\n            });\n        }\n    });\n};\n","import {\n    FieldType,\n    DimensionSubtype,\n    formatTemporal\n} from 'muze-utils';\nimport SimpleLegend from './simple-legend';\nimport { DISCRETE, LEFT, SIZE } from '../enums/constants';\nimport { getScaleInfo } from './legend-helper';\nimport { createLegendSkeleton, createItemSkeleton, renderDiscreteItem } from './renderer';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class DiscreteLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new DiscreteLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof DiscreteLegend\n     */\n    static type () {\n        return DISCRETE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof DiscreteLegend\n     */\n    dataFromScale (scale) {\n        const { scaleType, domain, scaleFn } = getScaleInfo(scale);\n        let domainForLegend = [...new Set(domain)];\n        const field = this.metaData().getFieldspace().fields[0];\n        const { type, subtype } = field.schema();\n\n        domainForLegend = domainForLegend.map((ele, i) => {\n            let value = 0;\n            let range = 0;\n            const rawVal = domainForLegend[i];\n            if (type === FieldType.MEASURE) {\n                value = (+domainForLegend[i]).toFixed(0);\n                const nextVal = domainForLegend[i + 1] ? +domainForLegend[i + 1] : +value;\n                range = [value, nextVal.toFixed(0)];\n            } else {\n                let domainVal = rawVal;\n                if (subtype === DimensionSubtype.TEMPORAL) {\n                    domainVal = formatTemporal(domainForLegend[i], field.minimumConsecutiveDifference());\n                }\n                value = domainVal;\n                range = [domainVal];\n            }\n            return {\n                [scaleType]: scale[scaleFn](ele),\n                value,\n                id: i,\n                range,\n                rawVal\n            };\n        }).filter(d => d.value !== null);\n\n        domainForLegend = scaleType === SIZE ? domainForLegend.sort((a, b) => a[scaleType] - b[scaleType])\n            : domainForLegend;\n        return domainForLegend;\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const data = this.data();\n        const { classPrefix } = this.config();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n        renderDiscreteItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n}\n","import { makeElement, applyStyle } from 'muze-utils';\nimport { ContinousAxis } from '@chartshq/muze-axis';\nimport { BOTTOM, RIGHT } from '../enums/constants';\nimport { ALIGN } from './defaults';\nimport '../styles.scss';\n\n/**\n *\n *\n * @param {*} data\n *\n */\nexport const getGradientDomain = (data) => {\n    if (typeof data[0].value === 'number') {\n        return data.reduce((accumulator, currentValue) =>\n            [Math.min(currentValue.value, accumulator[0]), Math.max(currentValue.value, accumulator[1])],\n                [Number.MAX_VALUE, Number.MIN_VALUE]);\n    }\n    return data.map(e => e.value);\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} domain\n *\n */\nexport const makeLinearGradient = (container, data, domain) => {\n    const defs = makeElement(container, 'defs', [1]);\n    const linearGradient = makeElement(defs, 'linearGradient', [1])\n                .attr('id', 'linear-gradient')\n                .attr('x1', '0%')\n                .attr('y2', '0%');\n    makeElement(linearGradient, 'stop', data, 'stop-gradient')\n                    .attr('offset', d => `${(d.value - domain[0]) * 100 / (domain[1] - domain[0])}%`)\n                    .attr('stop-color', d => d.color);\n    return linearGradient;\n};\n\n/**\n * Creates an axis cell with a linear axis for computing space and\n * creating gradient legend\n *\n * @return {AxisCell} Instance of Axis Cell for the gradient axis\n * @memberof Legend\n */\nexport const createAxis = (context) => {\n    const data = context.data();\n    const { align } = context.config();\n    const AxisCell = context._cells.AxisCell;\n    const newAxis = new ContinousAxis({\n        id: `legend-${context._id}`,\n        orientation: align === ALIGN.VERTICAL ? RIGHT : BOTTOM,\n        style: context._computedStyle,\n        nice: false,\n        showAxisName: false,\n        tickValues: data.map(d => d.value),\n        fixedBaseline: false,\n        labels: {\n            rotation: 0\n        }\n    }, { labelManager: context._labelManager });\n\n    newAxis.domain(getGradientDomain(data));\n    newAxis.range([1, 1]);\n    return new AxisCell().source(newAxis).config({\n        margin: { left: 0, bottom: 0, top: 0, right: 0 }\n    });\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} classPrefix\n *\n * @memberof GradientLegend\n */\nconst createLegendSkeleton = (container, classPrefix, data) => {\n    const domain = getGradientDomain(data);\n    const legendContainer = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    const legendGradSvg = makeElement(legendContainer, 'svg', [1], `${classPrefix}-gradient`);\n    const legendGradCont = makeElement(legendGradSvg, 'g', [1], `${classPrefix}-gradient-group`);\n    const linearGradient = makeLinearGradient(legendGradSvg, data, domain);\n    const legendRect = makeElement(legendGradCont, 'rect', [1], `${classPrefix}-gradient-rect`);\n\n    return {\n        legendContainer,\n        legendGradCont,\n        legendGradSvg,\n        linearGradient,\n        legendRect\n    };\n};\n\n/**\n * Renders the axis for the gradient\n *\n * @param {Selection} container Point where axis is to be mounted\n * @param {number} height Height for axis\n * @param {number} width Width for axis\n * @memberof Legend\n */\nexport const renderAxis = (context, container, height, width) => {\n    const axis = context.axis();\n\n    axis.setAvailableSpace(width, height);\n    axis.render(container.node());\n    axis.source().render();\n};\n\n/**\n * Renders gradient legends\n *\n * @param {Selection} container Point where the legend is to be appended\n * @memberof GradientLegend\n */\nexport const renderGradient = (context, container) => {\n    let gradHeight = 0;\n    let gradWidth = 0;\n    const {\n        align,\n        classPrefix,\n        item\n    } = context.config();\n    const data = context.data();\n    // Create the skeleton for the legend\n    const {\n        legendContainer,\n        legendGradSvg,\n        legendGradCont,\n        linearGradient,\n        legendRect\n    } = createLegendSkeleton(container, classPrefix, data);\n    const labelDim = context.axis().source().getAxisDimensions().tickDimensions;\n    const {\n        padding,\n        margin,\n        border,\n        titleSpaces,\n        maxItemSpaces,\n        maxHeight,\n        maxWidth,\n        height,\n        width\n    } = context.measurement();\n    const gradientDimensions = {};\n\n    gradHeight = Math.floor(height - (titleSpaces.height + 2 * margin + 2 * border));\n    gradWidth = Math.floor(width - (margin * 2 + border * 2));\n\n    if (align === ALIGN.HORIZONTAL) {\n        gradientDimensions.height = item.icon.height;\n        gradientDimensions.width = gradWidth - 2 * padding - labelDim.width / 2;\n        linearGradient.attr('x2', '100%').attr('y1', '0%');\n        legendGradCont.attr('transform', `translate( ${labelDim.width / 2} 0)`);\n        renderAxis(context, legendContainer, gradHeight - item.icon.height - padding, gradWidth - 2 * padding - 1);\n        legendContainer.classed(`${classPrefix}-overflow-x`, width > maxWidth);\n\n        applyStyle(legendContainer, {\n            height: `${maxItemSpaces.height + border + padding}px`,\n            width: `${Math.min(width, maxWidth)}px`,\n            padding: `${padding}px`\n        });\n\n        legendRect.attr('height', gradientDimensions.height);\n        legendRect.attr('width', gradientDimensions.width - labelDim.width / 2);\n    } else {\n        gradientDimensions.height = gradHeight - 2 * padding - labelDim.height / 2;\n        gradientDimensions.width = item.icon.width;\n        linearGradient.attr('x2', '0%').attr('y1', '100%');\n        legendGradCont.attr('transform', `translate(0 ${labelDim.height / 2})`);\n        renderAxis(context, legendContainer, gradHeight - 2 * padding - 1, gradWidth - item.icon.width - padding * 2);\n        legendContainer.classed(`${classPrefix}-overflow-y`, height > maxHeight);\n        applyStyle(legendContainer, {\n            height: `${Math.min(height, maxHeight)}px`,\n            width: `${width}px`,\n            padding: `${padding}px`\n        });\n        legendRect.attr('height', gradientDimensions.height - labelDim.height / 2);\n        legendRect.attr('width', gradientDimensions.width);\n    }\n\n    // Apply Styles to the legend plot area\n    applyStyle(legendGradSvg, {\n        height: `${gradientDimensions.height}px`,\n        width: `${gradientDimensions.width}px`\n    });\n\n        // Apply styles to the legend rect\n    applyStyle(legendRect, {\n        fill: 'url(#linear-gradient)'\n    });\n    legendGradSvg.attr('height', gradientDimensions.height);\n    legendGradSvg.attr('width', gradientDimensions.width);\n\n    context.measurement({\n        gradientDimensions\n    });\n    context._legendGradientSvg = legendGradSvg;\n    return context;\n};\n","import SimpleLegend from './simple-legend';\nimport { getScaleInfo, getInterpolatedData } from './legend-helper';\nimport { GRADIENT, LEFT, SIZE } from '../enums/constants';\nimport { renderGradient, createAxis } from './gradient-helper';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class GradientLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new GradientLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof GradientLegend\n     */\n    static type () {\n        return GRADIENT;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axis\n     *\n     * @memberof GradientLegend\n     */\n    axis (...axis) {\n        if (axis.length) {\n            this._axis = axis[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof GradientLegend\n     */\n    dataFromScale (scale) {\n        let domainForLegend = [];\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainForLegend[0] = domain[0];\n            }\n            domainForLegend = [...domainForLegend, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainForLegend.push(domain[1]);\n            }\n        } else {\n            domainForLegend = getInterpolatedData(domain, steps - 1);\n        }\n        domainForLegend = [...new Set(domainForLegend)].sort((a, b) => a - b);\n\n        return domainForLegend.map((ele, i) => {\n            const value = domainForLegend[i];\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor()\n                    : scale[scaleFn](Math.floor(ele)),\n                value: +value.toFixed(2),\n                id: i\n            };\n        }).filter(d => d.value !== null);\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        const axis = createAxis(this);\n        const axisSpace = axis.getLogicalSpace();\n        const space = { width: axisSpace.width - effPadding, height: axisSpace.height - effPadding };\n        const axisDomainLength = axis.source().domain().length;\n        const labelSpaces = new Array(axisDomainLength).fill(space);\n\n        this.axis(axis);\n        return labelSpaces;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof GradientLegend\n     */\n    getDrawingContext () {\n        return {\n            svgContainer: this._legendGradientSvg\n        };\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        renderGradient(this, legendContainer);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof SimpleLegend\n     */\n    getCriteriaFromData (data) {\n        return [[this.fieldName()], [data.value]];\n    }\n}\n","import SimpleLegend from './simple-legend';\nimport {\n    getScaleInfo,\n    getInterpolatedData,\n    getDomainBounds\n} from './legend-helper';\nimport {\n    createLegendSkeleton,\n    createItemSkeleton,\n    renderStepItem\n} from './renderer';\nimport { STEP, RECT, LEFT, SIZE, UPPER, LOWER } from '../enums/constants';\nimport { stepData } from './position-config';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class StepLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new StepLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof StepLegend\n     */\n    static type () {\n        return STEP;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof StepLegend\n     */\n    dataFromScale (scale) {\n        let domainLeg = [];\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        const { formatter } = this.config();\n        const domainBounds = {\n            lower: null, upper: null\n        };\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainBounds.lower = [`${formatter.bounds.lower} ${steps[0]}`];\n            }\n            domainLeg = [...domainLeg, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainBounds.upper = [`${formatter.bounds.upper} ${steps[steps.length - 1]}`];\n            }\n        } else {\n            domainLeg = getInterpolatedData(domain, steps);\n        }\n\n        domainLeg = [...new Set(domainLeg)].sort((a, b) => a - b);\n        domainLeg = domainLeg.map((ele, i) => {\n            let value = null;\n            if (i < domainLeg.length - 1) {\n                value = `${(ele.toFixed(1))} - ${(+domainLeg[i + 1].toFixed(1))}`;\n            }\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n                value,\n                id: i + 1,\n                range: [ele, domainLeg[i + 1]]\n            };\n        }).filter(d => d.value !== null);\n\n        if (domainBounds.lower) {\n            const lowerBounds = getDomainBounds(LOWER, { scale, scaleFn, scaleType },\n                { domain, steps, domainBounds });\n            domainLeg = [lowerBounds, ...domainLeg];\n        }\n        if (domainBounds.upper) {\n            const upperBounds = getDomainBounds(UPPER, { scale, scaleFn, scaleType },\n            { domain, steps, domainBounds, domainLeg });\n            domainLeg = [...domainLeg, upperBounds];\n        }\n        return domainLeg;\n    }\n\n     /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding, align) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        return super.getLabelSpaces(effPadding, align);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return RECT;\n    }\n\n     /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const { classPrefix, position } = this.config();\n        const data = stepData(this.data())[position];\n\n        const legendContainer = super.render(this.mount());\n\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n\n        renderStepItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        return {\n            [fieldName]: data.range\n        };\n    }\n}\n","import { GradientLegend, DiscreteLegend, StepLegend } from '@chartshq/muze-legend';\n\n/**\n * Contants to be used as attr\n */\nexport const ROWS = 'rows';\nexport const COLUMNS = 'columns';\nexport const DATA = 'data';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\nexport const DETAIL = 'detail';\nexport const LAYERS = 'layers';\nexport const TRANSFORM = 'transform';\nexport const INITIALIZED = 'isInitialized';\nexport const SOURCE = 'source';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const PADDING = 'padding';\nexport const BORDER = 'border';\nexport const MARGIN = 'margin';\nexport const CONFIG = 'config';\nexport const MOUNT = 'mount';\nexport const CANVAS_UPDATED = 'canvasUpdated';\nexport const CLASSPREFIX = 'classPrefix';\nexport const POLICIES = '_policies';\nexport const LEGEND = 'legend';\nexport const TITLE = 'title';\nexport const SUB_TITLE = 'subtitle';\nexport const RESOLVE = 'resolve';\nexport const DISCRETE = 'discrete';\nexport const STEP_COLOR = 'step-color';\nexport const GRADIENT = 'gradient';\nexport const LINEAR = 'linear';\nexport const ORDINAL = 'ordinal';\nexport const MUZE_PREFIX = 'muze';\n\nexport const TITLE_TEMPLATE_NOT_ALLOWED_TAGS = [\n    'script',\n    'style'\n];\n\nexport const LEGEND_TYPE_MAP = {\n    [`${ORDINAL}-${true}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${COLOR}`]: StepLegend,\n    [`${LINEAR}-${false}-${COLOR}`]: GradientLegend\n};\n\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const GROUP = 'group';\nexport const LAYOUT = 'layout';\nexport const RETINAL = 'retinal';\nexport const DIMENSION = 'dimension';\nexport const MEASURE = 'measure';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\nexport const HORIZONTAL_CENTER = 'h-center';\nexport const VERTICAL_CENTER = 'v-center';\nexport const HIDDEN = 'hidden';\nexport const OVERFLOW = 'overflow';\nexport const OVERFLOW_X = 'overflow-x';\nexport const OVERFLOW_Y = 'overflow-y';\nexport const AUTO = 'auto';\nexport const VISIBLE = 'visible';\n","import { ComposedVars, SimpleVariable } from '@chartshq/visual-group';\nimport { TITLE_TEMPLATE_NOT_ALLOWED_TAGS } from './constants';\n\n/**\n * This method creates a new composed variable instance from multiple variables. This is required when we have multiple\n * variables on a single axis and the union of domain of all the variables needs to be set on the axis.\n *\n * To create a new composed variable from multiple fields,\n * ```\n *  const sharedVar = share('open', 'high', 'low', 'close');\n *  canvas.rows([sharedVar])\n *      .columns(['date']);\n * ```\n *\n * @module Operators\n * @public\n * @function share\n * @param {Array} vars Variable names.\n *\n * @return {ComposedVars} Instance of composed variable\n */\nexport const share = (...vars) => new ComposedVars(...vars.map(variable => new SimpleVariable(variable)));\n\n/**\n *\n *\n * @param {*} node\n *\n */\nfunction treeShakeNode (node) {\n    if (node.nodeType !== Node.ELEMENT_NODE) { return; }\n\n    if (TITLE_TEMPLATE_NOT_ALLOWED_TAGS.indexOf(node.tagName.toLowerCase()) !== -1) {\n        node.parentNode.removeChild(node);\n    } else {\n        for (const childNode of node.childNodes) {\n            treeShakeNode(childNode);\n        }\n    }\n}\n\n/**\n * A string template tagged function which sanitizes input html formatted string according to the allowed html tags.\n * This is used to render html in canvas components like title and tooltip.\n *\n * To render html in canvas components,\n * ```\n *     canvas.title(html`<span style=font-size:20px;>TITLE</span>`);\n * ```\n *\n * @public\n * @module Operators\n * @function html\n * @param {Array.<string>} strings - The string parts of the template.\n * @param {Array} exps - The list of evaluated expression values.\n *\n * @return {Function} Returns a function which returns the sanitized html string.\n */\nexport function html (strings, ...exps) {\n    let htmlCode = '';\n    const expLn = exps.length;\n    let i = 0;\n\n    for (; i < expLn; ++i) {\n        htmlCode += strings[i] + exps[i];\n    }\n    htmlCode += strings[i];\n\n    const frag = document.createDocumentFragment();\n    const wrapper = document.createElement('div');\n\n    frag.appendChild(wrapper);\n    wrapper.innerHTML = htmlCode;\n\n    treeShakeNode(wrapper);\n    const { innerHTML } = wrapper;\n\n    return () => innerHTML;\n}\n","import { mergeRecursive, CommonProps } from 'muze-utils';\n\nconst defaultPolicy = (registrableComponents) => {\n    const aliases = registrableComponents.map(comp => comp.alias());\n    return {\n        behaviours: {\n            '*': (propagationPayload) => {\n                const propagationCanvas = propagationPayload.sourceCanvas;\n                return propagationCanvas ? aliases.indexOf(propagationCanvas) !== -1 : true;\n            }\n        }\n    };\n};\n\nconst listenerFn = (canvas, fn) => () => {\n    const valueMatrix = canvas.composition().visualGroup.matrixInstance().value;\n    valueMatrix.each(cell => fn(cell.valueOf().firebolt()));\n};\n\nconst canvasIterator = (canvases, iteratorFn, cFn) => {\n    canvases.forEach((canvas) => {\n        const matrix = canvas.composition().visualGroup.matrixInstance().value;\n        matrix.each(cell => iteratorFn(cell.valueOf().firebolt()));\n        cFn && cFn(canvas);\n        // Also register actions on canvas update\n        const throwback = canvas._throwback;\n\n        throwback.registerImmediateListener([CommonProps.MATRIX_CREATED],\n            listenerFn(canvas, iteratorFn));\n    });\n};\n\n/**\n * This class is initiated only once in lifecycle and is reponsible for regisration of physical and behavioural\n * actions and side effects and the mapping between them.\n *\n * To get the instance of action model\n * ```\n *  const ActionModel = muze.ActionModel;\n * ```\n *\n * @public\n * @module ActionModel\n */\nclass ActionModel {\n    constructor () {\n        this._registrableComponents = [];\n    }\n\n    /**\n     * Takes an array of canvases on which the physical and behavioural actions will get registered.\n     *\n     * @public\n     * @param  {Canvas} components Array of canvases\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    for (...components) {\n        this._registrableComponents = components;\n        return this;\n    }\n\n    /**\n     * Registers physical actions on the canvases. It takes an object with key as the name of action and value having\n     * the definition of the action.\n     *\n     * To register a {@link PhysicalAction},\n     * ```\n     *  const ActionModel = muze.ActionModel;\n     *  ActionModel\n     *       // Physical actions will be registered on these canvases.\n     *      .for(canvas)\n     *      .registerPhysicalActions({\n     *          // Key is the name of physical action.\n     *          ctrlClick: (firebolt) => (targetEl, behaviours) => {\n     *              targetEl.on('click', function (data) {\n     *                  const event = utils.getEvent();\n     *                  const pos = utils.getClientPoint(event, this);\n     *                  // Get the data point nearest to the mouse position.\n     *                  const nearestPoint = firebolt.context.getNearestPoint(pos, {\n     *                      data\n     *                  });\n     *                  // Prepare the payload\n     *                  const payload = {\n     *                      criteria: nearestPoint.id\n     *                  };\n     *                  behaviours.forEach((behaviour) => firebolt.dispatchBehaviour(behaviour, payload));\n     *              });\n     *          }\n     *      });\n     * ```\n     * @public\n     *\n     * @param {Object} action Names of physical actions and their definitions.\n     *\n     * @return {ActionModel} Instance of the action model.\n     */\n    registerPhysicalActions (action) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPhysicalActions(action);\n        }, (canvas) => {\n            canvas.firebolt().registerPhysicalActions(action);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers behavioural actions on the canvases. It takes definitions of the behavioural actions and registers\n     * them on the canvases. Every behavioural action must inherit the {@link GenericBehaviour} class.\n     *\n     * To register a behavioural action\n     * ```\n     *  // Define a new behavioural action\n     *  class SingleSelectBehaviour extends GenericBehaviour {\n     *      static formalName () {\n     *          return 'singleSelect';\n     *      }\n     *\n     *      setSelectionSet (addSet, selectionSet) {\n     *          if (addSet === null) {\n     *              selectionSet.reset();\n     *          } else if (addSet.length) {\n     *              const existingAddSet = selectionSet.getExistingEntrySet(addSet);\n     *              if (existingAddSet.length){\n     *                  selectionSet.reset();\n     *              } else {\n     *               selectionSet.add(addSet);\n     *              }\n     *          } else {\n     *              selectionSet.reset();\n     *          }\n     *      }\n     * }\n     * muze.ActionModel.registerBehaviouralActions(SingleSelectBehaviour);\n     * ```\n     *\n     * @public\n     *\n     * @param {GenericBehaviour} actions Definition of behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerBehaviouralActions (...actions) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerBehaviouralActions(actions);\n        }, (canvas) => {\n            canvas.firebolt().registerBehaviouralActions(actions);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers the mapping of physical and behavioural actions. This mapping is used to establish which behavioural\n     * actions should be dispatched on any triggering of physical actions.\n     *\n     * To map physical actions with behavioural actions,\n     * ```\n     *  muze.ActionModel.registerPhysicalBehaviouralMap({\n     *      ctrlClick: {\n     *          behaviours: ['select'] // This array must be the formal names of the behavioural actions.\n     *      }\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Contains the physical and behavioural action map.\n     * ```\n     *   {\n     *      // Name of the physical action\n     *      click: {\n     *          // Target element selector. This is an optional field. If not passed, then by default takes the\n     *          // container element of visual unit.\n     *          target: '.muze-layers-area path',\n     *          // Behaviours which should be dispatched on triggering of the mapped physical action.\n     *          behaviours: ['select']\n     *      }\n     *   }\n     * ```\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPhysicalBehaviouralMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPhysicalBehaviouralMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPhysicalBehaviouralMap(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers what behaviour to propagate on dispatch of a certain behavioural action. By default, when any\n     * behavioural action is dispatched, then the same behavioural action gets propagated to all the other canvases.\n     * This can be changed using this api.\n     *\n     * To register what behaviour should be propagated on dispatch of any behavioural action,\n     * ```\n     *  ActionModel.for(canvas1, canvas2).registerPropagationBehaviourMap({\n     *      select: 'filter',\n     *      brush: 'filter'\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Propagation behaviour map.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPropagationBehaviourMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPropagationBehaviourMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPropagationBehaviourMap(map);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers the mapping of side effects and behavioural actions. It takes an object which contains key as the\n     * name of behavioural action and the side effects which will be linked to it.\n     *\n     * To map side effects to select behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: ['infoBox'] // This array must be the formal names of the side effects\n     *  });\n     * ```\n     *\n     * To map side effects to select behaviour, but disable all the default side effects attached with this behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: {\n     *          effects: ['infoBox'],\n     *          preventDefaultActions: true\n     *      }\n     *  });\n     * @public\n     * @param {Object} map Mapping of behavioural actions and side effects.\n     * ```\n     *     {\n     *          select: ['infoBox']\n     *     }\n     * ```\n     * @return {ActionModel} Instance of action model.\n     */\n    mapSideEffects (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.mapSideEffects(map);\n        }, (canvas) => {\n            canvas.firebolt().mapSideEffects(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers the side effects on the registered canvases. It takes definitions of side effects and registers them\n     * on the canvases. Every side effect must inherit the base class {@link GenericSideEffect} or\n     * {@link SpawnableSideEffect} or {@link SurrogateSideEffect} class.\n     *\n     * ```\n     * // Define a custom side effect\n     *  class InfoBox extends SpawnableSideEffect {\n     *      static formalName () {\n     *          return 'infoBox';\n     *      }\n     *\n     *      apply (selectionSet) {\n     *      }\n     *  }\n     *  muze.ActionModel.registerSideEffects(InfoBox);\n     * ```\n     * @public\n     * @param  {GenericSideEffect} sideEffects Definition of side effects.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerSideEffects (...sideEffects) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerSideEffects(sideEffects);\n        }, (canvas) => {\n            canvas.firebolt().registerSideEffects(sideEffects);\n        });\n        return this;\n    }\n\n    /**\n     * Breaks the link between behavioural actions and physical actions. It takes an array of behavioural action\n     * and it's physical action.\n     *\n     * To dissociate behavioural actions from physical actions\n     * ```\n     *  muze.ActionModel.dissociateBehaviour(['select', 'click'], ['highlight', 'hover']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of behavioural action and physical action.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateBehaviour (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateBehaviour(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateBehaviour(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * Breaks the link between side effects and behavioural actions. It takes an array of formal names of the side\n     * effects and it's linked behavioural action.\n     *\n     * To dissociate side effects from behavioural actions\n     * ```\n     *  muze.ActionModel.dissociateSideEffect(['crossline', 'highlight'], ['selectionBox', 'brush']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of side effects and behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateSideEffect (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateSideEffect(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateSideEffect(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * By default cross interactivity is disabled between canvases. This enables cross interaction between the canvases\n     * so that any action happening in one canvas gets dispatched on other canvases as well. An optional policy can also\n     * be passed in this method. The policy can be used to control on which canvases the behavioural actions and\n     * side effects gets dispatched.\n     *\n     * To just enable cross interactivity between two canvases,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity();\n     * ```\n     *\n     * To enable cross interactivity but enable any behavioural action only when it is triggered from canvas1.\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          behaviours: {\n     *              // Here * stands for any behavioural action name. We can also give any name of behavioural action\n     *              // in place of this.\n     *              '*': (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     *\n     * To enable cross interactivity but enable tooltip effect if the action is propagated from canvas1,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          sideEffects: {\n     *              tooltip: (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} policy Policy definition.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    enableCrossInteractivity (policy = {}) {\n        const registrableComponents = this._registrableComponents;\n        const mergedPolicy = mergeRecursive(mergeRecursive({}, defaultPolicy(registrableComponents)), policy);\n\n        registrableComponents.forEach((canvas) => {\n            canvas.firebolt().crossInteractionPolicy(mergedPolicy);\n        });\n\n        return this;\n    }\n}\n\nexport const actionModel = (() => new ActionModel())();\n","import { MUZE_PREFIX } from '../constants';\n\nexport const TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 4,\n    className: `${MUZE_PREFIX}-title-container`\n};\n\nexport const SUB_TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 16,\n    maxLines: 2,\n    className: `${MUZE_PREFIX}-subtitle-container`\n};\n\nexport const GRID = 'grid';\n\nexport const CANVAS = 'canvas';\n\nexport const LAYOUT_ALIGN = {\n    TOP: 'top',\n    LEFT: 'left',\n    RIGHT: 'right',\n    BOTTOM: 'bottom'\n};\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    ROWS,\n    COLUMNS,\n    COLOR,\n    SHAPE,\n    SIZE,\n    DETAIL,\n    LAYERS,\n    TRANSFORM,\n    TITLE,\n    SUB_TITLE\n} from '../constants';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG } from './defaults';\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Canvas.\n * Canvas merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module LocalOptions\n */\n\nexport const localOptions = {\n    [ROWS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLUMNS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLOR]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || config === null) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SHAPE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || config === null) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SIZE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || config === null) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [DETAIL]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n\n    [LAYERS]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [TRANSFORM]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object'\n        }\n    }\n};\n\nexport const canvasOptions = {\n    [TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(title) => {\n                if (typeof title === 'string') {\n                    const t = () => title;\n                    t._sanitized = true;\n                    return t;\n                }\n                return title;\n            }, (titleConfig) => {\n                const defConfig = mergeRecursive({}, TITLE_CONFIG);\n                return mergeRecursive(defConfig, titleConfig);\n            }]\n        }\n    },\n    [SUB_TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(subtitle) => {\n                if (typeof subtitle === 'string') {\n                    const sub = () => subtitle;\n                    sub._sanitized = true;\n                    return sub;\n                }\n                return subtitle;\n            }, (subtitleConfig) => {\n                const defConfig = mergeRecursive({}, SUB_TITLE_CONFIG);\n                return mergeRecursive(defConfig, subtitleConfig);\n            }]\n        }\n    }\n};\n","export default class LayoutComponent {\n    constructor (name, dimensions, seed) {\n        this._seed = seed;\n        this._boundBox = {\n            height: dimensions.height,\n            width: dimensions.width,\n            top: null,\n            left: null\n        };\n        this._renderAt = null;\n        this._alignWith = null;\n        this._alignment = null;\n        this._target = null;\n        this._position = null;\n        this._componentName = name;\n        this._className = null;\n    }\n\n    getLogicalSpace () {\n        throw new Error('getLogicalSpace is not defined');\n    }\n\n    setSpatialConfig () {\n        throw new Error('setSpatialSpace is not defined');\n    }\n\n    name (param) {\n        if (param) {\n            this._componentName = param;\n        }\n        return this._componentName;\n    }\n\n    target (param) {\n        if (param) {\n            this._target = param;\n        }\n        return this._target;\n    }\n\n    position (param) {\n        if (param) {\n            this._position = param;\n        }\n        return this._position;\n    }\n\n    alignment (param) {\n        if (param) {\n            this._alignment = param;\n        }\n        return this._alignment;\n    }\n\n    alignWith (param) {\n        if (param) {\n            this._alignWith = param;\n        }\n        return this._alignWith;\n    }\n\n    renderAt (param) {\n        if (param) {\n            this._renderAt = param;\n        }\n        return this._renderAt;\n    }\n\n    boundBox (param) {\n        if (param) {\n            Object.assign(this._boundBox, param);\n        }\n        return this._boundBox;\n    }\n\n    className (param) {\n        if (param) {\n            this._className = param;\n        }\n        return this._className;\n    }\n\n    draw () {\n        throw new Error('draw is not defined');\n    }\n  }\n\n","import LayoutComponent from './layoutComponent';\n\nclass DummyComponent extends LayoutComponent {\n    getLogicalSpace () {\n        return {\n            width: this.boundBox().width,\n            height: this.boundBox().height\n        };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n        return this;\n    }\n\n    draw () {\n        if (!this.component) {\n            throw new Error(`Component not set for ${this.componentName}`);\n        }\n        this.component.mount(document.getElementById(this.renderAt)); // Change the draw method to component draw\n        return this;\n    }\n}\n\nexport default DummyComponent;\n","export const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    interaction: {\n        sideEffect: 'individual'\n    },\n    pagination: 'scroll',\n    scrollBar: {\n        thickness: 10,\n        speed: 2,\n        vertical: {\n            align: 'right'\n        },\n        horizontal: {\n            align: 'bottom'\n        }\n    },\n    legend: {\n        position: 'right',\n        color: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        shape: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        size: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        }\n    },\n    showHeaders: false,\n    minWidth: 100,\n    minHeight: 100,\n    facet: {\n        rows: {\n            minCharacters: 3\n        },\n        columns: {\n            maxLines: 2,\n            verticalAlign: 'middle',\n            minCharacters: 1\n        }\n    },\n    border: {\n        style: 'solid',\n        color: '#d6d6d6',\n        width: 2,\n        collapse: true,\n        spacing: 0\n    },\n    autoGroupBy: {\n        disabled: false\n    },\n    invalidValues: {}\n};\n","import { DEFAULT_CONFIG } from '../../../../muze/src/defaults';\n\nconst DEFAULT_WIDTH = 600;\nconst DEFAULT_HEIGHT = 400;\nconst DEFAULT_CLASS_NAME = `${DEFAULT_CONFIG.classPrefix}-layout-container-component`;\nconst NODE_PREFIX = `${DEFAULT_CONFIG.classPrefix}-layout-container`;\n\nexport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT,\n  DEFAULT_CLASS_NAME,\n  NODE_PREFIX\n};\n","export default class DefinitionModel {\n    constructor (config) {\n        this._host = config.host || null;\n        this._cut = config.cut || null;\n        this._ratioWeight = config.ratioWeight === 0 ? 0 : config.ratioWeight || 1;\n        this._preferred = config.preferred || false;\n        this._lanes = config.lanes || [];\n        this._remainingHeight = 0;\n        this._remainingWidth = 0;\n    }\n\n    host (host) {\n        if (host) {\n            this._host = host;\n        }\n        return this._host;\n    }\n\n    preferred (preferred) {\n        if (preferred) {\n            this._preferred = preferred;\n        }\n        return this._preferred;\n    }\n\n    cut (cut) {\n        if (cut) {\n            this._cut = cut;\n        }\n        return this._cut;\n    }\n\n    ratioWeight (ratioWeight) {\n        if (ratioWeight) {\n            this._ratioWeight = ratioWeight;\n        }\n        return this._ratioWeight;\n    }\n\n    lanes (lanes) {\n        if (lanes) {\n            this._lanes = lanes;\n        }\n        return this._lanes;\n    }\n\n    remainingHeight (remainingHeight) {\n        if (remainingHeight) {\n            this._remainingHeight = remainingHeight;\n        }\n        return this._remainingHeight;\n    }\n\n    remainingWidth (remainingWidth) {\n        if (remainingWidth) {\n            this._remainingWidth = remainingWidth;\n        }\n        return this._remainingWidth;\n    }\n}\n","import { NODE_PREFIX } from '../../constants/defaults';\nimport DefinitionModel from '../definition-manager/definitionModel';\nimport DummyComponent from '../../layout-component/dummy-component';\n/**\n * Compares two strings in lowercase\n *\n * @export\n * @param {string} value the value to be compared\n * @param {string} compareTo whom the value would be compared\n * @return {boolean} true if values are equal\n */\nexport function isEqual (value, compareTo) {\n    if (typeof value !== 'string' || typeof compareTo !== 'string') {\n        throw new TypeError('value and compareTo must be string');\n    }\n    return value.toLowerCase() === compareTo.toLowerCase();\n}\n\nexport const getNodeId = (() => {\n    let _uid = 0;\n    return () => `${NODE_PREFIX}-${++_uid}`;\n})();\n\nexport function yExtraSpace (node) {\n    let smallestHeight = 0;\n    if (node.getCutType() === 'v') {\n        smallestHeight = smallestExtraHeightHorizontally(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'h') {\n        node.children().forEach((child) => {\n            smallestHeight += yExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerHeight = node.boundBox().height;\n        const hostHeight = node.model().host().getLogicalSpace().height;\n\n        smallestHeight = containerHeight - hostHeight;\n        if (smallestHeight < 0) {\n            smallestHeight = 0;\n        }\n    } else {\n        smallestHeight = 0;\n    }\n    return smallestHeight;\n}\n\nexport function smallestExtraHeightHorizontally (node) {\n    let smallestHeight = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const h = yExtraSpace(child);\n        if (h < smallestHeight) {\n            smallestHeight = h;\n        }\n    });\n    return smallestHeight;\n}\n\nexport function xExtraSpace (node) {\n    let smallestWidth = 0;\n    if (node.getCutType() === 'h') {\n        smallestWidth = smallestExtraWidthVertically(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'v') {\n        node.children().forEach((child) => {\n            smallestWidth += xExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerWidth = node.boundBox().width;\n        const hostWidth = node.model().host().getLogicalSpace().width;\n        smallestWidth = containerWidth - hostWidth;\n        if (smallestWidth < 0) {\n            smallestWidth = 0;\n        }\n    } else {\n        smallestWidth = 0;\n    }\n    return smallestWidth;\n}\n\nexport function smallestExtraWidthVertically (node) {\n    let smallestWidth = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const w = xExtraSpace(child);\n        if (w < smallestWidth) {\n            smallestWidth = w;\n        }\n    });\n    return smallestWidth;\n}\n\nexport function determineBoundBox (bb, i, arr, instance) {\n    if (i) {\n    // if not first sibling, take boundbox from previous sibling\n        const lastSibling = arr[i - 1];\n        const { top: _top, left: _left, height: _height, width: _width } = lastSibling.boundBox();\n        return {\n            width: bb.width,\n            height: bb.height,\n\n            top: instance.parentCut() === 'h'\n        ? _top + _height : _top,\n\n            left: instance.parentCut() === 'h'\n        ? _left : _left + _width\n        };\n    }\n  // if first sibling, take boundbox from parent\n    const { top: _top, left: _left } = instance.parent().boundBox();\n    return {\n        width: bb.width,\n        height: bb.height,\n        top: _top,\n        left: _left\n    };\n}\n\n// prepares the targetComponent Map for target Mapping ie. where a component should lie\nexport function prepareTargetComponentMap (context) {\n    context.targetComponentMap(new Map());\n    context.componentMap().forEach((value) => {\n        if (context.targetComponentMap().has(value.target())) {\n            context.targetComponentMap().get(value.target()).push(value);\n        } else {\n            const temp = [];\n            temp.push(value);\n            context.targetComponentMap().set(value.target(), temp);\n        }\n    });\n}\n\nexport function getComponent (canvasComponent, componentName) {\n    const comp = canvasComponent.find(component => component.name() === componentName);\n    return (comp && comp !== -1) ? comp : null;\n}\nexport function createPlaceHolderComponent (height, width, position) {\n    const comp = new DummyComponent(0, { height, width });\n    comp.name('placeHolder');\n    comp.position(position);\n    return comp;\n}\n\nexport function placeComponent (definitionModel, component, isPreferred = false, isGridComponent = false) {\n    let cut = '';\n    let componentRatioWidth = 1;\n    let leftOvercomponentRationWidth = 1;\n    let leftHeight = 0;\n    let leftWidth = 0;\n\n    if (!component) {\n        return { first: definitionModel, second: definitionModel };\n    }\n\n    const { height: componentHeight, width: componentWidth } = component.getLogicalSpace();\n    const position = component.position();\n    if (position === 'top' || position === 'bottom') {\n        cut = 'h';\n        componentRatioWidth = componentHeight / definitionModel.remainingHeight();\n        leftHeight = definitionModel.remainingHeight() - componentHeight;\n        leftWidth = definitionModel.remainingWidth();\n    } else {\n        cut = 'v';\n        componentRatioWidth = componentWidth / definitionModel.remainingWidth();\n        leftWidth = definitionModel.remainingWidth() - componentWidth;\n        leftHeight = definitionModel.remainingHeight();\n    }\n    leftOvercomponentRationWidth = 1 - componentRatioWidth;\n\n// update parentModel\n    definitionModel.cut(cut);\n    const firstLaneConfig = {\n        host: component.name(),\n        cut: null,\n        ratioWeight: componentRatioWidth,\n        preferred: isGridComponent ? false : isPreferred,\n        lanes: []\n    };\n    const firstLane = new DefinitionModel(firstLaneConfig);\n    firstLane.remainingHeight(componentHeight);\n    firstLane.remainingWidth(componentWidth);\n\n    const secondLaneConfig = {\n        host: null,\n        cut: null,\n        ratioWeight: leftOvercomponentRationWidth,\n        preferred: isGridComponent ? false : !isPreferred,\n        lanes: []\n    };\n    const secondLane = new DefinitionModel(secondLaneConfig);\n    secondLane.remainingHeight(leftHeight);\n    secondLane.remainingWidth(leftWidth);\n    if (isPreferred) {\n        definitionModel.lanes([firstLane]);\n    } else if (position === 'top' || position === 'left') {\n        definitionModel.lanes([firstLane, secondLane]);\n    } else {\n        definitionModel.lanes([secondLane, firstLane]);\n    }\n    return { first: firstLane, second: secondLane };\n}\n\nexport function placeGridComponent (definitionModel, gridComponents) {\n    let tempDefModel = definitionModel;\n    const rows = gridComponents.length;\n    const column = rows ? gridComponents[0].length : 0;\n    const height = gridComponents.reduce((acc, val) => (acc + val[0].getLogicalSpace().height), 0);\n\n    for (let i = 0; i < column; i++) {\n        const iscolumnPreffered = i === column - 1;\n        const columnPlaceHolderComponent = createPlaceHolderComponent(height,\n                                                    gridComponents[0][i].getLogicalSpace().width, 'left');\n        const { first, second } = placeComponent(tempDefModel, columnPlaceHolderComponent, iscolumnPreffered);\n        tempDefModel = first;\n        for (let j = 0; j < rows; j++) {\n            const rowpreffred = j === (rows - 1);\n            tempDefModel = placeComponent(tempDefModel, gridComponents[j][i], rowpreffred, true).second;\n        }\n        tempDefModel = second;\n    }\n    return tempDefModel;\n}\n\nexport function negotiateDimension (node) {\n    let preferred;\n    let cumultiveExtraSpaceAmt = 0;\n    let alteredDim;\n    let nonAlteredDim;\n\n    const childrenLength = node.children().length;\n\n    for (let index = 0; index < childrenLength; index++) {\n        let fn;\n        let extraSpaceAmt;\n        const child = node.children()[index];\n\n        if (child.parentCut() === 'h') {\n            fn = yExtraSpace;\n            alteredDim = 'height';\n            nonAlteredDim = 'width';\n        } else {\n            fn = xExtraSpace;\n            alteredDim = 'width';\n            nonAlteredDim = 'height';\n        }\n  // if vertical then get extra height from other node and push it to the preferred node.\n  // for horizontal cut the same thing is to be done with width\n        if (child.isPreferred()) {\n    // push extra space in sink. Execute it when all non preferred space are computed.\n            preferred = child;\n\n            continue; // eslint-disable-line no-continue\n        }\n  // reduce own height and save it in a var\n        cumultiveExtraSpaceAmt += (extraSpaceAmt = fn(child));\n        child.boundBox()[alteredDim] -= extraSpaceAmt;\n  // update nonaltered dim from parent for any change which happened during negotiation\n        child.boundBox()[nonAlteredDim] = child.parent().boundBox()[nonAlteredDim];\n\n        negotiateDimension(child);\n    }\n\n    if (preferred) {\n        preferred.boundBox()[alteredDim] += cumultiveExtraSpaceAmt;\n        preferred.boundBox()[nonAlteredDim] = preferred.parent().boundBox()[nonAlteredDim];\n        negotiateDimension(preferred);\n    }\n}\n\nexport function computePosition (node) {\n    node.children().forEach((child, i, children) => {\n        const boundBox = determineBoundBox(child.boundBox(), i, children, child);\n        child.boundBox(boundBox);\n        computePosition(child);\n    });\n}\n\nexport function allocateBoundingBox (node) {\n    const totalWeight = node.children()\n                            .map(child => child.model().ratioWeight())\n                            .reduce((carry, val) => carry + val, 0);\n\n    node.children().forEach((child, i, children) => {\n        const lastSibling = children[i - 1];\n        const ratio = child.model().ratioWeight() / totalWeight;\n\n        if (child.parentCut() === 'h') {\n            child.boundBox({\n                top: i ? lastSibling.boundBox().top + lastSibling.boundBox().height : 0,\n                left: child.parent().boundBox().left,\n                height: child.parent().boundBox().height * ratio,\n                width: child.parent().boundBox().width\n            });\n        } else {\n            child.boundBox({\n                top: child.parent().boundBox().top,\n                left: i ? lastSibling.boundBox().left + lastSibling.boundBox().width : 0,\n                height: child.parent().boundBox().height,\n                width: child.parent().boundBox().width * ratio\n            });\n        }\n        allocateBoundingBox(child);\n    });\n}\n\n","import { getNodeId } from '../helper';\nimport { LayoutComponent } from '../../layout-component';\n\nclass Node {\n    constructor (data) {\n        this._model = data;\n        this._parent = null;\n        this._children = [];\n        this._parentCut = null;\n        this._boundBox = {\n            top: null,\n            left: null,\n            height: null,\n            width: null\n        };\n\n        this._id = this._model.host() instanceof LayoutComponent && this._model.host().renderAt() ?\n                    this._model.host().renderAt() :\n                    getNodeId();\n    }\n\n    addChildren (entries) {\n        this._children.push(...entries);\n        entries.forEach((e) => { e.parent(this); });\n    }\n\n    isRoot () {\n        return this._parent === null;\n    }\n\n    isLeaf () {\n        return !this._children.length;\n    }\n\n    getCutType () {\n        return this._model.cut();\n    }\n\n    isPreferred () {\n        return !!this._model.preferred();\n    }\n\n    children (children) {\n        if (children) {\n            this._children = children;\n        }\n        return this._children;\n    }\n\n    parent (parent) {\n        if (parent) {\n            this._parent = parent;\n        }\n        return this._parent;\n    }\n\n    parentCut (parentCut) {\n        if (parentCut) {\n            this._parentCut = parentCut;\n        }\n        return this._parentCut;\n    }\n\n    id (id) {\n        if (id) {\n            this._id = id;\n        }\n        return this._id;\n    }\n\n    model (model) {\n        if (model) {\n            this._model = model;\n        }\n        return this._model;\n    }\n\n    boundBox (bound) {\n        if (bound) {\n            this._boundBox = {\n                top: bound.top,\n                left: bound.left,\n                height: bound.height,\n                width: bound.width\n            };\n        }\n        return this._boundBox;\n    }\n  /**\n     * function to search a node and update it with the config provided.\n     * @param  {Object} nodeconfig\n     */\n    updateNode (nodeconfig) {\n        if (this._id === nodeconfig._id) {\n            this._model.cut(nodeconfig.cut);\n            this._model.ratioWeight(nodeconfig.ratioWeight);\n        } else {\n            this._children.forEach((node) => {\n                if (node._id === nodeconfig._id) {\n                    node.model.cut(nodeconfig.cut);\n                    node.model.ratioWeight(nodeconfig.ratioWeight);\n                    return;\n                }\n                this.searchNode(node, nodeconfig);\n            });\n        }\n    }\n\n  // Recursive function to search a node\n    searchNode (node, nodeconfig) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeconfig._id) {\n                childNode.model().cut(nodeconfig.cut);\n                childNode.model().ratioWeight(nodeconfig.ratioWeight);\n            } else {\n                this.searchNode(childNode, nodeconfig);\n            }\n        });\n    }\n\n  /**\n     * function to delete a node from tree Structure.\n     * @param  {String} nodeId - node Id of the Node\n     */\n    delete (nodeId) {\n        this._children.forEach((node) => {\n            if (node.id() === nodeId) {\n                const index = this._children.indexOf(node);\n                this._model.lanes().splice(index, 1);\n            }\n            this.deleteSearchNode(node, nodeId);\n        });\n    }\n\n  // Recursive function to search a node\n    deleteSearchNode (node, nodeId) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeId) {\n                const index = node.children().indexOf(childNode);\n                node.model().lanes().splice(index, 1);\n            } else {\n                this.deleteSearchNode(childNode, nodeId);\n            }\n        });\n    }\n}\n\nexport default Node;\n","import Node from '../tree';\nimport {\n    allocateBoundingBox,\n    negotiateDimension,\n    computePosition\n} from '../helper';\n\nexport default class LayoutModel {\n    constructor (measurements, config) {\n        this._measurements = measurements;\n        this._config = config;\n        this._root = this.createTree(this._config, null);\n        this.setBoundBox();\n    }\n\n    createTree (config, parent) {\n        const node = new Node(config);\n        if (parent) {\n            node.parentCut(parent.getCutType());\n            parent.addChildren([node]);\n        } else {\n            this._root = node;\n        }\n        for (const lane of config.lanes()) {\n            this.createTree(lane, node);\n        }\n\n        return this._root;\n    }\n\n    setBoundBox () {\n        this._root.boundBox({\n            top: 0,\n            left: 0,\n            width: this._measurements.width,\n            height: this._measurements.height\n        });\n        allocateBoundingBox(this._root);\n    }\n\n    setHostPosition (node) {\n        node.children().forEach((child) => {\n            LayoutModel.setHostSpatialConfig(child);\n            this.setHostPosition(child);\n        });\n    }\n\n    static setHostSpatialConfig (node) {\n        const bb = node.boundBox();\n        const host = node.model().host();\n        if (host && host.setSpatialConfig) {\n            const conf = {\n                x: bb.left,\n                y: bb.top,\n                width: bb.width,\n                height: bb.height,\n                renderAt: node.id()\n            };\n            host.setSpatialConfig(conf);\n        }\n    }\n\n    negotiate () {\n        negotiateDimension(this._root);\n        computePosition(this._root);\n        return this;\n    }\n\n    broadcast () {\n        this.setHostPosition(this._root);\n        return this;\n    }\n\n    tree () {\n        return this._root;\n    }\n}\n","/* eslint no-undef: \"off\" */\n/* eslint default-case: \"off\" */\nexport class Utils {\n    static isDOMElement (element) {\n        return element instanceof Element;\n    }\n\n    static getID (element) {\n        return element.id;\n    }\n\n    static getElement (id) {\n        return document.getElementById(id);\n    }\n\n    static findContainer (data) {\n        return data.filter(coordinate => coordinate.parent == null)[0];\n    }\n  /**\n   * static method to remove the div\n   * @param  {} divId - div ID to be removed.\n   */\n    static removeDiv (divId) {\n        if (document.getElementById(divId) !== null) { document.getElementById(divId).remove(); }\n    }\n}\n","import { DEFAULT_CLASS_NAME } from '../constants/defaults';\nimport { LayoutComponent } from '../layout-component';\n\nexport default class DataPoint {\n    constructor (node) {\n        this._node = node;\n        this._className = node.model().host() instanceof LayoutComponent ?\n                            node.model().host().className() : DEFAULT_CLASS_NAME;\n    }\n\n    node () {\n        return this._node;\n    }\n\n    hasHost () {\n        return this._node.model().host() instanceof LayoutComponent;\n    }\n\n    className () {\n        return this._className || DEFAULT_CLASS_NAME;\n    }\n}\n","import { getnodePoints } from './helper';\n\nexport class DataParser {\n    constructor (data) {\n        this._data = data;\n    }\n\n    defaultDataPointLogic () {\n        const nodepoints = [];\n        getnodePoints(this._data, nodepoints);\n        return nodepoints;\n    }\n\n}\n","import DataPoint from './data-point';\n\nexport const getnodePoints = (node, nodepoints) => {\n    const datapoint = new DataPoint(node);\n    nodepoints.push(datapoint);\n    node.children().forEach((child) => {\n        getnodePoints(child, nodepoints);\n    });\n};\n","import { DataParser } from './data-parser';\n\nexport class HTMLDataAdapter extends DataParser {\n    getCoordinates () {\n        return super.defaultDataPointLogic();\n    }\n}\n","export class Renderer {\n\n    initRenderer (node, tree) {\n        node.__logicalTree = tree;\n    }\n}\n","import { HTMLDataAdapter } from '../data-adapters/html-data';\nimport { Utils } from '../utils';\nimport { Renderer } from './renderer';\n\nexport class HTMLRenderer extends Renderer {\n    constructor (data) {\n        super();\n        this._data = data;\n        this._coordinates = new HTMLDataAdapter(this._data).getCoordinates();\n    }\n\n    createhtml (mount, className) {\n        const mainDiv = mount;\n        super.initRenderer(mainDiv, this._data); // Initialise node with layout id\n        this.parentDiv = this.createAndCustomiseParent(className);\n        this._coordinates.forEach((node) => {\n            if (node.hasHost()) {\n                const host = node.node();\n                this.parentDiv.appendChild(this.createAndPositionDiv({ ...host.boundBox(),\n                    id: host.id(),\n                    className: node.className() }));\n            }\n        });\n        mainDiv.appendChild(this.parentDiv);\n    }\n\n    createAndPositionDiv (config) {\n        const { top, left, height, width, className, id } = config;\n        const existingDiv = document.getElementById(id);\n        const div = existingDiv || document.createElement('div');\n        div.style.position = 'absolute';\n        div.style.left = `${left}px`;\n        div.style.top = `${top}px`;\n        div.style.height = `${height}px`;\n        div.style.width = `${width}px`;\n        div.id = id;\n        div.className = className;\n        return div;\n    }\n\n    createAndCustomiseParent (className) {\n        const container = Utils.findContainer(this._coordinates);\n        const host = container.node();\n        const parentDiv = this.createAndPositionDiv({ ...host.boundBox(),\n            id: host.id(),\n            className: container.className() });\n        parentDiv.className = className;\n        parentDiv.style.position = 'relative';\n        return parentDiv;\n    }\n\n    coordinates () {\n        return this._coordinates;\n    }\n}\n","import { HTMLRenderer } from '../renderers/html-renderer';\nimport { LayoutComponent } from '../layout-component';\n\nexport const getChildNode = (context, config) =>\n                        context.renderer().createAndPositionDiv(config);\n\nexport const findNode = (context, nodeID) =>\n                        context.renderer().coordinates().find(point => point.node().id() === nodeID);\n\nexport const renderHTML = (context) => {\n    context.renderer(new HTMLRenderer(context.data()));\n    context.renderer().createhtml(context.mount(), context.className());\n};\n\nexport const drawLayout = (context) => {\n    switch (context.renderer()) {\n    case 'html' :\n        renderHTML(context);\n        break;\n    default:\n        renderHTML(context);\n    }\n};\n\nexport const drawComponent = (componentData) => {\n    componentData.children().forEach((node) => {\n        const host = node.model().host();\n        if (host instanceof LayoutComponent) {\n            host.draw();\n        }\n        drawComponent(node);\n    });\n};\n\nexport const removeElement = (elemID) => {\n    document.removeElement(document.getElementById(elemID));\n};\n\nexport const resolveAligment = (context, componentData) => {\n    componentData.children().forEach((component) => {\n        const host = component.model().host();\n        if (host instanceof LayoutComponent && host.alignWith()) {\n            let newNodeConfig = {};\n            const point = findNode(context, component.id()).node();\n            const node = point.boundBox();\n            const refNode = findNode(context, context.componentMap().get(host.alignWith()).renderAt())\n                                .node()\n                                .boundBox();\n            switch (host.alignment()) {\n            case 'left':\n                newNodeConfig = {\n                    top: node.top,\n                    left: refNode.left,\n                    height: node.height,\n                    width: Math.abs(node.width - Math.abs(refNode.left - node.left))\n                };\n                break;\n\n            case 'right':\n                newNodeConfig = {\n                    top: node.top,\n                    left: node.left,\n                    height: node.height,\n                    width: Math.abs(node.width - Math.abs(node.left + node.width - (refNode.left + refNode.width)))\n                };\n                break;\n\n            case 'top':\n                newNodeConfig = {\n                    top: refNode.top,\n                    left: node.left,\n                    height: Math.abs(node.height - Math.abs(refNode.top - node.top)),\n                    width: node.width\n                };\n                break;\n\n            case 'bottom':\n                newNodeConfig = {\n                    top: node.top,\n                    left: node.left,\n                    height: Math.abs(node.top - refNode.top + refNode.height),\n                    width: node.width\n                };\n                break;\n\n            case 'h-center':\n                newNodeConfig = {\n                    top: node.top,\n                    left: refNode.left,\n                    height: node.height,\n                    width: refNode.width\n                };\n                break;\n\n            case 'v-center':\n                newNodeConfig = {\n                    top: refNode.top,\n                    left: node.left,\n                    height: refNode.top,\n                    width: node.width\n                };\n                break;\n            default:\n                break;\n            }\n    // check if model in parent component\n            Object.assign(newNodeConfig, { id: point.id(), className: host.className() });\n            context.renderer().createAndPositionDiv(newNodeConfig);\n            context.componentMap().get(host.name()).setSpatialConfig({\n                x: newNodeConfig.left,\n                y: newNodeConfig.top,\n                height: newNodeConfig.height,\n                width: newNodeConfig.width\n\n            });\n        }\n        resolveAligment(context, component);\n    });\n};\n","import { Utils } from '../utils';\nimport { drawLayout, resolveAligment, drawComponent } from './helper';\n\nexport class DrawingManager {\n    constructor (data, renderer, container) {\n        this._data = data.tree;\n        this._componentMap = data.componentMap;\n        this._layoutClassName = data.layoutClassName;\n        this._renderer = renderer;\n        this._mount = Utils.isDOMElement(container) ? container : Utils.getElement(container);\n    }\n\n    draw () {\n        drawLayout(this);\n        resolveAligment(this, this._data);\n        drawComponent(this._data);\n        return this;\n    }\n\n    data (data) {\n        if (data) {\n            this._data = data;\n        }\n        return this._data;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    className (param) {\n        if (param) {\n            this._layoutClassName = param;\n        }\n        return this._layoutClassName;\n    }\n\n    renderer (param) {\n        if (param) {\n            this._renderer = param;\n        }\n        return this._renderer;\n    }\n\n    mount (param) {\n        if (param) {\n            this._mount = param;\n        }\n        return this._mount;\n    }\n}\n","import DefinitionModel from './definitionModel';\nimport { prepareTargetComponentMap, getComponent, placeComponent, placeGridComponent } from '../helper';\n\nexport default class DefinitionManager {\n    constructor (componentMap, sequence, totalHeight, totalWidth) {\n        this._componentMap = componentMap;\n        this._prioritySequence = sequence;\n        this._totalHeight = totalHeight;\n        this._totalWidth = totalWidth;\n        this._targetComponentMap = null;\n    }\n\n    // create the config model\n    generateConfigModel () {\n        prepareTargetComponentMap(this);\n        const canvasComponent = this._targetComponentMap.get('canvas');\n        const definitionModel = new DefinitionModel({});\n        let tempDefModel = definitionModel;\n        definitionModel.remainingHeight(this._totalHeight);\n        definitionModel.remainingWidth(this._totalWidth);\n\n        let componentRef = null;\n\n        this._prioritySequence.forEach((name) => {\n            componentRef = getComponent(canvasComponent, name);\n            if (name !== 'grid') {\n                tempDefModel = placeComponent(tempDefModel, componentRef).second;\n            } else {\n                tempDefModel = placeGridComponent(tempDefModel, componentRef.component);\n            }\n        });\n        return definitionModel;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    targetComponentMap (param) {\n        if (param) {\n            this._targetComponentMap = param;\n        }\n        return this._targetComponentMap;\n    }\n}\n","import { sanitizeConfig } from './helper';\n\nexport class LayoutDef {\n    constructor () {\n        this._componentMap = new Map();\n        this._layoutDefinition = null;\n    }\n\n    addComponent (component) {\n        this._componentMap.set(component.name(), component);\n    }\n\n    layoutDefinition (def) {\n        if (def) {\n            this._layoutDefinition = def;\n        }\n        return this._layoutDefinition;\n    }\n\n    addMultipleComponent (componentArray) {\n        componentArray.forEach((comp) => {\n            this.addComponent(comp);\n        });\n    }\n\n    sanitizedDefinition () {\n        sanitizeConfig(this, this._layoutDefinition);\n        return this.layoutDefinition();\n    }\n\n    componentMap () {\n        return this._componentMap;\n    }\n    resetComponentMap () {\n        this._componentMap.clear();\n    }\n}\n","import DefinitionManager from '../layout-definition/definition-manager';\n\nexport function sanitizeConfig (context, hostObj) {\n    const hostID = hostObj.host();\n    if (hostObj.lanes() && hostObj.lanes().length) {\n        hostObj.lanes().forEach(childHost => sanitizeConfig(context, childHost));\n    }\n    if (hostID != null && typeof (hostID) === 'string') {\n        if (context.componentMap().get(hostID) !== undefined) {\n            hostObj.host(context.componentMap().get(hostID));\n        }\n    }\n}\n\nexport function calLayOutDef (context) {\n    const { height, width } = context.dimension();\n    const defManager = new DefinitionManager(context.layoutDef().componentMap(),\n                                              context.prioritySequence(),\n                                              height,\n                                              width);\n    const genLayoutdef = defManager.generateConfigModel();\n    return genLayoutdef;\n}\n","import {\n  LayoutModel\n} from '../layout-definition';\n\nimport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT\n} from '../constants/defaults';\n\nimport { DrawingManager } from '../drawing-manager';\nimport { Utils } from '../utils';\nimport { LayoutDef } from './layout-def';\nimport { calLayOutDef } from './helper';\n\nexport default class LayoutManager {\n    constructor (conf) {\n        this._renderAt = conf.renderAt;\n        this._layoutClassName = conf.className;\n        this._dimension = {\n            width: conf.width || DEFAULT_WIDTH,\n            height: conf.height || DEFAULT_HEIGHT\n        };\n\n        this._skeletonType = conf.skeletonType || 'html';\n        this._layoutDefinition = null;\n        this._layoutDef = new LayoutDef();\n        this._drawingManager = null;\n        this._prioritySequence = [];\n        this.tree = null;\n        this._rootNodeID = null;\n    }\n\n    layoutDef (param) {\n        if (param) {\n            this._layoutDef = param;\n        }\n        return this._layoutDef;\n    }\n\n    prioritySequence (param) {\n        if (param) {\n            this._prioritySequence = param;\n        }\n        return this._prioritySequence;\n    }\n\n    dimension (param) {\n        if (param) {\n            Object.assign(this._dimension, param);\n        }\n        return this._dimension;\n    }\n\n    addComponent (component) {\n        this._layoutDef.addComponent(component);\n    }\n\n    addMultipleComponent (componentArray) {\n        this._layoutDef.addMultipleComponent(componentArray);\n    }\n\n    resetNode (node) {\n        if (this.con) {\n            this.con.resetNode(node);\n        }\n    }\n\n  /**\n   * function to update the node and rerender the layout.\n   * @param  {} config - node configuration to change.\n   */\n    updateNode (config) {\n        this.tree.updateNode(config);\n        this._layoutDefinition = this.tree.model;\n        this.compute();\n    }\n\n    compute () {\n        //----\n        if (Utils.isDOMElement(this._renderAt)) {\n            this._renderAt._layout = this;\n        } else {\n            document.getElementById(this._renderAt)._layout = this;\n        }\n        //-----\n        this._layoutDefinition = calLayOutDef(this);\n        this._layoutDef.layoutDefinition(this._layoutDefinition);\n        this._layoutDefinition = this._layoutDef.sanitizedDefinition();\n        this._layout = new LayoutModel({\n            width: this._dimension.width,\n            height: this._dimension.height\n        },\n            this._layoutDefinition);\n        this.tree = this._layout.negotiate().tree();\n        this._layout.broadcast();\n        this._drawingManager = new DrawingManager({\n            tree: this.tree,\n            componentMap: this._layoutDef.componentMap(),\n            layoutClassName: this._layoutClassName\n        }, this._skeletonType, this._renderAt);\n\n        if (this._rootNodeID) {\n            this.tree.id(this._rootNodeID);\n        } else {\n            this._rootNodeID = this.tree.id();\n        }\n    // this will draw all the components by calling their draw method\n        this._drawingManager.draw();\n    }\n\n    getRootNodeId () {\n        return this._rootNodeID;\n    }\n\n  /**\n  * This function takes the LayoutComponents and Register them in component store\n  * @param {Array<LayoutComponent>} layoutComponents\n  */\n    registerComponents (layoutComponents) {\n        this._prioritySequence.length = 0;\n        this._layoutDef.resetComponentMap();\n        layoutComponents.forEach((container) => {\n            if (container) {\n                this._prioritySequence.push(container.name());\n                this.addComponent(container);\n                if (container.name() === 'grid') {\n                    container.component.forEach((componentArr) => {\n                        componentArr.forEach((compo) => {\n                            this.addComponent(compo);\n                        });\n                    });\n                }\n            }\n        });\n        return this;\n    }\n\n    getComponent (componentName) {\n        return this._layoutDef.componentMap().get(componentName);\n    }\n\n    renderAt (mount) {\n        if (mount) {\n            this._renderAt = mount;\n        }\n        return this._renderAt;\n    }\n}\n","import { isEqual, STATE_NAMESPACES, selectElement, getValueParser } from 'muze-utils';\nimport { VisualGroup } from '@chartshq/visual-group';\nimport { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, DATA, CONFIG }\n    from '../constants';\nimport { canvasOptions } from './local-options';\nimport { LayoutManager } from '../../../layout/src/tree-layout';\n\n/**\n * Instantiate high level components. Canvas knows what all high level component it has.\n * @nice-to-have dynamic high level components.\n *  - Is it even required ?\n *  - Reactive to source (canvas) streaming ?\n * @param {*} context Canvas instance\n * @return {Object.<Array>} Arrays of Title, visualGroup, Legend\n */\nexport const initCanvas = (context) => {\n    const reg = context._registry.components;\n\n    return [new reg.VisualGroup(context._registry, Object.assign({\n        throwback: context._throwback\n    }, context.dependencies()))];\n};\n\nexport const fixScrollBarConfig = (config) => {\n    config.scrollBar.thickness = Math.min(50, Math.max(10, config.scrollBar.thickness));\n    return config;\n};\n\nexport const setLayoutInfForUnits = (context) => {\n    const layoutManager = context._layoutManager;\n    const boundBox = layoutManager.getComponent('grid').getBoundBox();\n    const valueMatrix = context.composition().visualGroup.matrixInstance().value;\n    const parentContainer = selectElement(`#${layoutManager.getRootNodeId()}`).node();\n    valueMatrix.each((cell) => {\n        cell.valueOf().parentContainerInf({\n            el: parentContainer,\n            dimensions: boundBox\n        });\n    });\n};\n\n/**\n *\n *\n * @memberof Canvas\n */\nexport const dispatchProps = (context) => {\n    const lifeCycleManager = context.dependencies().lifeCycleManager;\n    lifeCycleManager.notify({ client: context, action: 'beforeupdate' });\n    const visualGroup = context.composition().visualGroup;\n\n    const allOptions = context._allOptions;\n    for (const key in allOptions) {\n        const value = context[key]();\n        if (value !== null) {\n            visualGroup[key] && visualGroup[key](value);\n        }\n    }\n    const { invalidValues } = context.config();\n\n    visualGroup.valueParser(getValueParser(invalidValues));\n    visualGroup.createMatrices();\n    context._cachedProps = {};\n    lifeCycleManager.notify({ client: context, action: 'initialized' });\n    lifeCycleManager.notify({ client: context, action: 'updated' });\n};\n\nconst equalityChecker = (props, params) => {\n    let checker = () => false;\n    return !props.every((option, i) => {\n        switch (option) {\n        case ROWS:\n        case COLUMNS:\n        case DETAIL:\n            checker = isEqual('Array');\n            break;\n\n        case SHAPE:\n        case SIZE:\n        case COLOR:\n        case DATA:\n        case CONFIG:\n            checker = isEqual('Object');\n            break;\n        default:\n            checker = () => true;\n            break;\n        }\n        const oldVal = params[i][0];\n        const newVal = params[i][1];\n\n        return checker(oldVal, newVal);\n    });\n};\n\nconst updateChecker = (props, params) => props.every((option, i) => {\n    const val = params[i][1];\n    switch (option) {\n    case ROWS:\n    case COLUMNS:\n        return val !== null;\n\n    case DATA:\n        return val && !val.isEmpty();\n\n    default:\n        return true;\n\n    }\n});\n\nexport const notifyAnimationEnd = (context) => {\n    const centerMatrix = context.layout().viewInfo().viewMatricesInfo.matrices.center[1] || [];\n    const promises = [];\n    centerMatrix.forEach((cellArr) => {\n        cellArr.forEach((cell) => {\n            promises.push(cell.valueOf().done());\n        });\n    });\n    const lifeCycleManager = context.lifeCycle();\n    if (promises.length) {\n        Promise.all(promises).then(() => {\n            // Update life cycle\n            lifeCycleManager.notify({ client: context, action: 'drawn' });\n            const animDonePromises = [];\n\n            centerMatrix.forEach((cellArr) => {\n                cellArr.forEach((cell) => {\n                    cell.valueOf().layers().forEach((layer) => {\n                        animDonePromises.push(layer.animationDone());\n                    });\n                });\n            });\n\n            [context.xAxes(), context.yAxes()].forEach((axisArr) => {\n                axisArr = axisArr || [];\n                axisArr.forEach((axes) => {\n                    axes.forEach((axisInst) => {\n                        animDonePromises.push(axisInst.animationDone());\n                    });\n                });\n            });\n\n            Promise.all(animDonePromises).then(() => {\n                lifeCycleManager.notify({ client: context, action: 'animationend' });\n            });\n        });\n    } else {\n        lifeCycleManager.notify({ client: context, action: 'animationend' });\n    }\n};\n\nexport const setupChangeListener = (context) => {\n    const store = context._store;\n\n    const allOptions = Object.keys(context._allOptions);\n    const props = [...allOptions, ...Object.keys(canvasOptions)];\n    const nameSpaceProps = [...allOptions, ...Object.keys(canvasOptions)].map(prop =>\n        `${STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE}.${prop}`);\n    store.registerChangeListener(nameSpaceProps, (...params) => {\n        let updateProps = equalityChecker(props, params);\n        updateProps = updateChecker(props, params);\n\n        // inform attached board to rerender\n        if (updateProps && context.mount()) {\n            dispatchProps(context);\n            context.render();\n        }\n        notifyAnimationEnd(context);\n    }, true);\n};\n\nexport const applyInteractionPolicy = (firebolt) => {\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    if (visualGroup) {\n        const valueMatrix = visualGroup.matrixInstance().value;\n        const interactionPolicy = firebolt._interactionPolicy;\n        interactionPolicy(valueMatrix, firebolt);\n        const crossInteractionPolicy = firebolt._crossInteractionPolicy;\n        const behaviours = crossInteractionPolicy.behaviours;\n        const sideEffects = crossInteractionPolicy.sideEffects;\n        valueMatrix.each((cell) => {\n            const unitFireBolt = cell.valueOf().firebolt();\n            for (const key in behaviours) {\n                unitFireBolt.changeBehaviourStateOnPropagation(key, behaviours[key]);\n            }\n            for (const key in sideEffects) {\n                unitFireBolt.changeSideEffectStateOnPropagation(key, sideEffects[key]);\n            }\n        });\n    }\n};\n\n/**\n * Sets the rotation for all x axes if any axis has the rotation config set in the\n * entire view\n *\n * @param {Array} columns Column cells that contain the axes cells\n */\nexport const setLabelRotationForAxes = (context) => {\n    let rotation = 0;\n\n    const xAxes = context.xAxes() || [];\n\n    (() => {\n        for (let i = 0; i < xAxes.length; i++) {\n            for (let j = 0; j < xAxes[i].length; j++) {\n                const rotationVal = xAxes[i][j].renderConfig().labels.rotation;\n                if (rotationVal && rotationVal !== 0) {\n                    rotation = rotationVal;\n                    return;\n                }\n            }\n        }\n    })();\n\n    if (rotation) {\n        xAxes.forEach((axes) => {\n            axes.forEach((axis) => {\n                axis.renderConfig({ labels: { rotation } });\n                axis.smartTicks(axis.setTickConfig());\n            });\n        });\n    }\n};\n\nexport const createGroupState = (context) => {\n    const [globalState, localState] = VisualGroup.getState();\n    const store = context._store;\n    store.append('app.group', globalState);\n    store.append('local.group', localState);\n};\n\nexport const removeChild = (mount) => {\n    while (mount.firstChild) {\n        mount.removeChild(mount.firstChild);\n    }\n};\n\nexport const createLayoutManager = () => {\n    const layoutManager = new LayoutManager({\n        className: 'muze-group-container'\n    });\n    return layoutManager;\n};\n","/**\n * This is the global options semantics based on which setters getters are created and reactivity is initiated.\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n * @module GlobalOptions\n */\n\nimport { intSanitizer, mergeRecursive, DataModel } from 'muze-utils';\nimport { fixScrollBarConfig } from './canvas/helper';\nimport { DEFAULT_CONFIG } from './defaults';\n\nexport default {\n    data: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel\n        }\n    },\n    width: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    height: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitWidth: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitHeight: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    config: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config, oldConfig) => {\n                // Reset the configuration when null is passed\n                const oldConf = mergeRecursive({}, config === null ? {} : oldConfig);\n                const defConfig = mergeRecursive(oldConf, DEFAULT_CONFIG);\n                let newConf = mergeRecursive(defConfig, config);\n                newConf = fixScrollBarConfig(newConf);\n\n                return newConf;\n            }\n\n        }\n    }\n};\n","/**\n * This file exports constants that will be used to\n * create the state store of the table layout.\n */\n/**\n * The index of top, bottom and center in the matrix\n */\nexport const VIEW_INDEX = {\n    top: 0,\n    center: 1,\n    bottom: 2\n};\n\nexport const ROW_MATRIX_INDEX = {\n    0: 'top',\n    1: 'center',\n    2: 'bottom'\n};\n\nexport const COLUMN_MATRIX_INDEX = {\n    0: 'left',\n    1: 'middle',\n    2: 'right'\n};\n\n/**\n * The width of the grid suppied by the user.\n */\nexport const GRID_WIDTH = 'width';\n\n/**\n * The height of the grid supplied by the user.\n */\nexport const GRID_HEIGHT = 'height';\n\n/**\n  * The border for the grid\n  */\nexport const BORDER = 'border';\n\n /**\n  *  The index of the first visible row in view matrix.\n  */\nexport const ROW_POINTER = 'rowPointer';\n\n/**\n * The index of the first visible column in the view matrix.\n */\nexport const COLUMN_POINTER = 'columnPointer';\n\n/**\n * Flag to specify whether row sizes should be equal.\n */\nexport const ROW_SIZE_IS_EQUAL = 'isRowSizeEqual';\n\n/**\n * Flag to specify whether column sizes are equal.\n */\nexport const COLUMN_SIZE_IS_EQUAL = 'isColumnSizeEqual';\n\n/**\n * Field to store an array an of the widths of visible columns.\n * @computed\n */\nexport const COLUMN_WIDTHS = 'visibleColumnWidths';\n\n/**\n * Field to store an array of heights of visible rows.\n * @computed\n */\nexport const ROW_HEIGHTS = 'visibleRowHeights';\n\n/**\n * Field to store the width of the left matrix.\n * @computed\n */\nexport const LEFT_MATRIX_WIDTH = 'leftMatrixWidth';\n\n/**\n * Field to store the width of the right matrix.\n * @computed\n */\nexport const RIGHT_MATRIX_WIDTH = 'rightMatrixWidth';\n\n/**\n * Field to store the height of the top matrix.\n * @computed\n */\nexport const TOP_MATRIX_HEIGHT = 'topMatrixHeight';\n\n/**\n * Field to store the height of the bottom matrix.\n * @computed\n */\nexport const BOTTOM_MATRIX_HEIGHT = 'bottomMatrixHeight';\n\n/**\n * The dom element to render the layout inside.\n */\nexport const MOUNT_POINT = 'mount';\n\n/**\n * The id attribute of the left table element.\n */\nexport const LEFT_TABLE_ID = 'grid-left';\n\n/**\n * The id attribute of the right table element.\n */\nexport const RIGHT_TABLE_ID = 'grid-right';\n\n/**\n * The id attribute of the top table.\n */\nexport const TOP_TABLE_ID = 'grid-top';\n\n/**\n * The id attribute of the bottom table.\n */\nexport const BOTTOM_TABLE_ID = 'grid-bottom';\n\n/**\n * The id attribute of the center table.\n */\nexport const CENTER_TABLE_ID = 'grid-center';\n\n/**\n * The id attribute of the top div.\n */\nexport const TOP_DIV_ID = 'muze-div-top';\n\n/**\n * The id attribute of the bottom div.\n */\nexport const BOTTOM_DIV_ID = 'muze-div-bottom';\n\n/**\n * The id attribute of the center div.\n */\nexport const CENTER_DIV_ID = 'muze-div-center';\n\n/**\n * Field that indicates if the row configuration has changed\n */\nexport const HAVE_ROWS_CHANGED = 'haveRowsChanged';\n\n/**\n * Field that indicates if the column configuration has changed\n */\nexport const HAVE_COLUMNS_CHANGED = 'haveColumnsChanged';\n\n/**\n * Field that indicates if the values configuration for the center matrix has changed\n */\nexport const HAVE_VALUES_CHANGED = 'haveValuesChanged';\n\n/**\n * Field that indicates the width of row matrix\n */\nexport const ROW_MATRIX_WIDTH = 'rowMatrixWidth';\n\n/**\n * Field that indicates the height of row matrix\n */\nexport const COLUMN_MATRIX_HEIGHT = 'columnMatrixHeight';\n\n/**\n * Field that indicates the unit width of layout\n */\nexport const UNIT_WIDTH = 'unitWidth';\n\n/**\n * Field that indicates the unit height of layout\n */\nexport const UNIT_HEIGHT = 'unitHeight';\n\n/**\n * Field that indicates the style object\n */\nexport const STYLE = 'style';\n\n/**\n * Field that indicates the color configuration\n */\nexport const COLOR = 'color';\n\n/**\n * Field that indicates width\n */\nexport const WIDTH = 'width';\n\n/**\n * Field that indicates collpase property for border\n */\nexport const COLLAPSE = 'collapse';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SPACING = 'spacing';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const DISTRIBUTION = 'distribution';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const GUTTERSPACE = 'gutterSpace';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const BREAK_PAGE = 'breakPage';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_ROW_BORDERS = 'showRowBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_COL_BORDERS = 'showColBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_VALUE_BORDERS = 'showValueBorders';\n\nexport const HEIGHT = 'height';\nexport const COLUMN = 'column';\nexport const ROW = 'row';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const CENTER = 'center';\nexport const CLICK = 'click';\nexport const ROW_LEFT = 'rowLeft';\nexport const ROW_RIGHT = 'rowRight';\nexport const COLUMN_BOTTOM = 'colBottom';\nexport const COLUMN_TOP = 'colTop';\nexport const AUTO = 'auto';\nexport const ROW_SPAN = 'rowSpan';\nexport const COL_SPAN = 'colSpan';\nexport const ROW_ROOT = 'rowRoot';\nexport const COLUMN_ROOT = 'columnRoot';\nexport const PRIMARY = 'primary';\nexport const SECONDARY = 'secondary';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n\nexport const PAGINATION = 'pagination';\nexport const BUFFER = 'buffer';\nexport const HOLISTIC = 'holistic';\nexport const SCROLL = 'scroll';\nexport const MIDDLE = 'middle';\nexport const NO_BORDERS = null;\n\nexport const MAX_WIDTH_AVAIL_FOR_COL_MATRIX = 'maxWidthAvailableForColumnMatrix';\nexport const COLUMN_MATRIX = 'columnMatrix';\nexport const MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX = 'maxHeightAvailableForRowMatrix';\nexport const ROW_MATRIX = 'rowMatrix';\n","import { sanitizeIP, mergeRecursive } from 'muze-utils';\nimport { TOP, CENTER, BOTTOM } from '../enums/constants';\n\n/*\n * This is the abstract implementation of the root layout. This takes care of common work which all the layouts\n * has to handle. The common work includes sanitizaion of inputs, update, rerender, dispose etc. This class can't be\n * used directly (as ofcourse this is an abstract implementaiton), the class which is implementing it has to implement\n * the necessary methods and gives its on visual.\n */\n\n/**\n * This class is used to create a generic layout. It can be extended to create layouts\n * of different types\n * @class GenericLayout\n */\nexport default class GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config configuration to be given for the layout\n     * @param {Object} dependencies external dependencies.\n     *\n     * @memberof GenericLayout\n     *\n     */\n    constructor (mountPoint, measurement, config, dependencies) {\n        this._config = {};\n        this._measurement = {};\n        this._matrices = [];\n        // External dependencies to be included for the layout. This includes the ext global dependencies like\n        // smartlabel which has one single implementation of throughout the page or per isntance\n        this._dependencies = dependencies;\n\n        this.measurement(measurement);\n        this.mountPoint(mountPoint);\n        this.config(config);\n    }\n\n    /**\n     * Returns an object which is used to recreate the layout.\n     * @return {Object} the serialized components\n     */\n    serialize () {\n        return {\n            measurement: this.measurement(),\n            config: this.config(),\n            matrices: this.matrices()\n        };\n    }\n\n     /**\n     * Sets/Gets the config for the layout\n     * @param {Object} config configuration for the layout\n     * @return {Layout|Object} Gets the Config/ Returns this instance when set\n     */\n    config (config) {\n        if (config) {\n            this._config = mergeRecursive(this._config || {}, config);\n            this._config.border.width = Math.max(0, this._config.border.width);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Sets/Gets the measurement for the layout\n     * @param {Object} measurement measurement for the layout\n     * @return {Layout|Object} Gets the measurement/ Returns this instance when set\n     */\n    measurement (measurement) {\n        if (measurement) {\n            this._measurement = mergeRecursive(this._measurement || {}, measurement);\n\n            return this;\n        }\n        return this._measurement;\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     * @param {Object} matrices matrices for the layout\n     * @return {Layout|Object} Gets the matrices/ Returns this instance when set\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = sanitizeIP.typeObj([TOP, CENTER, BOTTOM], matrices);\n\n            return this;\n        }\n        return this._matrices;\n    }\n\n    /**\n     * Sets/Gets the matrix for row\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    rowMatrix (matrix) {\n        if (matrix) {\n            this._rowMatrix = matrix;\n            return this;\n        }\n        return this._rowMatrix;\n    }\n\n    /**\n     * Sets/Gets the matrix for columns\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    columnMatrix (matrix) {\n        if (matrix) {\n            this._columnMatrix = matrix;\n            return this;\n        }\n        return this._columnMatrix;\n    }\n\n   /**\n     * Sets/Gets the matrix for value\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    centerMatrix (matrix) {\n        if (matrix) {\n            this._centerMatrix = matrix;\n            return this;\n        }\n        return this._centerMatrix;\n    }\n\n    /**\n     * Sets/Gets the mountPoint for the layout\n     * @param {Object} mountPoint mountPoint for the layout\n     * @return {Layout|Object} Gets the mountPoint/ Returns this instance when set\n     */\n    mountPoint (mountPoint) {\n        if (mountPoint) {\n            this._mountPoint = mountPoint;\n\n            return this;\n        }\n        return this._mountPoint;\n    }\n}\n","import * as FieldNames from '../enums/constants';\n\n/**\n * Default configuration of the layout\n * @return {Object} returns the default configuration\n */\nexport const DEFAULT_CONFIGURATION = {\n    [FieldNames.BORDER]: {\n        [FieldNames.STYLE]: 'solid',\n        [FieldNames.COLOR]: '#d6d6d6',\n        [FieldNames.WIDTH]: 2,\n        [FieldNames.COLLAPSE]: true,\n        [FieldNames.SPACING]: 0\n    },\n    [FieldNames.PAGINATION]: 'scroll',\n    [FieldNames.BUFFER]: 20,\n    [FieldNames.GUTTERSPACE]: { rows: [], columns: [] },\n    [FieldNames.DISTRIBUTION]: { rows: [], columns: [] },\n    [FieldNames.BREAK_PAGE]: { rows: [], columns: [] },\n    [FieldNames.ROW_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_POINTER]: 0,\n    [FieldNames.ROW_POINTER]: 0\n};\n\n/**\n * Default measurements for the layout\n * @return {Object} returns the default measurements\n */\nexport const DEFAULT_MEASUREMENTS = {\n    [FieldNames.GRID_WIDTH]: 100,\n    [FieldNames.GRID_HEIGHT]: 100,\n    [FieldNames.UNIT_WIDTH]: 100,\n    [FieldNames.UNIT_HEIGHT]: 100\n};\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n","/**\n * This file exports utility functions that are used across the layout module\n */\nimport { Symbols } from 'muze-utils';\nimport { PRIMARY, SECONDARY, HEIGHT, WIDTH } from '../enums/constants';\n\nconst nest = Symbols.nest;\n/**\n *\n *\n * @param {*} isTransposed\n *\n */\nconst getMeasureInfo = (isTransposed) => {\n    if (isTransposed) {\n        return {\n            firstMeasure: HEIGHT,\n            secondMeasure: WIDTH\n        };\n    }\n    return {\n        firstMeasure: WIDTH,\n        secondMeasure: HEIGHT\n    };\n};\n\n/**\n *\n *\n * @param {*} i\n * @param {*} page\n *\n */\nconst findInPage = (i, page) => {\n    let count = 0;\n    for (const x in page) {\n        if (i < page[x]) {\n            count = x;\n            break;\n        }\n    }\n    return count;\n};\n\n/**\n * Creates a single matrix from two matrices\n *\n * @param {Array<Array>} matrix Input matrix\n * @return {Array<Array>} Joined matrix\n * @memberof VisualMatrix\n */\nexport const combineMatrices = (matrix, config) => {\n    const { isTransposed } = config;\n    let joinedMatrix = matrix[0].length > 0 ? matrix[0] : matrix[1];\n    if (isTransposed) {\n        joinedMatrix = matrix[0].length > 0 ? [...matrix[0]] : [];\n        joinedMatrix = matrix[1].length > 0 ? [...joinedMatrix, ...matrix[1]] : joinedMatrix;\n    } else {\n        joinedMatrix = joinedMatrix.map((row, rowIndex) => {\n            let rowData = [];\n            if (matrix[0].length > 0) {\n                rowData = [...matrix[0][rowIndex]];\n            }\n            if (matrix[1].length > 0) {\n                rowData = [...rowData, ...matrix[1][rowIndex]];\n            }\n            return rowData;\n        });\n    }\n    return joinedMatrix;\n};\n\n/**\n * Creates a hirachical tree from the context\n *\n * @param {Object} context context for creating tree\n * @return {Object} nested tree\n */\nexport const createTree = (context) => {\n    let matrixTree = {};\n    let lastLevelKey = 0;\n    let facet = PRIMARY;\n    const nestFn = nest();\n    const keys = [];\n    const layoutMatrix = context._layoutMatrix;\n    const primaryMatrix = context.primaryMatrix();\n    const secondaryMatrix = context.secondaryMatrix();\n    const { isTransposed, breakPage } = context.config();\n\n    if (!isTransposed) {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix[0].length - 1; i++) {\n                keys.push(i);\n            }\n            keys.push(primaryMatrix[0].length - 1);\n            if (facet === SECONDARY || secondaryMatrix.length === 0) {\n                lastLevelKey = primaryMatrix[0].length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const keyLength = primaryMatrix.length > 0 ? primaryMatrix[0].length : 0;\n            for (let i = secondaryMatrix[0].length - 1; i > 0; i--) {\n                keys.push(i + keyLength);\n            }\n            keys.push(keyLength);\n\n            if (facet === PRIMARY) {\n                lastLevelKey = keyLength;\n            }\n        } else {\n            lastLevelKey = primaryMatrix.length > 0 ? primaryMatrix[0].length - 1 : 0;\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        matrixTree = nestFn.entries(layoutMatrix);\n    } else {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix.length - 1; i++) {\n                keys.push(i);\n            }\n            // if (facet === PRIMARY) {\n            keys.push(primaryMatrix.length - 1);\n            // } else {\n            if (facet === SECONDARY) {\n                lastLevelKey = primaryMatrix.length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const primaryMatrixLength = primaryMatrix.length;\n            for (let i = secondaryMatrix.length - 1; i > 0; i--) {\n                keys.push(i + primaryMatrixLength);\n            }\n            // if (facet === SECONDARY) {\n            keys.push(primaryMatrixLength);\n            // }\n            if (facet === PRIMARY) {\n                lastLevelKey = primaryMatrixLength;\n            }\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        let newMatrix = [];\n        newMatrix = layoutMatrix[0].map((col, colIndex) => layoutMatrix.map(row => row[colIndex]));\n        matrixTree = nestFn.entries(newMatrix);\n    }\n    return { tree: matrixTree, lastLevelKey };\n};\n\n/**\n * Gives the min measues\n *\n * @param {boolean} isTransposed is column matrix\n * @param {Object} unitMeasures min measures to be given to cells\n * @return {Object} dimension min cell\n */\nexport const getMinMeasures = (isTransposed, unitMeasures) => {\n    if (!isTransposed) {\n        return {\n            height: unitMeasures.height,\n            width: 0\n        };\n    }\n    return {\n        height: 0,\n        width: unitMeasures.width\n    };\n};\n\n/**\n * Get the logical space from the tree\n *\n * @param {Node} item tree to be calculated\n * @param {number} measures width and height\n * @param {Array} minMeasures min measures for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} dimension\n */\nexport const getLogicalSpace = (item, measures, minMeasures, maxMeasure = []) => {\n    const { firstMeasure, secondMeasure } = measures;\n    let firstMeasureValue = 0;\n    let secondMeasureValue = 0;\n    item.values.forEach((valueArray) => {\n        let fMeasure = 0;\n        let sMeasure = 0;\n        valueArray.forEach((placeholder, colIndex) => {\n            placeholder.setAvailableSpace();\n            const space = placeholder.getLogicalSpace();\n\n            sMeasure = Math.max(sMeasure, +space[secondMeasure], minMeasures[secondMeasure]);\n            maxMeasure[colIndex] = Math.max(maxMeasure[colIndex] || 0, space[firstMeasure]);\n            fMeasure += +maxMeasure[colIndex];\n        });\n        secondMeasureValue += sMeasure;\n        firstMeasureValue = Math.max(firstMeasureValue, fMeasure);\n        item.space = {\n            [secondMeasure]: Math.ceil(secondMeasureValue),\n            [firstMeasure]: Math.ceil(firstMeasureValue)\n        };\n    });\n    return {\n        [secondMeasure]: secondMeasureValue,\n        [firstMeasure]: firstMeasureValue\n    };\n};\n\n/**\n * Computes the logical spcae taken by the matrix tree\n *\n * @param {*} [item={}] tree to be viewed\n * @param {boolean} [isTransposed=false] is column matrix\n * @param {*} unitMeasures min measues for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} logical space taken\n */\nexport const computeLogicalSpace = (item = {}, config, maxMeasures) => {\n    const { isTransposed = false, unitMeasures } = config;\n    const { firstMeasure, secondMeasure } = getMeasureInfo(isTransposed);\n    const { values } = item;\n    const minMeasures = getMinMeasures(isTransposed, unitMeasures);\n    if (values[0].key) {\n        const logicalSpace = { [firstMeasure]: 0, [secondMeasure]: 0 };\n\n        values.forEach((valueItem) => {\n            // Compute logical space for lowest level\n            const space = computeLogicalSpace(valueItem, config, maxMeasures);\n            // Set logical space for first measure\n            logicalSpace[firstMeasure] = Math.max(logicalSpace[firstMeasure], space[firstMeasure],\n                minMeasures[firstMeasure]);\n            // Set logical space for second measure\n            logicalSpace[secondMeasure] += +space[secondMeasure];\n        });\n        item.space = logicalSpace;\n        return logicalSpace;\n    }\n    return getLogicalSpace(item, { firstMeasure, secondMeasure }, minMeasures, maxMeasures);\n};\n\n/**\n * Gives the space taken by a row\n *\n * @param {Array} row matrix array of rows\n * @return {Object} dimension of the row\n */\nexport const spaceTakenByRow = (row) => {\n    let height = 0;\n    let width = 0;\n    row.forEach((col) => {\n        const spaces = col.getLogicalSpace();\n        height = Math.max(height, spaces.height);\n        width += spaces.width;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Gives the space taken by a column\n *\n * @param {Array<Array>} matrix column matrix\n * @param {number} colIndex column index\n * @return {Object} dimension of the column\n */\nexport const spaceTakenByColumn = (matrix, colIndex) => {\n    let height = 0;\n    let width = 0;\n    matrix.forEach((row) => {\n        const col = row[colIndex];\n        const spaces = col.getLogicalSpace();\n        width = Math.max(width, spaces.width);\n        height += spaces.height;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Creates different level matrices\n *\n * @param {Object} item matrix tree\n * @param {boolean} isTransposed is column matrix\n * @return {Object} matrix of each level\n */\nexport const createMatrixEachLevel = (item, isTransposed) => {\n    if (item.values[0].key) {\n        const arr = [];\n        item.values.forEach((child) => {\n            if (!isTransposed) {\n                arr.push(...createMatrixEachLevel(child, isTransposed));\n            } else {\n                const eachLevel = createMatrixEachLevel(child, isTransposed);\n                eachLevel.forEach((e, i) => {\n                    arr[i] = arr[i] || [];\n                    arr[i].push(...e);\n                });\n            }\n        });\n        item.matrix = arr;\n        return arr;\n    }\n    if (!isTransposed) {\n        item.matrix = item.values;\n    } else {\n        item.matrix = item.values[0].map((col, colIndex) => item.values.map(row => row[colIndex]));\n    }\n    return item.matrix;\n};\n\n/**\n * Breaks the matrix into two part\n *\n * @param {Array<Array>} matrix input matrix\n * @param {boolean} isTransposed is column matrix\n * @param {number} breakPointer point in matrix where it is to be broken\n * @return {Array} two broken matrix\n */\nexport const breakMatrix = (matrix, isTransposed, breakPointer) => {\n    const primaryMatrix = [];\n    const secondaryMatrix = [];\n    if (isTransposed) {\n        matrix.forEach((row, rowIndex) => {\n            if (rowIndex >= breakPointer) {\n                secondaryMatrix.push(row);\n            } else {\n                primaryMatrix.push(row);\n            }\n        });\n    } else {\n        matrix.forEach((row, rowIndex) => {\n            row.forEach((column, columnIndex) => {\n                if (columnIndex >= breakPointer) {\n                    secondaryMatrix[rowIndex] = secondaryMatrix[rowIndex] || [];\n                    secondaryMatrix[rowIndex].push(column);\n                } else {\n                    primaryMatrix[rowIndex] = primaryMatrix[rowIndex] || [];\n                    primaryMatrix[rowIndex].push(column);\n                }\n            });\n        });\n    }\n    return [primaryMatrix, secondaryMatrix];\n};\n\n/**\n * Distributed width returned\n *\n * @param {Object} context context for the width distibution\n * @return {number} distributed widths\n */\nexport const getDistributedWidth = (context, layoutConfig) => {\n    const {\n        availableWidth,\n        width,\n        row\n    } = context;\n    const {\n        isDistributionEqual,\n        isTransposed,\n        distribution\n    } = layoutConfig;\n    let distSum = 0;\n    if (distribution && distribution[0]) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    return row.map((col, colIndex) => {\n        const space = col.getLogicalSpace().width;\n        let distWidth = (space + (availableWidth - width) * (space / width));\n        if (isTransposed) {\n            if (distribution.length > 0) {\n                distWidth = (availableWidth * distribution[colIndex] / distSum);\n            } else if (isDistributionEqual || width === 0) {\n                const rowLen = row.length;\n                distWidth = (availableWidth / rowLen);\n            }\n        }\n        return Math.floor(distWidth);\n    });\n};\n\n/**\n * Distributeed heights returned\n *\n * @param {Object} context input for the height distribution\n * @return {Object} distribured heights\n */\nexport const getDistributedHeight = (context) => {\n    let distSum = 0;\n    let gutterSum = 0;\n    let heightWithoutGutter = 0;\n    const {\n        isTransposed,\n        distribution,\n        availableHeight,\n        height,\n        isDistributionEqual,\n        gutter,\n        matrix,\n        cIdx\n    } = context;\n\n    if (distribution && distribution[0] !== undefined) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    if (gutter && gutter[0] !== undefined) {\n        gutterSum = gutter.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    heightWithoutGutter = availableHeight - Math.floor(availableHeight * gutterSum);\n\n    const colLen = matrix.length;\n    return matrix.map((row, rIdx) => {\n        const col = row[cIdx];\n        const space = col.getLogicalSpace().height;\n        let distHeight = (space + (heightWithoutGutter - height) * (space / height));\n\n        if (!isTransposed) {\n            if (distribution.length > 0 && colLen === distribution.length) {\n                distHeight = (heightWithoutGutter * distribution[rIdx] / distSum);\n            } else if (isDistributionEqual || context.height === 0) {\n                distHeight = (heightWithoutGutter / colLen);\n            }\n        }\n        return Math.floor(distHeight);\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} beg\n * @param {*} end\n */\nexport const extraCellsRemover = (arr, beg, end) => arr.slice(beg, -end);\n\n/**\n * Creates matrix instancess\n *\n * @param {Array} [arr=[]] mutated arry\n * @param {number} depth depth of the tree\n * @param {Array} matrixInfo Details about the matrix(tree, etc) to be inserted\n * @param {boolean} layout Instance of layout\n */\nexport const createMatrixInstances = (arr = [], depth, matrixInfo, layout) => {\n    const breakPointer = layout._breakPointer;\n    const config = layout.config();\n    const {\n        isTransposed\n    } = config;\n    const {\n        tree,\n        layoutMatrix\n    } = matrixInfo;\n\n    if (depth === 0) {\n        const brokenMatrix = breakMatrix(tree.matrix, isTransposed, breakPointer);\n        arr.push({\n            matrix: tree.matrix,\n            primaryMatrix: brokenMatrix[0],\n            secondaryMatrix: brokenMatrix[1],\n            space: tree.space\n        });\n        return arr;\n    }\n    const nextLevel = depth - 1;\n    tree.values.forEach((e) => {\n        createMatrixInstances(arr, nextLevel, {\n            tree: e,\n            layoutMatrix\n        }, layout);\n    });\n    return arr;\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    maxMeasures: {},\n    availableSpace: {},\n    logicalSpace: {}\n};\n","import { PRIMARY } from '../enums/constants';\n/**\n *\n *\n */\nexport const defaultConfig = {\n    distribution: [],\n    classPrefix: 'muze',\n    isDistributionEqual: true,\n    unitMeasures: {\n        height: 100,\n        width: 100,\n        border: 1\n    },\n    isTransposed: false,\n    facet: PRIMARY,\n    extraCellLengths: []\n};\n","import { mergeRecursive, generateGetterSetters, ERROR_MSG } from 'muze-utils';\nimport {\n    createTree,\n    combineMatrices,\n    createMatrixInstances\n  } from '../utils';\nimport { PROPS } from './props';\nimport { HEIGHT, WIDTH } from '../enums/constants';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        // Prepare matrices\n        this._lastLevelKey = 0;\n        this._primaryMatrix = matrix[0] || [];\n        this._secondaryMatrix = matrix[1] || [];\n        this._maxMeasures = [];\n        this._availableSpace = {};\n\n        // Store the config\n        generateGetterSetters(this, PROPS);\n        const defCon = Object.assign({}, this.constructor.defaultConfig());\n        this.config(mergeRecursive(defCon, config));\n\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n    }\n\n     /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    computeViewableSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    getPriorityDistribution () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     * @returns\n     * @memberof VisualMatrix\n     */\n    primaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._primaryMatrix;\n    }\n\n    secondaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._secondaryMatrix;\n    }\n\n    tree (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._tree;\n    }\n\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    createTree () {\n        const { tree, lastLevelKey } = createTree(this);\n        this._lastLevelKey = lastLevelKey;\n        return tree;\n    }\n\n    /**\n     * Returns the space taken by visual matrix\n     *\n     * @return {Object} space taken by the matrix\n     * @memberof VisualMatrix\n     */\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    /**\n     * Sets the provied space to the visual matrix\n     *\n     * @param {number} width width provided\n     * @param {number} height height provided\n     * @memberof VisualMatrix\n     */\n    setAvailableSpace (width, height) {\n        this.availableSpace({ width, height });\n        const tree = this.tree();\n        const heightMeasures = this.populateMaxMeasures(HEIGHT, tree);\n        const widthMeasures = this.populateMaxMeasures(WIDTH, tree);\n        const depth = this.calculateDepth(widthMeasures, heightMeasures);\n\n        this.viewableMatrix = this.createViewPortMatrix(depth);\n        this.viewableMeasures = this.redistributeSpaces(width, height);\n        return this;\n    }\n\n    /**\n     * Populate the max measures in the array\n     *\n     * @param {Array} measures array to be filled with max measures\n     * @param {Object} matrixTree matrix tree of visual matrix\n     * @param {number} measure width or height\n     * @param {number} [depth=0] depth of the tree that to be calculated\n     * @memberof VisualMatrix\n     */\n    populateMaxMeasures (type, matrixTree, depth = 0, measures = []) {\n        measures[depth] = Math.max(measures[depth] || 0, matrixTree.space[type]);\n        if (matrixTree.values) {\n            const childDepth = depth + 1;\n            matrixTree.values.forEach((child) => {\n                if (child.space) {\n                    measures = this.populateMaxMeasures(type, child, childDepth, measures);\n                }\n            });\n        }\n        return measures;\n    }\n\n    /**\n     * Gets the viewable measures for the current viewable matrix\n     *\n     * @return {Object} Set of viewable measures\n     * @memberof VisualMatrix\n     */\n    getViewableSpaces () {\n        return this.viewableMeasures;\n    }\n\n    /**\n     * Returns the matrix that can be viewed in the current viewport\n     *\n     * @return {Array} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    getViewableMatrices () {\n        return this.viewableMatrix;\n    }\n\n    /**\n     * Creates the viewport that can be viewed together\n     *\n     * @param {number} depth maxDepth that can be viewed in the viewport\n     * @return {Array<Object>} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    createViewPortMatrix (depth) {\n        const arr = [];\n        createMatrixInstances(arr, depth, this.removeExtraCells(), this);\n        return arr;\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    combineMatrices,\n    spaceTakenByColumn,\n    getDistributedHeight,\n    computeLogicalSpace,\n    createMatrixEachLevel\n  } from '../utils';\nimport { ROW_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class RowVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = (matrix[0].length > 0 ? matrix[0][0].length : 0);\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n\n        // Create Tree\n        this._tree = {\n            key: ROW_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, false);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height\n        } = measures;\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i };\n            const { widths, rowHeights, columnWidths } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = [height, height];\n            const columnMeasures = widths;\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n        tree.matrix = extraCellsRemover(tree.matrix, begCellLen, endCellLen);\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        let remainaingAvailWidth;\n        let remainaingWidth;\n        let cWidths = [];\n        let conditions = [];\n        let maxPrioritySpace = 0;\n        const {\n            matrix,\n            width: availableWidth,\n            maxMeasures: maxWidths,\n            maxWidth: currentWidth,\n            height\n        } = measures;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length ? this.primaryMatrix()[0].length : 0;\n\n        const dist = [];\n\n        remainaingAvailWidth = availableWidth;\n        remainaingWidth = currentWidth;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            // divider = Math.min(2, matrixLen);\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            // divider = Math.min(1, matrixLen);\n        }\n        conditions.forEach((i) => {\n            dist[i] = maxWidths[i];\n            maxPrioritySpace += maxWidths[i];\n            remainaingAvailWidth -= dist[i];\n            remainaingWidth -= dist[i];\n        });\n        matrix[0].forEach((e, i) => {\n            if (conditions.indexOf(i) === -1) {\n                dist[i] = remainaingAvailWidth * (maxWidths[i] / remainaingWidth);\n            }\n        });\n        matrix.forEach(row => row.forEach((col, cIdx) => {\n            if (conditions.indexOf(cIdx) === -1) {\n                col.setAvailableSpace(dist[cIdx], height);\n\n                cWidths[cIdx] = Math.max(cWidths[cIdx] || 0, Math.floor(col.getLogicalSpace().width));\n            } else {\n                cWidths[cIdx] = 0;\n            }\n        }));\n\n        const prioritySpace = availableWidth - cWidths.reduce((t, n) => t + n);\n        if (prioritySpace < 0) {\n            cWidths = cWidths.map(() => 0);\n        } else {\n            conditions.forEach((i) => {\n                cWidths[i] = Math.floor(prioritySpace * (dist[i] / maxPrioritySpace || 1));\n            });\n        }\n        return cWidths;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures, heightMeasures) {\n        let i;\n        const { height } = this.availableSpace();\n\n        for (i = 0; i < heightMeasures.length; i++) {\n            if (heightMeasures[i] <= height) break;\n        }\n\n        return Math.min(widthMeasures.length - 1, i);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n        const maxMeasures = this.maxMeasures();\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        const logicalWidths = this.getPriorityDistribution({\n            matrix: this._layoutMatrix,\n            maxWidth,\n            maxMeasures,\n            width,\n            height\n        });\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths, logicalWidths };\n            const measures = this.redistributeViewSpaces(options);\n            maxWidths = measures.maxWidths;\n            maxHeights = measures.maxHeights;\n        });\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let cWidths = [];\n        let rHeights = [];\n        let mHeight = 0;\n        const maxMeasures = this.maxMeasures();\n\n        const {\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        } = this.config();\n        const { matrix, height, maxHeights, maxWidths, logicalWidths } = measures;\n        mHeight = spaceTakenByColumn(matrix, this._lastLevelKey).height;\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        measures.maxMeasures = maxMeasures;\n        measures.maxWidth = maxWidth;\n        if (maxWidth > 0) {\n            cWidths = logicalWidths;\n        } else {\n            cWidths = maxMeasures.map(() => 0);\n        }\n        rHeights = getDistributedHeight({\n            matrix,\n            cIdx: this._lastLevelKey,\n            height: mHeight,\n            availableHeight: height,\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        });\n        if (maxWidths.length > 0) {\n            cWidths = cWidths.map((e, i) => Math.max(e, maxWidths[0][i] || 0));\n        }\n        maxWidths.push(cWidths);\n        for (let x = 0; x < maxWidths.length; x++) {\n            maxWidths[x] = cWidths;\n        }\n        maxHeights.push(rHeights);\n        return { maxWidths, maxHeights };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = maxHeights[matrixIndex][rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth, colHeight - borderWidth);\n\n                if (rIdx === 0 && cIdx < breakPointer) {\n                    columnWidths[0][cIdx] = colWidth;\n                    widths[0] = (widths[0] || 0) + colWidth;\n                } else if (rIdx === 0 && cIdx >= breakPointer) {\n                    columnWidths[1][cIdx - breakPointer] = colWidth;\n                    widths[1] = (widths[1] || 0) + colWidth;\n                }\n                if (cIdx === this._lastLevelKey) {\n                    rowHeights[0][rIdx] = colHeight;\n                    rowHeights[1][rIdx] = colHeight;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    getDistributedWidth,\n    spaceTakenByRow,\n    createMatrixEachLevel,\n    computeLogicalSpace\n  } from '../utils';\nimport { COLUMN_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class ColumnVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = matrix[0].length;\n\n        // Create Tree\n        this._tree = {\n            key: COLUMN_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, true);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height,\n            width\n        } = measures;\n\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i, height };\n            const {\n                heights,\n                rowHeights,\n                columnWidths\n            } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = heights;\n            const columnMeasures = [width, width];\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n\n        tree.matrix = tree.matrix.map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        const {\n            height,\n            maxHeights\n        } = measures;\n        let remainaingHeight = height;\n        let heightDist = [];\n        let conditions = [];\n        let divider = 2;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            divider = 2;\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            divider = 1;\n        }\n        maxHeights.forEach((e, i) => {\n            if (conditions.indexOf(i) === -1) {\n                heightDist[i] = e;\n                remainaingHeight -= e;\n            }\n        });\n        if (remainaingHeight < 0) {\n            heightDist = heightDist.map(() => 0);\n        } else {\n            conditions.forEach((e) => {\n                if (remainaingHeight / divider < maxHeights[e]) {\n                    heightDist[e] = 0;\n                } else {\n                    heightDist[e] = Math.min(maxHeights[e], (remainaingHeight) / divider);\n                }\n            });\n        }\n        return heightDist;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures) {\n        let j;\n        const { width } = this.availableSpace();\n\n        for (j = 0; j < widthMeasures.length; j++) {\n            if (widthMeasures[j] <= width) break;\n        }\n        return Math.min(widthMeasures.length - 1, j);\n    }\n\n     /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths };\n            const maxMeasures = this.redistributeViewSpaces(options);\n            maxWidths = maxMeasures.maxWidths;\n            maxHeights = maxMeasures.maxHeights;\n        });\n\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space column wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let rHeights = [];\n        const {\n            matrix,\n            width,\n            maxHeights,\n            maxWidths\n        } = measures;\n        const borderWidth = this.config().unitMeasures.border;\n\n        const mWidth = spaceTakenByRow(matrix[this._lastLevelKey]).width;\n        const cWidths = getDistributedWidth({\n            row: matrix[this._lastLevelKey],\n            width: mWidth,\n            availableWidth: width\n        }, this.config());\n\n        matrix.forEach((row, rIdx) => row.forEach((col, cIdx) => {\n            const oldLogicalSpace = col.getLogicalSpace();\n\n            col.setAvailableSpace(cWidths[cIdx] - borderWidth, oldLogicalSpace.height);\n            rHeights[rIdx] = Math.max(rHeights[rIdx] || 0, Math.floor(col.getLogicalSpace().height));\n        }));\n        if (maxHeights.length > 0) {\n            rHeights = rHeights.map((e, i) => Math.max(e, maxHeights[0][i]));\n        }\n        maxHeights.push(rHeights);\n        for (let x = 0; x < maxHeights.length; x++) {\n            maxHeights[x] = rHeights;\n        }\n        maxWidths.push(cWidths);\n        return { maxHeights, maxWidths };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, height, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        const heightDistribution = this.getPriorityDistribution({ height, maxHeights: maxHeights[0] || [] });\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = heightDistribution[rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth - borderWidth, colHeight);\n\n                if (cIdx === 0 && rIdx < breakPointer) {\n                    rowHeights[0][rIdx] = colHeight;\n                    heights[0] = (heights[0] || 0) + colHeight;\n                } else if (cIdx === 0 && rIdx >= breakPointer) {\n                    rowHeights[1][rIdx - breakPointer] = colHeight;\n                    heights[1] = (heights[1] || 0) + colHeight;\n                }\n                if (rIdx === this._lastLevelKey) {\n                    columnWidths[0][cIdx] = colWidth;\n                    columnWidths[1][cIdx] = colWidth;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import {\n    HEIGHT, WIDTH, COLUMN, ROW, HORIZONTAL, VERTICAL, HOLISTIC,\n    MAX_WIDTH_AVAIL_FOR_COL_MATRIX, COLUMN_MATRIX, MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX, ROW_MATRIX, SCROLL\n} from '../enums/constants';\n\n/**\n * Gets measurement for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @return {Object} Logical height/width of the matrix\n */\nexport function getMatrixMeasurement (matrix, type) {\n    if (matrix) {\n        return matrix.getLogicalSpace()[type];\n    }\n    return 0;\n}\n\n/**\n * Sets available space for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @param {number} value Value of measurement\n */\nexport function setMatrixMeasurement (matrix, type, value) {\n    if (matrix) {\n        const spaces = matrix.getLogicalSpace();\n        if (value && spaces[type] !== value) {\n            type === HEIGHT ? matrix.setAvailableSpace(spaces.width, value) :\n                matrix.setAvailableSpace(value, spaces.height);\n        }\n    }\n}\n\nconst setAvailableSpace = (matrix, widths, heights) => {\n    matrix.forEach((row, rIdx) => {\n        row.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(widths[cIdx], heights[rIdx]);\n        });\n    });\n};\n\nconst setViewSpaces = (layout, pointerType, viewSpaces) => {\n    let pointer = layout.config()[`${pointerType}Pointer`];\n    if (viewSpaces.length - 1 < pointer) {\n        pointer = 0;\n        layout.config({ [`${pointerType}Pointer`]: pointer });\n    }\n    return pointer;\n};\n\nconst paginationDetailsMap = {\n    column: {\n        maxMeasure: MAX_WIDTH_AVAIL_FOR_COL_MATRIX,\n        matrix: COLUMN_MATRIX,\n        measureType: WIDTH,\n        scrollType: HORIZONTAL\n    },\n    row: {\n        maxMeasure: MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX,\n        matrix: ROW_MATRIX,\n        measureType: HEIGHT,\n        scrollType: VERTICAL\n    }\n};\n\n/**\n * This method provides the required width/height in the different pagination stages.\n * If the pagination is holistic, then only the max width/height will be provided for layouting\n * If scroll is enabled, then the entire width/height shall be provided for layouting\n * Note: width is required for scrolling the columns while height is required for scrolling rows\n *\n *\n * @param {Layout} layout Layout instance required for configuration details\n * @param {Object} measureDetails different measure details for row/column\n * @param {number} maxMeasure maximum width/height present for column/row respectively\n * @return {number} Provides the width/height based on which further calculation can occur\n */\nconst getMatrixMeasureForPagination = (layout, measureDetails, maxMeasure, buffer) => {\n    const {\n        pagination\n    } = layout.config();\n    const {\n        matrix,\n        measureType,\n        scrollType\n    } = measureDetails;\n\n    switch (pagination) {\n    case HOLISTIC:\n        return maxMeasure;\n    default: {\n        const actualMeasure = getMatrixMeasurement(layout[matrix](), measureType) + buffer;\n\n        if (actualMeasure > maxMeasure) {\n            layout.scrollInfo({ [scrollType]: true });\n        }\n        return Math.max(maxMeasure, actualMeasure);\n    }\n    }\n};\n\n/**\n * This method uses the getMatrixMeasureForPagination function to calculate maximum measure\n * depending on the layouting algorithm used\n *\n *\n * @param {Layout} layout Layout instance required for configuration details\n * @param {string} matrixType row/column\n * @param {number} relatedMaxMeasure maximum width/height present for column/row respectively\n * @return {number} Provides the width/height based on which further calculation can occur\n */\nconst paginationMeasureGetter = (layout, matrixType, relatedMaxMeasure, buffer) =>\n    getMatrixMeasureForPagination(layout, paginationDetailsMap[matrixType], relatedMaxMeasure, buffer);\n\nconst getMatrixWidthDetails = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const {\n        width\n    } = layout.measurement();\n    const {\n        border,\n        buffer\n    } = layout.config();\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Get width of row matrix\n    const rowMatrixWidth = getMatrixMeasurement(rowMatrix, WIDTH);\n\n    // Get maximum width allowed for the row matrix\n    const maxRowMatrixWidth = Math.min(rowMatrixWidth + buffer, width / 2);\n\n    // Get maximum width available for the column matrix\n    const maxWidthAvailableForColumnMatrix = width - maxRowMatrixWidth - borderWidth;\n\n    // Set width for column matrix\n    const columnMatrixWidth = paginationMeasureGetter(layout, COLUMN, maxWidthAvailableForColumnMatrix, 0);\n\n    return {\n        rowMatrixWidth,\n        maxRowMatrixWidth,\n        columnMatrixWidth,\n        maxWidthAvailableForColumnMatrix\n    };\n};\n\nconst getHeightRequiredByColMatrix = (layout, columnMatrixWidth) => {\n    const {\n        height\n    } = layout.measurement();\n    const columnMatrix = layout.columnMatrix();\n\n    // Get maximum allowed height for colum matrix\n    const maxColumnMatrixHeight = Math.min(columnMatrix.getLogicalSpace().height, height / 2);\n\n    // Set the computed width and max height to column matrix to determine the actual height\n    // that will be taken by the column matrix\n    columnMatrix.setAvailableSpace(columnMatrixWidth, maxColumnMatrixHeight);\n\n    // Get the set of pages column view\n    const columnViewPages = columnMatrix.getViewableSpaces();\n\n    // Figuring out total space needed by current view space\n    const columnViewSpace = columnViewPages[layout.config().columnPointer];\n\n    // Getting height of column matrix\n    const columnMatrixHeight = columnViewSpace.height.primary + columnViewSpace.height.secondary;\n\n    return {\n        columnMatrixHeight,\n        maxColumnMatrixHeight\n    };\n};\n\nconst getMatrixHeightDetails = (layout, columnMatrixWidth) => {\n    const {\n        height\n    } = layout.measurement();\n    const {\n        buffer\n    } = layout.config();\n\n    // Get actual height required by column matrix\n    const { columnMatrixHeight, maxColumnMatrixHeight } = getHeightRequiredByColMatrix(layout, columnMatrixWidth);\n\n    // Based on column height, compute max height available for row matrix\n    const maxHeightAvailableForRowMatrix = height - Math.min(maxColumnMatrixHeight, columnMatrixHeight);\n\n    // Get height for row matrix\n    const rowMatrixHeight = paginationMeasureGetter(layout, ROW, maxHeightAvailableForRowMatrix, buffer);\n\n    return {\n        columnMatrixHeight,\n        maxColumnMatrixHeight,\n        rowMatrixHeight,\n        maxHeightAvailableForRowMatrix\n    };\n};\n\nconst setValueMatrixMeasurements = (layout, rowViewableSpaces, columnViewableSpaces) => {\n    const centerMatrix = layout.centerMatrix();\n\n    const {\n        border\n    } = layout.config();\n    const matrices = layout.matrices();\n    const {\n        top,\n        bottom\n    } = matrices;\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Get the heights for each cell in the row matrix\n    const rowHeights = [].concat(...rowViewableSpaces.map(e => e.rowHeights.primary));\n\n    // Get the widths for each of the row matrix cells(primary and secondary)\n    const rowWidthsPrimary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.primary));\n    const rowWidthsSecondary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.secondary));\n\n    // Get the widths for each cell in the column matrix\n    const columnWidths = [].concat(...columnViewableSpaces.map(e => e.columnWidths.primary));\n\n    // Get the widths for each of the column matrix cells(primary and secondary)\n    const columnHeightsPrimary = columnViewableSpaces[0].rowHeights.primary;\n    const columnHeightsSecondary = [].concat(...columnViewableSpaces.map(e => e.rowHeights.secondary));\n\n    // Setting the available space for each cell in the centre matrix computed throught the row and\n    // column matrices\n    centerMatrix.forEach((matrix, rIdx) => {\n        matrix.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(columnWidths[cIdx] - borderWidth, rowHeights[rIdx] - borderWidth);\n        });\n    });\n\n    // Set the heights and widths for the corner matrices namely:\n    // TOP_LEFT\n    setAvailableSpace(top[0], rowWidthsPrimary, columnHeightsPrimary);\n    // TOP_RIGHT\n    setAvailableSpace(top[2], rowWidthsSecondary, columnHeightsPrimary);\n    // BOTTOM_LEFT\n    setAvailableSpace(bottom[0], rowWidthsPrimary, columnHeightsSecondary);\n     // BOTTOM_RIGHT\n    setAvailableSpace(bottom[2], rowWidthsSecondary, columnHeightsSecondary);\n};\n\nconst bufferCondition = {\n    isScroll: true,\n    pagination: SCROLL\n};\n\nconst getBufferFromCondition = (layout, type) => {\n    const scrollInfo = layout.scrollInfo();\n    const {\n        pagination\n    } = layout.config();\n\n    const currentBufferType = {\n        pagination,\n        isScroll: scrollInfo[type]\n    };\n\n    return Object.keys(bufferCondition).every(e => bufferCondition[e] === currentBufferType[e]);\n};\n\nconst getActualBufferFromConfig = (layout) => {\n    const {\n        buffer\n    } = layout.config();\n    const [horizontalBuffer, verticalBuffer] = [HORIZONTAL, VERTICAL].map((type) => {\n        if (getBufferFromCondition(layout, type)) {\n            return buffer;\n        }\n        return 0;\n    });\n\n    return {\n        horizontalBuffer,\n        verticalBuffer\n    };\n};\n/**\n * Computes the measurements of space for all matrices in the\n * layout\n *\n * @param {Object} layout Instance of grid layout\n * @return {Object} set of measurements for the layout\n */\nexport const computeLayoutMeasurements = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n\n    // Compute the widths of the row and column matrices\n    const {\n        rowMatrixWidth,\n        maxRowMatrixWidth,\n        maxWidthAvailableForColumnMatrix,\n        columnMatrixWidth\n    } = getMatrixWidthDetails(layout);\n\n    // Compute the heights of the row and column matrices\n    const {\n        columnMatrixHeight,\n        rowMatrixHeight,\n        maxHeightAvailableForRowMatrix\n    } = getMatrixHeightDetails(layout, columnMatrixWidth);\n\n    const {\n        horizontalBuffer,\n        verticalBuffer\n    } = getActualBufferFromConfig(layout);\n    rowMatrix.setAvailableSpace(maxRowMatrixWidth - verticalBuffer, rowMatrixHeight - horizontalBuffer);\n\n    // Get row and columns viewable spaces\n    const rowViewableSpaces = rowMatrix.getViewableSpaces();\n    const columnViewableSpaces = columnMatrix.getViewableSpaces();\n\n    // Set view spaces for row and columns\n    setViewSpaces(layout, ROW, rowViewableSpaces);\n    setViewSpaces(layout, COLUMN, columnViewableSpaces);\n\n    // Set measures for each cell of the value matrix\n    setValueMatrixMeasurements(layout, rowViewableSpaces, columnViewableSpaces);\n\n    return {\n        rowMatrixHeight: rowMatrixHeight - horizontalBuffer,\n        rowMatrixWidth: rowMatrixWidth - verticalBuffer,\n        maxHeightAvailableForRowMatrix: maxHeightAvailableForRowMatrix - horizontalBuffer,\n\n        columnMatrixHeight,\n        columnMatrixWidth,\n        maxWidthAvailableForColumnMatrix\n    };\n};\n","/**\n * Gets view matrices based on current pointers for row and column\n *\n * @param {Object} layout instance of layout\n * @param {number} rowPointer current row pointer\n * @param {number} columnPointer current column pointer\n * @return {Object} returns the view matrix and its relevant information\n */\nexport const getViewMatrices = (layout, rowPointer, columnPointer) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const centerMatrix = layout.centerMatrix();\n    const matrices = layout.matrices();\n    const rowMatrices = rowMatrix.getViewableMatrices();\n    const columnMatrices = columnMatrix.getViewableMatrices();\n    const centralMatrixPointer = {\n        row: 0,\n        column: 0\n    };\n\n    for (let i = rowPointer - 1; i >= 0; i--) {\n        const length = Math.max(rowMatrices[i].primaryMatrix.length,\n            rowMatrices[i].secondaryMatrix.length);\n        centralMatrixPointer.row += length;\n    }\n     /* istanbul ignore next */\n    for (let i = columnPointer - 1; i >= 0; i--) {\n        const matrix = columnMatrices[i];\n        const { primaryMatrix, secondaryMatrix } = matrix;\n        const length = Math.max(primaryMatrix[0] ? primaryMatrix[0].length : 0,\n            secondaryMatrix[0] ? secondaryMatrix[0].length : 0);\n        centralMatrixPointer.column += length;\n    }\n\n    matrices.top[1] = columnMatrices[columnPointer].primaryMatrix;\n    matrices.bottom[1] = columnMatrices[columnPointer].secondaryMatrix;\n\n    matrices.center[0] = rowMatrices[rowPointer].primaryMatrix;\n    matrices.center[2] = rowMatrices[rowPointer].secondaryMatrix;\n\n    const rowMatrixLen = Math.max(matrices.center[0].length, matrices.center[2].length);\n     /* istanbul ignore next */\n    const columnMatrixLen = Math.max(matrices.top[1][0] ? matrices.top[1][0].length : 0, matrices.bottom[1][0] ?\n            matrices.bottom[1][0].length : 0);\n    matrices.center[1] = centerMatrix.slice(centralMatrixPointer.row, centralMatrixPointer.row + rowMatrixLen)\n        .map(matrix => matrix.slice(centralMatrixPointer.column, centralMatrixPointer.column + columnMatrixLen));\n\n    return {\n        matrices,\n        rowPages: rowMatrices.length,\n        columnPages: columnMatrices.length\n    };\n};\n\nconst measureSum = measureArr => measureArr.reduce((total, measure) => total + measure, 0);\n/**\n * Returns measurements of the cells of the current matrix\n *\n * @param {Object} layout instance of layout\n * @return {Object} returns the measurements for current view matrix\n */\nexport const getViewMeasurements = (layout, maxRowHeight, maxColWidth) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const {\n        columnPointer,\n        rowPointer\n    } = layout.config();\n\n    const rowSpaces = rowMatrix.getViewableSpaces()[rowPointer];\n    const colSpaces = columnMatrix.getViewableSpaces()[columnPointer];\n\n    const {\n        rowHeights,\n        width: rowMatrixWidth\n    } = rowSpaces;\n    const {\n        columnWidths,\n        height: columnMatrixHeight\n    } = colSpaces;\n\n    const { primary: leftWidth, secondary: rightWidth } = rowMatrixWidth;\n    const { primary: topHeight, secondary: bottomHeight } = columnMatrixHeight;\n\n    const centerHeight = measureSum(rowHeights.primary);\n    const centerWidth = measureSum(columnWidths.primary);\n    const viewWidth = [leftWidth, Math.min(centerWidth, maxColWidth), rightWidth];\n    const viewHeight = [topHeight, Math.min(centerHeight, maxRowHeight), bottomHeight];\n\n    return {\n        viewWidth,\n        viewHeight,\n        actualCenterMeasures: {\n            height: centerHeight,\n            width: centerWidth\n        },\n        totalMeasures: {\n            width: measureSum(viewWidth),\n            height: measureSum(viewHeight)\n        },\n        unitHeights: rowHeights,\n        unitWidths: columnWidths\n    };\n};\n","/**\n * This file declares a table that can be extended to create a Datagrid, crosstab\n * and man other visualzations that require a tabular structure.\n */\n\nimport { getUniqueId, mergeRecursive } from 'muze-utils';\nimport GenericLayout from '../generic-layout';\nimport { DEFAULT_CONFIGURATION, DEFAULT_MEASUREMENTS } from './defaults';\nimport { generateVisualMatrices } from './layout-helper';\nimport { computeLayoutMeasurements } from './computations';\nimport { getViewMeasurements, getViewMatrices } from './view-info-getter';\n/**\n * This class is used to create a tabular structure that\n * can house charts and values.\n *\n * @class GridLayout\n */\nexport default class GridLayout extends GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} matrices Set of upto 9 matrices containing the cells to be rendered\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config external configurations.\n     * @memberof GenericLayout\n     */\n    constructor (matrices, mountPoint, measurement, config) {\n        super(mountPoint, measurement, config);\n        this.matrices(matrices);\n        this.config(this.constructor.defaultConfig());\n        this._layoutId = getUniqueId();\n        this._viewInfo = this.constructor.defaultViewInfo();\n        this._scrollInfo = { horizontal: false, vertical: false };\n    }\n\n    static defaultViewInfo () {\n        return Object.assign({}, {\n            layoutDimensions: {\n                border: this.defaultConfig().border,\n                viewHeight: [0, 0, 0],\n                viewWidth: [0, 0, 0]\n            },\n            viewMatricesInfo: {\n                columnPages: 0,\n                rowPages: 0,\n                matrices: { top: [], center: [], bottom: [] }\n            }\n        });\n    }\n\n    /**\n     * Returns initial set of measurements for the grid layout\n     *\n     * @static\n     * @return {Object} Returns initial set of measurements\n     * @memberof GridLayout\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENTS;\n    }\n\n    /**\n     * Returns initialconfiguration for grid layout\n     *\n     * @static\n     * @return {Object} Returns initial configuration for grid layout\n     * @memberof GridLayout\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIGURATION;\n    }\n\n    /**\n     * This function is used to return an instance of GridLayout\n     *\n     * @return {GridLayout} Instance of grid layout.\n     * @static\n     * @memberof GridLayout\n     */\n    static create () {\n        return new GridLayout(null, null, this.defaultMeasurement(), this.defaultConfig());\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     *\n     * @param {Array} matrices Set of matrices\n     * @return {Object} Getter/Setter\n     * @memberof GridLayout\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = generateVisualMatrices(this, matrices);\n            return this;\n        }\n        return super.matrices(matrices);\n    }\n\n    /**\n     * Triggers the computations for the layout based on the matrices available\n     * This causes a reflow in the entire layout system.\n     *\n     * @return {Object} Layout instance\n     * @memberof GridLayout\n     */\n    triggerReflow () {\n        this.scrollInfo({ horizontal: false, vertical: false });\n        const {\n            maxHeightAvailableForRowMatrix,\n            maxWidthAvailableForColumnMatrix\n        } = computeLayoutMeasurements(this);\n\n        this.setViewInformation(maxHeightAvailableForRowMatrix, maxWidthAvailableForColumnMatrix);\n        return this;\n    }\n\n    gotoPage (type, pageNumber) {\n        const pageType = type.toLowerCase();\n        const { viewMatricesInfo } = this.viewInfo();\n        const totalPages = viewMatricesInfo[`${pageType}Pages`];\n        const pointer = Math.min(Math.max(1, pageNumber), totalPages);\n        this.config({\n            [`${pageType}Pointer`]: pointer - 1\n        });\n        this.setViewInformation();\n        this.renderGrid();\n        return this;\n    }\n\n    pages (type) {\n        const { viewMatricesInfo } = this.viewInfo();\n        const pageType = type.toLowerCase();\n        return {\n            totalPages: viewMatricesInfo[`${pageType}Pages`],\n            currentPage: this.config()[`${pageType}Pointer`] + 1\n        };\n    }\n\n    viewInfo (...viewInfo) {\n        if (viewInfo.length) {\n            this._viewInfo = viewInfo[0];\n            return this;\n        }\n        return this._viewInfo;\n    }\n\n    scrollInfo (...scrollInfo) {\n        if (scrollInfo.length) {\n            this._scrollInfo = mergeRecursive(this._scrollInfo, scrollInfo[0]);\n            return this;\n        }\n        return this._scrollInfo;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof GridLayout\n     */\n    setViewInformation (maxRowHeight, maxColWidth) {\n        const {\n            rowPointer,\n            columnPointer,\n            border\n        } = this.config();\n        const viewMatricesInfo = getViewMatrices(this, rowPointer, columnPointer);\n        const layoutDimensions = getViewMeasurements(this, maxRowHeight, maxColWidth);\n        layoutDimensions.border = border;\n        this.viewInfo({\n            viewMatricesInfo,\n            layoutDimensions\n        });\n        return this;\n    }\n}\n","import RowMatrix from '../visual-matrix/row-matrix';\nimport ColumnMatrix from '../visual-matrix/column-matrix';\n\nexport const generateVisualMatrices = (context, matrices) => {\n    // Set of matrices for layout is generated starting with the left matrix\n    let leftMatrix = [];\n    let rightMatrix = [];\n    let topMatrix = [];\n    let bottomMatrix = [];\n    let begColCells;\n    let endColCells;\n    const {\n        isRowSizeEqual,\n        isColumnSizeEqual,\n        gutterSpace,\n        distribution,\n        border,\n        breakPage,\n        priority\n    } = context.config();\n    const {\n        minUnitHeight,\n        minUnitWidth\n    } = context.measurement();\n    const { top, center, bottom } = matrices;\n    const [topLeft, topColumns, topRight] = top;\n    const [leftRows, valueMatrix, rightRows] = center;\n    const [bottomLeft, bottomColumns, bottomRight] = bottom;\n\n    if (leftRows.length > 0) {\n        // If no left matrix is present, context will be empty\n        leftMatrix = [...topLeft, ...leftRows, ...bottomLeft];\n    }\n    if (rightRows.length > 0) {\n        // If no right matrix is present, context will be empty\n        rightMatrix = [...topRight, ...rightRows, ...bottomRight];\n    }\n    if (topColumns.length > 0 && topColumns[0].length > 0) {\n        // If no top matrix is present, context will be empty\n        topMatrix = topColumns.map((d, i) => [...topLeft[i], ...d, ...topRight[i]]);\n    }\n    if (bottomColumns.length > 0 && bottomColumns[0].length > 0) {\n        // If no bottom matrix is present, context will be empty\n        bottomMatrix = bottomColumns.map((d, i) => [...bottomLeft[i], ...d, ...bottomRight[i]]);\n    }\n\n    context.rowMatrix(new RowMatrix([leftMatrix, rightMatrix], {\n        isDistributionEqual: isRowSizeEqual,\n        distribution: distribution.rows,\n        gutter: gutterSpace.rows,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.row,\n        breakPage: breakPage.rows.map(e => e + Math.max(topLeft.length, topRight.length)),\n        extraCellLengths: [topLeft.length, bottomLeft.length]\n    }));\n\n    if (topLeft.length > 0) {\n        begColCells = topLeft[0].length;\n    } else {\n        begColCells = bottomLeft.length > 0 ? bottomLeft[0].length : 0;\n    }\n\n    if (topRight.length > 0) {\n        endColCells = topRight[0].length;\n    } else {\n        endColCells = bottomRight.length > 0 ? bottomRight[0].length : 0;\n    }\n\n    context.columnMatrix(new ColumnMatrix([topMatrix, bottomMatrix], {\n        isDistributionEqual: isColumnSizeEqual,\n        distribution: distribution.columns,\n        gutter: gutterSpace.columns,\n        isTransposed: true,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.col,\n        breakPage: breakPage.columns,\n        extraCellLengths: [begColCells, endColCells]\n    }));\n    context.centerMatrix(valueMatrix);\n\n    return matrices;\n};\n","import {\n    TOP, BOTTOM, LEFT, RIGHT, CENTER, BLANK_BORDERS, COLUMN, ROW,\n    VIEW_INDEX, ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX, MIDDLE, NO_BORDERS\n} from '../enums/constants';\n\nconst borderMap = {\n    [`${TOP}-${LEFT}`]: NO_BORDERS,\n    [`${TOP}-${MIDDLE}`]: COLUMN,\n    [`${TOP}-${RIGHT}`]: NO_BORDERS,\n    [`${CENTER}-${LEFT}`]: ROW,\n    [`${CENTER}-${MIDDLE}`]: CENTER,\n    [`${CENTER}-${RIGHT}`]: ROW,\n    [`${BOTTOM}-${LEFT}`]: NO_BORDERS,\n    [`${BOTTOM}-${MIDDLE}`]: COLUMN,\n    [`${BOTTOM}-${RIGHT}`]: NO_BORDERS\n};\n\nconst applySpecificBorder = (cells, color, type, style) => {\n    cells.style(`border-${type}`, `${style} ${color}`);\n};\n\nconst specificBorderApplier = (borderTypes, showBorders, cells, borderInfo) => {\n    const {\n        color,\n        width,\n        style\n    } = borderInfo;\n    const borderStyle = `${width}px ${style}`;\n\n    borderTypes.forEach((borderType) => {\n        applySpecificBorder(cells, showBorders[borderType] ? color : BLANK_BORDERS, borderType, borderStyle);\n    });\n};\n\nconst borderApplier = (cells, borderInfo) => {\n    const {\n       showRowBorders,\n      showColBorders,\n      showValueBorders\n  } = borderInfo;\n    return {\n        row: () => specificBorderApplier([TOP, BOTTOM], showRowBorders, cells, borderInfo),\n        column: () => specificBorderApplier([LEFT, RIGHT], showColBorders, cells, borderInfo),\n        center: () => specificBorderApplier([LEFT, RIGHT, TOP, BOTTOM], showValueBorders, cells, borderInfo)\n    };\n};\n\nexport const applyBorders = (cells, border, row, column) => {\n    const borderApplierFn = borderApplier(cells, border);\n    const borderMapVal = borderMap[`${ROW_MATRIX_INDEX[VIEW_INDEX[row]]}-${COLUMN_MATRIX_INDEX[column]}`];\n    if (borderMapVal) {\n        borderApplierFn[borderMapVal]();\n    }\n};\n","import { selectElement } from 'muze-utils';\nimport {\n     TOP, BOTTOM, ROW_SPAN, COL_SPAN, CENTER, ROW, COLUMN\n} from '../enums/constants';\n\nconst orderMaker = arr => Array.from(Array(arr.length).keys());\n\nconst nestByStack = (stack, updateArr, optionalParams = {}) => {\n    let {\n        order,\n        keyFn\n    } = optionalParams;\n    const arr = updateArr.slice();\n    const currStack = stack.slice();\n    const prevStack = currStack.slice();\n    // Order in which element are to be checked for nesting, default normal looping\n    // Order is always in the order of nest, i.e., left to right\n    order = order || Array.from(Array(arr.length).keys());\n\n    // Key function, if array of objects\n    keyFn = keyFn || (v => v);\n\n    // Return same array if stack is empty\n    if (currStack.length === 0) {\n        const newArr = [];\n        order.forEach((e) => {\n            newArr.push(arr[e]);\n        });\n        return { prevStack, currStack: arr, arr: newArr };\n    }\n\n    let arrVal = '';\n    let stackVal = '';\n    const newArr = [];\n\n    // Loop in order\n    for (let i = order.length - 1; i >= 0; i--) {\n        // Get current element index from the order given\n        const currElemIndex = order[i];\n\n        // Crete a hashmap for the hierarchy by joining strings of the array for both stack and input array\n        arrVal += keyFn(arr[currElemIndex]);\n        stackVal += keyFn(currStack[currElemIndex]);\n\n        // If the current value and value in stack is same, convert it to null\n        if (arrVal === stackVal) {\n            newArr[currElemIndex] = null;\n        } else {\n            stackVal = '';\n            // Loop from the current index in order to the last element in order to change the\n            // whole hierarchy\n            for (let j = i; j < order.length; j++) {\n                const newElem = order[j];\n                const arrElem = arr[newElem];\n\n                newArr[newElem] = arrElem;\n\n                // Reset stack to new stack\n                currStack[newElem] = arrElem;\n                stackVal = arrVal;\n            }\n        }\n    }\n    const returnArr = [];\n    order.forEach((e) => {\n        returnArr.push(newArr[e]);\n    });\n    return { prevStack, currStack, arr: returnArr };\n};\n\nconst spanCalculator = (colData, colIdx, matrix, rIdx) => {\n    // if data is not header cell then rowspan\n    // has to be 1\n    if (!colData) {\n        return () => 1;\n    }\n\n    const conditions = {\n        row: count => matrix[rIdx + count] && matrix[rIdx + count][colIdx],\n        column: count => matrix[rIdx][colIdx + count]\n    };\n\n    return (type) => {\n        let count = 1;\n        let isNull = false;\n\n        while (!isNull) {\n            if (conditions[type](count) === null) {\n                count += 1;\n            } else {\n                isNull = true;\n            }\n        }\n        return count;\n    };\n};\n\nconst maskCreator = (matrix, order) => ({\n    row: () => {\n        let stack = [];\n        return matrix.map((e) => {\n            const {\n                    currStack,\n                    arr\n                } = nestByStack(stack, e, { keyFn: val => val.valueOf(), order });\n\n            stack = currStack;\n            return arr;\n        });\n    },\n    column: () => {\n        let stack = [];\n        const viewMatrix = [];\n        matrix.length && matrix[0].forEach((cell, colIndex) => {\n            const hierarchy = [];\n            matrix.forEach((row) => {\n                hierarchy.push(row[colIndex]);\n            });\n            const {\n                    currStack,\n                    arr\n                } = nestByStack(stack, hierarchy, { keyFn: val => val.valueOf(), order });\n            stack = currStack;\n\n            matrix.forEach((row, rowIndex) => {\n                viewMatrix[rowIndex] = viewMatrix[rowIndex] || [];\n                viewMatrix[rowIndex][colIndex] = arr[rowIndex];\n            });\n        });\n        return viewMatrix;\n    }\n});\n\nconst spanGenerator = viewMatrix => ({\n    row: () => {\n        const spans = [];\n        viewMatrix.forEach((row, ridx) => {\n            spans[ridx] = spans[ridx] || [];\n            row.forEach((col, i) => {\n                if (viewMatrix[ridx][i]) {\n                    const currSpan = spanCalculator(col, i, viewMatrix, ridx)('row');\n                    currSpan && spans[ridx].push(currSpan);\n                }\n            });\n        });\n        return spans;\n    },\n    column: () => viewMatrix.map((row, ridx) => row.map((col, i) => spanCalculator(col, i, viewMatrix, ridx)('column'))\n                    .filter(col => col !== 1))\n});\n\nconst getOrder = isReverse => ({\n    row: (matrix) => {\n        if (isReverse) {\n            return orderMaker(matrix[0]).reverse();\n        }\n        return orderMaker(matrix[0]);\n    },\n    column: (matrix) => {\n        if (isReverse) {\n            return orderMaker(matrix).reverse();\n        }\n        return orderMaker(matrix);\n    }\n});\n\nconst matrixSpanGeneratorMap = {\n    [`${TOP}-1`]: {\n        orderGetter: getOrder(false)[COLUMN],\n        viewMatrixMaker: (...params) => maskCreator(...params)[COLUMN],\n        spanMaker: (...params) => spanGenerator(...params)[COLUMN]\n    },\n    [`${BOTTOM}-1`]: {\n        orderGetter: getOrder(true)[COLUMN],\n        viewMatrixMaker: (...params) => maskCreator(...params)[COLUMN],\n        spanMaker: (...params) => spanGenerator(...params)[COLUMN]\n    },\n    [`${CENTER}-0`]: {\n        orderGetter: getOrder(false)[ROW],\n        viewMatrixMaker: (...params) => maskCreator(...params)[ROW],\n        spanMaker: (...params) => spanGenerator(...params)[ROW]\n    },\n    [`${CENTER}-2`]: {\n        orderGetter: getOrder(true)[ROW],\n        viewMatrixMaker: (...params) => maskCreator(...params)[ROW],\n        spanMaker: (...params) => spanGenerator(...params)[ROW]\n    }\n};\n\nconst matrixSpanGenerator = (type) => {\n    const generator = matrixSpanGeneratorMap[type];\n    if (generator) {\n        return generator;\n    }\n    return {\n        orderGetter: () => null,\n        viewMatrixMaker: matrix => () => matrix,\n        spanMaker: () => () => null\n    };\n};\n\n/**\n * This function is used to set the col and row spans\n * for the matrices based on repeated/hierarchichal data\n *\n * @export\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {string} type Type of array (center, top, bottom)\n * @param {number} index Index of array in the row\n * @return {Object} containing the view matrix and their spans\n */\nexport function cellSpanMaker (matrix, type, index) {\n    let spans = null;\n    let viewMatrix = matrix;\n    const {\n        orderGetter,\n        viewMatrixMaker,\n        spanMaker\n    } = matrixSpanGenerator(`${type}-${index}`);\n\n    if (matrix.length) {\n        const order = orderGetter(matrix);\n        viewMatrix = viewMatrixMaker(matrix, order)();\n        spans = spanMaker(viewMatrix)();\n    }\n    return { viewMatrix, spans };\n}\n\nconst spaceAllocationDueToSpan = (span, placeholder, borderWidth) => {\n    const height = placeholder.availHeight();\n    const width = placeholder.availWidth();\n\n    return {\n        [ROW_SPAN] () {\n            selectElement(this).style('height', `${height + borderWidth}px`);\n            if (span > 1) {\n                selectElement(this).style('height', `${height * span + borderWidth * (span)}px`);\n                placeholder.setAvailableSpace(width, height * span);\n            }\n        },\n        [COL_SPAN] () {\n            if (span > 1) {\n                placeholder.setAvailableSpace(width * span + borderWidth * (span - 1), height);\n            }\n            selectElement(this).style('height', `${height}px`);\n        }\n    };\n};\n\nconst spanApplier = (cells, spans, config, type) => {\n    const borderWidth = config.border.width;\n\n    cells.attr(type, function (cell, colIndex) {\n        const span = spans[cell.rowIndex][colIndex];\n        const placeholder = cell.placeholder;\n\n        spaceAllocationDueToSpan(span, placeholder, borderWidth)[type].bind(this)();\n        return span;\n    });\n};\n\nconst spanApplierMap = {\n    [`${TOP}-0`]: null,\n    [`${TOP}-1`]: (...params) => spanApplier(...params, COL_SPAN),\n    [`${TOP}-2`]: null,\n    [`${CENTER}-0`]: (...params) => spanApplier(...params, ROW_SPAN),\n    [`${CENTER}-1`]: null,\n    [`${CENTER}-2`]: (...params) => spanApplier(...params, ROW_SPAN),\n    [`${BOTTOM}-0`]: null,\n    [`${BOTTOM}-1`]: (...params) => spanApplier(...params, COL_SPAN),\n    [`${BOTTOM}-2`]: null\n};\n\nexport const applySpans = (cells, spans, config, type) => {\n    const applier = spanApplierMap[type];\n    if (applier) {\n        applier(cells, spans, config);\n    }\n};\n","import { ERROR_MSG } from 'muze-utils';\n/**\n * An Interface to be implemented if the transaction support is necessary. This class ensures reactivity to\n * global properties.\n */\nexport default class TransactionSupport {\n    /**\n     * Property accessor for data member of the class. Data is passed to the system by calling this method.\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for width of the class. Width is passed as an integer.\n     */\n    width () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for height of the class. Height is passed as an integer.\n     */\n    height () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for config of the class. Config is passed as an object.\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n}\n","import { TOP, BOTTOM, LEFT, TITLE, SUB_TITLE, GROUP, LAYOUT, LEGEND } from '../constants';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const arrangeComponents = (context) => {\n    const legendConfig = context.config().legend;\n    const titleConfig = context.title()[1];\n    const subtitleConfig = context.subtitle()[1];\n    const titleLayouts = {\n        [`${TOP}-${TOP}`]: [TITLE, SUB_TITLE, GROUP],\n        [`${BOTTOM}-${BOTTOM}`]: [GROUP, SUB_TITLE, TITLE],\n        [`${TOP}-${BOTTOM}`]: [TITLE, GROUP, SUB_TITLE],\n        [`${BOTTOM}-${TOP}`]: [SUB_TITLE, GROUP, TITLE]\n    };\n    const legendLayouts = [\n        [LEGEND, LAYOUT],\n        [LAYOUT, LEGEND]\n    ];\n    const titlePosition = titleConfig.position || TOP;\n    const subtitlePosition = subtitleConfig.position || TOP;\n\n    return {\n        headers: titleLayouts[`${titlePosition}-${subtitlePosition}`],\n        legends: legendConfig.position === LEFT || legendConfig.position === TOP ?\n        legendLayouts[0] : legendLayouts[1]\n    };\n};\n","/**\n * Flag to specify whether direction is vertical.\n */\nexport const MARGIN = 'margin';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const SPACE_FIXER = 'spaceFixer';\nexport const CLASSPREFIX = 'muze';\nexport const VERTICAL_ALIGN = 'verticalAlign';\nexport const TEXT_ALIGN = 'textAlign';\nexport const IS_OFFSET = 'isOffset';\nexport const MIDDLE = 'middle';\nexport const BASELINE = 'baseline';\nexport const SHOW = 'show';\nexport const CENTER = 'center';\nexport const TEXT = 'text';\nexport const HEADER = 'header';\nexport const HEIGHT = 'height';\nexport const WIDTH = 'width';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const FIELDS = 'fields';\nexport const TRANSFORM = 'transform';\nexport const LAYER_DEF = 'layerDef';\nexport const CONFIG = 'config';\nexport const DETAIL_FIELDS = 'detailFields';\nexport const MAX_LINES = 'maxLines';\nexport const MIN_CHARS = 'minCharacters';\nexport const ROTATION = 'rotation';\n\nexport const TEXT_CELL = 'text-cell';\nexport const AXIS_CELL = 'axis-cell';\nexport const GEOM_CELL = 'geom-cell';\nexport const BLANK_CELL = 'blank-cell';\n","// eneum to refer to simple cell\nexport const SIMPLE = 'simple';\n// eneum to refer to header cell\nexport const TEXT = 'text';\n// enum to refer to axis cell\nexport const AXIS = 'axis';\n// enum to refer to visual cell\nexport const GEOM = 'geom';\n// enum to refer blank cell\nexport const BLANK = 'blank';\n","import {\n    ERROR_MSG,\n    getUniqueId,\n    mergeRecursive\n} from 'muze-utils';\nimport { SIMPLE } from './enums/cell-type';\n\n/**\n * This file declares a class that is used as an interface to create new\n * SimpleCell elements.\n * @module SimpleCell\n */\n/**\n * Base class for all table cells.\n *\n * @interface\n * @class SimpleCell\n */\nclass SimpleCell {\n\n    /**\n     * Creates an instance of SimpleCell.\n     *\n     * @param {*} config The input configuration.\n     * @memberof SimpleCell\n     */\n    constructor (config) {\n        this._id = getUniqueId();\n\n        const defConfig = mergeRecursive({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(defConfig, config || {});\n\n        this._mount = null;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     */\n    get type () {\n        return SIMPLE;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     * @return {Object} Default config for the placeholder\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the value contained by the SimpleCell.\n     *\n     * @memberof SimpleCell\n     */\n    valueOf () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a unique identifier for the instance used\n     * to control selective rendering.\n     *\n     * @memberof SimpleCell\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized representation of the instance.\n     *\n     * @memberof SimpleCell\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns an object with width and height fields\n     * specifying the space taken up by this metod.\n     *\n     * @memberof SimpleCell\n     */\n    getLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Method used to set the space available to render the SimpleCell\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @memberof SimpleCell\n     */\n    setAvailableSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    remove () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n}\n\nexport default SimpleCell;\n","/**\n * This file exports variables that are used as defaults for\n * the placeholders\n */\nimport * as CONSTANTS from './constants';\n\n /**\n * Default Configuration for the cells\n * @return {Object} Default configuration\n */\nexport const DEFAULT_CONFIG = {\n    [CONSTANTS.MARGIN]: {\n        [CONSTANTS.LEFT]: 0,\n        [CONSTANTS.RIGHT]: 0,\n        [CONSTANTS.TOP]: 0,\n        [CONSTANTS.BOTTOM]: 0\n    },\n    [CONSTANTS.SPACE_FIXER]: 2,\n    [CONSTANTS.IS_OFFSET]: false,\n    [CONSTANTS.VERTICAL_ALIGN]: null,\n    [CONSTANTS.TEXT_ALIGN]: CONSTANTS.CENTER,\n    [CONSTANTS.SHOW]: true,\n    [CONSTANTS.MAX_LINES]: 0,\n    [CONSTANTS.MIN_CHARS]: 0,\n    [CONSTANTS.ROTATION]: null\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { GEOM, TEXT, AXIS, BLANK } from './enums/cell-type';\n\nconst DEFAULT_PROPS = {\n    mount: {},\n    availHeight: {},\n    availWidth: {},\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config, value)\n    },\n    logicalSpace: {},\n    minSpacing: {},\n    source: {}\n};\n\nconst geomProps = {\n    data: {},\n    caption: {},\n    config: {},\n    axes: {\n        sanitization: (context, value) => Object.assign(context._axes, value)\n    },\n    facetByFields: {},\n    fields: {},\n    transform: {},\n    layerDef: {},\n    detailFields: {}\n};\n\nconst textProps = {\n    smartText: {}\n};\nexport const PROPS = {\n    [GEOM]: mergeRecursive(geomProps, DEFAULT_PROPS),\n    [TEXT]: mergeRecursive(textProps, DEFAULT_PROPS),\n    [AXIS]: DEFAULT_PROPS,\n    [BLANK]: DEFAULT_PROPS\n};\n","/**\n * This file declares a class that represents a table cell\n * used to house an axis.\n * @module VisualCell\n */\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport { CLASSPREFIX, HEIGHT, WIDTH, AXIS_CELL } from './enums/constants';\nimport SimpleCell from './simple-cell';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { AXIS } from './enums/cell-type';\nimport { PROPS } from './props';\n\n/**\n * Computes the logical space of the an axis instance within an axis cell\n *\n * @param {Object} context Required to get the needed parameters to compute axis space\n * @return {Object} Returns the logical space for axis\n */\nconst computeAxisSpace = (context) => {\n    let logicalWidth;\n    let logicalHeight;\n    const axis = context.source();\n    const {\n        spaceFixer,\n        margin\n    } = context.config();\n    const {\n        width,\n        height\n    } = axis.getLogicalSpace();\n    const {\n            show\n        } = axis.config();\n    if (show === true) {\n        logicalHeight = Math.floor(height + margin.top + margin.bottom + spaceFixer);\n        logicalWidth = Math.floor(width + margin.left + margin.right + spaceFixer);\n    } else {\n        [logicalWidth, logicalHeight] = [width, height];\n    }\n    return {\n        width: logicalWidth,\n        height: logicalHeight\n    };\n};\n\n/**\n * Represents an axis cell.\n *\n * @class Axis\n */\nclass AxisCell extends SimpleCell {\n\n    /**\n     * Creates an instance of AxisCell.\n     *\n     * @param {Object} config The input config.\n     * @memberof AxisCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._axis = null;\n        this._availHeight = null;\n        this._availWidth = null;\n        this._logicalSpace = null;\n\n        generateGetterSetters(this, PROPS[AXIS]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof AxisCell\n     */\n    get type () {\n        return AXIS;\n    }\n\n    /**\n     * This method return the value conatined by this SimpleCell.\n     *\n     * @return {SimpleAxis | ColorAxis} Instance of SimpleAxis or ColorAxis.\n     * @memberof AxisCell\n     */\n    valueOf () {\n        return this.source().id;\n    }\n\n    /**\n     * This method return the unique identififer of the axis\n     *\n     * @return {string} Id of the axis.\n     * @memberof AxisCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Retrns the serialized representation of this cell.\n     *\n     * @return {Object}Object with serializable props.\n     * @memberof AxisCell\n     */\n    serialize () {\n        return {\n            type: AXIS,\n            axis: this.source().serialize()\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof AxisCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * return the space taken up by an axis element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof AxisCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeAxisSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @return {Instance} Returns current Instance\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        const {\n            margin,\n            isOffset\n        } = this.config();\n\n        if (width || height) {\n            this.source().setAvailableSpace(width, height, margin, isOffset);\n            this.source().logicalSpace(null);\n        } else {\n            this.source().resetLogicalSpace();\n        }\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the axis inside the axis cell.\n     *\n     * @param {HTMLElement} mount The mount point.\n     * @return {Selection} node where axis mounted\n     * @memberof AxisCell\n     */\n    /* istanbul ignore next */render (mount) {\n        if (!mount) {\n            return this;\n        }\n        const axis = this.source();\n        const availHeight = this.availHeight();\n        const availWidth = this.availWidth();\n        const {\n            margin\n        } = this.config();\n        const {\n            top,\n            bottom,\n            left,\n            right\n        } = margin;\n        const {\n            show,\n            orientation\n        } = axis.config();\n        const wrapperDiv = makeElement(selectElement(mount), 'div', [this], `${CLASSPREFIX}-${AXIS_CELL}`);\n        const selection = makeElement(wrapperDiv, 'svg', [1], `${CLASSPREFIX}-axis-container`);\n        selection.classed(`${CLASSPREFIX}-axis-container-${orientation}`, true);\n\n        this.mount(mount);\n        if (!availWidth) {\n            selection.attr(WIDTH, `${0}px`);\n        }\n        if (!availHeight) {\n            selection.attr(HEIGHT, `${0}px`);\n        }\n        wrapperDiv.style(WIDTH, `${show ? Math.floor(availWidth) : 0}px`)\n                        .style(HEIGHT, `${show ? Math.floor(availHeight) : 0}px`)\n                        .style('margin-top', top)\n                        .style('margin-bottom', bottom)\n                        .style('margin-left', left)\n                        .style('margin-right', right);\n\n        axis.mount(selection.node());\n        return selection;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Current instance of AxisCell\n     * @memberof AxisCell\n     */\n    remove () {\n        this.source() && this.source().remove();\n        this.mount() && this.mount().remove();\n        return this;\n    }\n}\n\nexport default AxisCell;\n\n","/**\n * This file declares a class that represents a BLANK element in a  table.\n * @module VisualCell\n */\nimport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    generateGetterSetters\n    } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { CLASSPREFIX, BLANK_CELL } from './enums/constants';\nimport { BLANK } from './enums/cell-type';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { PROPS } from './props';\n\n/**\n * Represents a table haeder.\n *\n * @class BLANK\n */\nclass BlankCell extends SimpleCell {\n\n    /**\n     * Creates an instance of BLANK.\n     * @param {Object} config The input configuration.\n     * @memberof BLANK\n     */\n    constructor (config) {\n        super(config);\n\n        generateGetterSetters(this, PROPS[BLANK]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof BlankCell\n     */\n    get type () {\n        return BLANK;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof BlankCell\n     */\n    valueOf () {\n        return this.id;\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof BlankCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the BLANK cell.\n     *\n     * @return {string} The unique identifier for the BLANK.\n     * @memberof BlankCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof BLANK\n     */\n    serialize () {\n        return {\n            type: BLANK\n        };\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof BLANK\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            return {\n                width: this.width || 0,\n                height: this.height || 0\n            };\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the BLANK cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof BLANK\n     */\n    /* istanbul ignore next */render (mount) {\n        if (mount) {\n            const { style } = this.config();\n            // append span element to mount point\n            this.mount(mount);\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id]);\n            elem.classed(`${CLASSPREFIX}-${BLANK_CELL}`, true);\n            elem.style('width', `${this.availWidth()}px`);\n            elem.style('height', `${this.availHeight()}px`);\n            elem.html('');\n            // apply style on the returned element\n            if (style) {\n                applyStyle(elem, style);\n            }\n        } return this;\n    }\n\n    /**\n     * Removes the cell(Disposal)\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n }\nexport default BlankCell;\n","/**\n * This file declares a class that represents a Text element in a  table.\n * @module VisualCell\n */\n\nimport {\n    selectElement,\n    makeElement,\n    getSmartComputedStyle,\n    generateGetterSetters\n} from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { TEXT } from './enums/cell-type';\nimport { PROPS } from './props';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { CLASSPREFIX, TOP, BOTTOM, LEFT, RIGHT, HEADER, WIDTH, TEXT_CELL } from './enums/constants';\nimport './text-cell.scss';\n\nconst setSmartText = (context) => {\n    const source = context.source();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       rotation\n   } = context.config();\n    const {\n        left,\n        right,\n        top,\n        bottom\n     } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const labelManager = context.dependencies().labelManager;\n\n    labelManager.setStyle(context._computedStyle);\n\n    !rotation && context.smartText(labelManager.getSmartText(source, availWidth, availHeight, false));\n    rotation && context.smartText(labelManager.getSmartText(source, availHeight, availWidth, true));\n\n    return context;\n};\n\n/**\n* Computes the Logical Space for the text\n*\n* @param {Object} context Required to get the needed parameters to compute text space\n* @return {Object} Logical space taken up by text\n* @memberof TextCell\n*/\nconst computeTextSpace = (context) => {\n    const { labelManager } = context.dependencies();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       show,\n       maxLines,\n       minCharacters\n   } = context.config();\n    const {\n       left,\n       right,\n       top,\n       bottom\n    } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const source = context.source();\n    const space = context.smartText();\n    const minText = new Array(minCharacters).fill('W').join('');\n    const _minTextSpace = labelManager.getOriSize(minText);\n\n    context.config({ rotation: false });\n    if (space.width > (availWidth || 0) && maxLines) {\n        space.height = space.oriTextHeight * maxLines;\n    }\n    if (availWidth && availWidth < space.width) {\n        space.width = _minTextSpace.width;\n    }\n    if (availWidth && availWidth < Math.min(_minTextSpace.width, space.oriTextWidth)) {\n        const smartSpace = labelManager.getSmartText(source, availHeight, _minTextSpace.height, true);\n        space.width = smartSpace.height;\n        space.height = smartSpace.width;\n        context.config({ rotation: true });\n        context.smartText(smartSpace);\n    }\n\n    if (show) {\n        return {\n            width: Math.ceil(space.width) + paddedWidth,\n            height: Math.ceil(space.height) + paddedHeight\n        };\n    } return {\n        width: 0,\n        height: 0\n    };\n};\n\n/**\n * Represents a table haeder.\n *\n * @class Text\n */\nclass TextCell extends SimpleCell {\n\n    /**\n     * Creates an instance of Text.\n     * @param {Object} config The input configuration.\n     * @param {string} dependencies Dependencies for the class(labelManager)\n     * @memberof Text\n     */\n    constructor (config, dependencies) {\n        super(config);\n\n        this._dependencies = dependencies;\n        this._className = this._config.className ||\n                    (this._config.type === HEADER ? `${CLASSPREFIX}-${HEADER}-cell` : `${CLASSPREFIX}-${TEXT}-cell`);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'), this._className);\n        this._dependencies.labelManager.setStyle(this._computedStyle);\n        generateGetterSetters(this, PROPS[TEXT]);\n        const space = this._dependencies.labelManager.getOriSize('w');\n        this.minSpacing({ width: Math.floor(space.width * 3 / 4), height: Math.floor(space.height / 2) });\n        setSmartText(this);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof TextCell\n     */\n    get type () {\n        return TEXT;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof TextCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the Text cell.\n     *\n     * @return {string} The unique identifier for the Text.\n     * @memberof TextCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the dependencies of the instance\n     *\n     * @return {Object} Dependencies needed by the class\n     * @memberof TextCell\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof TextCell\n     */\n    serialize () {\n        return {\n            text: this.source(),\n            type: TEXT\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof TextCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof Text\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeTextSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        setSmartText(this);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the Text cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof Text\n     */\n    render (mount) {\n        const availWidth = this.availWidth();\n        const availHeight = this.availHeight();\n        const {\n            margin,\n            show,\n            verticalAlign,\n            textAlign,\n            rotation\n        } = this.config();\n\n        this.mount(mount);\n        if (show) {\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id], `${CLASSPREFIX}-${TEXT_CELL}`);\n            const vAlign = verticalAlign || rotation ? 'middle' : 'top';\n            const {\n                width,\n                height\n            } = this.smartText();\n            const {\n                height: minHeightSpace\n            } = this.minSpacing();\n            const translation = {\n                top: width + minHeightSpace / 2,\n                middle: width / 2 + minHeightSpace,\n                bottom: minHeightSpace\n            };\n\n            container.style('vertical-align', vAlign);\n\n            // Set class name\n            elem.classed(this._className, true);\n\n            // Apply styles\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            elem.style('transform', rotation ? `translate(${height / 2}px,\n                ${translation[vAlign]}px) rotate(-90deg)` : '');\n            elem.style(WIDTH, availWidth ? `${availWidth}px` : '100%');\n            [TOP, BOTTOM, LEFT, RIGHT].forEach((type) => {\n                container.style(`margin-${type}`, `${margin[type]}px`);\n            });\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            // set the text as the innerHTML\n            this._dependencies.labelManager.setStyle(this._computedStyle);\n            elem.html(this._dependencies.labelManager.getSmartText(this.source(), availWidth, availHeight, true).text);\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n }\n\nexport default TextCell;\n","/**\n * This file declares a class that is used to represent a table cell\n * that houses a visual unit.\n * @module VisualCell\n */\n\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { GEOM } from './enums/cell-type';\nimport { PROPS } from './props';\nimport {\n    CLASSPREFIX, HEIGHT, WIDTH, DATA, AXES, FACET_BY_FIELDS, FIELDS, TRANSFORM, LAYER_DEF, CONFIG, GEOM_CELL,\n    DETAIL_FIELDS\n} from './enums/constants';\nimport { DEFAULT_CONFIG } from './enums/defaults';\n\n/**\n * Calculates the logical space of the cell\n *\n * @param {Object} context Required to get the needed parameters to compute unit space\n * @return {Object} Logical space taken up by the unit\n * @memberof GeomCell\n */\nconst computeGeomSpace = (context) => {\n    const config = context.source().config();\n    const { width, height } = config;\n    return {\n        width: Math.ceil(width),\n        height: Math.ceil(height + context.getCaptionSpace().height)\n    };\n};\n\n /**\n * This class represents a SimpleCell for visual unit.\n *\n * @class GeomCell\n */\nclass GeomCell extends SimpleCell {\n\n    /**\n     * Creates an instance of GeomCell.\n     * @param {Object} config The input configuration.\n     * @memberof GeomCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._unit = null;\n        this._layers = null;\n        this._axes = {};\n        this._datamodel = {};\n        this._facetByFields = {};\n        this._fields = null;\n        this._transform = null;\n        this._caption = null;\n\n        generateGetterSetters(this, PROPS[GEOM]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof GeomCell\n     */\n    get type () {\n        return GEOM;\n    }\n\n    /**\n     * This method return the value contained by this cell.\n     *\n     * @return {VisualUnit} Instance of visual unit contained by visual unit.\n     * @memberof GeomCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return the id of the\n     * visual unit housed by this cell.\n     *\n     * @return {string} The unique id of the visual unit.\n     * @memberof GeomCell\n     */\n    get id () {\n        return this.source().id();\n    }\n\n    /**\n     * This method return a serialized representation of\n     * this instance.\n     *\n     * @return {Object} Object with serializable props.\n     * @memberof GeomCell\n     */\n    serialize () {\n        return {\n            type: GEOM,\n            unit: this.source().serialize(),\n            caption: this.caption()\n        };\n    }\n\n    /**\n     * return the default configuration for the geom cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof GeomCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * Updates the model based on the changed parameters\n     *\n     * @return {Instance} return instance\n     * @memberof GeomCell\n     */\n    updateModel () {\n        const unit = this.source();\n        unit.lockModel();\n        [LAYER_DEF, TRANSFORM, AXES, FIELDS, CONFIG, DATA, AXES, FACET_BY_FIELDS, DETAIL_FIELDS].forEach((prop) => {\n            this[prop]() && unit[prop](this[prop]());\n        });\n        unit.unlockModel();\n        return this;\n    }\n\n    /**\n     * It gives the space taken by the caption of the unit\n     *\n     * @return {Object} return the space taken by caption\n     * @memberof GeomCell\n     */\n    getCaptionSpace () {\n        const caption = this.caption();\n\n        let captionSpace = { width: 0, height: 0 };\n        if (caption) {\n            captionSpace = caption.getLogicalSpace();\n        }\n        return captionSpace;\n    }\n\n    /**\n     * return the space taken up by the element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof GeomCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeGeomSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space available to\n     * render the SimpleCell.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    setAvailableSpace (width, height) {\n        const unit = this.source();\n\n        this.availWidth(width);\n        this.availHeight(height);\n        unit.lockModel();\n        unit.width(width).height(height - this.getCaptionSpace().height);\n        unit.unlockModel();\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * his method is used to render the visual unit inside the provided cell.\n     *\n     * @param {HTMLElement} mount The mountpoint in the table.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    render (mount) {\n        if (mount) {\n            this.mount(mount);\n            const availHeight = this.availHeight();\n            const availWidth = this.availWidth();\n            const caption = this.caption();\n            const wrapperDiv = makeElement(selectElement(mount), 'div', [1], `${CLASSPREFIX}-${GEOM_CELL}`);\n\n            if (caption) {\n                const captionDom = makeElement(wrapperDiv, 'div', [caption], `${CLASSPREFIX}-unit-caption`).node();\n                caption.render(captionDom);\n            }\n            const selection = makeElement(wrapperDiv, 'div', [1], `${CLASSPREFIX}-unit`);\n            wrapperDiv.style(WIDTH, `${availWidth}px`).style(HEIGHT, `${availHeight}px`);\n            selection.style(WIDTH, `${availWidth}px`)\n                            .style(HEIGHT, `${availHeight - this.getCaptionSpace().height}px`);\n            this.source().mount(selection.node());\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Object} Current instance\n     * @memberof GeomCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        this.source().remove();\n        return this;\n    }\n}\n\nexport default GeomCell;\n","import AxisCell from './axis-cell';\nimport BlankCell from './blank-cell';\nimport TextCell from './text-cell';\nimport GeomCell from './geom-cell';\nimport SimpleCell from './simple-cell';\n\nimport * as CONSTANTS from './constants';\n\nexport const DEFAULT_PLACEHOLDERS = {\n    [CONSTANTS.SIMPLE_CELL]: SimpleCell,\n    [CONSTANTS.TEXT_CELL]: TextCell,\n    [CONSTANTS.AXIS_CELL]: AxisCell,\n    [CONSTANTS.GEOM_CELL]: GeomCell,\n    [CONSTANTS.BLANK_CELL]: BlankCell\n};\n\n","export const SIMPLE_CELL = 'SimpleCell';\nexport const TEXT_CELL = 'TextCell';\nexport const AXIS_CELL = 'AxisCell';\nexport const BLANK_CELL = 'BlankCell';\nexport const GEOM_CELL = 'GeomCell';\n\n","import { DEFAULT_PLACEHOLDERS } from './defaults';\n\n/**\n * Creates a registry for the cells, which can be used for\n * setting a new cell or getting the registered cells\n *\n * @return {Object} Setters and getters for registered cells\n */\nconst cellRegistry = () => {\n    const reg = DEFAULT_PLACEHOLDERS;\n    return {\n        set: (key, def) => {\n            if (key in reg) {\n                reg[key] = def;\n            }\n            return cellRegistry;\n        },\n        get: () => reg\n    };\n};\nexport default cellRegistry;\n","import { TextCell } from '@chartshq/visual-cell';\nimport { escapeHTML } from 'muze-utils';\nimport { TOP } from '../constants';\n\n/**\n *\n *\n * @param {*} rawContent\n *\n */\nconst resolveTitleSubTitleContent = (rawContent) => {\n    if (typeof rawContent === 'function' && !rawContent._sanitize) {\n        return rawContent();\n    }\n    return escapeHTML(rawContent());\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} cellType\n * @param {*} labelManager\n * @param {*} prevCell\n *\n */\nconst headerCreator = (config, cellType, labelManager, prevCell) => {\n    let margin = {};\n    const {\n        content,\n        classPrefix,\n        maxLines\n    } = config;\n    const cell = prevCell || new TextCell(\n        {\n            type: cellType === 'title' ? 'header' : 'text',\n            className: `${classPrefix}-${cellType}-cell`\n        }, {\n            labelManager\n        })\n     .config({ maxLines }).minSpacing({ width: 0, height: 0 });\n\n    cell.source(content);\n    cell._minTickDiff = { height: 0, width: 0 };\n\n    if (config.position === TOP) {\n        margin = { top: 0, bottom: config.padding };\n    } else {\n        margin = { top: config.padding, bottom: 0 };\n    }\n    cell.config({ margin });\n\n    return {\n        height: cell.getLogicalSpace().height,\n        cell\n    };\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} type\n * @param {*} labelManager\n * @param {*} cell\n *\n */\nconst createHeading = (config, type, labelManager, prevCell) => {\n    if (!config) { return ''; }\n\n    return headerCreator(\n        config,\n        type,\n        labelManager,\n        prevCell\n    );\n};\n\n/**\n *\n *\n * @param {*} context\n */\nexport const createHeaders = (context, canvasHeight, canvasWidth) => {\n    let headerHeight = 0;\n    const headers = {};\n    const subtitle = context.subtitle();\n    const isSubtitle = resolveTitleSubTitleContent(subtitle[0]);\n\n    canvasHeight >= 200 && canvasWidth >= 200 && ['title', 'subtitle'].forEach((type) => {\n        const headerOptions = context[type]();\n        const content = resolveTitleSubTitleContent(headerOptions[0]);\n        if (content.length) {\n            const config = headerOptions[1];\n\n            config.width = context.width();\n            config.height = context.height();\n            config.classPrefix = context.config().classPrefix;\n            config.content = content;\n            config.padding = (type === 'title' && !isSubtitle.length) ? subtitle[1].padding : config.padding;\n\n            const { height, cell } = createHeading(config, type, context.dependencies().smartlabel,\n                context[`${type}Cell`]);\n\n            headers[`${type}Cell`] = cell;\n            context._composition[type] = cell;\n            headerHeight += height;\n        }\n    });\n    return { headerHeight, headers };\n};\n\n","import { TextCell, AxisCell } from '@chartshq/visual-cell';\nimport { getValueParser } from 'muze-utils';\nimport {\n    VERTICAL, HORIZONTAL, LEFT, RIGHT, LEGEND_TYPE_MAP, PADDING, BORDER, MARGIN\n} from '../constants';\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n *\n */\nexport const legendCreator = (canvas) => {\n    let LegendCls;\n    const dataset = [];\n    const axes = canvas.getRetinalAxes();\n\n    Object.entries(axes).forEach((axisInfo) => {\n        const scale = axisInfo[1][0];\n        const scaleType = axisInfo[0];\n        const scaleProps = canvas[scaleType]();\n\n        if (scaleProps.field && scale) {\n            const {\n                type,\n                step\n            } = scale.config();\n\n            const stepMapper = typeof step === 'boolean' ? step : false;\n            LegendCls = LEGEND_TYPE_MAP[`${type}-${stepMapper}-${scaleType}`];\n            dataset.push({ scale, canvas, fieldName: scaleProps.field, LegendCls, scaleType });\n        }\n    });\n\n    return dataset;\n};\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n * @param {*} measurement\n * @param {*} prevLegends\n *\n */\nexport const legendInitializer = (legendConfig, canvas, measurement, prevLegends) => {\n    const legends = [];\n    const {\n        height,\n        width,\n        headerHeight\n    } = measurement;\n    const {\n        position,\n        align\n    } = legendConfig;\n\n    const legendInfo = legendCreator(canvas);\n    const { invalidValues } = canvas.config();\n\n    const parser = getValueParser(invalidValues);\n    legendInfo.forEach((dataInfo, index) => {\n        let legend = {};\n\n        const legendMeasures = {};\n        const {\n                LegendCls,\n                scale,\n                fieldName,\n                scaleType\n            } = dataInfo;\n        const config = legendConfig[scaleType] || {};\n        const title = config.title || {};\n        title.text = title.text || fieldName;\n        if (config.show) {\n            config.position = position;\n            config.align = align;\n\n            if (prevLegends[index]) {\n                legend = prevLegends[index].legend;\n            } else {\n                legend = LegendCls.create({\n                    labelManager: canvas._dependencies.smartlabel,\n                    cells: {\n                        AxisCell, TextCell\n                    }\n                });\n            }\n            legendMeasures.maxHeight = align === VERTICAL ? (height - headerHeight) : height * 0.2;\n            legendMeasures.maxWidth = align === HORIZONTAL ? width : width * 0.2;\n            legendMeasures.width = Math.min(legendMeasures.maxWidth, config.width);\n            legendMeasures.height = Math.min(legendMeasures.maxHeight, config.height);\n\n            [PADDING, BORDER, MARGIN].forEach((e) => {\n                legendMeasures[e] = config[e];\n            });\n\n            legend.scale(scale)\n                            .valueParser(parser)\n                            .title(title)\n                            .fieldName(fieldName)\n                            .config(config)\n                            .metaData(canvas.composition().visualGroup.getGroupByData().project([fieldName]))\n                            .measurement(legendMeasures)\n                            .canvasAlias(canvas.alias())\n                            .setLegendMeasures();\n\n            legends.push({ canvas, legend, scaleType });\n        }\n    });\n    return legends;\n};\n\n/**\n *\n *\n * @param {*} legends\n * @param {*} legendConfig\n * @param {*} availableHeight\n * @param {*} availableWidth\n *\n */\nexport const getLegendSpace = (legends, legendConfig, availableHeight, availableWidth) => {\n    const legendMeasures = legends.map(legendInfo => legendInfo.legend.measurement());\n    const legendSpace = { width: 0, height: 0 };\n\n    legendMeasures.forEach((space) => {\n        let height = 0;\n        let width = 0;\n        width = Math.min(space.width, space.maxWidth);\n        height = Math.min(space.height, space.maxHeight);\n\n        if (legendConfig.align === HORIZONTAL) {\n            if (legendSpace.width + width > availableWidth) {\n                legendSpace.width = availableWidth;\n                legendSpace.height += height;\n            } else {\n                legendSpace.width += width;\n                legendSpace.height = Math.max(legendSpace.height, height);\n            }\n        } else if (legendSpace.height + height > availableHeight) {\n            legendSpace.height = height;\n            legendSpace.width += width;\n        } else {\n            legendSpace.height += height;\n            legendSpace.width = Math.max(legendSpace.width, width);\n        }\n    });\n    if (legendConfig.align === HORIZONTAL) {\n        legendSpace.width = availableWidth;\n    }\n    return legendSpace;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} headerHeight\n *\n */\nexport const createLegend = (context, headerHeight, height, width) => {\n    const measurement = {\n        height,\n        width,\n        headerHeight\n    };\n    const { legend } = context.config();\n    const { show, position } = legend;\n\n    legend.classPrefix = context.config().classPrefix;\n    const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n\n    legend.show = show ? ((align === VERTICAL && width > 200) || (align === HORIZONTAL && height > 200)) : show;\n    legend.align = align;\n    return legendInitializer(legend, context, measurement, context.legends || []);\n};\n","import { LayoutComponent } from '../../../../layout/src/tree-layout';\n\nexport default class MuzeComponent extends LayoutComponent {\n    getLogicalSpace () {\n        const { width, height } = this.boundBox();\n        return { width, height };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n    }\n\n    getBoundBox () {\n        return this.boundBox();\n    }\n\n    updateWrapper () {\n        throw Error('Update is not implemented');\n    }\n\n    setParams () {\n        throw Error('set params is not implemented');\n    }\n}\n","import { selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport { LEFT } from '../../constants';\n\nexport default class HeaderComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    renderHeader (container) {\n        const layoutConfig = this.params.config;\n        container = selectElement(container);\n        const { align } = layoutConfig;\n        const sel = container\n          .selectAll(`.${layoutConfig.classPrefix}-inner-container`)\n          .data([this.name]);\n        sel.exit().remove();\n        const selEnter = sel.enter().append('div');\n\n        const cont = selEnter.merge(sel);\n        cont.classed(`${layoutConfig.classPrefix}-inner-container`, true);\n        const { height, width } = this.boundBox();\n        this.component.setAvailableSpace(width, height);\n\n        this.component && this.component.render(cont.node());\n\n        cont.selectAll('div').classed(`${layoutConfig.classPrefix}-inner-content`, true);\n        cont.style('width', `${100}%`);\n\n        if (layoutConfig && this.component) {\n            cont.style('float', LEFT)\n                            .style('text-align', align);\n                            // .style(`padding-${position === TOP ? BOTTOM : TOP}`, `${padding}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderHeader(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.component.getLogicalSpace());\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y,\n            left: conf.x,\n            width: conf.width,\n            height: conf.height });\n        this.renderAt(conf.renderAt);\n    }\n}\n","import { makeElement, selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport {\n     LEFT, RIGHT, VERTICAL, HORIZONTAL, TOP, BOTTOM, HORIZONTAL_CENTER, VERTICAL_CENTER\n} from '../../constants';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\n\nfunction defaultAlignmentHelper (position) {\n    let alignment = null;\n    const alignWith = `${ROW_MATRIX_INDEX[1]}-${COLUMN_MATRIX_INDEX[1]}`;\n    switch (position) {\n    case TOP:\n    case BOTTOM:\n        alignment = HORIZONTAL_CENTER;\n        break;\n    case LEFT:\n    case RIGHT:\n        alignment = VERTICAL_CENTER;\n        break;\n    default:\n        alignment = VERTICAL_CENTER;\n    }\n    return { alignment, alignWith };\n}\nexport default class LegendComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.config.measurement.legendSpace, 0);\n        this.setParams(params);\n    }\n\n    renderLegend (container) {\n        container = selectElement(container);\n        const sectionComponents = [];\n        const { position, classPrefix } = this.params.config;\n        const legendMount = makeElement(container, 'div', [this.components],\n                                        `${classPrefix}-inner-content`, {}, d => d);\n        legendMount.classed(`${classPrefix}-legend`, true);\n        const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n        const legWidth = this.newDimensions.width;\n        const legHeight = this.newDimensions.height;\n\n        [container, legendMount].forEach((elem) => {\n            elem.style('width', `${Math.floor(legWidth)}px`)\n                            .style('height', `${legHeight}px`)\n                            .style('float', LEFT);\n        });\n\n        if (align === VERTICAL) {\n            let sections = -1;\n            let currHeight = legHeight;\n            let currWidth = 0;\n\n            this.components.forEach((legendInfo) => {\n                const leg = legendInfo.legend;\n                if (leg.measurement().height > currHeight) {\n                    sections++;\n                    currWidth = 0;\n                    currHeight = legHeight;\n                } else {\n                    sections < 0 && sections++;\n                }\n                sectionComponents[sections] = sectionComponents[sections] || [];\n                currHeight -= Math.min(leg.measurement().height, currHeight);\n                currWidth = Math.max(Math.min(leg.measurement().width, leg.measurement().maxWidth), currWidth);\n                sectionComponents[sections].push({\n                    legend: leg,\n                    legendHeight: legHeight,\n                    legendWidth: currWidth\n                });\n            });\n\n            const mount = makeElement(legendMount, ['div'], sectionComponents, `${classPrefix}-legend-section`);\n            // mount.each((d, i) => selectElement(this).classed(`${classPrefix}-legend-section-${i}`, true));\n            mount.classed(`${classPrefix}-legend-vertical-section`, true)\n                            .style('width', d => `${d[0].legendWidth}px`);\n            makeElement(mount, ['div'], d => d, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) {\n                                d.legend.mount(this);\n                            })\n                            .style('width', d => `${d.legendWidth}px`);\n        } else {\n            const mount = makeElement(legendMount, 'div', [1], `${classPrefix}-legend-section`);\n            mount.classed(`${classPrefix}-legend-horizontal-section`, true);\n            mount.classed(`${classPrefix}-legend-section-${0}`, true)\n                            .style('width', `${legWidth}px`);\n\n            makeElement(mount, 'div', this.components, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) { d.legend.mount(this); })\n                            .style('width', d => `${d.legend.measurement().width}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderLegend(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.measurement.legendSpace);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.components = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        const { alignWith, alignment } = defaultAlignmentHelper(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith || alignWith);\n        this.alignment(params.config.alignment || alignment);\n    }\n\n}\n","import {\n    selectElement,\n    makeElement,\n    getD3Drag,\n    getEvent,\n    getWindow,\n    hasTouch\n} from 'muze-utils';\nimport './scroll-bar.scss';\nimport { WIDTH, HEIGHT } from '../../../constants';\n\nconst d3Drag = getD3Drag();\n\nconst arrowSizeMap = {\n    left: WIDTH,\n    right: WIDTH,\n    top: HEIGHT,\n    bottom: HEIGHT\n};\n\nexport const getUnitPositions = (unitMeasures, totalLength, viewLength) => {\n    let currentLen = 0;\n    const measures = unitMeasures.primary && unitMeasures.primary.length ?\n        unitMeasures.primary : unitMeasures.secondary;\n\n    return measures.map((e) => {\n        const unitPosition = currentLen * 100 / (totalLength - viewLength);\n        currentLen += e;\n        return unitPosition;\n    });\n};\n\nexport const createScrollBarArrow = (mount, type, config) => {\n    const {\n        classPrefix,\n        thickness\n    } = config;\n    const arrow = makeElement(mount, 'div', [type], `${classPrefix}-scroll-arrow-${type}`);\n\n    arrow.classed(`${classPrefix}-scroll-arrow`, true);\n    arrow.style(arrowSizeMap[type], `${thickness}px`);\n\n    const chevron = makeElement(arrow, 'div', [1], `${classPrefix}-scroll-arrow-chevron`);\n\n    chevron.attr('id', `${classPrefix}-scroll-arrow-chevron-${type}`);\n\n    return arrow;\n};\n\nexport const createScrollBarRect = (mount, config) => {\n    const {\n        classPrefix\n    } = config;\n    const rect = makeElement(mount, 'div', [1], `${classPrefix}-scroll-rect`);\n    const mover = makeElement(rect, 'div', [1], `${classPrefix}-scroll-mover`);\n\n    return { rect, mover };\n};\n\nexport const applyRectClick = (scrollMaker, moverRect) => {\n    const {\n        rect\n    } = moverRect;\n\n    rect.on('click', () => {\n        const event = getEvent();\n        scrollMaker.emptyScrollAreaClick(event);\n    });\n};\n\nconst applyMoverDrag = (scrollMaker, moverRect) => {\n    let startPos = {};\n    let moverStartPos = 0;\n    let endPos = {};\n    const {\n        mover,\n        rect\n    } = moverRect;\n    const rectStartPos = rect.node().getBoundingClientRect();\n\n    mover.call(d3Drag()\n                    .on('start', () => {\n                        const event = getEvent();\n\n                        moverStartPos = mover.node().getBoundingClientRect();\n                        startPos = {\n                            x: event.x,\n                            y: event.y\n                        };\n                    })\n                    .on('drag', () => {\n                        const event = getEvent();\n                        const window = getWindow();\n\n                        endPos = {\n                            x: event.x,\n                            y: event.y\n                        };\n                        const distanceMoved = {\n                            x: endPos.x - startPos.x,\n                            y: endPos.y - startPos.y\n                        };\n                        const actualPosition = {\n                            x: moverStartPos.x + distanceMoved.x - rectStartPos.x + window.pageXOffset,\n                            y: moverStartPos.y + distanceMoved.y - rectStartPos.y + window.pageYOffset\n                        };\n\n                        scrollMaker.changeMoverPosition(actualPosition);\n                    }));\n};\n\nconst applyScrollMouseDownAction = (moverRect, scrollMaker, speed) => {\n    const {\n        mover,\n        rect\n    } = moverRect;\n    const { x, y } = mover.node().getBoundingClientRect();\n    const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n\n    scrollMaker.changeMoverPosition({ x: x - rectX + speed, y: y - rectY + speed });\n};\n\nconst registerListenerOnArrow = (scrollMaker, moverRect, arrowType, speed) => {\n    let timer = '';\n    const arrow = scrollMaker._components[arrowType];\n    const isTouchDevice = hasTouch();\n\n    arrow.on(isTouchDevice ? 'touchstart' : 'mousedown', () => {\n        const event = getEvent();\n\n        event.preventDefault();\n\n        timer = setInterval(() => {\n            applyScrollMouseDownAction(moverRect, scrollMaker, speed);\n        }, 100);\n    }).on(isTouchDevice ? 'touchend' : 'mouseup', () => {\n        const event = getEvent();\n\n        event.preventDefault();\n\n        clearInterval(timer);\n    }).on('click', () => {\n        applyScrollMouseDownAction(moverRect, scrollMaker, speed);\n    });\n};\n\nexport const registerListeners = (scrollMaker) => {\n    const {\n        moverRect\n    } = scrollMaker._components;\n\n    const speed = scrollMaker.config().speed;\n\n    registerListenerOnArrow(scrollMaker, moverRect, 'prevArrow', -speed);\n    applyMoverDrag(scrollMaker, moverRect);\n    applyRectClick(scrollMaker, moverRect);\n    registerListenerOnArrow(scrollMaker, moverRect, 'nextArrow', speed);\n};\n\nexport const scrollContainerHelper = (mountPoint, config, dimensions, type) => {\n    const {\n        classPrefix\n    } = config;\n    const scrollBarContainer = makeElement(selectElement(mountPoint), 'div', [1], `#${classPrefix}-scroll-bar-${type}`);\n\n    scrollBarContainer.classed(`${classPrefix}-scroll-bar`, true);\n    scrollBarContainer.style(WIDTH, `${dimensions.width}px`);\n    scrollBarContainer.style(HEIGHT, `${dimensions.height}px`);\n    return scrollBarContainer;\n};\n\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n\n    config: {\n        sanitization: (context, value) => {\n            value = mergeRecursive(context._config, value);\n            return value;\n        }\n    },\n    manager: {},\n    unitPositions: {},\n    logicalSpace: {}\n};\n\n","import { ERROR_MSG, generateGetterSetters } from 'muze-utils';\nimport {\n    scrollContainerHelper,\n    registerListeners\n} from './helper';\nimport { PROPS } from './props';\n\nexport class ScrollMaker {\n\n    constructor () {\n        this._components = {};\n        this._logicalSpace = {};\n        this._attachedScrollAction = () => {};\n        this._config = {\n            thickness: 10,\n            speed: 2\n        };\n        this._unitPositions = null;\n\n        generateGetterSetters(this, PROPS);\n    }\n\n    static type () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    emptyScrollAreaClick () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    changeMoverPosition () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    scrollTo () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    scrollDeltaTo () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    createScroll (mountPoint) {\n        const config = this.config();\n\n        return {\n            scrollBarContainer: scrollContainerHelper(mountPoint, config, this.logicalSpace(), this.constructor.type())\n        };\n    }\n\n    attachScrollAction (externalScrollAction) {\n        this._attachedScrollAction = externalScrollAction;\n        return this;\n    }\n\n    detachScrollAction () {\n        this._attachedScrollAction = () => {};\n        return this;\n    }\n\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    registerListeners () {\n        registerListeners(this);\n        return this;\n    }\n\n    remove () {\n        this._components.scrollBarContainer.remove();\n        return this;\n    }\n}\n\n","import MuzeComponent from './muze-chart-component';\nimport { HorizontalScrollMaker } from './scroll-bar-maker/horizontal-scroll-maker';\nimport { VerticalScrollMaker } from './scroll-bar-maker/vertical-scroll-maker';\n\nconst scrollMakerMap = {\n    horizontal: HorizontalScrollMaker,\n    vertical: VerticalScrollMaker\n};\n\n/**\n * Scroll Component acts as a wrapper over the scoll bars created using the respective Scroll Makers\n * This provides a consistent API for layouting using the tree layout system.\n *\n *\n * @class\n * @public\n * @module ScrollComponent\n */\nexport default class ScrollComponent extends MuzeComponent {\n\n    constructor (params) {\n        const ScrollMaker = scrollMakerMap[params.config.type];\n\n        params.component = new ScrollMaker();\n        params.component.config(params.config.scrollBarComponentConfig);\n        params.component.logicalSpace(params.dimensions);\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    manager (...manager) {\n        if (manager.length) {\n            this.component.manager(manager[0]);\n            return this;\n        }\n        return this.component.manager();\n    }\n\n    /**\n     * Scrolls based on the actual pixel value provided. Since it's a delta change, the input will be\n     * a delta between (-Infinity, Infinity), based on which the scroll will occur. Only a delta movement in\n     * scroll occurs\n     *\n     * @public\n     *\n     * @param {number} delta Based on which the scroll will have a delta change in position\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollDeltaTo (delta) {\n        this.component.scrollDeltaTo(delta);\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollTo (scrollPercentage) {\n        this.component.scrollTo(scrollPercentage);\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page based on the unit index.\n     * The input is provided as a number represting the index for the unit.\n     * For vertical scroll, it's the row index that will be required.\n     * For horizontal scroll, it's the column index that will be required\n     *\n     * @public\n     *\n     * @param {number} unitIndex Index of the unit appearing in the grid\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollToUnitIndex (unitIndex) {\n        const unitPositions = this.component.unitPositions();\n        const sanitizedUnitIndex = Math.min(Math.max(0, unitIndex), unitPositions.length - 1);\n        this.component.scrollTo(unitPositions[sanitizedUnitIndex]);\n        return this;\n    }\n\n    /**\n     * Provides the positions of the units(either horizontal or vertical based on the type\n     * of scroll bar it wraps) relative to it's container. The position of the first unit starts at 0\n     *\n     *\n     * @public\n     *\n     * @return {Array} Positions of units either horizontal or vertical\n     */\n    getScrollPositionsForUnits () {\n        return this.component.unitPositions();\n    }\n\n    draw (container) {\n        this.component.createScroll(container || document.getElementById(this.renderAt()));\n        return this;\n    }\n\n    /**\n     * Can be used to attach a scroll action whenever scrolling occurs in the canvas\n     *\n     * @public\n     * @param {number} externalAction Action to be attached during scroll\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    attachScrollAction (externalAction) {\n        this.component.attachScrollAction(externalAction);\n        return this;\n    }\n\n    /**\n     * Can be used to detach the scroll action already bound to the scroll bar\n     *\n     * @public\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    detachScrollAction () {\n        this.component.detachScrollAction();\n        return this;\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.component.config(params.config.scrollBarComponentConfig);\n        this.component.logicalSpace(params.dimensions);\n        this.boundBox(this.component.getLogicalSpace());\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component || this.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n    remove () {\n        this.component.remove();\n    }\n}\n","import { ScrollMaker } from './scroll-maker';\nimport { createScrollBarRect, createScrollBarArrow, getUnitPositions } from './helper';\nimport { HORIZONTAL, HEIGHT, WIDTH, LEFT } from '../../../constants';\n\nexport class HorizontalScrollMaker extends ScrollMaker {\n\n    /**\n     * Describes the type of the ScrollMaker\n     *\n     * @public\n     *\n     * @return {String} Returns the type of scroll maker: horizontal\n     */\n    static type () {\n        return HORIZONTAL;\n    }\n\n    createScroll (mountPoint, dimensions = this.logicalSpace()) {\n        const config = this.config();\n        const { scrollBarContainer } = super.createScroll(mountPoint, config, dimensions);\n        const prevArrow = createScrollBarArrow(scrollBarContainer, 'left', config);\n        const moverRect = createScrollBarRect(scrollBarContainer, config);\n        const nextArrow = createScrollBarArrow(scrollBarContainer, 'right', config);\n        const {\n            mover,\n            rect\n        } = moverRect;\n\n        const { height, width, totalLength, viewLength, unitWidths } = this.logicalSpace();\n        const scrollBarWithouArrowLength = width - height * 2;\n\n        rect.style(WIDTH, `${dimensions.width - height * 2}px`);\n        rect.style(HEIGHT, `${100}%`);\n        mover.style(WIDTH, `${(viewLength * scrollBarWithouArrowLength) / totalLength}px`);\n        mover.style(HEIGHT, `${100}%`);\n        mover.style(LEFT, `${0}px`);\n\n        this._components = {\n            prevArrow,\n            nextArrow,\n            moverRect,\n            scrollBarContainer\n        };\n        this._scrollBarWithouArrowLength = scrollBarWithouArrowLength;\n        this.unitPositions(getUnitPositions(unitWidths, totalLength, viewLength));\n        this.registerListeners();\n    }\n\n    emptyScrollAreaClick (event) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const speed = this.config().speed;\n        const { x, y } = mover.node().getBoundingClientRect();\n        const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n        let positionAdjuster = speed * 10;\n        if (event.x < x) {\n            positionAdjuster = -speed * 10;\n        }\n        this.changeMoverPosition({ x: x - rectX + positionAdjuster, y: y - rectY + positionAdjuster });\n    }\n\n    changeMoverPosition (newPosition) {\n        let currentPos;\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const rectStartPos = rect.node().getBoundingClientRect();\n        const moverPos = mover.node().getBoundingClientRect();\n        const {\n            totalLength\n         } = this.logicalSpace();\n\n        if (newPosition.x < 0) {\n            currentPos = 0;\n        } else if (newPosition.x + moverPos.width > rectStartPos.width) {\n            currentPos = rectStartPos.width - moverPos.width;\n        } else {\n            currentPos = newPosition.x;\n        }\n\n        mover.style(LEFT, `${currentPos}px`);\n        const totalDistance = this._scrollBarWithouArrowLength;\n        const movedViewLength = (currentPos * totalLength) / totalDistance;\n\n        this.manager().performAttachedScrollFunction(this.constructor.type(), movedViewLength);\n    }\n\n    scrollDeltaTo (delta) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const rectStartPos = rect.node().getBoundingClientRect();\n\n        this.changeMoverPosition({ y: 0, x: moverPos.x - rectStartPos.x - delta });\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {HorizontalScrollMaker} Instance of the HorizontalScrollMaker\n     */\n    scrollTo (scrollPercentage) {\n        const {\n            mover\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const movement = (scrollPercentage * (this._scrollBarWithouArrowLength - moverPos.width)) / 100;\n\n        this.changeMoverPosition({ y: 0, x: movement });\n        return this;\n    }\n\n}\n\n","import { ScrollMaker } from './scroll-maker';\nimport { createScrollBarRect, createScrollBarArrow, getUnitPositions } from './helper';\nimport { VERTICAL, TOP, HEIGHT, WIDTH } from '../../../constants';\n\nexport class VerticalScrollMaker extends ScrollMaker {\n\n    /**\n     * Describes the type of the ScrollMaker\n     *\n     * @public\n     *\n     * @return {String} Returns the type of scroll maker: vertical\n     */\n    static type () {\n        return VERTICAL;\n    }\n\n    createScroll (mountPoint, dimensions = this.logicalSpace()) {\n        const config = this.config();\n        const { scrollBarContainer } = super.createScroll(mountPoint, dimensions);\n        const prevArrow = createScrollBarArrow(scrollBarContainer, 'top', config);\n        const moverRect = createScrollBarRect(scrollBarContainer, config);\n        const nextArrow = createScrollBarArrow(scrollBarContainer, 'bottom', config);\n        const {\n            mover,\n            rect\n        } = moverRect;\n        const { height, width, totalLength, viewLength, unitHeights } = this.logicalSpace();\n        const scrollBarWithouArrowLength = height - width * 2;\n\n        rect.style(HEIGHT, `${scrollBarWithouArrowLength}px`);\n        rect.style(WIDTH, `${100}%`);\n        mover.style(WIDTH, `${100}%`);\n        mover.style(HEIGHT, `${(viewLength * scrollBarWithouArrowLength) / totalLength}px`);\n        mover.style(TOP, `${0}px`);\n\n        this._components = {\n            prevArrow,\n            nextArrow,\n            moverRect,\n            scrollBarContainer\n        };\n        this._scrollBarWithouArrowLength = scrollBarWithouArrowLength;\n\n        this.unitPositions(getUnitPositions(unitHeights, totalLength, viewLength));\n        this.registerListeners();\n    }\n\n    emptyScrollAreaClick (event) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const speed = this.config().speed;\n        const { x, y } = mover.node().getBoundingClientRect();\n        const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n\n        let positionAdjuster = speed * 10;\n        if (event.y < y) {\n            positionAdjuster = -speed * 10;\n        }\n        this.changeMoverPosition({ x: x - rectX + positionAdjuster, y: y - rectY + positionAdjuster });\n    }\n\n    changeMoverPosition (newPosition) {\n        let currentPos;\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const {\n            totalLength\n         } = this.logicalSpace();\n        const rectStartPos = rect.node().getBoundingClientRect();\n        const moverPos = mover.node().getBoundingClientRect();\n\n        if (newPosition.y < 0) {\n            currentPos = 0;\n        } else if (newPosition.y + moverPos.height > rectStartPos.height) {\n            currentPos = rectStartPos.height - moverPos.height;\n        } else {\n            currentPos = newPosition.y;\n        }\n        mover.style(TOP, `${currentPos}px`);\n        const totalDistance = this._scrollBarWithouArrowLength;\n        const movedViewLength = (currentPos * totalLength) / totalDistance;\n\n        this.manager().performAttachedScrollFunction(this.constructor.type(), movedViewLength);\n    }\n\n    /**\n     * Scrolls based on the actual pixel value provided. Since it's a delta change, the input will be\n     * a delta between (-Infinity, Infinity), based on which the scroll will occur. Only a delta movement in\n     * scroll occurs\n     *\n     * @public\n     *\n     * @param {number} delta Based on which the scroll will have a delta change in position\n     * @return {VerticalScrollMaker} Instance of the VerticalScrollMaker\n     */\n    scrollDeltaTo (delta) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const rectStartPos = rect.node().getBoundingClientRect();\n\n        this.changeMoverPosition({ y: moverPos.y - rectStartPos.y - delta, x: 0 });\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {VerticalScrollMaker} Instance of the VerticalScrollMaker\n     */\n    scrollTo (scrollPercentage) {\n        const {\n            mover\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const movement = (scrollPercentage * (this._scrollBarWithouArrowLength - moverPos.height)) / 100;\n\n        this.changeMoverPosition({ x: 0, y: movement });\n        return this;\n    }\n\n}\n","import { makeElement } from 'muze-utils';\nimport { cellSpanMaker, applySpans } from '../../../../layout/src/grid-layout/span-maker';\nimport { applyBorders } from '../../../../layout/src/grid-layout/border-helper';\n\nimport {\n     TOP, CENTER\n} from '../../../../layout/src/enums/constants';\nimport MuzeComponent from './muze-chart-component';\nimport { WIDTH, HEIGHT, HIDDEN, OVERFLOW, AUTO, VISIBLE } from '../../constants';\n\nconst renderPlaceholders = (cells) => {\n    // Rendering content within placeholders\n    cells.each(function (cell) {\n        cell.placeholder.render(this);\n    });\n};\n\nexport default class MatrixComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.setParams(params);\n        this.className(params.config.className);\n    }\n\n    applyScroll (container) {\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        const { horizontal, vertical } = this.params.config.scrollInfo;\n        container.style(OVERFLOW, VISIBLE);\n        container.style(WIDTH, AUTO);\n        container.style(HEIGHT, AUTO);\n\n        if (horizontal && column === 1) {\n            container.style(OVERFLOW, HIDDEN);\n            container.style(WIDTH, '100%');\n        }\n\n        if (vertical && row === CENTER) {\n            container.style(OVERFLOW, HIDDEN);\n            container.style(HEIGHT, '100%');\n        }\n    }\n\n    renderMatrix (mountPoint) {\n        // Creating containers for each matrix individually\n        const classPrefix = this.params.config.classPrefix;\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        const dimensions = this.params.config.dimensions;\n        const border = this.params.config.border;\n\n        // Creating containers for each matrix individually\n        const containerForMatrix = makeElement(mountPoint, 'div', [1], `${classPrefix}-grid-${row}-${column + 1}`)\n            .classed(`${classPrefix}-grid-${row}`, true)\n            .classed(`${classPrefix}-grid`, true);\n\n        this.applyScroll(containerForMatrix);\n\n        const {\n            viewMatrix,\n            spans\n        } = cellSpanMaker(this.component, row, column);\n\n            // Rendering the table components\n        const { cells } = this.renderTable(containerForMatrix, `${classPrefix}-grid`, viewMatrix);\n\n        applySpans(cells, spans, { dimensions, border }, `${row}-${column}`);\n        renderPlaceholders(cells);\n\n        cells.exit().each((cell) => {\n            cell.placeholder.remove();\n        });\n\n        applyBorders(cells, border, row, column);\n    }\n\n    renderTable (mount, className, rowData) {\n        const table = makeElement(mount, 'table', ['layout'], `${className}-table`);\n        const body = makeElement(table, 'tbody', ['layout'], `${className}-body`);\n        const rows = makeElement(body, 'tr', rowData, `${className}-tr`);\n        const cells = makeElement(rows, 'td', (d, i) => d.filter(e => e !== null).map(e =>\n                                  ({ placeholder: e, rowIndex: i })), `${className}-td`, {}, key => key.placeholder.id);\n\n        return { table, body, rows, cells };\n    }\n\n    draw (container) {\n        this.renderMatrix(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(TOP);\n        this.className(params.config.className);\n    }\n}\n","import { selectElement, getEvent } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport MatrixComponent from './matrix-component';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\n\n/**\n * Based on the type of scroll, it changes the scrollLeft/scrollTop property of the specific\n * elements based on the scroll distance provided\n *\n *\n */\nconst applyScrollAction = (elem, classPrefix, scollDistance, type) => {\n    selectElement(elem)\n                    .selectAll(`.${classPrefix}-grid`)\n                    .property(type, scollDistance);\n};\n\n/**\n * Applies the action of the scroll by actually scrolling the respective matrices based on the\n * type of scroll. It returns a function which has both the scroll methods available\n *\n * @return {Object} contains the horizontal and vertical scroll actions on the grid component\n */\nconst scrollActionApplier = (movement, context) => {\n    const classPrefix = context.params.config.classPrefix;\n\n    return {\n        horizontal: () => {\n            [0, 1, 2].forEach(e =>\n                applyScrollAction(`#${context.component[e][1].renderAt()}`, classPrefix, movement, 'scrollLeft'));\n        },\n        vertical: () => {\n            [0, 1, 2].forEach(e =>\n                applyScrollAction(`#${context.component[1][e].renderAt()}`, classPrefix, movement, 'scrollTop'));\n        }\n    };\n};\n\nexport default class GridComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.gridComponents = [];\n        this.setParams(params);\n    }\n\n    sanitizeGrid () {\n        let height = 0;\n        let width = 0;\n        const { viewMatricesInfo, layoutDimensions } = this.component.viewInfo();\n        const scrollInfo = this.component.scrollInfo();\n\n        for (let i = 0; i < 3; i++) {\n            if (!(this.gridComponents.length && this.gridComponents[i] instanceof Array)) {\n                this.gridComponents[i] = [];\n            }\n            for (let j = 0; j < 3; j++) {\n                const matrixDim = { height: layoutDimensions.viewHeight[i], width: layoutDimensions.viewWidth[j] };\n                const matrix = viewMatricesInfo.matrices[`${ROW_MATRIX_INDEX[i]}`][j];\n                const matrixName = `${ROW_MATRIX_INDEX[i]}-${COLUMN_MATRIX_INDEX[j]}`;\n                const matrixConfig = {\n                    dimensions: matrixDim,\n                    border: layoutDimensions.border,\n                    classPrefix: this.params.config.classPrefix,\n                    scrollInfo,\n                    row: ROW_MATRIX_INDEX[i],\n                    column: j\n                };\n                if (this.gridComponents[i][j] instanceof MuzeComponent) {\n                    this.gridComponents[i][j].updateWrapper({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                } else {\n                    const matrixWrapper = new MatrixComponent({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                    this.gridComponents[i].push(matrixWrapper);\n                }\n                if (i === 0) {\n                    width += matrixDim.width;\n                }\n                if (j === 0) {\n                    height += matrixDim.height;\n                }\n            }\n        }\n        this.boundBox({ height, width });\n\n        this.component = this.gridComponents;\n        this.allComponents = this.gridComponents;\n    }\n\n    scrollBarManager (...manager) {\n        if (manager.length) {\n            this._scrollBarManager = manager[0];\n            return this;\n        }\n        return this._scrollBarManager;\n    }\n\n    /**\n     * Attaches a mousewheel listener to the center matrix, based on which the scrolling can occur.\n     * It uses the scroll component to change the position of the scroller, which ultimately scrolls the center matrix\n     *\n     *\n     * @return {GridComponent} Instance of the GridComponent\n     */\n    attachScrollListener () {\n        selectElement(`#${this.component[1][1].renderAt()}`)\n                        .on('wheel', () => {\n                            const event = getEvent();\n                            const {\n                                wheelDeltaX,\n                                wheelDeltaY\n                            } = event;\n\n                            // Prevent default behaviour and stop propagating\n                            event.preventDefault();\n                            event.stopPropagation();\n\n                            // Scrolling horizontally\n                            if (wheelDeltaX !== 0 && Math.abs(wheelDeltaX) > Math.abs(wheelDeltaY)) {\n                                this.scrollBarManager().triggerScrollBarAction('horizontal', wheelDeltaX);\n                            }\n\n                            // Scrolling Vertically\n                            if (wheelDeltaY !== 0 && Math.abs(wheelDeltaX) < Math.abs(wheelDeltaY)) {\n                                this.scrollBarManager().triggerScrollBarAction('vertical', wheelDeltaY);\n                            }\n                        });\n        return this;\n    }\n\n    performScrollAction (direction, movedView) {\n        scrollActionApplier(movedView, this)[direction]();\n        return this;\n    }\n\n    getBoundBox () {\n        const { top, left } = this.component[0][0].boundBox();\n        const { height, width } = this.boundBox();\n\n        return {\n            top,\n            left,\n            height,\n            width\n        };\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.className(params.config.className);\n        this.sanitizeGrid();\n        return this;\n    }\n}\n","import { TITLE, SUB_TITLE, LEGEND, VERTICAL, HORIZONTAL, WIDTH, HEIGHT, TOP, LEFT, RIGHT } from '../constants';\nimport HeaderComponent from './components/headerComponent';\nimport LegendComponent from './components/legendComponent';\nimport ScrollComponent from './components/scroll-component';\nimport GridComponent from './components/grid-component';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG, GRID, CANVAS, LAYOUT_ALIGN } from './defaults';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX, CENTER } from '../../../layout/src/enums/constants';\n\n// Mapping between types of headers and their required configs for wrapper creation\nconst headerMap = {\n    title: {\n        headerCell: 'titleCell',\n        configType: TITLE_CONFIG\n    },\n    subtitle: {\n        headerCell: 'subtitleCell',\n        configType: SUB_TITLE_CONFIG\n    }\n};\n\n/**\n * Creates the wrapper for the header, i.e., title and subtitle to be used in the tree layout\n *\n *\n * @param {string} headerType type of header: title/subtite\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers\n */\nconst createHeaderWrapper = (headerType, layoutManager, renderDetails) => {\n    let wrapper = null;\n\n    const { components, layoutConfig } = renderDetails;\n    const { headerCell, configType } = headerMap[headerType];\n    const target = { target: CANVAS };\n\n    if (components.headers && components.headers[headerCell]) {\n        let headerConfig = layoutConfig[headerType];\n        const header = components.headers[headerCell];\n\n        headerConfig = Object.assign({}, headerConfig, {\n            classPrefix: layoutConfig.classPrefix,\n            ...target,\n            alignWith: `${ROW_MATRIX_INDEX[0]}-${COLUMN_MATRIX_INDEX[1]}`,\n            alignment: LAYOUT_ALIGN.LEFT,\n            className: configType.className\n        });\n\n        if (headerConfig.align === CENTER) {\n            headerConfig.alignment = null;\n            headerConfig.alignWith = null;\n        }\n        if (headerConfig.align === RIGHT) {\n            headerConfig.alignment = RIGHT;\n        }\n\n        const wrapperParams = {\n            name: headerType,\n            component: header,\n            config: headerConfig\n        };\n\n        const existingComponent = layoutManager.getComponent(headerType);\n        if (existingComponent) {\n            wrapper = existingComponent\n                      .updateWrapper(wrapperParams);\n        } else {\n            wrapper = new HeaderComponent(wrapperParams);\n        }\n    }\n    return wrapper;\n};\n\n// Mapping between types of scrollBars and their required configs for wrapper creation\nconst scrollBarMap = config => ({\n    vertical: {\n        componentName: 'verticalScrollBar',\n        width: 'thickness',\n        height: 'layoutBasedMeasure',\n        layoutBasedMeasure: HEIGHT,\n        viewMeasure: 'viewHeight',\n        rowAlign: 1,\n        colAlign: config.align === 'right' ? 2 : 0,\n        position: config.align,\n        alignment: TOP\n    },\n    horizontal: {\n        componentName: 'horizontalScrollBar',\n        width: 'layoutBasedMeasure',\n        layoutBasedMeasure: WIDTH,\n        viewMeasure: 'viewWidth',\n        height: 'thickness',\n        rowAlign: config.align === 'top' ? 0 : 2,\n        colAlign: 1,\n        position: config.align,\n        alignment: LEFT\n    }\n});\n\n/**\n * Creates the wrapper for the scroller, i.e., horizontal and vertical to be used in the tree layout\n *\n *\n * @param {string} scrollBarType type of scrollbar: horizontal/vertical\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @param {GridLayout} grid Instance of the grid layout\n * @return {Instance} Returns the respective wrappers\n */\nconst createScrollBarWrapper = (scrollBarType, layoutManager, renderDetails, grid) => {\n    let scrollBarWrapper = null;\n    const { layoutConfig } = renderDetails;\n    const target = { target: CANVAS };\n    const { scrollBar } = layoutConfig;\n    const { layoutDimensions } = grid.viewInfo();\n    const {\n        actualCenterMeasures,\n        unitHeights,\n        unitWidths\n    } = layoutDimensions;\n    const {\n        componentName, layoutBasedMeasure, width, height, rowAlign, colAlign,\n        viewMeasure, position, alignment\n    } = scrollBarMap(scrollBar[scrollBarType])[scrollBarType];\n    const dimensions = {\n        thickness: scrollBar.thickness,\n        layoutBasedMeasure: layoutDimensions[viewMeasure][1]\n    };\n    const isScroll = grid.scrollInfo()[scrollBarType];\n    const totalLength = actualCenterMeasures[layoutBasedMeasure];\n    const viewLength = layoutDimensions[viewMeasure][1];\n\n    const scrollConfig = Object.assign({}, {\n        classPrefix: layoutConfig.classPrefix,\n        ...target,\n        scrollBarComponentConfig: {\n            ...scrollBar,\n            classPrefix: layoutConfig.classPrefix\n        },\n\n        type: scrollBarType,\n        alignWith: `${ROW_MATRIX_INDEX[rowAlign]}-${COLUMN_MATRIX_INDEX[colAlign]}`,\n        alignment,\n        position\n    });\n\n    const wrapperParams = {\n        name: componentName,\n        config: scrollConfig,\n        dimensions: {\n            width: dimensions[width],\n            height: dimensions[height],\n            totalLength,\n            viewLength,\n            unitHeights,\n            unitWidths\n        }\n    };\n\n    const existingComponent = layoutManager.getComponent(componentName);\n\n    if (!isScroll) {\n        existingComponent && existingComponent.remove();\n        return null;\n    }\n\n    if (existingComponent) {\n        scrollBarWrapper = existingComponent\n                                .updateWrapper(wrapperParams);\n    } else {\n        scrollBarWrapper = new ScrollComponent(wrapperParams);\n    }\n\n    return scrollBarWrapper;\n};\n\n/**\n * Creates the wrapper for the legend to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers\n */\nconst createLegendWrapper = (layoutManager, renderDetails) => {\n    let legendWrapper = null;\n    const { components, layoutConfig, measurement } = renderDetails;\n    const target = { target: CANVAS };\n\n    if (components.legends && components.legends.length) {\n        const legendConfig = { ...layoutConfig.legend, ...target, measurement };\n        const wrapperParams = {\n            name: LEGEND,\n            component: components.legends,\n            config: legendConfig\n        };\n\n        const existingComponent = layoutManager.getComponent(LEGEND);\n\n        if (existingComponent) {\n            legendWrapper = existingComponent\n                       .updateWrapper(wrapperParams);\n        } else {\n            legendWrapper = new LegendComponent(wrapperParams);\n        }\n    }\n    return legendWrapper;\n};\n\n/**\n * Creates the wrapper for the grid layout to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @param {GridLayout} grid Instance of the grid layout\n * @return {Instance} Returns the respective wrappers\n */\nconst gridLayoutWrapper = (layoutManager, renderDetails, grid) => {\n    let gridWrapper = null;\n    const target = { target: CANVAS };\n    const { layoutConfig } = renderDetails;\n\n    const config = {\n        ...target,\n        pagination: layoutConfig.pagination,\n        classPrefix: layoutConfig.classPrefix,\n        dimensions: { height: 0, width: 0 }\n    };\n    const wrapperParams = {\n        name: GRID,\n        component: grid,\n        config\n    };\n    const existingComponent = layoutManager.getComponent(GRID);\n    if (existingComponent) {\n        gridWrapper = existingComponent\n                    .updateWrapper(wrapperParams);\n    } else {\n        gridWrapper = new GridComponent(wrapperParams);\n    }\n    return gridWrapper;\n};\n\n/**\n * Responsible for providing the wrapper creators for every component in Muze.\n * This function, when called, returns the set of components and their respective wrappers.\n *\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {GridLayout} grid Instance of the grid layout\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers for each component\n */\nexport const componentWrapperMaker = (layoutManager, grid, renderDetails) => ({\n    title: createHeaderWrapper(TITLE, layoutManager, renderDetails),\n    subtitle: createHeaderWrapper(SUB_TITLE, layoutManager, renderDetails),\n    legend: createLegendWrapper(layoutManager, renderDetails),\n    grid: gridLayoutWrapper(layoutManager, renderDetails, grid),\n    verticalScrollBar: createScrollBarWrapper(VERTICAL, layoutManager, renderDetails, grid),\n    horizontalScrollBar: createScrollBarWrapper(HORIZONTAL, layoutManager, renderDetails, grid)\n});\n","export class ScrollManager {\n\n    constructor () {\n        this._scrollBarComponents = {};\n        this._attachedComponents = {};\n    }\n\n    scrollBarComponents (...sbc) {\n        if (sbc.length) {\n            this._scrollBarComponents = sbc[0];\n            return this;\n        }\n        return this._scrollBarComponents;\n    }\n\n    attachedComponents (...abc) {\n        if (abc.length) {\n            this._attachedComponents = abc[0];\n            return this;\n        }\n        return this._attachedComponents;\n    }\n\n    performAttachedScrollFunction (type, movedViewLength) {\n        Object.values(this.attachedComponents()).forEach((e) => {\n            e.performScrollAction(type, movedViewLength);\n        });\n    }\n\n    triggerScrollBarAction (type, delta) {\n        this.scrollBarComponents()[type] && this.scrollBarComponents()[type].scrollDeltaTo(delta);\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\nimport { arrangeComponents } from './component-resolver';\nimport { createHeaders } from './title-maker';\nimport { createLegend, getLegendSpace } from './legend-maker';\nimport { componentWrapperMaker } from './component-wrapper-maker';\nimport { TOP, BOTTOM, LEFT, RIGHT } from '../constants';\nimport { ScrollManager } from './scroll-manager';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const prepareLayout = (layout, renderDetails) => {\n    const { components, layoutConfig, measurement } = renderDetails;\n    const {\n        rows,\n        columns,\n        values,\n        cornerMatrices\n    } = components;\n    const {\n        topLeft,\n        topRight,\n        bottomLeft,\n        bottomRight\n    } = cornerMatrices;\n    if (rows && columns) {\n        layout.measurement(measurement)\n                        .config(layoutConfig)\n                        .matrices({\n                            top: [topLeft, columns[0], topRight],\n                            center: [rows[0], values, rows[1]],\n                            bottom: [bottomLeft, columns[1], bottomRight]\n                        })\n                        .triggerReflow();\n    }\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} mount\n *\n */\nexport const getRenderDetails = (context, mount) => {\n    let layoutConfig = mergeRecursive({}, context.config());\n    // Get height width of the mount point\n    let { height, width } = mount.getBoundingClientRect();\n    const heightAttr = context.height();\n    const widthAttr = context.width();\n    const visGroup = context.composition().visualGroup;\n    const {\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority,\n        rows,\n        columns,\n        values\n    } = visGroup.placeholderInfo();\n    const {\n        minWidth,\n        minHeight,\n        classPrefix,\n        showHeaders,\n        legend,\n        pagination,\n        scrollBar\n    } = context.config();\n\n    // Get title configuration\n    const titleConfig = context.title()[1];\n     // Get subtitle configuration\n    const subtitleConfig = context.subtitle()[1];\n    // Get legend position\n    const legendPosition = legend.position;\n    // Arrange components according to config\n    const layoutArrangement = arrangeComponents(context);\n\n    height = Math.floor(height);\n    width = Math.floor(width);\n\n    const availableHeightForCanvas = Math.max(heightAttr > 0 ? heightAttr : height, minHeight);\n    const availableWidthForCanvas = Math.max(widthAttr > 0 ? widthAttr : width, minWidth);\n\n    // Create headers and determine header height\n    const { headers, headerHeight } = createHeaders(context, availableHeightForCanvas, availableWidthForCanvas);\n\n    // Create legends and determine legend space\n    const legends = createLegend(context, headerHeight, availableHeightForCanvas, availableWidthForCanvas);\n    context._composition.legend = {};\n    legends.forEach((e) => {\n        context._composition.legend[e.scaleType] = e.legend;\n    });\n\n    const legendSpace = getLegendSpace(legends, legend, availableHeightForCanvas, availableWidthForCanvas);\n    const legendWidth = (legendPosition === LEFT || legendPosition === RIGHT) ? legendSpace.width : 0;\n    const legendHeight = (legendPosition === TOP || legendPosition === BOTTOM) ? legendSpace.height : 0;\n\n    // Set components for layouting\n    const components = {\n        headers,\n        legends,\n        canvases: [context],\n        rows,\n        columns,\n        values,\n        cornerMatrices: visGroup.cornerMatrices()\n    };\n\n    const measurement = {\n        mountSpace: {\n            height,\n            width\n        },\n        headerHeight,\n        legendSpace,\n        canvasWidth: availableWidthForCanvas,\n        canvasHeight: availableHeightForCanvas,\n        width: availableWidthForCanvas - legendWidth,\n        height: availableHeightForCanvas - headerHeight - legendHeight,\n        minUnitHeight: context.minUnitHeight(),\n        minUnitWidth: context.minUnitWidth()\n    };\n    layoutConfig = mergeRecursive(layoutConfig, {\n        classPrefix,\n        showHeaders,\n        border: mergeRecursive(visGroup.metaData().border, context.config().border),\n        layoutArrangement,\n        legend,\n        buffer: scrollBar.thickness,\n        pagination,\n        title: titleConfig,\n        subtitle: subtitleConfig,\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        mount,\n        priority\n    });\n    return {\n        layoutConfig,\n        components,\n        measurement\n    };\n};\n\nconst componentIndexes = {\n    title: 0,\n    subtitle: 1,\n    legend: 2,\n    verticalScrollBar: 3,\n    horizontalScrollBar: 4,\n    grid: 5\n};\n\n/**\n * Responsible for creating a scroll manager that manages interactions between the grid\n * component and the scroll bar components\n *\n * @param {Array} componentWrappers Contains the wrappers for all the components\n * @param {Canvas} canvas Instance of the current canvas\n * @return {Array} Positions of units either horizontal or vertical\n */\nconst createScrollManager = (componentWrappers, canvas) => {\n    const {\n        horizontalScrollBar,\n        verticalScrollBar,\n        grid\n    } = componentIndexes;\n\n    const horizontalScrollWrapper = componentWrappers[horizontalScrollBar];\n    const verticalScrollWrapper = componentWrappers[verticalScrollBar];\n    const gridWrapper = componentWrappers[grid];\n    const scrollBarManager = new ScrollManager();\n    const scrollBarComponents = {};\n\n    verticalScrollWrapper && (scrollBarComponents.vertical = verticalScrollWrapper);\n    horizontalScrollWrapper && (scrollBarComponents.horizontal = horizontalScrollWrapper);\n\n    scrollBarManager\n                    .scrollBarComponents(scrollBarComponents)\n                    .attachedComponents({\n                        grid: gridWrapper\n                    });\n    canvas.composition().hScrollBar = horizontalScrollWrapper;\n    canvas.composition().vScrollBar = verticalScrollWrapper;\n\n    [horizontalScrollWrapper, verticalScrollWrapper].forEach((wrapper) => {\n        wrapper && wrapper.manager(scrollBarManager);\n    });\n\n    gridWrapper.scrollBarManager(scrollBarManager);\n};\n\nexport const renderLayout = (canvas, renderDetails) => {\n    const layoutManager = canvas._layoutManager;\n    const gridLayout = canvas.layout();\n    const {\n\n        grid\n    } = componentIndexes;\n\n    // Get the component wrappers\n    const compWrappers = componentWrapperMaker(layoutManager, gridLayout, renderDetails);\n    const componentWrappers = Object.keys(componentIndexes).map(e => compWrappers[e]);\n    const gridWrapper = componentWrappers[grid];\n    createScrollManager(componentWrappers, canvas);\n\n    layoutManager.registerComponents(componentWrappers).compute();\n    gridWrapper.attachScrollListener();\n};\n\n","import {\n    getDataModelFromIdentifiers,\n    FieldType,\n    mergeRecursive,\n    isSimpleObject,\n    CommonProps\n} from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\n\nimport { applyInteractionPolicy } from '../helper';\n\nconst defaultInteractionPolicy = (valueMatrix, firebolt) => {\n    const isMeasure = field => field.type() === FieldType.MEASURE;\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    const xFields = [].concat(...visualGroup.getFieldsFromChannel('x'));\n    const yFields = [].concat(...visualGroup.getFieldsFromChannel('y'));\n    const colDim = xFields.every(field => field.type() === FieldType.DIMENSION);\n    const fieldInf = visualGroup.resolver().getAllFields();\n    const rowFacets = fieldInf.rowFacets;\n    const colFacets = fieldInf.colFacets;\n    valueMatrix.each((cell) => {\n        const unitFireBolt = cell.valueOf().firebolt();\n        if (!(xFields.every(isMeasure) && yFields.every(isMeasure))) {\n            const facetFields = cell.valueOf().facetByFields()[0];\n            const unitColFacets = facetFields.filter(d => colFacets.findIndex(v => v.equals(d)) !== -1);\n            const unitRowFacets = facetFields.filter(d => rowFacets.findIndex(v => v.equals(d)) !== -1);\n            let propFields;\n            if (colDim) {\n                propFields = unitColFacets.map(d => `${d}`);\n            } else {\n                propFields = unitRowFacets.map(d => `${d}`);\n            }\n\n            unitFireBolt.propagateWith('*', propFields, true);\n        }\n    });\n};\n\nconst defaultCrossInteractionPolicy = {\n    behaviours: {\n        '*': (propagationPayload, context) => {\n            const propagationCanvasAlias = propagationPayload.sourceCanvas;\n            const canvasAlias = context.parentAlias();\n            return propagationCanvasAlias ? canvasAlias === propagationCanvasAlias : true;\n        }\n    },\n    sideEffects: {\n        tooltip: (propagationPayload, context) => {\n            const propagationUnit = propagationPayload.sourceUnit;\n            const propagationCanvas = propagationPayload.sourceCanvas;\n            const unitId = context.id();\n            const canvasAlias = context.parentAlias();\n            if (propagationCanvas) {\n                return propagationCanvas !== canvasAlias ? true : unitId === propagationUnit;\n            }\n            return true;\n        }\n    }\n};\n\n/**\n * This class is responsible for dispatching any behavioural action to all the visual units housed by the canvas.\n * It is created by {@link Canvas}. This class does not handle any physical actions. Physical actions get triggered\n * in {@link VisualUnit} which is managed by it's own firebolt instance. The firebolt instance of canvas only\n * propagates the action to all the visual units in it's composition.\n *\n * To get the firebolt instance of {@link Canvas}\n * ```\n *  const firebolt = canvas.firebolt();\n * ```\n *\n * @class GroupFireBolt\n * @public\n */\nexport default class GroupFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this._interactionPolicy = this.constructor.defaultInteractionPolicy();\n        this.crossInteractionPolicy(this.constructor.defaultCrossInteractionPolicy());\n    }\n\n    static defaultInteractionPolicy () {\n        return defaultInteractionPolicy;\n    }\n\n    static defaultCrossInteractionPolicy () {\n        return defaultCrossInteractionPolicy;\n    }\n\n    interactionPolicy (...policy) {\n        if (policy.length) {\n            this._interactionPolicy = policy[0] || this.constructor.defaultInteractionPolicy();\n            return this;\n        }\n        return this._interactionPolicy;\n    }\n\n    crossInteractionPolicy (...policy) {\n        if (policy.length) {\n            this._crossInteractionPolicy = mergeRecursive(mergeRecursive({},\n                this.constructor.defaultCrossInteractionPolicy()), policy[0] || {});\n            const context = this.context;\n            applyInteractionPolicy(this);\n            context._throwback.registerImmediateListener([CommonProps.MATRIX_CREATED], () => {\n                applyInteractionPolicy(this);\n            });\n            return this;\n        }\n        return this._crossInteractionPolicy;\n    }\n\n    /**\n     * Dispatches a behavioural action with a payload. It takes the name of the behavioural action and a payload\n     * object which contains the criteria aend an array of side effects which determines what side effects are\n     * going to be shown in each visual unit of the canvas. It prepares the datamodel from the given criteria\n     * and initiates a propagation from the datamodel of canvas. Then all the visual units of canvas which listens\n     * to the propagation gets informed on which rows got selected and dispatches the behavioural action sent during\n     * propagation.\n     *\n     * To dispatch a behavioural action on the canvas\n     * ```\n     *  // Get the firebolt instance of the canvas\n     *  const firebolt = canvas.firebolt();\n     *  // Dispatch a brush behaviour\n     *  firebolt.dispatchBehaviour('brush', {\n     *      // Selects all the rows with Horsepower having range between 100 and 200.\n     *      criteria: {\n     *          Horsepower: [100, 200]\n     *      }\n     *  });\n     * // On dispatch of this behavioural action, a selection box gets created and plots gets faded out which are the\n     * // default side effects mapped to this behavioural action.\n     * ```\n     *\n     * ```\n     * Additionally, it can also be passed an array of side effects in the payload.\n     *  // Dispatch a select behaviour with only crossline as side effect.\n     *  firebolt.dispatchBehaviour('select', {\n     *      criteria: {\n     *          Cylinders: ['8']\n     *      },\n     *      sideEffects: ['crossline']\n     *  });\n     * ```\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of the behavioural action\n     * @param {Object} payload Object which contains the interaction information.\n     * @param {Object | Array.<Array>} payload.criteria Identifiers by which the selection happens.\n     * @param {Array.<string|Object>} payload.sideEffects Side effects which needs to be shown.\n     *\n     * @return {GroupFireBolt} Instance of firebolt.\n     */\n    dispatchBehaviour (behaviour, payload) {\n        const propPayload = Object.assign(payload);\n        const criteria = propPayload.criteria;\n        const data = this.context.composition().visualGroup.getGroupByData();\n        const fieldsConfig = data.getFieldsConfig();\n        const model = getDataModelFromIdentifiers(data, criteria);\n        const behaviouralAction = this._actions.behavioural[behaviour];\n\n        if (behaviouralAction) {\n            const fields = isSimpleObject(criteria) ? Object.keys(criteria) : (criteria ? criteria[0] : []);\n            const validFields = fields.filter(field => field in fieldsConfig);\n            const mutates = behaviouralAction.constructor.mutates();\n            const propConfig = {\n                payload: propPayload,\n                action: behaviour,\n                criteria: model,\n                sourceId: this.context.alias(),\n                isMutableAction: mutates,\n                propagateInterpolatedValues: validFields.every(field => fieldsConfig[field].def.type ===\n                    FieldType.MEASURE)\n            };\n            data.propagate(model, propConfig, true);\n        }\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        return this;\n    }\n}\n","import GroupFireBolt from './group-firebolt';\n\nexport default GroupFireBolt;\n","export const APP_INITIAL_STATE = {\n    app: {\n        group: {},\n        units: {},\n        layers: {},\n        canvas: {}\n    },\n    local: {\n        canvas: {},\n        group: {},\n        units: {},\n        layers: {}\n    }\n};\n\n","import { GridLayout } from '@chartshq/layout';\nimport { transactor, Store, getUniqueId, selectElement, STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { RETINAL } from '../constants';\nimport TransactionSupport from '../transaction-support';\nimport { getRenderDetails, prepareLayout, renderLayout } from './layout-maker';\nimport { localOptions, canvasOptions } from './local-options';\nimport GroupFireBolt from './firebolt';\nimport options from '../options';\nimport { APP_INITIAL_STATE } from './app-state';\nimport { initCanvas,\n        setupChangeListener,\n        setLabelRotationForAxes,\n        createGroupState,\n        createLayoutManager,\n        setLayoutInfForUnits\n} from './helper';\n/**\n * Canvas is a logical component which houses a visualization by taking multiple variable in different encoding channel.\n * Canvas manages lifecycle of many other logical component and exposes one consistent interface for creation of chart.\n * Canvas is intialized from environment with settings from environment and singleton dependencies.\n *\n * To create an instance of canvas\n * ```\n *  const env = Muze();\n *  const canvas = env.canvas()\n * ```\n *\n *\n * @class\n * @public\n * @module Canvas\n */\nexport default class Canvas extends TransactionSupport {\n\n    /**\n     * Creates reactive property accessors.\n     * - data\n     * - height\n     * - width\n     * - config\n     * This configs are retrieved from options.\n     */\n    constructor (globalDependencies) {\n        super();\n\n        this._allOptions = Object.assign({}, options, localOptions);\n        this._registry = {};\n        this._composition = {};\n        this._cachedProps = {};\n        this._alias = null;\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        this._composition.layout = new GridLayout();\n        this._store = new Store(APP_INITIAL_STATE);\n\n        this._throwback = new Store({\n            [CommonProps.MATRIX_CREATED]: false\n        });\n\n        // Setters and getters will be mounted on this. The object will be mutated.\n        const namespace = STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE;\n        const [, store] = transactor(this, options, this._store.model, {\n            namespace\n        });\n        transactor(this, localOptions, store, {\n            namespace\n        });\n        transactor(this, canvasOptions, store, {\n            namespace\n        });\n\n        this.dependencies(Object.assign({}, globalDependencies, this._dependencies));\n        this.firebolt(new GroupFireBolt(this, {\n            behavioural: behaviouralActions,\n            physical: physicalActions,\n            physicalBehaviouralMap: {}\n        }, sideEffects, behaviourEffectMap));\n        this.alias(`canvas-${getUniqueId()}`);\n        this.title('', {});\n        this.subtitle('', {});\n        this.legend({});\n        this.color({});\n        this.shape({});\n        this.size({});\n        setupChangeListener(this);\n         // init layoutManager\n        this._layoutManager = createLayoutManager();\n    }\n\n    /**\n     * Retrieves an instance of layout which is responsible for layouting. Layout is responsible for creating faceted\n     * presentation using table layout.\n     *\n     * @public\n     *\n     * @return {GridLayout} Instance of layout attached to canvas.\n     */\n    layout (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().layout;\n    }\n\n    /**\n     * Retrieves the composition for a canvas\n     *\n     * @public\n     *\n     * @return {object} Instances of the components which canvas requires to draw the full visualization.\n     *      ```\n     *          {\n     *              layout: // Instance of {@link GridLayout}\n     *              legend: // Instance of {@link Legend}\n     *              subtitle: // Instance of {@link TextCell} using which the title is rendered\n     *              title: // Instance of {@link TextCell} using which the title is rendered\n     *              visualGroup: // Instance of {@link visualGroup}\n     *          }\n     *      ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Sets or gets the alias of the canvas. Alias is a name by which the canvas can be referred.\n     *\n     * When setter\n     * @param {string} alias Name of the alias.\n     *\n     * @return {Canvas} Instance of the canvas.\n     *\n     * When getter\n     *\n     * @return {string} Alias of canvas.\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            const visualGroup = this.composition().visualGroup;\n            this._alias = params[0];\n            visualGroup && visualGroup.alias(this.alias());\n            return this;\n        }\n        return this._alias;\n    }\n\n    /**\n     * Creates an instance initiated with given settings.\n     *\n     * @param {Object} initialSettings Initial settings to be populated in the model\n     * @param {Object} regEntry newly created instance with the initial settings\n     * @param {Object} globalDependencies dependencies which will be created only once in the page\n     *\n     * @return {Object} newly created instance with the initial settings\n     */\n    static withSettings (initialSettings, regEntry, globalDependencies) {\n        const instance = new Canvas(globalDependencies);\n\n        for (const key in initialSettings) {\n            instance[key](initialSettings[key]);\n        }\n        // set registry for instance\n        instance.registry(regEntry);\n        return instance;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof Canvas\n     */\n    static formalName () {\n        return 'canvas';\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this canvas. The firebolt instance can be used to dispatch a\n     * behaviour dynamically on the canvas. This firebolt does not handle any physical actions. It is just used to\n     * propagate the action to all the visual units in it's composition.\n     *\n     * @public\n     *\n     * @return {GroupFireBolt} Instance of firebolt associated with canvas.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Registry peoperty accessor\n     *\n     * @param {Object} reg plain old javascript object keyvalue pairs. Key containing module name and value contains\n     * module definition class. The reg object has to be flat object of level 1.\n     */\n    registry (...params) {\n        if (params.length) {\n            const components = Object.assign({}, params[0].components);\n            const componentSubRegistry = Object.assign({}, params[0].componentSubRegistry);\n\n            this._registry = { components, componentSubRegistry };\n            const initedComponents = initCanvas(this);\n            // @todo is it okay to continue this tight behaviour? If not use a resolver to resolve diff component type.\n            this._composition.visualGroup = initedComponents[0];\n            createGroupState(this);\n            this.composition().visualGroup.alias(this.alias()).store(this._store);\n            return this;\n        }\n        return this._registry;\n    }\n\n    /*\n     * Prepare dependencies for top level elements\n     */\n    dependencies (...param) {\n        if (param.length) {\n            this._dependencies = param[0];\n            return this;\n        }\n        // @todo prepare dependencies here.\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     * @param {*} lifeCycles\n     *\n     * @memberof Canvas\n     */\n    lifeCycle (lifeCycles) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        if (lifeCycles) {\n            lifeCycleManager.register(lifeCycles);\n            return this;\n        }\n        return lifeCycleManager;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof Canvas\n     */\n    legend (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().legend;\n    }\n\n    /**\n     * Returns a promise for various {@link LifecycleEvents} of the various components of canvas. The promise gets\n     * resolved once the particular event gets completed.\n     *\n     * To use this,\n     * ```\n     *      canvas.once('layer.drawn').then(() => {\n     *          // Do any post drawing work here.\n     *      });\n     * ```\n     * @public\n     *\n     * @param {string} eventName Name of the lifecycle event.\n     *\n     * @return {Promise} A pending promise waiting for resolve to be called.\n     */\n    once (eventName) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        return lifeCycleManager.retrieve(eventName);\n    }\n\n    /**\n     * Internal function to trigger render, this method is cognizant of all the properties of the core modules and\n     * establish a passive reactivity. Passive reactivity is not always a bad thing :)\n     * @internal\n     */\n    render () {\n        const mount = this.mount();\n        // removeChild(mount);\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        // Get render details including arrangement and measurement\n        const renderDetails = getRenderDetails(this, mount);\n        lifeCycleManager.notify({ client: this, action: 'beforedraw' });\n        // Prepare the layout by triggering the matrix calculation\n        prepareLayout(this.layout(), renderDetails);\n\n        this._layoutManager.dimension({\n            height: renderDetails.measurement.canvasHeight,\n            width: renderDetails.measurement.canvasWidth\n        });\n\n        this._layoutManager.renderAt(mount);\n\n        // Render each component\n        renderLayout(this, renderDetails);\n\n        setLayoutInfForUnits(this);\n\n        // setLabelRotation\n        setLabelRotationForAxes(this);\n    }\n\n    /**\n     * Returns the instances of x axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the top axis and the second element represents the bottom\n     *   // axis.\n     *   [\n     *      [X1, X2],\n     *      [X3, X4]\n     *   ]\n     * ```\n     * @public\n     *\n     * @return {Array.<Array>} Instances of x axis.\n     */\n    xAxes () {\n        return this.composition().visualGroup.getAxes('x');\n    }\n\n    /**\n     * Returns the instances of y axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the left axis and the second element represents the right\n     *   // axis.\n     *   [\n     *      [Y1, Y2],\n     *      [Y3, Y4]\n     *   ]\n     * ```\n     * @public\n     * @return {Array.<Array>} Instances of y axis.\n     */\n    yAxes () {\n        return this.composition().visualGroup.getAxes('y');\n    }\n\n    /**\n     * Returns all the retinal axis of the canvas. Color, shape and size axis are combinedly called retinal axis.\n     *\n     * @public\n     * @return {Object} Instances of retinal axis.\n     *          ```\n     *              {\n     *                  color: [ColorAxis], // Array of color axis.\n     *                  shape: [ShapeAxis], // Array of shape axis.\n     *                  size: [SizeAxis] // Array of size axis.\n     *              }\n     *          ```\n     */\n    getRetinalAxes () {\n        const visualGroup = this.composition().visualGroup;\n        return visualGroup.getAxes(RETINAL);\n    }\n\n    mount (...params) {\n        if (params.length) {\n            let value = params[0];\n            if (typeof params[0] === 'string') {\n                value = selectElement(params[0]).node();\n            }\n            this._mount = value;\n            return this;\n        }\n        return this._mount;\n    }\n}\n","import { cellRegistry, SimpleCell } from '@chartshq/visual-cell';\nimport { VisualUnit } from '@chartshq/visual-unit';\nimport { layerRegistry } from '@chartshq/visual-layer';\nimport { SimpleGroup, VisualGroup } from '@chartshq/visual-group';\n\nexport const COMPONENTS = {\n    VisualGroup,\n    VisualUnit\n};\nexport const SUBREGISTRIES = {\n    cellRegistry,\n    layerRegistry\n};\nexport const INTERFACES = {\n    SimpleGroup,\n    SimpleCell\n};\n\n","import { DEFAULT_LAYERS } from './defaults';\n\nexport default () => {\n    const reg = DEFAULT_LAYERS;\n    const regObj = {\n        set: (key, def) => {\n            reg[key] = def;\n            return regObj;\n        },\n        get: () => reg\n    };\n    return regObj;\n};\n","import {\n    transactor,\n    Smartlabel,\n    enableChainedTransaction,\n    LifeCycleManager,\n    DataModel,\n    makeElement,\n    getClientPoint,\n    selectElement,\n    getEvent,\n    require,\n    DateTimeFormatter\n} from 'muze-utils';\n\nimport {\n    SurrogateSideEffect,\n    SpawnableSideEffect,\n    sideEffects,\n    PersistentBehaviour,\n    GenericBehaviour,\n    VolatileBehaviour,\n    behaviouralActions,\n    GenericSideEffect\n} from '@chartshq/muze-firebolt';\nimport { layerFactory } from '@chartshq/visual-layer';\nimport pkg from '../package.json';\nimport * as operators from './operators';\nimport { actionModel as ActionModel } from './action-model';\nimport options from './options';\nimport { Canvas } from './canvas';\nimport { COMPONENTS, SUBREGISTRIES } from './default-registry';\nimport './muze.scss';\n\n// Cache singleton instances which should be included only once in a page\nconst globalCache = {};\nconst defaultRegistry = COMPONENTS;\n\nconst overrideRegistryDefinitions = (overrideRegistry, registry) => {\n    for (const prop in overrideRegistry) {\n        registry.set(prop, overrideRegistry[prop]);\n    }\n};\n\n/**\n * Entry point to renderer. Initializes an environment with settings and registries for canvas. This is a simple wrapper\n * over {@link Canvas} which enables common configuration passing to multiple such canvases.\n *\n * Everytime `muze()` is called it creates an environment. These environment supports subset of APIs of Canvas. If\n * common configuration is used to render multiple canvases then it can be set directly in the env. Like if data is\n * common across all the visulization then its better to set the data in env. When a canvas is created it receives all\n * those configuration from env.\n *\n * ```\n *  // Creates an environment\n *  const env = muze()\n *  // Set data property in environment, so that all the canvas created from the same environment gets this data\n *  // automatically\n *  env.data(dm);\n *  // Creates canvas, by default env pushes data to canvas instance\n *  const canvas = env.canvas();\n * ```\n *\n * If a property is set on both environment and canvas instance, property set on canvas instance gets more priority.\n *\n * @public\n * @module muze\n * @namespace Muze\n *\n * @return {Env} Instance of an environment\n */\nconst muze = () => {\n    // Setters and getters will be mounted on this. Object will be mutated.\n    const [env, globalStore] = transactor({}, options);\n    const components = Object.assign({}, COMPONENTS);\n    const componentSubRegistryDef = Object.assign(SUBREGISTRIES);\n    const componentSubRegistry = {};\n\n    for (const prop in componentSubRegistryDef) {\n        componentSubRegistry[prop] = componentSubRegistryDef[prop]();\n    }\n\n    // Apart form the setter getter, an instance method is injected to create real renderer instances\n    env.canvas = () => {\n        // Create a canvas instance with this settings\n        const settings = globalStore.serialize();\n        const canvas = Canvas.withSettings(settings, { /* registry */\n            components,\n            componentSubRegistry\n        }, env.globalDependencies());\n\n        // Whenever settings is changed canvas is updated\n        enableChainedTransaction(globalStore, canvas, Object.keys(settings));\n\n        return canvas;\n    };\n\n    // Global dependencies for for compositions. Only one copy of the same should be in the page\n    env.globalDependencies = () => {\n        if (!globalCache.smartlabel) {\n            globalCache.smartlabel = new Smartlabel(1, 'body');\n        }\n        return {\n            smartlabel: globalCache.smartlabel,\n            lifeCycleManager: new LifeCycleManager()\n        };\n    };\n\n    // Retrieves global settings. This getter is readonly so that user can't change this as change should happen\n    // only from setter to avoid unwanted sync issues.\n    env.settings = () => globalStore.serialize();\n\n    env.registry = (...overrideRegistry) => {\n        // Selectively copy the properties from COMPONENTS\n        if (overrideRegistry.length) {\n            for (const prop in overrideRegistry) {\n                if (prop in defaultRegistry) {\n                    components[prop] = overrideRegistry[prop];\n                }\n            }\n            return env;\n        }\n        return components;\n    };\n\n    env.cellRegistry = (...overrideRegistry) => {\n        const cellRegistry = componentSubRegistry.cellRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], cellRegistry);\n            return env;\n        }\n        return cellRegistry.get();\n    };\n\n    env.layerRegistry = (...overrideRegistry) => {\n        const layerRegistry = componentSubRegistry.layerRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], layerRegistry);\n            return env;\n        }\n        return layerRegistry.get();\n    };\n\n    return env;\n};\n\nconst SideEffects = {\n    sideEffects,\n    standards: {\n        SurrogateSideEffect,\n        SpawnableSideEffect,\n        GenericSideEffect\n    }\n};\n\nconst Behaviours = {\n    behaviouralActions,\n    standards: {\n        GenericBehaviour,\n        PersistentBehaviour,\n        VolatileBehaviour\n    }\n};\n\nmuze.DataModel = DataModel;\nmuze.version = pkg.version;\nmuze.SideEffects = SideEffects;\nmuze.ActionModel = ActionModel;\nmuze.layerFactory = layerFactory;\nmuze.Operators = operators;\nmuze.Behaviours = Behaviours;\nmuze.utils = {\n    getClientPoint,\n    getEvent,\n    makeElement,\n    selectElement,\n    DateTimeFormatter,\n    require\n};\n\nexport default muze;\n"],"sourceRoot":""}