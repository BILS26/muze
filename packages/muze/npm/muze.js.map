{"version":3,"sources":["webpack://muze/webpack/universalModuleDefinition","webpack://muze/webpack/bootstrap","webpack://muze/webpack://DataModel/webpack/universalModuleDefinition","webpack://muze/webpack://DataModel/webpack/bootstrap","webpack://muze/webpack://DataModel/src/index.js","webpack://muze/webpack://DataModel/src/enums/data-format.js","webpack://muze/webpack://DataModel/src/enums/dimension-subtype.js","webpack://muze/webpack://DataModel/src/enums/measure-subtype.js","webpack://muze/webpack://DataModel/src/enums/field-type.js","webpack://muze/webpack://DataModel/src/enums/filtering-mode.js","webpack://muze/webpack://DataModel/src/enums/group-by-functions.js","webpack://muze/webpack://DataModel/src/utils/date-time-formatter.js","webpack://muze/webpack://DataModel/src/utils/column-major.js","webpack://muze/webpack://DataModel/src/utils/extend2.js","webpack://muze/webpack://DataModel/src/utils/helper.js","webpack://muze/webpack://DataModel/src/field-store.js","webpack://muze/webpack://DataModel/src/value.js","webpack://muze/webpack://DataModel/src/operator/row-diffset-iterator.js","webpack://muze/webpack://DataModel/src/invalid-aware-types.js","webpack://muze/webpack://DataModel/src/operator/compose.js","webpack://muze/webpack://DataModel/src/constants/index.js","webpack://muze/webpack://DataModel/src/operator/get-common-schema.js","webpack://muze/webpack://DataModel/src/operator/cross-product.js","webpack://muze/webpack://DataModel/src/operator/merge-sort.js","webpack://muze/webpack://DataModel/src/operator/data-builder.js","webpack://muze/webpack://DataModel/src/operator/difference.js","webpack://muze/webpack://DataModel/src/operator/group-by-function.js","webpack://muze/webpack://DataModel/src/utils/reducer-store.js","webpack://muze/webpack://DataModel/src/operator/natural-join-filter-function.js","webpack://muze/webpack://DataModel/src/operator/union.js","webpack://muze/webpack://DataModel/src/operator/outer-join.js","webpack://muze/webpack://DataModel/src/fields/field/index.js","webpack://muze/webpack://DataModel/src/fields/dimension/index.js","webpack://muze/webpack://DataModel/src/fields/categorical/index.js","webpack://muze/webpack://DataModel/src/fields/temporal/index.js","webpack://muze/webpack://DataModel/src/fields/binned/index.js","webpack://muze/webpack://DataModel/src/fields/measure/index.js","webpack://muze/webpack://DataModel/src/fields/continuous/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/field-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/categorical-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/temporal-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/binned-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/continuous-parser/index.js","webpack://muze/webpack://DataModel/src/fields/partial-field/index.js","webpack://muze/webpack://DataModel/src/field-creator.js","webpack://muze/webpack://DataModel/src/default-config.js","webpack://muze/webpack://DataModel/src/converter/dsv-arr.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/dsv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/csv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/tsv.js","webpack://muze/webpack://DataModel/src/converter/dsv-str.js","webpack://muze/webpack://DataModel/src/converter/flat-json.js","webpack://muze/webpack://DataModel/src/converter/auto-resolver.js","webpack://muze/webpack://DataModel/src/helper.js","webpack://muze/webpack://DataModel/src/relation.js","webpack://muze/webpack://DataModel/src/datamodel.js","webpack://muze/webpack://DataModel/src/operator/group-by.js","webpack://muze/webpack://DataModel/src/operator/bucket-creator.js","webpack://muze/webpack://DataModel/src/stats/index.js","webpack://muze/webpack://DataModel/src/export.js","webpack://muze/webpack://DataModel/src/operator/pure-operators.js","webpack://muze/webpack://DataModel/src/operator/natural-join.js","webpack://muze/(webpack)/buildin/module.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/SmartlabelManager.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/lib.js","webpack://muze/webpack://hyperdis/webpack/universalModuleDefinition","webpack://muze/webpack://hyperdis/webpack/bootstrap","webpack://muze/webpack://hyperdis/src/electric-node.js","webpack://muze/webpack://hyperdis/src/graph-node.js","webpack://muze/webpack://hyperdis/src/graph.js","webpack://muze/webpack://hyperdis/src/index.js","webpack://muze/webpack://hyperdis/src/model.js","webpack://muze/webpack://hyperdis/src/utils/index.js","webpack://muze/webpack://hyperdis/src/utils/set.js","webpack://muze/./packages/muze/src/index.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/container-manager.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisector.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisect.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/range.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ticks.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/threshold/sturges.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/map.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/nest.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/set.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/ordinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/band.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/define.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/lab.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/rgb.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/object.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/string.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/value.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/parse.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/date.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/round.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/decompose.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/zoom.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hsl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hcl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/piecewise.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/continuous.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatDecimal.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/exponent.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatSpecifier.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTrim.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatPrefixAuto.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatRounded.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTypes.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatGroup.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatNumerals.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionFixed.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/tickFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionPrefix.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionRound.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/nice.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/log.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/pow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/threshold.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/interval.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/millisecond.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/second.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/minute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/hour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/day.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/week.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/month.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/year.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMinute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcHour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcDay.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcWeek.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMonth.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcYear.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoParse.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/time.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20b.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20c.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/viridis.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/sequential.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Accent.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Dark2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Paired.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set3.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/ramp.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/BrBG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PRGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PiYG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PuOr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdGy.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/Spectral.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","webpack://muze/./packages/muze-utils/src/enums/namespace.js","webpack://muze/./packages/muze-utils/src/enums/reserved-fields.js","webpack://muze/./packages/muze-utils/src/enums/common-props.js","webpack://muze/./packages/muze-utils/src/enums/constants.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/axis.js","webpack://muze/./packages/muze-utils/node_modules/d3-path/src/path.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/arc.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/line.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/area.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/radial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/lineRadial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/diamond.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/star.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/square.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/triangle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/wye.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/noop.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/bundle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRom.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linearClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/monotone.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/natural.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/step.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/stack.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/cubic.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/poly.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/sin.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/bounce.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/back.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/elastic.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/RedBlackTree.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Edge.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Cell.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Beach.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Diagram.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/voronoi.js","webpack://muze/./packages/muze-utils/src/DataSystem/selection.js","webpack://muze/./packages/muze-utils/src/enums/stack-config.js","webpack://muze/./packages/muze-utils/src/common-utils.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/circle.js","webpack://muze/./packages/muze-utils/src/DataSystem/dataSelect.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/diverging.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/expand.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/wiggle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/pie.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespaces.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespace.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/creator.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selector.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selectorAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/matcher.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sparse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/enter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/data.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sort.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/window.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/classed.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/html.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/raise.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/lower.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/insert.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/clone.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/exit.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/order.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/call.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/nodes.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/node.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/size.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/empty.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/each.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/property.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/append.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/datum.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/local.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/sourceEvent.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/mouse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/touch.js","webpack://muze/./packages/muze-utils/node_modules/d3-dispatch/src/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/noevent.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/nodrag.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/event.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/drag.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timer.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timeout.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/schedule.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/tween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/interpolate.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selection.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attrTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/styleTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/delay.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/ease.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/interrupt.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/interrupt.js","webpack://muze/./packages/muze-utils/src/renderer-utils.js","webpack://muze/./packages/muze-utils/src/store.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/event-list.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/lifecycle-manager.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/index.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/helper.js","webpack://muze/./packages/muze-utils/src/index.js","webpack://muze/./packages/muze-firebolt/src/enums/actions.js","webpack://muze/./packages/muze-firebolt/src/enums/selection.js","webpack://muze/./packages/muze-firebolt/src/selection-set/index.js","webpack://muze/./packages/muze-firebolt/src/selection-set/selection-set.js","webpack://muze/./packages/muze-firebolt/src/helper/index.js","webpack://muze/./packages/muze-firebolt/src/firebolt.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/generic.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/volatile.js","webpack://muze/./packages/muze-firebolt/src/enums/behaviours.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/highlight.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/brush.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/filter.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/persistent.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/select.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-action-config.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-event.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/hover.js","webpack://muze/./packages/muze-firebolt/src/enums/constants.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/click.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/drag.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/longtouch.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/touch-drag.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/props.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/generic-sideeffect.js","webpack://muze/./packages/muze-firebolt/src/side-effects/surrogate.js","webpack://muze/./packages/muze-firebolt/src/side-effects/spawnable.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/helper.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/selection-box-drag.js","webpack://muze/./packages/muze-tooltip/src/constants.js","webpack://muze/./packages/muze-tooltip/src/default-config.js","webpack://muze/./packages/muze-tooltip/src/helper.js","webpack://muze/./packages/muze-tooltip/src/content.js","webpack://muze/./packages/muze-tooltip/src/tooltip.js","webpack://muze/./packages/muze-firebolt/src/enums/tooltip-strategies.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/strategies.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/helper/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/crossline/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/strategy.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/filter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/anchors/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/persistent-anchors.js","webpack://muze/./packages/muze-firebolt/src/side-effects/brush-anchors.js","webpack://muze/./packages/muze-firebolt/src/behaviour-effect-map.js","webpack://muze/./packages/visual-layer/src/enums/constants.js","webpack://muze/./packages/visual-layer/src/layers/area/default-config.js","webpack://muze/./packages/visual-layer/src/simple-layer/simple-layer.js","webpack://muze/./packages/visual-layer/src/base-layer/props.js","webpack://muze/./packages/visual-layer/src/enums/props.js","webpack://muze/./packages/muze-axis/src/enums/axis-orientation.js","webpack://muze/./packages/muze-axis/src/enums/scale-type.js","webpack://muze/./packages/muze-axis/src/enums/constants.js","webpack://muze/./packages/muze-axis/src/scale-creator.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/default-config.js","webpack://muze/./packages/muze-axis/src/axis-renderer.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/skip-ticks.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/space-setter.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/helper.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/props.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/simple-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/linear.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/log.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/pow.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/continous-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/band-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/time-axis.js","webpack://muze/./packages/muze-axis/src/color-axis/color-maps.js","webpack://muze/./packages/muze-axis/src/color-axis/defaults.js","webpack://muze/./packages/muze-axis/src/color-axis/props.js","webpack://muze/./packages/muze-axis/src/helper.js","webpack://muze/./packages/muze-axis/src/color-axis/color-strategy.js","webpack://muze/./packages/muze-axis/src/color-axis/color-axis.js","webpack://muze/./packages/muze-axis/src/size-axis/defaults.js","webpack://muze/./packages/muze-axis/src/size-axis/size-strategy.js","webpack://muze/./packages/muze-axis/src/size-axis/props.js","webpack://muze/./packages/muze-axis/src/size-axis/size-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/defaults.js","webpack://muze/./packages/muze-axis/src/shape-axis/props.js","webpack://muze/./packages/muze-axis/src/shape-axis/shape-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/helper.js","webpack://muze/./packages/muze-axis/src/polar-axis/props.js","webpack://muze/./packages/muze-axis/src/polar-axis/angle-axis.js","webpack://muze/./packages/visual-group/src/enums/constants.js","webpack://muze/./packages/muze-axis/src/polar-axis/radius-axis.js","webpack://muze/./packages/muze-axis/src/data-type-scale-map.js","webpack://muze/./packages/transform/src/group-transform/index.js","webpack://muze/./packages/transform/src/identity-transform/index.js","webpack://muze/./packages/transform/src/transform-factory/index.js","webpack://muze/./packages/transform/src/enums/transform-type.js","webpack://muze/./packages/transform/src/stack-transform/index.js","webpack://muze/./packages/visual-layer/src/helpers/index.js","webpack://muze/./packages/visual-layer/src/base-layer/local-options.js","webpack://muze/./packages/visual-layer/src/base-layer/listener-map.js","webpack://muze/./packages/visual-layer/src/base-layer/base-layer.js","webpack://muze/./packages/visual-layer/src/layers/line/renderer.js","webpack://muze/./packages/visual-layer/src/layers/line/default-config.js","webpack://muze/./packages/visual-layer/src/layers/line/line.js","webpack://muze/./packages/visual-layer/src/layers/area/renderer.js","webpack://muze/./packages/visual-layer/src/layers/area/area.js","webpack://muze/./packages/visual-layer/src/layers/arc/default-config.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc-helper.js","webpack://muze/./packages/visual-layer/src/layers/text/renderer.js","webpack://muze/./packages/visual-layer/src/layers/text/default-config.js","webpack://muze/./packages/visual-layer/src/layers/text/text.js","webpack://muze/./packages/visual-layer/src/layers/point/renderer.js","webpack://muze/./packages/visual-layer/src/layers/point/default-config.js","webpack://muze/./packages/visual-layer/src/layers/point/point.js","webpack://muze/./packages/visual-layer/src/layers/bar/renderer.js","webpack://muze/./packages/visual-layer/src/layers/bar/default-config.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar-helper.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar.js","webpack://muze/./packages/visual-layer/src/layers/tick/default-config.js","webpack://muze/./packages/visual-layer/src/layers/tick/renderer.js","webpack://muze/./packages/visual-layer/src/layers/tick/tick.js","webpack://muze/./packages/visual-layer/src/enums/layer-types.js","webpack://muze/./packages/visual-layer/src/layer-factory/layer-factory.js","webpack://muze/./packages/visual-layer/src/layer-factory/index.js","webpack://muze/./packages/visual-layer/src/defaults.js","webpack://muze/./packages/visual-group/src/visual-group/local-options.js","webpack://muze/./packages/visual-group/src/simple-group/simple-group.js","webpack://muze/./packages/visual-unit/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/visual-unit/src/helper/index.js","webpack://muze/./packages/visual-unit/src/enums/constants.js","webpack://muze/./packages/visual-unit/src/helper/grid-lines.js","webpack://muze/./packages/visual-unit/src/listener-map.js","webpack://muze/./packages/visual-unit/src/enums/reactive-props.js","webpack://muze/./packages/visual-unit/src/props.js","webpack://muze/./packages/visual-unit/src/firebolt/payload-generator.js","webpack://muze/./packages/visual-unit/src/firebolt/data-propagator.js","webpack://muze/./packages/visual-unit/src/firebolt/index.js","webpack://muze/./packages/visual-unit/src/firebolt/helper.js","webpack://muze/./packages/visual-unit/src/default-config.js","webpack://muze/./packages/visual-unit/src/local-options.js","webpack://muze/./packages/visual-unit/src/visual-unit.js","webpack://muze/./packages/visual-group/src/variable/variable.js","webpack://muze/./packages/visual-group/src/variable/composed-vars.js","webpack://muze/./packages/visual-group/src/variable/simple-var.js","webpack://muze/./packages/visual-group/src/encoder/field-sanitizer.js","webpack://muze/./packages/visual-group/src/encoder/visual-encoder.js","webpack://muze/./packages/visual-group/src/enums/scale-maps.js","webpack://muze/./packages/visual-group/src/data-type-scale-map.js","webpack://muze/./packages/visual-group/src/encoder/encoder-helper.js","webpack://muze/./packages/visual-group/src/encoder/cartesian-encoder.js","webpack://muze/./packages/visual-group/src/encoder/polar-encoder.js","webpack://muze/./packages/visual-group/src/encoder/retinal-encoder.js","webpack://muze/./packages/visual-group/src/group-helper/group-utils.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-model.js","webpack://muze/./packages/visual-group/src/group-helper/cell-creator.js","webpack://muze/./packages/visual-group/src/group-helper/resolver-props.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-resolver.js","webpack://muze/./packages/visual-group/src/visual-group/value-matrix.js","webpack://muze/./packages/visual-group/src/visual-group/helper.js","webpack://muze/./packages/visual-group/src/visual-group/change-listener.js","webpack://muze/./packages/visual-group/src/visual-group/props.js","webpack://muze/./packages/visual-group/src/visual-group/visual-group.js","webpack://muze/./packages/muze-legend/src/firebolt/behavioural/select.js","webpack://muze/./packages/muze-legend/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/muze-legend/src/firebolt/behaviour-effect-map.js","webpack://muze/./packages/muze-legend/src/enums/behaviours.js","webpack://muze/./packages/muze-legend/src/enums/side-effects.js","webpack://muze/./packages/muze-legend/src/enums/constants.js","webpack://muze/./packages/muze-legend/src/firebolt/helper.js","webpack://muze/./packages/muze-legend/src/firebolt/legend-firebolt.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/drag.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/hover.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/click.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/index.js","webpack://muze/./packages/muze-legend/src/enums/actions.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/selection-box-drag.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/selection-box/index.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/strategies.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/index.js","webpack://muze/./packages/muze-legend/src/legend/props.js","webpack://muze/./packages/muze-legend/src/legend/defaults.js","webpack://muze/./packages/muze-legend/src/legend/legend-helper.js","webpack://muze/./packages/muze-legend/src/legend/simple-legend.js","webpack://muze/./packages/muze-legend/src/legend/position-config.js","webpack://muze/./packages/muze-legend/src/legend/renderer.js","webpack://muze/./packages/muze-legend/src/legend/discrete-legend.js","webpack://muze/./packages/muze-legend/src/legend/gradient-helper.js","webpack://muze/./packages/muze-legend/src/legend/gradient-legend.js","webpack://muze/./packages/muze-legend/src/legend/step-legend.js","webpack://muze/./packages/muze/src/constants.js","webpack://muze/./packages/muze/src/operators.js","webpack://muze/./packages/muze/src/action-model.js","webpack://muze/./packages/muze/src/canvas/defaults.js","webpack://muze/./packages/muze/src/canvas/local-options.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/layoutComponent.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/dummy-component.js","webpack://muze/./packages/muze/src/defaults.js","webpack://muze/./packages/layout/src/tree-layout/constants/defaults.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/definitionModel.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/helper/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/tree/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/layout-model/index.js","webpack://muze/./packages/layout/src/enums/constants.js","webpack://muze/./packages/layout/src/tree-layout/utils/index.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-point.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-parser.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/helper.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/html-data.js","webpack://muze/./packages/layout/src/tree-layout/renderers/renderer.js","webpack://muze/./packages/layout/src/tree-layout/renderers/html-renderer.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/layout-def.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/index.js","webpack://muze/./packages/muze/src/canvas/helper.js","webpack://muze/./packages/muze/src/options.js","webpack://muze/./packages/layout/src/generic-layout/index.js","webpack://muze/./packages/layout/src/grid-layout/defaults.js","webpack://muze/./packages/layout/src/utils/index.js","webpack://muze/./packages/layout/src/visual-matrix/props.js","webpack://muze/./packages/layout/src/visual-matrix/default-config.js","webpack://muze/./packages/layout/src/visual-matrix/visual-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/row-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/column-matrix.js","webpack://muze/./packages/layout/src/grid-layout/computations.js","webpack://muze/./packages/layout/src/grid-layout/view-info-getter.js","webpack://muze/./packages/layout/src/grid-layout/layout.js","webpack://muze/./packages/layout/src/grid-layout/layout-helper.js","webpack://muze/./packages/layout/src/grid-layout/border-helper.js","webpack://muze/./packages/layout/src/grid-layout/span-maker.js","webpack://muze/./packages/muze/src/transaction-support.js","webpack://muze/./packages/muze/src/canvas/component-resolver.js","webpack://muze/./packages/visual-cell/src/enums/constants.js","webpack://muze/./packages/visual-cell/src/enums/cell-type.js","webpack://muze/./packages/visual-cell/src/simple-cell.js","webpack://muze/./packages/visual-cell/src/enums/defaults.js","webpack://muze/./packages/visual-cell/src/props.js","webpack://muze/./packages/visual-cell/src/axis-cell.js","webpack://muze/./packages/visual-cell/src/blank-cell.js","webpack://muze/./packages/visual-cell/src/text-cell.js","webpack://muze/./packages/visual-cell/src/geom-cell.js","webpack://muze/./packages/visual-cell/src/defaults.js","webpack://muze/./packages/visual-cell/src/constants.js","webpack://muze/./packages/visual-cell/src/cell-registry.js","webpack://muze/./packages/muze/src/canvas/title-maker.js","webpack://muze/./packages/muze/src/canvas/legend-maker.js","webpack://muze/./packages/muze/src/canvas/components/muze-chart-component.js","webpack://muze/./packages/muze/src/canvas/components/headerComponent.js","webpack://muze/./packages/muze/src/canvas/components/legendComponent.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/helper.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/props.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/scroll-component.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/horizontal-scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/vertical-scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/matrix-component.js","webpack://muze/./packages/muze/src/canvas/components/grid-component.js","webpack://muze/./packages/muze/src/enums/constants.js","webpack://muze/./packages/muze/src/canvas/components/message-component.js","webpack://muze/./packages/muze/src/canvas/component-wrapper-maker.js","webpack://muze/./packages/muze/src/canvas/scroll-manager.js","webpack://muze/./packages/muze/src/canvas/layout-maker.js","webpack://muze/./packages/muze/src/canvas/firebolt/group-firebolt.js","webpack://muze/./packages/muze/src/canvas/firebolt/index.js","webpack://muze/./packages/muze/src/canvas/app-state.js","webpack://muze/./packages/muze/src/canvas/canvas.js","webpack://muze/./packages/muze/src/default-registry.js","webpack://muze/./packages/visual-layer/src/layer-registry.js","webpack://muze/./packages/muze/src/muze.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","e","_typeof","a","default","description","homepage","version","license","main","keywords","author","repository","type","url","contributors","email","dependencies","d3-dsv","devDependencies","babel-cli","babel-core","babel-eslint","babel-loader","babel-plugin-transform-runtime","babel-preset-env","babel-preset-es2015","babel-preset-flow","chai","cross-env","eslint","eslint-config-airbnb","eslint-plugin-import","eslint-plugin-jsx-a11y","eslint-plugin-react","istanbul-instrumenter-loader","jsdoc","json2yaml","karma","karma-chai","karma-chrome-launcher","karma-coverage-istanbul-reporter","karma-mocha","karma-spec-reporter","karma-webpack","marked","mocha","mocha-webpack","transform-runtime","webpack","webpack-cli","webpack-dev-server","scripts","test","ut","utd","build","build:dev","build:prod","start","lint","lint-errors","docs","DataModel","data_format","FLAT_JSON","DSV_STR","DSV_ARR","AUTO","dimension_subtype","CATEGORICAL","TEMPORAL","GEO","BINNED","measure_subtype","CONTINUOUS","field_type","MEASURE","DIMENSION","filtering_mode","NORMAL","INVERSE","ALL","group_by_functions","SUM","AVG","MIN","MAX","FIRST","LAST","COUNT","STD","convertToNativeDate","date","Date","pad","DateTimeFormatter","format","this","dtParams","nativeDate","RegExp","escape","text","replace","TOKEN_PREFIX","DATETIME_PARAM_SEQUENCE","YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","defaultNumberParser","defVal","val","parsedVal","isFinite","parseInt","defaultRangeParser","range","nVal","toLowerCase","length","getTokenDefinitions","daysDef","short","long","monthsDef","H","index","extract","parser","formatter","getHours","toString","hours","P","M","getMinutes","S","getSeconds","K","getMilliseconds","join","day","getDay","A","getDate","b","month","getMonth","B","y","result","substring","presentDate","presentYear","Math","trunc","getFullYear","year","Y","getTokenFormalNames","definitions","HOUR_12","AMPM_UPPERCASE","AMPM_LOWERCASE","SHORT_DAY","LONG_DAY","DAY_OF_MONTH","DAY_OF_MONTH_CONSTANT_WIDTH","SHORT_MONTH","LONG_MONTH","MONTH_OF_YEAR","SHORT_YEAR","LONG_YEAR","tokenResolver","defaultResolver","arg","targetParam","arguments","hourFormat24","hourFormat12","ampmLower","ampmUpper","amOrpm","isPM","findTokens","tokenPrefix","tokenLiterals","keys","occurrence","forwardChar","indexOf","push","token","formatAs","nDate","formattedStr","String","formattedVal","parse","dateTimeStamp","options","extractTokenValue","dtParamSeq","noBreak","dtParamArr","args","resolverKey","resolverParams","resolverFn","param","resolvedVal","splice","apply","checkIfOnlyYear","unshift","tokenObj","lastOccurrenceIndex","occObj","occIndex","targetText","regexFormat","tokenArr","map","obj","occurrenceLength","extractValues","match","shift","getNativeDate","Number","len","v","store","fields","Array","forEach","fieldIndex","from","OBJECTSTRING","objectToStrFn","objectToStr","arrayToStr","checkCyclicRef","parentArr","bIndex","extend2","obj1","obj2","skipUndef","merge","tgtArr","srcArr","item","srcVal","tgtVal","str","cRef","isArray","isCallable","getUniqueId","getTime","round","random","isArrEqual","arr1","arr2","formatNumber","helper_detectDataFormat","data","field_store","createNamespace","fieldArr","dataId","fieldsObj","_cachedFieldsObj","field","getMeasure","measureFields","_cachedMeasure","schema","getDimension","dimensionFields","_cachedDimension","src_value","_classCallCheck","configurable","writable","_value","rowDiffsetIterator","rowDiffset","callback","split","diffStr","diffStsArr","end","InvalidAwareTypes","invalid_aware_types_classCallCheck","config","assign","_invalidAwareValsMap","invalidAwareVals","NULL","NA","NIL","invalid","nil","null","undefined","I","C","iterator","u","next","done","return","TypeError","DM_DERIVATIVES","SELECT","PROJECT","GROUPBY","COMPOSE","CAL_VAR","BIN","SORT","JOINS","CROSS","LEFTOUTER","RIGHTOUTER","NATURAL","FULLOUTER","getCommonSchema","fs1","fs2","retArr","fs1Arr","defaultFilterFn","crossProduct","dm1","dm2","filterFn","replaceCommonSchema","jointype","applicableFilterFn","dm1FieldStore","getFieldspace","dm2FieldStore","dm1FieldStoreName","dm2FieldStoreName","commonSchemaList","Error","tmpSchema","_rowDiffset","rowAdded","rowPosition","ii","tuple","userArg","partialField","dm1Fields","prepareJoinData","dm2Fields","detachedRoot","tupleObj","cellVal","iii","datamodel","defSortFn","a1","b1","mergeSort","arr","sortFn","merge_sort_sort","lo","hi","mid","floor","mainArr","auxArr","getSortFn","dataType","sortType","retFunc","groupData","hashMap","Map","groupedData","datum","fieldVal","has","set","createSortingFnArg","groupedDatum","targetFields","targetFieldDetails","label","reduce","acc","idx","difference_difference","hashTable","schemaNameArr","dm1FieldStoreFieldObj","dm2FieldStoreFieldObj","_colIdentifier","sort","prepareDataHelper","dm","addData","hashData","schemaName","fieldName","getFilteredValues","filter","invalid_aware_types","sum","filteredNumber","curr","avg","totalSum","isNaN","fnList","filteredValues","min","max","sqrt","mean","pow","num","defaultReducerName","reducer_store_ReducerStore","entries","_this","ve","reducer","_this2","__unregister","delete","Function","reducer_store","ge","naturalJoinFilter","commonSchemaArr","retainTuple","union_union","src_export","leftOuterJoin","dataModel1","dataModel2","rightOuterJoin","fields_field","field_classCallCheck","subtype","displayName","Se","dimension","_cachedDomain","calculateDataDomain","categorical","hash","Set","domain","add","temporal","temporal_classCallCheck","_cachedMinDiff","sortedData","arrLn","minDiff","POSITIVE_INFINITY","prevDatum","nextDatum","processedCount","_this3","binned","binsArr","bins","measure","unit","defAggFn","numberFormat","continuous","NEGATIVE_INFINITY","field_parser","Ve","categorical_parser","isInvalid","getInvalidType","trim","temporal_parser","temporal_parser_classCallCheck","_dtf","binned_parser","matched","parseFloat","continuous_parser","partial_field","partial_field_classCallCheck","_sanitize","createFields","dataColumn","headers","headersObj","header","$e","dataFormat","Qe","firstRowHeader","columns","column_major","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","JSON","stringify","it","delimiter","reFormat","DELIMITER","charCodeAt","parseRows","f","rows","N","eof","eol","j","slice","row","formatRow","formatValue","convert","columnSet","column","concat","formatRows","csv","src_dsv","tsv","ct","fieldSeparator","dsv","dsv_arr","ft","insertionIndex","lt","converters","FlatJSON","DSVStr","DSVArr","resp","persistDerivations","sourceDm","model","operation","_model$_derivation","criteriaFn","_derivation","op","meta","criteria","newDm","_newDm$_ancestorDeriv","_ancestorDerivation","generateRowDiffset","lastInsertedValue","li","getKey","fn","helper_filterPropagationModel","propModels","fns","filterByMeasure","clonedModel","clonedDm","clone","partialFieldspace","getPartialFieldspace","__calculateFieldspace","calculateFieldsConfig","modelFieldsConfig","getFieldsConfig","dataModel","keyFn","dataObj","getData","fieldsConfig","dimensions","dLen","indices","measures","fieldsSpace","valuesMap","present","every","propModel","select","saveChild","some","helper_cloneWithProject","projField","allFields","cloned","projectionSet","actualProjField","helper_sanitizeUnitSchema","unitSchema","sanitizeAndValidateSchema","supportedMeasureSubTypes","supportedDimSubTypes","helper_updateData","relation","default_config","converterFn","converter_namespaceObject","st","formattedData","dataHeader","fieldNameAs","as","nameSpace","_partialFieldspace","valueObjects","_iteratorNormalCompletion","_cachedValueObjects","_","_dataFormat","fieldInSchema","applyExistingOperationOnModel","selectionModel","getDerivations","derivation","_selectionModel","params","groupByString","propagateIdentifiers","propModelInf","nonTraversingModel","excludeModels","handlePropagation","_children","child","propagateToAllDataModels","identifiers","rootModels","propagationInf","propagationNameSpace","propagateToSource","propagationSourceId","sourceId","propagateInterpolatedValues","criterias","persistent","actionCriterias","values","mutableActions","filteredCriteria","entry","action","sourceActionCriterias","actionInf","actionConf","applyOnSource","models","path","_parent","_ref3","rootModel","propConfig","sourceIdentifiers","rootGroupByModel","groupByModel","inf","propagationModel","filteredModel","reverse","src_relation","relation_classCallCheck","source","Relation","_fieldStoreName","updateData","_propagationNameSpace","immutableActions","_fieldspace","helper_updateFields","fieldStoreName","colIdentifier","collID","partialFieldMap","newFields","coll","joinWith","unionWith","differenceWith","selectFn","defConfig","cloneConfig","helper_cloneWithSelect","selectConfig","_selectHelper","newRowDiffSet","rejRowDiffSet","lastInsertedValueRej","cachedStore","cloneProvider","selectorHelperFn","checker","passFn","oDm","rejCloned","constructor","setParent","fieldConfig","normalizedProjField","search","_fieldConfig","fieldObj","def","removeChild","findIndex","sibling","parent","ReferenceError","__proto__","getPrototypeOf","_onPropagation","setPrototypeOf","order","withUid","getAllFields","dataGenerated","dataBuilder","fieldStore","sortingDetails","retObj","uids","addUid","columnWise","reqSorting","tmpDataArr","colName","insertInd","sortMeta","fDetails","sortingFn","pop","tmpData","fieldNames","fmtFieldIdx","elem","fIdx","fmtFn","datumIdx","ids","Dt","fill","fieldsArr","reducers","newDataModel","group_by_groupBy","existingDataModel","sFieldArr","reducerObj","defReducer","defaultReducer","measureName","reducerFn","resolve","fieldStoreObj","dbName","dimensionArr","measureArr","rowCount","rawData","dataInCSVArr","sortedDm","colData","rowsCount","serializedData","rowIdx","colIdx","cachedValueObjects","fieldinst","dependency","replaceVar","depVars","retrieveFn","depFieldIndices","fieldSpec","fs","suppliedFields","computedValues","fieldsData","h","addField","addToNameSpace","isMutableAction","payload","find","sourceNamespace","filterImmutableAction","criteriaModel","eventName","measureFieldName","binFieldName","_createBinnedFieldDat","measureField","buckets","binsCount","binSize","dMin","dMax","ceil","abs","generateBuckets","bucketRanges","binnedData","findBucketRange","leftIdx","rightIdx","midIdx","binField","serialize","getSchema","stats_sum","stats_avg","stats_min","stats_max","stats_first","stats_last","stats_count","sd","std","Operators","compose","operations","currentDM","firstChild","derivations","dispose","bin","project","groupBy","calculateVariable","difference","naturalJoin","fullOuterJoin","union","Stats","DataFormat","FilteringMode","enums_namespaceObject","Gt","Rt","webpackPolyfill","deprecate","paths","children","_interopRequireDefault","_lib2","require","_containerManager2","slLib","init","doc","win","document","htmlSplCharSpace"," ","documentSupport","getDocumentSupport","SVG_BBOX_CORRECTION","isWebKit","SmartLabelManager","id","container","useEllipses","wrapper","prop","prevInstance","isBrowserLess","maxCacheLimit","maxDefaultCacheLimit","getElementById","createContainer","innerHTML","testStrAvg","isHeadLess","isIE","offsetHeight","offsetWidth","parentContainerStyle","style","parentContainer","_containerManager","_showNoEllipses","_init","setStyle","textToLines","smartlabel","lines","_calCharDimWithCache","calculateDifference","size","csArr","tw","twi","cachedStyle","asymmetricDifference","maxAdvancedCacheLimit","_container","cache","_advancedCache","advancedCacheKey","_advancedCacheKey","cacheName","fontSize","fontFamily","fontWeight","fontStyle","cacheInitName","repeat","width","height","_getWidthFn","contObj","_containerObj","svgText","bbox","textContent","getBBox","_styleNotSet","setLineHeight","sCont","node","_context","context","_cache","charCache","_lineHeight","lineHeight","useEllipsesOnOverflow","getSmartText","maxWidth","maxHeight","noWrap","trimStr","tempArr","tmpText","maxWidthWithEll","toolText","oriWidth","oriHeight","newCharIndex","nearestChar","tempChar","getWidth","initialLeft","initialTop","getOriSizeImproveObj","spanArr","x","minWidth","chr","elemRightMostPoint","elemLowestPoint","lastBR","removeFromIndex","removeFromIndexForEllipses","hasHTMLTag","maxStrWidth","lastDash","lastSpace","lastIndexBroken","strWidth","strHeight","oriTextArr","ellipsesStr","ellipsesWidth","dotWidth","characterArr","dashIndex","spaceIndex","lastLineBreak","fastTrim","ws","charAt","smartLabel","oriTextWidth","oriTextHeight","oriText","isTruncated","xmlTagRegEx","ltgtRegex","getOriSize","substr","getNearestBreakIndex","detailObj","tooltext","lastIndexOf","spanAdditionRegx","spanAdditionReplacer","classNameWithTag","classNameWithTagBR","childRetriverFn","childRetriverString","noClassTesting","classNameReg","className","spaceIdx","dashIdx","offsetLeft","offsetTop","parentNode","insertBefore","createElement","classNameBrReg","spanRemovalRegx","error","detailedCalculationFlag","textArr","letter","lSize","cumulativeSize","indiSizeStore","lib","userAgent","navigator","clsNameSpace","containerClass","brReplaceRegex","position","top","whiteSpace","padding","overflow","supportedStyle","font","font-family","font-weight","font-size","line-height","font-style","getElementsByClassName","opera","hasSVG","Boolean","SVGAngle","implementation","hasFeature","containerParent","body","appendChild","setAttribute","getElementsByTagName","sl","charLen","increment","avgWidth","styleObj","fSize","_typeof2","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","__WEBPACK_AMD_DEFINE_FACTORY__","ElectricNode","edges","listeners","nextFrame","currentFrame","_edges","lstnrs","_utils__WEBPACK_IMPORTED_MODULE_0__","GraphNode","qualifiedName","outgoingEdges","_seed","requireResolve","retriever","history","resolver","electricEdges","_len","dep","_key","seed","_toConsumableArray","retrieveDetails","edge","head","hist","Graph","qualifiedNodeMap","_graph_node__WEBPACK_IMPORTED_MODULE_1__","accumulate","_wholeSet","_propagate","propagationOverride","currentFrameListeners","nextFrameListeners","_schedule","qname","flushTarget","flush","mount","resolveReqList","rec","objn","perv","_node","addDependencies","getDependencies","getResolvedList","getUpstreamNodes","props","fnSpec","_ref","nodes","eNode","_electric_node__WEBPACK_IMPORTED_MODULE_2__","addEdges","changedSet","upstreamNodes","upstreamNode","__execUniqueElectricEdges","cfLstnrs","nfLstnrs","toArray","repeatHead","resetPropagationOverride","_this4","_len2","qnames","_key2","update","resolved","resolveDependencyOrder","__webpack_exports__","_model__WEBPACK_IMPORTED_MODULE_0__","Model","_graph","_graph__WEBPACK_IMPORTED_MODULE_0__","_lockFlag","_reqQ","mountPoint","_addPropInModel","_customResolver","calculationConfig","customResolver","varName","fetchFn","_utils__WEBPACK_IMPORTED_MODULE_1__","_defineProperty","createNodesFrom","instantCall","_graph$stopPropagatio","propsArr","unsub","createElectricNodeOf","stopPropagation","setPropagationOverride","resetNodeValue","_graph$stopPropagatio2","setProp","getNodeValue","getNodeFromQualifiedName","isSimpleObject","reqAnimFrame","setTimeout","getTimeBasedId","__lastTime","__id","pullableRecent","nFn","pullableEnd","unique","flat","res","identityMap","arrays","splitPathProp","pathArr","scheduler","onFinishCallback","queue","animationFrame","tempQ","fetch","namedNode","fetchAggregator","_len3","_key3","list","placedIndex","preArr","postArr","_len4","_key4","nodeDetails","identity","resolveMap","neighbour","CustomResolver","_dep","makeEntry","sCon","ForeignSet","_set","set1","set2","filteredKeys","s1","s2","Muze","ContainerManager","maxContainers","svg","first","last","containers","rootNode","createElementNS","setAttributeNS","svgRoot","diff","containerObj","keyStr","prev","removeContainer","addContainer","avgCharWidth","display","cObj","ascending","NaN","bisector","compare","ascendingComparator","left","right","ascendingBisect","bisectRight","number","array","src_range","stop","step","e10","e5","e2","src_ticks","count","ticks","tickIncrement","power","log","LN10","tickStep","step0","step1","quantile","valueof","i0","value0","each","remove","clear","empty","src_nest","sortValues","rollup","nest","sortKeys","depth","createResult","setResult","keyValue","valuesByKey","createObject","setObject","createMap","setMap","sortKey","k","proto","implicit","ordinal","unknown","scale","copy","band","bandwidth","ordinalRange","paddingInner","paddingOuter","align","rescale","sequence","rangeRound","invertExtent","r0","r1","hiIndex","getClosestIndexOf","invert","side","highVal","d1","low","high","extend","definition","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color","exec","Rgb","rgbn","rgba","hsla","g","rgbConvert","rgb","opacity","hex","Hsl","hsl","hslConvert","hsl2rgb","m1","m2","displayable","brighter","darker","deg2rad","PI","rad2deg","Xn","Yn","Zn","t0","t1","t2","t3","labConvert","Lab","Hcl","cos","sin","z","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","hcl","D","E","ED","EB","BC_DA","cubehelix","cubehelixConvert","Cubehelix","bl","basis","v0","v1","v2","v3","cosh","sinh","src_constant","linear","hue","constant","gamma","nogamma","exponential","src_rgb","rgbGamma","colorRgb","rgbSpline","spline","colors","rgbBasis","src_number","reA","reB","src_string","am","bm","bs","bi","lastIndex","q","one","zero","cssNode","cssRoot","cssView","svgNode","value_typeof","string","setTime","nb","na","valueOf","src_round","degrees","translateX","translateY","rotate","skewX","scaleX","scaleY","decompose","atan","interpolateTransform","pxComma","pxParen","degParen","translate","xa","ya","xb","yb","interpolateTransformCss","parseCss","documentElement","defaultView","transform","getComputedStyle","getPropertyValue","interpolateTransformSvg","parseSvg","baseVal","consolidate","matrix","SQRT2","colorHsl","hslLong","colorHcl","cubehelixGamma","colorCubehelix","cubehelixLong","piecewise","interpolate","d3_scale_src_constant","d3_scale_src_number","deinterpolateLinear","bimap","deinterpolate","reinterpolate","d0","polymap","bisect","target","clamp","output","input","interpolateValue","deinterpolateClamp","reinterpolateClamp","interpolateRound","formatDecimal","toExponential","coefficient","src_exponent","re","formatSpecifier","specifier","FormatSpecifier","sign","symbol","comma","precision","prefixExponent","locale","formatPrefix","formatTrim","out","i1","formatRounded","exponent","formatTypes","%","toFixed","toPrecision","X","toUpperCase","src_identity","prefixes","src_locale","group","grouping","thousands","formatGroup","currency","decimal","numerals","formatNumerals","percent","newFormat","prefix","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","Infinity","defaultLocale","formatLocale","src_tickFormat","precisionPrefix","precisionRound","precisionFixed","linearish","tickFormat","nice","interval","x0","x1","pow10","powp","base","exp","logp","log10","log2","reflect","logs","pows","raise","thresholds","threshold","quantiles","quantize","newInterval","floori","offseti","offset","previous","millisecond","durationMinute","durationWeek","second","getUTCSeconds","minute","hour","setHours","setDate","getTimezoneOffset","weekday","sunday","monday","tuesday","wednesday","thursday","friday","saturday","setMonth","setFullYear","utcMinute","setUTCSeconds","getUTCMinutes","utcHour","setUTCMinutes","getUTCHours","utcDay","setUTCHours","setUTCDate","getUTCDate","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","utcYear","setUTCFullYear","localDate","L","utcDate","UTC","newYear","timeFormat","utcFormat","utcParse","pads","-","0","numberRe","percentRe","requoteRe","requote","formatRe","names","formatLookup","parseWeekdayNumberSunday","w","parseWeekdayNumberMonday","parseWeekNumberSunday","U","parseWeekNumberISO","V","parseWeekNumberMonday","W","parseFullYear","parseYear","parseZone","Z","parseMonthNumber","parseDayOfMonth","parseDayOfYear","parseHour24","parseMinutes","parseSeconds","parseMilliseconds","parseMicroseconds","parseLiteralPercent","parseUnixTimestamp","Q","parseUnixTimestampSeconds","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","timeDay","timeYear","formatMilliseconds","formatMicroseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekdayNumberMonday","formatWeekNumberSunday","timeSunday","formatWeekNumberISO","timeThursday","formatWeekdayNumberSunday","formatWeekNumberMonday","timeMonday","formatYear","formatFullYear","formatZone","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","getUTCMilliseconds","formatUTCMicroseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","dow","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","formatLiteralPercent","formatUnixTimestamp","formatUnixTimestampSeconds","locale_dateTime","dateTime","locale_date","locale_time","time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","periodLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatShortWeekday","formatWeekday","formatShortMonth","formatMonth","formatPeriod","utcFormats","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","formatUTCMonth","formatUTCPeriod","parses","parseShortWeekday","parseWeekday","parseShortMonth","parseMonth","parseLocaleDateTime","parseSpecifier","parsePeriod","parseLocaleDate","parseLocaleTime","newParse","newDate","week","toISOString","durationSecond","durationHour","durationDay","durationMonth","durationYear","calendar","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickIntervals","tickInterval","src_time","timeMonth","timeWeek","timeHour","timeMinute","timeSecond","timeMillisecond","src_colors","interpolateCubehelixLong","ramp","sequential","interpolator","d3_scale_chromatic_src_colors","src_ramp","scheme","interpolateRgbBasis","warm","cool","sequential_multi_rainbow","ts","magma","inferno","plasma","UNIT_GLOBAL_NAMESPACE","UNIT_LOCAL_NAMESPACE","LAYER_LOCAL_NAMESPACE","LAYER_GLOBAL_NAMESPACE","GROUP_GLOBAL_NAMESPACE","GROUP_LOCAL_NAMESPACE","CANVAS_LOCAL_NAMESPACE","CANVAS_GLOBAL_NAMESPACE","ReservedFields","ROW_ID","CommonProps","ACTION_INF","ON_LAYER_DRAW","MATRIX_CREATED","COORD_TYPES","DATA_TYPE","d3_axis_src_identity","bottom","epsilon","entering","__axis","axis","orient","tickArguments","tickValues","tickTransform","tickSizeInner","tickSizeOuter","tickPadding","spacing","range0","range1","center","selection","selectAll","tick","tickExit","exit","tickEnter","enter","append","attr","line","insert","transition","getAttribute","tickSize","pi","tau","tauEpsilon","Path","_x0","_y0","_x1","_y1","moveTo","closePath","lineTo","quadraticCurveTo","y1","bezierCurveTo","x2","y2","arcTo","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","a0","ccw","dx","dy","cw","da","rect","d3_shape_src_constant","halfPi","asin","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","cornerTangents","rc","ox","oy","x11","y11","x10","y10","x00","y00","d2","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","Linear","areaStart","_line","areaEnd","lineStart","_point","lineEnd","point","curve_linear","src_line","pointX","pointY","defined","curve","curveLinear","buffer","defined0","src_area","area","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","src_descending","d3_shape_src_identity","curveRadial","Radial","_curve","radial","symbol_circle","draw","symbol_cross","tan30","tan30_2","diamond","kr","kx","ky","star","square","sqrt3","triangle","wye","noop","that","Basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","BasisOpen","Bundle","beta","_basis","_beta","_x","_y","custom","bundle","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","CardinalOpen","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","alpha","_alpha","x23","y23","curve_catmullRom","catmullRom","CatmullRomClosed","CatmullRomOpen","LinearClosed","slope3","h0","h1","s0","slope2","MonotoneX","MonotoneY","ReflectContext","Natural","controlPoints","_t0","px","py","Step","_t","curve_step","stepBefore","stepAfter","none","series","order_none","stackValue","order_ascending","sums","cubicInOut","polyIn","polyOut","polyInOut","b2","b3","b4","b5","b6","b7","b8","b9","b0","bounceOut","backIn","overshoot","backOut","backInOut","elasticOut","elasticIn","amplitude","period","d3_voronoi_src_constant","elasticInOut","RedBlackTree","RedBlackNode","R","RedBlackRotateLeft","tree","RedBlackRotateRight","RedBlackFirst","after","grandpa","uncle","createEdge","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","ax","ay","connectEdge","fm","fb","lx","ly","rx","ry","fx","fy","cellHalfedgeAngle","cell","site","va","vb","cellHalfedgeStart","cellHalfedgeEnd","firstCircle","circlePool","attachCircle","lArc","rArc","lSite","cSite","rSite","bx","by","epsilon2","ha","hc","circle","Circle","before","circles","detachCircle","beachPool","createBeach","beach","Beach","detachBeach","beaches","removeBeach","disappearing","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","extent","sortCellHalfedges","clipEdges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","cover","dc","v00","v01","v11","v10","polygons","polygon","triangles","e1","links","radius","_found","vx","vy","src_voronoi","voronoi","Selection","idGetter","_dataObjects","_updateData","_enterData","_exitData","_idGetter","newData","entryData","exitdata","tempMap","duplicateData","updatedData","newSelection","dataObjects","defaultValue","_mode","mergedObjects","mergedData","newdata","sortSel","sortSelection","kA","kB","objects","DimensionSubtype","STRING","FUNCTION","HTMLElement","common_utils_typeof","sanitizeIP","typeObj","nonExistentKeys","checkExistence","getMax","common_utils_toConsumableArray","getMin","getDomainFromData","fieldType","domArr","_loop","_fields","_slicedToArray","field0","field1","arr0","firstMin","secondMin","firstMax","secondMax","sanitizeDomainWhenEqual","unionDomain","domains","_ref2","dom","symbolFns","symbolCircle","cross","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolWye","symbolTriangle","easeFns","cubic","easeCubic","bounce","easeBounce","elastic","easeElastic","back","easeBack","poly","easePoly","circleInOut","getNearestValue","filterData","getWindow","getQualifiedClassName","requestAnimationFrame","cancelAnimationFrame","cls","objectIterator","Voronoi","common_utils_classCallCheck","_voronoi","_voronoiFn","getObjProp","intSanitizer","generateGetterSetters","propInfo","_propInfo$","sanitization","preset","onset","typeChecker","isEqual","oldVal","newVal","arraysEqual","is","ERROR_MSG","INTERFACE_IMPL","mergeRecursive","sink","createSelection","sel","appendObj","idFn","dataSelect","mergedSelection","exitSelection","getObjects","inst","numberInterpolator","interpolateNumber","piecewiseInterpolator","rgbToHsv","detectColor","col","getDataModelFromRange","selFields","selFn","getDataModelFromIdentifiers","filteredDataModel","dataArr","filteredSchema","include","propField","isValidValue","getSymbol","stackOrders","_stackOrders","stackOrderNone","stackOrderAscending","stackOffsets","_stackOffsets","yp","yn","stackOffsetNone","si","sij0","s3","sk","stack","orderNone","offsetNone","oz","kz","sz","sij","ki","d3Stack","pathInterpolators","curveStepAfter","curveStepBefore","curveStep","curveCatmullRom","Symbols","axisLeft","axisRight","axisTop","axisBottom","pie","descending","arcs","pa","cornerRadius","padRadius","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","p0","p1","oc","intersect","x3","y3","x32","y32","kc","lc","centroid","Scales","scaleBand","getSmallestDiff","points","timeFormats","timeDurations","formatTemporal","nearestInterval","getNearestInterval","getValueParser","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","retrieveNearestGroupByReducers","measureFieldNames","filteredReducers","getAncestorDerivations","nearestReducers","derv","retrieveFieldDisplayName","xhtml","src_namespaces","xlink","xml","xmlns","src_namespace","namespaces","space","local","creator","fullname","namespace","creatorFixed","ownerDocument","creatorInherit","uri","namespaceURI","src_selector","selector","querySelector","selectorAll","querySelectorAll","matcher","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","sparse","EnterNode","_next","__data__","keyPrefix","bindIndex","groupLength","dataLength","bindKey","nodeByKeyValue","keyValues","src_window","styleValue","classArray","classList","ClassList","_names","classedAdd","classedRemove","contains","textRemove","htmlRemove","nextSibling","lower","previousSibling","constantNull","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","event","mouseenter","mouseleave","filterContextListener","listener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","typename","on","__on","removeEventListener","capture","onAdd","wrap","addEventListener","customEvent","sourceEvent","dispatchEvent","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","groups","parents","_groups","_parents","subgroups","subnode","subgroup","enterGroup","updateGroup","_enter","_exit","groups0","groups1","m0","merges","group0","group1","compareNode","sortgroups","sortgroup","getAttributeNS","attrRemoveNS","removeAttributeNS","attrRemove","removeAttribute","attrFunctionNS","attrFunction","attrConstantNS","attrConstant","priority","styleRemove","removeProperty","styleFunction","setProperty","styleConstant","propertyRemove","propertyFunction","propertyConstant","classed","classedFunction","classedTrue","classedFalse","textFunction","textConstant","html","htmlFunction","htmlConstant","deep","typenames","parseTypenames","dispatch","dispatchFunction","dispatchConstant","src_select","nextId","Local","current","src_point","ownerSVGElement","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","clientTop","mouse","changedTouches","src_touch","touches","identifier","touch","Dispatch","T","types","nopropagation","stopImmediatePropagation","noevent","preventDefault","nodrag","view","__noselect","MozUserSelect","d3_drag_src_constant","DragEvent","subject","active","defaultFilter","button","defaultContainer","defaultSubject","defaultTouchable","src_drag","mousedownx","mousedowny","mousemoving","touchending","touchable","gestures","clickDistance2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","beforestart","mousemoved","mouseupped","yesdrag","noclick","clearTimeout","sublisteners","clickDistance","taskHead","taskTail","frame","timeout","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","timer_typeof","now","setFrame","clearNow","Timer","_call","_time","timer","delay","restart","wake","timerFlush","nap","sleep","poke","clearInterval","setInterval","src_timeout","elapsed","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","self","tween","state","duration","ease","schedule","tweenValue","_id","transition_interpolate","interpolateRgb","interpolateString","Transition","_name","newId","selection_prototype","inherit","id0","id1","onFunction","on0","on1","sit","attrTween","value00","value10","interpolate0","value1","attrTweenNS","styleTween","styleRemoveEnd","removeFunction","tweenRemove","tween0","tween1","tweenFunction","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","defaultTiming","easeCubicInOut","interrupt","selectElement","makeElement","elemType","callbacks","SVGElement","selectorVal","selectorType","actualSelector","enterSel","mergeSel","exitSel","applyStyle","setElementAttrs","attrs","setAttrs","setStyles","styles","createElements","getClientPoint","pos","clientPoint","getEvent","d3event","getD3Drag","d3drag","getSmartComputedStyle","css","textEl","mandatoryStyle","fill-opacity","renderer_utils_typeof","computedStyle","styleForSmartLabel","hasTouch","initProp","fetchPropValues","propNames","deps","setContexts","contexts","propObj","contextMap","_didIteratorError","_iteratorError","_step","_iterator","depProps","err","registerListener","propList","callBack","_options$","namespaceInf","callbackFn","namespaceVal","commits","_savedCommits","propListenerMap","_propListenerMap","listenersObj","_registeredListeners","_contextMap","contextsObj","commitsObj","subNamespaces","propDeps","nm","fnInf","store_toConsumableArray","registerPropInMaps","registeredListeners","subNamespace","allProps","_fnCount","addListenerToNamespace","_listeners","namespaceListeners","listenerTypes","removePropValue","propInf","sns","Store","store_classCallCheck","_commits","_queuedProps","_locked","store_createClass","lockModel","lock","unlockModel","unlock","lockCommits","locked","unlockCommits","queuedProps","_params","store_slicedToArray","propName","_params2","commit","addSubNamespace","propFns","nsObj","retrieveNamespaces","disableListener","sanitizedVal","savedCommits","disabled","registerChangeListener","registerImmediateListener","computed","calculatedProp","_this$model","unsubscribeAll","unsubscribe","listenersMap","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","removeSubNamespace","listenerMap","snsMap","transactor","holder","conf","stateProps","nameSpaceProp","nsProp","compareTo","_len5","_key5","paramsLen","prevVal","spreadParams","typeCheck","typeExpected","oldValues","events","EVENT_LIST","composition","resolveFn","notification","hasOwn","LifeCycleManager","lifecycle_manager_classCallCheck","_eventList","_promises","_notifiers","_lifeCycles","_unreleasedLifeCycles","_boot","_preparePromises","Promise","promise","_makeNotifierPromise","createPromise","then","prm","formalName","client","_releasePromisesFromCache","_notify","stage","_resolvePromise","retrieve","_callLifeCycleCallback","_cachePromise","_resetTargetPromise","lifeCycles","DRAG","HOVER","SELECTIONDRAG","CLICK","LONGTOUCH","TOUCHDRAG","ALL_ACTIONS","SELECTION_NEW_ENTRY","SELECTION_NEW_EXIT","SELECTION_NULL","SELECTION_OLD_ENTRY","SELECTION_OLD_EXIT","SelectionSet","completeSet","_volatile","selection_set_classCallCheck","_completeSetCount","_lockedSelection","_resetted","entrySet","exitSet","lockedSel","addSet","removeSet","updateSet","changeSideEffectAvailability","toEnable","sideEffects","change","enable","disable","getMergedSet","helper_toConsumableArray","conditionsMap","mergedEnter","SELECTION","mergedExit","complete","getSetInfo","selectionSet","propagationData","resetted","getModelFromSet","conditions","condition","Firebolt","actions","behaviourEffectMap","firebolt_classCallCheck","_sideEffectDefinitions","_sideEffects","_propagationInf","_actions","behavioural","physical","_selectionSet","_volatileSelectionSet","_propagationFields","_sourceSideEffects","selectionBox","_propagationBehaviourMap","_sourceBehaviours","_actionBehaviourMap","_config","_behaviourEffectMap","_entryExitSet","_actionHistory","_queuedSideEffects","mapSideEffects","registerBehaviouralActions","registerSideEffects","registerPhysicalBehaviouralMap","physicalBehaviouralMap","registerPhysicalActions","setSideEffectConfig","sideEffect","sideEffectConf","behEffectMap","preventDefaultActions","effectNames","effects","firebolt_toConsumableArray","behaviours","initializeBehaviouralActions","dispatchableBehaviours","Action","prepareSelectionSets","initializeSideEffects","sideEffectStore","actionHistory","queuedSideEffects","combinedSet","unionSets","behaviour","entryExitSet","existingModel","aggFns","effect","firebolt_typeof","sideEffectInstance","isEnabled","mutates","dispatchSideEffect","propagationInfo","propagate","getSideEffects","propagationSelectionSet","getPropagationSelectionSet","shouldApplySideEffects","sourceSelectionSet","applicableSideEffects","getApplicableSideEffects","applySideEffects","physicalAction","actionBehaviourMap","behaviourMap","mapActionsAndBehaviour","onDataModelPropagation","propValue","dispatchBehaviour","uniqueIds","behaviouralActions","volatileSelectionSet","sideEffectDefinitions","sideEffectsMap","SideEffect","initedActions","initializePhysicalActions","physicalActions","phyAction","initedPhysicalActions","mapObj","getDefaultTargetContainer","bindActionWithBehaviour","targets","behaviourList","entryRowIds","getUids","propagationSource","applicableSelectionSets","GenericBehaviour","firebolt","generic_classCallCheck","_enabled","selectionSets","getSelectionSets","_this$firebolt$getAdd","getAddSetFromCriteria","getPropagationInf","setSelectionSet","getEntryExitSet","_selectionSet$getSets","getSets","getFullData","setConfig","isSourceFieldPresent","getSourceFields","VolatileBehaviour","reset","existingAddSet","updateExit","getCompleteSet","BRUSH","HIGHLIGHT","TOOLTIP","FILTER","HighlightBehaviour","BrushBehaviour","BEHAVIOURNAMES","FilterBehaviour","PersistentBehaviour","updateEntry","mergedExitSet","completeSetCount","SelectBehaviour","getDragActionConfig","sourceInfo","axes","xAxis","yAxis","axisFields","xField","getMembers","yField","xFieldType","yFieldType","stPos","startPos","endPos","dragDim","MeasureSubtype","isXDimension","isYDimension","xRange","yRange","selectedDomains","rangeObj","xdom","ydom","snap","getNearestRange","attachDragEvent","targetEl","drawingInf","touchStart","d3Drag","getDrawingContext","getSourceInfo","beh","dragEnd","hover","interaction","tooltip","svgContainer","nearestPoint","getNearestPoint","getAllPoints","showInPosition","generatePayloadFromEvent","click","physical_defineProperty","_physicalActions","ACTIONNAMES","longtouch","touchEnd","touchdrag","PROPS","valueParser","GenericSideEffect","generic_sideeffect_classCallCheck","_strategy","_strategies","defaultConfig","SurrogateSideEffect","interactionType","layers","layer","interactive","applyInteractionStyle","SpawnableSideEffect","_drawingContext","changeVisibility","sideEffectGroup","visible","defClassName","classPrefix","SelectionBox","boxConf","box","drawingContext","unitWidth","unitHeight","selectionGroupClassName","hide","sourceInf","_getBoxDimensionsFrom","getBoxDimensionsFromPayload","direction","xDim","yDim","xLinear","yLinear","xCriteria","yCriteria","x1Val","x2Val","bandScale","x1DomainIndex","x2DomainIndex","_sort2","helper_slicedToArray","getScaleValue","getUnitWidth","y1Val","y2Val","y1DomainIndex","y2DomainIndex","_sort4","_xDim","_yDim","show","selectionBoxDrag","onDrag","boxClassName","INITIAL_STYLE","connectorClassName","margin","content","iconContainerSize","iconScale","iconShape","iconColor","rowMargin","separator","parentClassName","arrow","getArrowPos","dim","measurement","arrowPos","boxHeight","boxWidth","arrowWidth","plotBottom","boxBottom","plotRight","boxRight","placeArrow","tooltipArrow","_tooltipArrow","tooltipBackground","_tooltipBackground","arrowConf","_arrowOrientation","Content","content_classCallCheck","_model","_formatter","ctx","_mount","displayFormat","table","tbody","margin-right","el","shape","Tooltip","htmlContainer","tooltip_classCallCheck","connectorContainer","tooltipConf","contentClass","_tooltipContainer","_contentContainer","_contents","_tooltipConnectorContainer","qualifiedClassName","addClass","defConf","contentConfig","reorderContainers","contentConf","render","_target","repositionArrow","arrowDisabled","arrowOrient","outsidePlot","connector","_offset","orientation","_extent","arrowSize","topSpace","dimX","rightSpace","leftSpace","positionTop","positionRight","positionLeft","positionHorizontal","positionVertical","_position","_arrowPos","HIGHLIGHT_SUMMARY","GROUP_BY_FUNCTIONS","formatters","strategies_defineProperty","getDefaultTooltipFormatterFn","defaultFormatter","getRowContent","fieldInf","dataInf","formattedValue","measureIndex","dimensionMeasureMap","timeDiffs","defFormatter","fieldspace","dataLen","nf","FieldType","formatterFn","uniqueVals","strategies_toConsumableArray","colorAxis","shapeAxis","sizeAxis","isRetinalField","associatedMeasures","icon","getColor","getShape","getSize","formattedKey","measureFormatter","margin-left","buildTooltipData","fieldValues","detailFields","containsDetailField","getTabularData","allMeasures","_construct","strategies","aggregatedModel","fieldsConf","measureNames","configResolvers","tooltip_defineProperty","_configResolvers","specificConf","_default","_getPrototypeOf2","side_effects_tooltip_classCallCheck","tooltip_possibleConstructorReturn","tooltip_getPrototypeOf","_tooltips","sanitizeConfig","strategyObj","sanitizedConf","setStrategy","totalHeight","totalWidth","isEmpty","tooltips","boundBox","dataModels","fragmented","showVertically","tooltipPos","boxes","tooltip_toConsumableArray","sourceFields","plotDimensions","getPlotPointsFromIdentifiers","strategy","strategyConf","dataTransform","projectFields","plotDim","dt","layoutContainer","parentContainerDimensions","layoutBoundBox","unitBoundBox","tooltipInst","TooltipRenderer","timeDiffsByField","strategyFn","positionRelativeTo","tooltipBoundBox","getContents","spaceOutBoxes","spaceOutIfOverlap","firstBox","secondBox","opposite","highlightSummary","selectionSummary","projectedFields","Crossline","bandWidth","_this$config","bandClass","lineClass","elemData","axisIndex","fieldInst","xOffset","plotWidth","crossline_toConsumableArray","getPlotSpan","getPlotPadding","startPx","endPx","dataPoint","parentGroup","fade","fadeFn","focus","highlight","PlotHighlighter","plot_highlighter_classCallCheck","plot_highlighter_possibleConstructorReturn","plot_highlighter_getPrototypeOf","FilterEffect","entryModel","clearCaching","resetData","enableCaching","AnchorEffect","anchors_classCallCheck","anchors_possibleConstructorReturn","anchors_getPrototypeOf","_layersMap","addAnchorLayers","addLayer","layerRegistry","layerDefs","layerDef","mark","layerCls","shouldDrawAnchors","depLayerEncoding","encoding","defaultSizeValue","commonName","groupId","calculateDomain","getTransitionConfig","owner","registry","_linkedLayer$getTrans2","anchors_slicedToArray","getLayerByName","getTransformedDataFromIdentifiers","transformedData","transformedDataModel","PersistentAnchors","BrushAnchors","behaviour_effect_map_defineProperty","BEHAVIOURS","SIZE","COLOR","SHAPE","TEXT","ENCODING","X0","Y0","RADIUS","RADIUS0","ANGLE","ANGLE0","nearestPointThreshold","strokeOpacity","connectNullData","SimpleLayer","props_defineProperty","metaInf","coord","_customConfig","newConf","defaultPolicy","BOTTOM","TOP","LEFT","RIGHT","axisOrientationMap","axis_orientation_defineProperty","_axisOrientationMap","AxisOrientation","LINEAR","BAND","TIME","ORDINAL","QUANTIZE","QUANTILE","LOG","POW","IDENTITY","SEQUENTIAL","THRESHOLD","CONTINOUS","DISCRETE","HIDDEN","DEFAULT_ANGLE_DOMAIN","scaleLinear","scales","scaleThreshold","scaleLog","scalePow","scaleIdentity","scaleOrdinal","scaleSequential","scaleQuantize","scaleQuantile","scaleTime","scaleMap","scale_creator_defineProperty","_scaleMap","ScaleType","createScale","scaleFactory","adjustRange","axisName","axisNamePadding","fixedBaseline","labels","rotation","smartTicks","numberOfTicks","showAxisName","showInnerTicks","showOuterTicks","yOffset","rotateAxis","instance","tickText","labelManager","renderConfig","getTickSize","yShift","xShift","tickLabelDim","quadrant","rotationNormalizer","angleToRadian","angle","changeTickOrientation","selectContainer","axisInstance","_smartTicks","isSmartTicks","registerAnimationDoneHook","setFixedBaseline","setAxisNamePos","textNode","axisNameHeight","availableSpace","longestWord","quarter","halfYearly","mintues","seconds","getTickIntervalFnBasedOnNumberOfTicks","possibleTickLevelIndex","maxPossibleTicks","tickIntervalLevelInfo","tickIntervalInfo","numOfPossibleTicks","getActualTickInterval","noOfTicks","minWidthBetweenTicks","_minTickDistance","getTickIntervalBasedOnCurrentLevel","_dependencies","longestWordType","applyTickSkipping","minTickDistance","minTickSpace","_minTickSpace","minTickWidth","maxTicks","getSkippedTicks","actualNumberOfTicks","_minDiff","millisecondInterval","numOfTicksAccordingToMinDiff","adjustHorizontalRange","adjustVerticalRange","rangeAdjustmentMap","space_setter_defineProperty","_rangeAdjustmentMap","setAxisRange","rangeBounds","getAdjustedRange","getAxisOffset","timeDiff","avWidth","bars","spaceSetter","spaceConfig","heightForTicks","_context$availableSpa2","availWidth","availHeight","isOffset","_context$renderConfig2","_context$getAxisDimen","getAxisDimensions","tickDimensions","allTickDimensions","axisNameDimensions","tickDimHeight","tickDimWidth","namePadding","labelConfig","minTickHeight","getTickValues","tickShifter","maxTickSpaces","widthForTicks","totalTickWidth","getRotatedSpaces","rotatedHeight","rotatedWidth","setOffset","logicalSpace","getAxisComponentDimensions","axisTicks","largestTick","largestTickDimensions","smartTick","_context$renderConfig","labelFunc","_tickLabelStyle","originalLabel","getFormattedText","_axisNameStyle","getHorizontalAxisSpace","axisDimensions","_context$config2","axisDimHeight","minTickDiff","getMinTickDifference","cartesian_axis_helper_toConsumableArray","getVerticalAxisSpace","_context$config3","calculateBandSpace","largestDimHeight","_getHorizontalAxisSpa","_getVerticalAxisSpace","getValidDomain","userDom","setContinousAxisDomain","_domain","axisComponentDimensions","oldConfig","mockedOldConfig","shouldAxesScaleUpdate","hasAxesConfigChanged","properties","tickFormatter","sanitizeTickFormatter","_scale","_axis","createAxis","_tickFormatter","resetRenderConfig","_renderConfig","_maxTickSpaces","SimpleAxis","simple_axis_classCallCheck","_range","_domainLock","_axisDimensions","defCon","simpleConfig","bodyElem","dist","_animationDonePromises","domainValue","setAxisComponentDimensions","smartAxisName","axisClass","_objectSpread","setTickConfig","setSmartAxisName","_this$config2","dimType","widthDim","getSmartAxisName","oriSize","domainVal","computeAxisDimensions","_getAxisComponentDime","labelHeight","labelWidth","calculateContinousSpace","_context$renderConfig6","axisNameWidth","_getHorizontalAxisSpa2","_getVerticalAxisSpace2","renderAxis","tickLabelStyle","axisTickFormatter","labelProps","labelOffset","all","LinearInterpolator","LogInterpolator","PowInterpolator","interpolatorMap","continous_axis_defineProperty","_interpolatorMap","ContinousAxis","continous_axis_classCallCheck","continous_axis_possibleConstructorReturn","continous_axis_getPrototypeOf","InterpolatorCls","_interpolator","_this$renderConfig","sanitizeDomain","_get2","_get","_this$renderConfig2","newTickValues","tickSpace","getNumberOfTicks","labelDim","numberOfValues","tickLength","_this$smartTicks$","BandAxis","_this$maxTickSpaces","_getRotatedSpaces","paddingNormalized","formatTickValue","TimeAxis","time_axis_classCallCheck","time_axis_possibleConstructorReturn","time_axis_getPrototypeOf","time_axis_get","rawTicks","resetTickInterval","_context$config8","_context$availableSpa","adjustedRange","x11Colors","Pink","LightPink","HotPink","DeepPink","PaleVioletRed","MediumVioletRed","LightSalmon","Salmon","DarkSalmon","LightCoral","IndianRed","Crimson","FireBrick","DarkRed","Red","OrangeRed","Tomato","Coral","DarkOrange","Orange","Gold","Yellow","LightYellow","LemonChiffon","LightGoldenrodYellow","PapayaWhip","Moccasin","PeachPuff","PaleGoldenrod","Khaki","DarkKhaki","Cornsilk","BlanchedAlmond","Bisque","NavajoWhite","Wheat","BurlyWood","Tan","RosyBrown","SandyBrown","Goldenrod","DarkGoldenrod","Peru","Chocolate","SaddleBrown","Sienna","Brown","Maroon","DarkOliveGreen","Olive","OliveDrab","YellowGreen","LimeGreen","Lime","LawnGreen","Chartreuse","GreenYellow","SpringGreen","MediumSpringGreen","LightGreen","PaleGreen","DarkSeaGreen","MediumSeaGreen","SeaGreen","ForestGreen","Green","DarkGreen","MediumAquamarine","Aqua","Cyan","LightCyan","PaleTurquoise","Aquamarine","Turquoise","MediumTurquoise","DarkTurquoise","LightSeaGreen","CadetBlue","DarkCyan","Teal","LightSteelBlue","PowderBlue","LightBlue","SkyBlue","LightSkyBlue","DeepSkyBlue","DodgerBlue","CornflowerBlue","SteelBlue","RoyalBlue","Blue","MediumBlue","DarkBlue","Navy","MidnightBlue","Lavender","Thistle","Plum","Violet","Orchid","Fuchsia","Magenta","MediumOrchid","MediumPurple","BlueViolet","DarkViolet","DarkOrchid","DarkMagenta","Purple","Indigo","DarkSlateBlue","SlateBlue","MediumSlateBlue","White","Snow","Honeydew","MintCream","Azure","AliceBlue","GhostWhite","WhiteSmoke","Seashell","Beige","OldLace","FloralWhite","Ivory","AntiqueWhite","Linen","LavenderBlush","MistyRose","Gainsboro","LightGray","Silver","DarkGrey","Grey","DimGrey","LightSlateGrey","SlateGrey","DarkSlateGrey","Black","palette","DEFAULT_GRADIENT_COLOR","DEFAULT_CONFIG","stops","getHslString","hslArr","convertToXllString","baseString","getActualHslColor","paletteColor","hexToHsv","props_toConsumableArray","newConfig","uniqueValues","treatNullMeasures","scaledVal","minDomainScaledVal","resolveAxisConfig","propVal","defaultVal","getStops","newStops","color_strategy_toConsumableArray","rangeStops","newStopsLength","newRange","hslInterpolator","interpolateHslLong","indexedDomain","scaleDomain","indexedDomainMeasure","normalDomain","steppedDomain","_getStops","continousSteppedDomain","_getStops2","uniqueRange","indexedRange","numVal","normalRange","strategyGetter","domainType","rangeType","schemeType","color_strategy_defineProperty","domainRange","ColorAxis","color_axis_classCallCheck","_domainType","_rangeType","_schemeType","getSchemeType","_colorStrategy","setColorStrategy","updateDomain","colorStrategy","getScheme","colorSchemes","hslColorArray","getRawColor","color_axis_toConsumableArray","scaleInfo","domainRangeFn","transformationArr","newH","newS","newL","newA","size_strategy_defineProperty","size_strategy_strategies","pieceWiseRange","size_strategy_toConsumableArray","intervals","newIntervals","discreteRange","SizeAxis","size_axis_classCallCheck","_sizeStrategy","domainInfo","domainFn","generator","ShapeAxis","shape_axis_classCallCheck","_generatedShapes","shapeType","shapeGenerator","generatorFn","generatedShapes","createAngleValues","angleData","_angleFn","_angleValues","AngleAxis","angle_axis_classCallCheck","customDomain","customRange","_this$_range","angle_axis_slicedToArray","ROWS","COLUMNS","COL","ROW","CELL","X_AXES","Y_AXES","ENTRY_CELLS","EXIT_CELLS","PRIMARY","SECONDARY","adjustDomain","minOuterRadius","RadiusAxis","radius_axis_classCallCheck","_radiusFactor","sanitizedRange","rangeVal","DATA_TYPES","group_transform","data_type_scale_map_defineProperty","_dataTypeScaleMap","groupByIndices","nestCollection","nestFn","identityTransform","transformMap","transform_factory_defineProperty","_transformMap","uniqueField","valueField","normalizedData","normalizeData","uniqueFieldIndex","valueFieldIndex","seriesKeyIndex","seriesKeys","tuples","rowObj","_tuple","seriesKey","newArr","orderBy","orderIndex","groupByIndex","localeCompare","stackData","seriesData","transformFactory","POLAR","CARTESIAN","transfromColor","styleType","intensity","stateColor","originalColor","fillColorInfo","transformColor","interactionStyles","elements","getPlotElementsFromSet","_d$meta","colorTransform","helpers_slicedToArray","getAxesScales","_map2","_map4","xScale","yScale","encodingFieldInfRetriever","helpers_defineProperty","_encodingFieldInfRetr","encodingInf","getIndividualClassName","individualClassName","classNameStr","dataNormalizers","_dataNormalizers","encodingFieldInf","radiusFieldIndex","angleFieldIndex","radius0FieldIndex","angle0FieldIndex","fieldsLen","pointObj","radius0","angle0","enc","rowId","transformType","xFieldIndex","yFieldIndex","x0FieldIndex","y0FieldIndex","domainCalculator","_domainCalculator","layerInst","angleValues","radius0Field","encodingFieldsInf","xFieldSubType","yFieldSubType","x0Field","y0Field","yEnc","xEnc","attachDataToVoronoi","helpers_toConsumableArray","updateStyle","positionPoints","positioner","encodingTransform","getPlotMeasurement","dimensionalValues","fieldInfo","_bandScale","span","groupSpan","offsetValues","actualGroupWidth","dataProps","innerPadding","getGroupSpan","isAxisBandScale","axisPadding","groupPadding","resolveInvalidTransformType","_context$encodingFiel","groupByField","groupByFieldMeasure","getValidTransformForAggFn","resolvedInvalidTransformType","_context$encodingFiel2","isCustomTransformTypeProvided","resolveEncodingValues","transformedValues","getColorMetaInf","getHslArray","getCoordValue","trig","coordValueGetter","toCartesianCoordinates","rangePlot","_point$update","_coordValueGetter","sortData","axisArr","localOptions","local_options_defineProperty","STATE_NAMESPACES","listener_map_slicedToArray","_cacheEnabled","_cachedData","encodingValue","resolveTransformType","_transformedData","getTransformedData","_normalizedData","getNormalizedData","calculateDomainFromData","layerNs","groupNs","BaseLayer","base_layer_classCallCheck","base_layer_possibleConstructorReturn","base_layer_getPrototypeOf","base_layer_assertThisInitialized","alias","_points","_measurement","_graphicElems","_store","_this$metaInf2","parentNamespace","_encodingFieldsInf","_encodingTransform","_alias","transformData","encodingType","_this$metaInf3","transformedDataArr","_updateLock","_transformType","getValidTransform","pointMap","_pointMap","_dataProps","_this$encodingFieldsI","base_layer_slicedToArray","xMeasure","yMeasure","_identifiers$","_identifiers$2","xMeasureIndex","yMeasureIndex","getAllAttrs","filteredPoints","base_layer_toConsumableArray","sizeVal","_identifiers$getData","identifierData","identifierSchema","_this$encodingFieldsI2","tupleArr","transformedVal","graphicElems","elems","_this$metaInf5","rowIndex","unitRowIndex","colIndex","unitColIndex","renderLayer","throwback","_context$metaInf","base_layer_defineProperty","getState","base_layer_construct","userConf","drawLine","curveInterpolatorFn","linepath","LineLayer","line_classCallCheck","line_possibleConstructorReturn","line_getPrototypeOf","isXDim","isYDim","xPx","yPx","resolvedEncodings","stroke","cachePoint","seriesClassName","containerSelection","colorField","colorFieldIndex","animateGroup","groupTransition","groupAnimateStyle","stroke-opacity","getPathStyle","translatePoints","colorValFn","colorVal","getDrawFn","searchRadius","_point$data$data","getIdentifiersFromData","layerId","drawArea","easeEffect","renderer_slicedToArray","enterAreaPath","updateAreaPath","selectionEnter","AreaLayer","area_get","area_getPrototypeOf","_getAxesScales","classNameFn","minYVal","basePos","y0Px","invalidY","invalidY0","resolvedValues","stroke-width","stroke-linejoin","states","fadeout","selected","ArcLayer","arc_classCallCheck","arc_possibleConstructorReturn","arc_getPrototypeOf","_prevPieData","_this$axes","radiusAxis","pieIndex","prevData","angleV","angles","_angles","uid","getOuterRadius","getInnerRadius","startAngle0","endAngle0","_previousInfo","getPreviousPoint","currIndex","prevArc","nextArc","_context$axes$angle$r2","arc_helper_slicedToArray","qualClassName","_arcFn","consecutiveExits","exitCounter","tweenPie","individualClass","tweenExit","exitArr","oldExitCounter","tweenExitPie","consecutiveExitArr","gElem","pieSlices","pieSliceInf","tData","drawText","selectionMerge","backgroundVal","textanchor","textStyle","background","backgroundPadding","_smartLabel$getOriSiz","backgroundEl","alignment-baseline","defaultEncoding","alignmentBaseLine","defRotation","pointTranslators","polar","textEncoding","angleAxis","textFormatter","backgroundEncoding","backgroundValue","cartesian","textField","textFieldIndex","textValue","text_slicedToArray","TextLayer","text-anchor","drawSymbols","createShape","groupElement","Element","newShape","nodeName","src","href","shapeElement","pathStr","checkPath","exitGroup","defColorStyle","fillOpacity","shapes","sizes","PointLayer","point_classCallCheck","point_possibleConstructorReturn","point_getPrototypeOf","_config$offset","offsetX","offsetY","point_slicedToArray","maxSize","generateDataPoints","point_toConsumableArray","drawFn","getMarkId","_maxSize","_getPlotMeasurement2","widthMetrics","heightMetrics","offsetXValues","offsetYValues","measurementConf","getMeasurementConfig","widthSpan","heightSpan","distanceLimit","drawRects","barEnterFn","transitionBars","selTransition","positionRetriever","isNegativeVal","barBasePos","resolveDimByField","axesInfo","spaceType","sizeEncoding","sizeConfig","sizeValue","enterSpace","minVal","maxVal","diffPx","minDomVal","_positionRetriever$ty2","bar_helper_slicedToArray","resolveDimensions","_resolveDimByField","enterWidth","enterX","xPos","_resolveDimByField2","enterHeight","BarLayer","bar_classCallCheck","bar_possibleConstructorReturn","bar_getPrototypeOf","_plotPadding","_plotSpan","bar_get","getTranslatedPoints","normalizedDataArr","clipElement","clipPathElement","bar_slicedToArray","barWidthMetrics","barHeightMetrics","barWidthOffsets","barHeightOffsets","barWidth","barWidthOffset","barHeight","barHeightOffset","uniqueFieldType","pointFound","bar_toConsumableArray","p2","tick_renderer","ticksEnter","angle0Axis","angle0V","angles0","_angles2","_layerInst$encodingFi","_config$span","xSpan","ySpan","x0Px","TickLayer","drawTicks","AREA_LAYER","ARC_LAYER","LINE_LAYER","TEXT_LAYER","POINT_LAYER","BAR_LAYER","TICK_LAYER","SIMPLE_LAYER","BASE_LAYER","sanitizeEncoding","layerFactory","compositeLayers","factoryObj","setLayerRegistry","reg","_layerRegistry","getSerializedConf","serializedDefs","defs","unitLayerDef","sDef","parseLayerDefinition","layerType","strs","layer_factory_toConsumableArray","getLayerInstance","instances","layerObj","layerConstructor","getLayerClass","composeLayers","sanitizeLayerConfig","DEFAULT_LAYERS","defaults_defineProperty","_DEFAULT_LAYERS","LAYER_TYPES","local_options","visual_group_local_options_defineProperty","_CONFIG$ROWS$COLUMNS$","SimpleGroup","action_behaviour_map_defineProperty","ACTIONS","sanitizeLayerDef","sanitizedDefs","sConf","unionDomainFromLayers","layerAxisIndex","getDataDomain","domainValues","layerDomain","fieldDomain","encodingDomain","fieldStr","domain1","renderLayers","_lifeCycleManager","notify","orderedLayers","layerParentGroup","layerDepOrder","getDependencyOrder","graph","dependencyOrder","visited","visit","_layerDepOrder","_timeDiffs","getLayersBy","searchBy","removeLayersBy","createRenderPromise","_renderedPromise","_renderedResolve","radiusAxes","getRadiusRange","isXandYMeasures","_context$fields","src_helper_slicedToArray","xMeasures","yMeasures","GRID_BAND","GRID_LINE","getGridLayerDefinitions","axisType","getDefaultVisibilty","getLayerDefinition","_definition","_axes","_encoding","gridLines","gridBands","gridLineColor","zeroLineColor","gridBandColor","isLinearScale","grid_lines_defineProperty","isNegativeDomain","_context$axes","dimensionSubTypes","getValidSubtype","attachDataToGridLineLayers","_gridLines","_gridBands","gridLayerData","getGridLayerData","gridData","jsonData","_jsonData$push","grid_lines_toConsumableArray","calculateDomainListener","_layerAxisIndex","src_listener_map_slicedToArray","fieldsVal","removeExitLayers","layersMap","markSet","queuedLayerDefs","_queuedLayerDefs","layerDefArr","defFn","listener_map_toConsumableArray","hasPlotSpan","axesObj","temporalFields","filteredFields","_ref5","_ref6","minimumConsecutiveDifference","_ref7","_ref8","_timeDiffsByField","originalData","cachedData","createSelectionSet","attachPropagationListener","_ref9","createGridLineLayer","vuConf","atomicDef","_ref11","_ref12","transformDataModels","transformVal","_ref15","_ref16","layerAxisIndexVal","axesVal","attachDataToLayers","transformedDataModels","dataSource","_dimensionMeasureMap","getDimensionMeasureMap","retinalEncodingsAndMeasures","_layer$encodingFields","sizeField","shapeField","_retinalEncodingsAndM","src_helper_toConsumableArray","retinalFields","attachAxisToLayers","axisInf","src_props_defineProperty","_PROPS","payloadGenerator","brush","selectionDataModel","propPayload","getRangeFromData","propCriteria","fieldMap","isDimension","payload_generator_toConsumableArray","__default","propagateValues","propagationFieldInf","propagationFields","sideEfffects","mergedModel","sourceUnit","sourceCanvas","parentAlias","propagationBehaviour","propFields","facetByFields","getModelWithFacetData","schema1","data1","derivedSchema","dataAtFirstPos","data_propagator_toConsumableArray","behaviourInstance","propagationConf","sourceBehaviour","enabled","propConf","UnitFireBolt","unitId","aliasName","propagationSourceCanvas","sourceUnitId","sourceSideEffects","sideEffectInstances","actionOnSource","mappedEffects","se","sideEffectChecker","_getSelectionRejectio","getSelectionRejectionModel","propValuesMap","rejectionModel","_propModel$getData","exitRowIds","rowIdsObj","_cachedValuesMap","enabledFn","payloadFn","sourceIdentifierFields","sourceBehaviours","trackerClassName","arcLayerClassName","sideEffectClassName","src_local_options","src_local_options_defineProperty","_CONFIG$LAYERDEFS$TRA","getValuesMap","_model$getData","fieldIndices","local_options_toConsumableArray","oldData","unitNs","VisualUnit","visual_unit_classCallCheck","lifeCycleManager","_gridLinesSelection","_gridBandsSelection","_this$_dependencies","fireboltDeps","_firebolt","_rootSvg","class","renderGridLineLayers","gridLineParentGroup","_entry","grid_lines_slicedToArray","parentGroupClass","_sideEffectGroup","createSideEffectGroup","initSideEffects","rootSvg","_this$parentContainer","parentContainerInf","layerDefinition","layerDefinitions","components","layerIndex","layersArr","_layersArr","markId","defArr","getLayerFromDef","existingLayer","instanceArr","instanceValues","visual_unit_toConsumableArray","layerdeps","depArr","resolveEncodingTransform","resolvable","getLayerAxisIndex","_layer$config","specificField","encodingField","_this$_dependencies2","parentModel","dimValue","getNearestDimensionalValue","entryVal","pointInf","getMarkInfFromLayers","markInf","parsedIdentifiers","transposeArray","getPointsFromIdentifiers","localNs","visual_unit_slicedToArray","visual_unit_defineProperty","dispatchQueuedSideEffects","firebolt_helper_toConsumableArray","clearActionHistory","visual_unit_construct","Variable","ComposedVars","composed_vars_classCallCheck","composed_vars_possibleConstructorReturn","composed_vars_getPrototypeOf","vars","_vars","_data","member","getMinDiff","SimpleVariable","simple_var_classCallCheck","simple_var_possibleConstructorReturn","simple_var_getPrototypeOf","oneVar","_oneVar","dtFormat","dateFormat","fieldDef","varInst","convertToVar","transformFields","field_sanitizer_slicedToArray","normalizedFields","normalizeFields","norFields","orderFields","fieldArray","temporalArr","categoricalArr","fieldList","numOfMeasures","allDimensions","field_sanitizer_toConsumableArray","rowsInfo","columnsInfo","rowDimensions","rowMeasures","rowTemporalFields","rowCategoricalFields","columnDimensions","columnMeasures","columnTemporalFields","columnCategoricalFields","VisualEncoder","_fieldInfo","_axisFrom","_headerFrom","__headerFrom","axisFrom","_getHeaderAxisFrom2","visual_encoder_slicedToArray","getHeaderAxisFrom","rowHeader","rowAxis","_getHeaderAxisFrom4","colHeader","colAxis","headerFrom","scaleMaps","dataTypeScaleMap","generateAxisFromMap","axesCreators","facetFields","axisKey","groupAxes","currentAxes","cacheMaps","commonAxisKey","getAxisKey","axisConfig","getAxisConfig","axisInfo","axisOrientation","columnIndex","rawUserAxisConfig","userAxisConfig","_rotationLock","createSimpleAxis","Cls","sanitizeIndividualLayerConfig","encodingConfigs","getIndex","arrIndex","CartesianEncoder","geomCellAxes","projections","rowFields","columnFields","geomCell","xAxes","yAxes","units","1","rIdx","unitsArr","_loop2","cIdx","len2","encodingDomains","axisTypeIndex","typeOfField","_resolver$axes","axesArr","adjustedDomain","typeOfAxis","alignZeroLine","getAdjustedDomain","y1ratio","y2ratio","allSameSign","currentFieldName","sortingOrder","sortCategoricalField","sortOrder","firstVal","secondVal","facets","counter","primaryFacets","secondaryFacets","primaryFields","secondaryFields","primaryLen","secondaryLen","projArr","primaryField","secondaryField","facet","existIndex","axisFromIndex","cartesian_encoder_get","cartesian_encoder_getPrototypeOf","groupedModel","encodingObj","retriveDomainFromData","layerArray","serializedLayers","userLayerConfig","layerConfig","retinalConfig","colField","colFieldName","rowField","configs","rowFieldName","rowFieldType","getDefaultMark","colFieldType","defConfigs","layerConfigs","getLayerConfFromFields","colFields","encodingArr","encoder_helper_toConsumableArray","xFields","yFields","colFieldExist","rowFieldExist","layerConf","mergedLayerConf","serializedLayerConfig","cartesian_encoder_toConsumableArray","axesCls","polar_encoder_defineProperty","_axesCls","PolarEncoder","pieAxes","matrixLayers","resolverAxes","varInstances","encType","userConfig","domainProps","matrixInstance","unitDomains","setRadiusFactor","sizeFieldIndex","sizeMultiplier","getSizeMultiplier","sizeAxisDomain","encodingFields","_layers","sanitizedRows","sanitizedColumns","polar_encoder_get","polar_encoder_getPrototypeOf","sanitizedFields","typeIndex","fieldSet","polar_encoder_toConsumableArray","layerEncoding","sanitizedConfig","angleField","angle0Field","RetinalEncoder","newAxes","createRetinalAxis","fieldProps","getAxisType","isDistributionEqual","group_utils_toConsumableArray","rowType","initializeCacheMaps","cellMap","xAxesMap","yAxesMap","entryCellMap","exitCellMap","headerCreator","fieldHeaders","TextCell","getHeaderText","rowLength","getEncoder","encoder","hasPolarEncodings","userAxisFromConfig","group_utils_slicedToArray","firstField","secondField","firstFieldType","secondFieldType","setFacetsAndProjections","_encoder$simpleEncode","simpleEncoder","getFacetsAndProjections","group_utils_defineProperty","getBorders","matrices","showRowBorders","showColBorders","showValueBorders","valueMatrix","_rows","leftRows","rightRows","_columns","topColumns","bottomColumns","_encoder$fieldInfo","allDimensionLength","allMeasuresLength","allTemporalFieldsLength","getRowBorders","borders","getColumnsBorders","getValueBorders","borderTypeRow","borderTypeCol","sortFacetFields","facetNames","sortInfo","sortConfig","getSchemaDef","getFieldNames","fields1","matrix_model_toConsumableArray","createSelectedDataModel","uniqueKeyGenerator","keyArray","nextDepthUniqueValues","projectRows","allColumnProjections","rowProjections","optionalProjections","_getFieldNames2","matrix_model_slicedToArray","projFieldNames","colProjFieldNames","pushToMatrix","valueCellCreator","_matrix$rowIndex","facetInfo","colProjections","rowProj","projIdx","_getFieldNames4","rowProjFieldNames","projectedDm","formatKeys","formatterList","formattedKeys","rKeys","createValueCells","suppliedLayers","GeomCell","horizontalAxis","verticalAxis","datamodelTransform","layerConfigArr","getLayerConfig","normalizedColumns","normalizedRows","allFacets","cell_creator_toConsumableArray","rowFacets","colFacets","facetField","geomCellKey","getCellKey","columnId","updateCells","facetKey","extractAxisIndex","createAxisCells","currObj","axisInst","_axisInst$config","AxisCell","BlankCell","extractFacetIndex","headerPlaceholderGn","selectionObj","selectionKeys","keySet","textCells","createTextCells","textCell","generatePlaceholders","facetsAndProjections","encoders","valuesMatrix","rowKeys","columnKeys","takeAxisFrom","takeHeaderFrom","axisPlaceholderGn","selObj","axesMatrix","selObjProp","axesForDraw","rowsPrimary","rowPrime","rowsSecondary","rowSec","columnsPrimary","colPrime","columnsSecondary","colSec","_selectionObj","section","hContext","getAxisFields","fieldHolder","ac","transformDataModel","resolvedData","extractFields","layerFields","_ref4","flattenArray","getFieldsFromSuppliedLayers","suppliedLayerConfig","aggregationFns","nearestAggFns","resolvedAggFns","sortDmTemporalFields","computeMatrices","componentRegistry","globalConfig","autoGroupBy","otherEncodings","matrixGnContext","getCellDef","isRowSizeEqual","isColumnSizeEqual","colCells","rowCells","resetSimpleAxes","newCacheMap","valueCellContext","serializeLayerConfig","valueMatrixInfo","getMatrixModel","rowDataModels","colProj","firstLevelRowKeys","_rowDataModels","rowFacetFieldNames","selectedDataModel","newProjectedDataModels","_rowDataModels2","colFacetNames","firstLevelColumnKeys","dme","rIndex","cIndex","formattedColKeys","rawFormat","formattedRowKeys","transposedColKeys","valueCellsCreator","removeExitCells","exitCells","qualifiedStateProps","getQualifiedStateProps","placeholder","_mutateAxesFromMap","mutateAxesFromMap","xAxisSet","yAxisSet","axisId","createUnits","_generateMatrices","generateMatrices","leftHeaders","topHeaders","bottomHeaders","rightHeaders","cell_creator_slicedToArray","leftFacets","rightFacets","rowPriority","colPriority","leftMatrix","rightMatrix","topMatrix","bottomMatrix","currentBottomLength","setAvailableSpace","rowMatrix","columnMatrix","RESOLVER_PROPS","MatrixResolver","matrix_resolver_classCallCheck","_registry","_layerConfig","_matrixLayers","_rowMatrix","_columnMatrix","_valueMatrix","_facets","_projections","_datamodelTransform","_units","_cacheMaps","_fireboltDeps","maps","matrix_resolver_toConsumableArray","_horizontalAxis","_verticalAxis","matrixType","matrix_resolver_defineProperty","_this5","sideEffectRegistry","_this$dependencies","unitConfig","extractUnitConfig","_this$getAllFields","retContext","getRetinalFieldsDomain","retinalEncoder","setCommonDomain","_this6","retinalAxes","updateModel","placeholders","bottomLeft","bottomRight","_this$dependencies3","showHeaders","matrix_resolver_slicedToArray","topCols","bottomCols","rowHeaders","blankCellCreator","footers","topLeft","topRight","ValueMatrix","matrixArr","value_matrix_classCallCheck","instancesById","cellValue","_instancesById","_matrix","_filterFn","rowWidth","currentRowWidth","getLogicalSpace","rowHeight","currentRowHeight","setMatrixInstances","_composition","createMatrices","matrixConfig","unsubscribeChangeListeners","sanitizeRetinalConfig","retinalConf","confValue","groupType","fieldSanitizer","setAxisAndHeaders","placeholderInfo","getMatrices","_groupedDataModel","createRetinalAxes","setDomains","cornerMatrices","createHeaders","metaData","border","unionUnitDomains","registerDomainChangeListener","visual_group_props_defineProperty","visual_group_props_PROPS","cellRegistry","VisualGroup","visual_group_classCallCheck","visual_group_possibleConstructorReturn","visual_group_getPrototypeOf","componentSubRegistry","visual_group_assertThisInitialized","_selection","initializeGlobalState","globalState","createUnitState","_VisualUnit$getState2","visual_group_helper_slicedToArray","localState","createLayerState","_BaseLayer$getState2","setupChangeListeners","stores","comp","getListeners","storeInst","listenerInf","variable","findInGroup","channel","group_utils_this","facetType","projType","getRetinalAxes","getSimpleAxes","_this$resolver$getAll","visual_group_defineProperty","info","existingRemoveSet","select_toConsumableArray","firebolt_action_behaviour_map_defineProperty","action_behaviour_map_actionBehaviourMap","propagationBehaviourMap","_propagationBehaviour","firebolt_behaviour_effect_map_defineProperty","firebolt_behaviour_effect_map_behaviourEffectMap","propagationSideEffects","_propagationSideEffec","SCALE_FUNCTIONS","VALUE","canvasAlias","rawVal","check","assembleModelFromIdentifiers","temp","src_firebolt_helper_toConsumableArray","LegendFireBolt","_Firebolt","legend_firebolt_classCallCheck","legend_firebolt_possibleConstructorReturn","legend_firebolt_getPrototypeOf","legend_firebolt_inherits","legend_firebolt_createClass","behaviourName","getCriteriaFromData","firebolt_physical_defineProperty","physical_physicalActions","boundingBox","gradientDimensions","axisScale","rangeShifter","drag_defineProperty","getSelectionCriteria","selectionBoxMeasure","drawingInfMeasure","subjectStartPoint","gradientDimension","legendGradContainer","legendSelGroup","enterFn","getMousePos","boundingClientRect","selection_box_drag_defineProperty","fadeOut","brighten","LegendHighlighter","legend_highlighter_classCallCheck","legend_highlighter_possibleConstructorReturn","legend_highlighter_getPrototypeOf","legendContainer","resetLogicalSpace","title","_title","ALIGN","DEFAULT_MEASUREMENT","LEGEND_TITLE","borderStyle","borderColor","bounds","upper","ICON_MAP","getScaleInfo","scaleType","steps","scaleFn","getInterpolatedArrayData","domainForLegend","scaleParams","requiredWidth","requiredHeight","upperBound","maxTickDiff","alignment","smartLabelCalc","minimumTickSize","_smartLabelCalc$getOr","isInteger","getcomputedArray","computationhelper","requiredMeasure","availableMeasure","currentTickValue","nextTickValue","measureParam","pixelPerTick","getInterpolatedData","recomputeSteps","getTickMeasure","_scaleParams$measures","interpolatedFn","tickValue","getDomainBounds","domainBounds","domainLeg","ele","legend_helper_defineProperty","getScaleFactor","SimpleLegend","simple_legend_classCallCheck","_metaData","_fieldName","_labelManager","_cells","defaultMeasurement","_computedStyle","legendBehaviours","_canvasAlias","getItemMeasures","_labelManager$getOriS","_this$measurement","effPadding","effBorder","effMargin","dataFromScale","titleSpace","getTitleSpace","titleHeight","titleWidth","labelSpaces","getLabelSpaces","_computeItemSpaces","computeItemSpaces","maxItemSpaces","textOrientation","itemSpaces","iconSpaces","maxIconWidth","labelSpace","itemSpace","iconSpace","newLabelWidth","titleSpaces","_this$measurement2","_this$config3","titleCreator","titleContainer","marginPosition","_this$config4","_this$measurement3","renderTitle","simple_legend_defineProperty","legendOrientation","position_config_defineProperty","_legendOrientation","datasets","itemContainerMeasures","getStepSpacesInfo","iconHeight","iconWidth","stepPadding","horizontal","vertical","positionConfig","_positionConfig","alignmentMap","_alignmentMap","itemStack","_itemStack","createLegendSkeleton","gradWidth","gradHeight","maxGradHeight","maxGradWidth","legendBody","legendItem","getItemContainers","legendInstance","positionObj","createItemSkeleton","_context$config","itemSkeleton","alignClass","applyItemStyle","measureType","stepColorCheck","_context$measurement","renderIcon","defaultIcon","DiscreteLegend","_getScaleInfo","discrete_legend_toConsumableArray","_field$schema","discrete_legend_defineProperty","discrete_legend_get","discrete_legend_getPrototypeOf","renderDiscreteItem","_context$measurement2","_item$icon","text-align","getGradientDomain","accumulator","currentValue","MAX_VALUE","MIN_VALUE","legendGradSvg","legendGradCont","linearGradient","makeLinearGradient","legendRect","GradientLegend","gradient_legend_toConsumableArray","gradient_legend_defineProperty","newAxis","axisSpace","axisDomainLength","_legendGradientSvg","gradient_legend_get","gradient_legend_getPrototypeOf","renderGradient","_createLegendSkeleton","StepLegend","step_legend_toConsumableArray","step_legend_defineProperty","lowerBounds","upperBounds","step_legend_get","step_legend_getPrototypeOf","stepData","renderStepItem","_context$measurement3","_item$icon2","_positionConfig$posit","PADDING","BORDER","MARGIN","TITLE_TEMPLATE_NOT_ALLOWED_TAGS","LEGEND_TYPE_MAP","constants_defineProperty","_LEGEND_TYPE_MAP","HORIZONTAL_CENTER","VERTICAL_CENTER","share","operators_construct","operators_toConsumableArray","strings","htmlCode","expLn","frag","createDocumentFragment","treeShakeNode","nodeType","Node","ELEMENT_NODE","tagName","childNodes","canvasIterator","canvases","iteratorFn","cFn","canvas","visualGroup","_throwback","listenerFn","registerActions","fnName","_registrableComponents","setFireboltDependencies","actionModel","ActionModel","action_model_classCallCheck","registerPropagationBehaviourMap","dissociateBehaviour","dissociateSideEffect","policy","registrableComponents","mergedPolicy","aliases","*","propagationPayload","propagationCanvas","crossInteractionPolicy","TITLE_CONFIG","SUB_TITLE_CONFIG","maxLines","MESSAGE_CONFIG","LAYOUT_ALIGN","canvas_local_options_defineProperty","_localOptions","canvasOptions","_canvasOptions","titleConfig","subtitle","sub","subtitleConfig","LayoutComponent","layoutComponent_classCallCheck","_boundBox","_renderAt","_alignWith","_alignment","_componentName","_className","DummyComponent","newDimensions","renderAt","component","componentName","pagination","scrollBar","thickness","speed","legend","minHeight","minCharacters","verticalAlign","collapse","invalidValues","DEFAULT_WIDTH","DEFAULT_HEIGHT","DEFAULT_CLASS_NAME","NODE_PREFIX","DefinitionModel","definitionModel_classCallCheck","_host","host","_cut","cut","_ratioWeight","ratioWeight","_preferred","preferred","_lanes","lanes","_remainingHeight","_remainingWidth","remainingHeight","remainingWidth","getNodeId","_uid","yExtraSpace","smallestHeight","getCutType","smallestExtraHeightHorizontally","MAX_SAFE_INTEGER","containerHeight","hostHeight","xExtraSpace","smallestWidth","smallestExtraWidthVertically","containerWidth","hostWidth","createPlaceHolderComponent","placeComponent","definitionModel","leftOvercomponentRationWidth","isPreferred","isGridComponent","componentRatioWidth","leftHeight","leftWidth","_component$getLogical","componentHeight","componentWidth","firstLaneConfig","firstLane","secondLane","tree_classCallCheck","_parentCut","_this$_children","tree_toConsumableArray","parentCut","bound","nodeconfig","searchNode","childNode","nodeId","deleteSearchNode","LayoutModel","measurements","layout_model_classCallCheck","_measurements","_root","createTree","setBoundBox","addChildren","lane","allocateBoundingBox","totalWeight","carry","lastSibling","ratio","setHostSpatialConfig","setHostPosition","negotiateDimension","alteredDim","nonAlteredDim","cumultiveExtraSpaceAmt","childrenLength","extraSpaceAmt","computePosition","determineBoundBox","bb","_lastSibling$boundBox","_top","_left","_height","_width","_instance$parent$boun","setSpatialConfig","VIEW_INDEX","ROW_MATRIX_INDEX","2","COLUMN_MATRIX_INDEX","HEIGHT","ROW_ROOT","COLUMN_ROOT","VERTICAL","HORIZONTAL","Utils","utils_classCallCheck","utils_createClass","isDOMElement","getID","getElement","findContainer","coordinate","removeDiv","divId","DataPoint","data_point_classCallCheck","DataParser","data_parser_classCallCheck","data_parser_createClass","defaultDataPointLogic","nodepoints","getnodePoints","datapoint","HTMLDataAdapter","_DataParser","html_data_classCallCheck","html_data_possibleConstructorReturn","html_data_getPrototypeOf","html_data_inherits","html_data_createClass","getCoordinates","html_data_get","Renderer","renderer_classCallCheck","renderer_createClass","initRenderer","__logicalTree","HTMLRenderer","_Renderer","html_renderer_classCallCheck","html_renderer_possibleConstructorReturn","html_renderer_getPrototypeOf","_coordinates","html_renderer_inherits","html_renderer_createClass","createhtml","mainDiv","html_renderer_get","parentDiv","createAndCustomiseParent","hasHost","createAndPositionDiv","html_renderer_objectSpread","div","coordinates","findNode","nodeID","renderer","renderHTML","resolveAligment","componentData","alignWith","componentToAlign","componentMap","refNode","newNodeConfig","setAlignConfig","DrawingManager","drawing_manager_classCallCheck","_componentMap","_layoutClassName","layoutClassName","_renderer","drawing_manager_createClass","drawLayout","drawComponent","DefinitionManager","definition_manager_classCallCheck","_prioritySequence","_totalHeight","_totalWidth","_targetComponentMap","prepareTargetComponentMap","targetComponentMap","canvasComponent","tempDefModel","componentRef","getComponent","placeGridComponent","gridComponents","iscolumnPreffered","_placeComponent","rowpreffred","LayoutDef","layout_def_classCallCheck","_layoutDefinition","layout_def_createClass","addComponent","layoutDefinition","addMultipleComponent","componentArray","sanitizedDefinition","hostObj","hostID","childHost","resetComponentMap","LayoutManager","layout_manager_classCallCheck","_dimension","_skeletonType","skeletonType","_layoutDef","_drawingManager","_rootNodeID","con","resetNode","updateNode","compute","_layout","calLayOutDef","_context$dimension","layoutDef","prioritySequence","generateConfigModel","negotiate","broadcast","layoutComponents","componentArr","compo","elementName","removeElement","elemID","co","deleteElement","setupChangeListener","allOptions","_allOptions","canvas_helper_toConsumableArray","nameSpaceProps","equalityProps","equalityChecker","option","updateProps","updateChecker","dispatchProps","_cachedProps","notifyAnimationEnd","viewInfo","layout","centerMatrix","viewMatricesInfo","promises","cellArr","lifeCycle","animDonePromises","animationDone","applyInteractionPolicy","interactionPolicy","_interactionPolicy","_crossInteractionPolicy","unitFireBolt","changeBehaviourStateOnPropagation","changeSideEffectStateOnPropagation","createLayoutManager","src_options","minUnitWidth","minUnitHeight","oldConf","fixScrollBarConfig","GenericLayout","generic_layout_classCallCheck","_matrices","_centerMatrix","_mountPoint","DEFAULT_CONFIGURATION","grid_layout_defaults_defineProperty","_DEFAULT_CONFIGURATIO","_FieldNames$BORDER","DEFAULT_MEASUREMENTS","_DEFAULT_MEASUREMENTS","findInPage","page","combineMatrices","isTransposed","joinedMatrix","utils_toConsumableArray","rowData","computeLogicalSpace","maxMeasures","_config$isTransposed","unitMeasures","_getMeasureInfo","getMeasureInfo","firstMeasure","secondMeasure","minMeasures","getMinMeasures","_logicalSpace","utils_defineProperty","valueItem","maxMeasure","firstMeasureValue","secondMeasureValue","valueArray","_item$space","fMeasure","sMeasure","minSecondMeasure","createMatrixEachLevel","_arr$i","extraCellsRemover","beg","distribution","extraCellLengths","VisualMatrix","visual_matrix_classCallCheck","_lastLevelKey","_primaryMatrix","_secondaryMatrix","_maxMeasures","_availableSpace","_layoutMatrix","_tree","_createTree2","matrixTree","lastLevelKey","layoutMatrix","primaryMatrix","secondaryMatrix","breakPage","primaryMatrixLength","newMatrix","keyLength","heightMeasures","populateMaxMeasures","widthMeasures","calculateDepth","viewableMatrix","createViewPortMatrix","viewableMeasures","redistributeSpaces","childDepth","createMatrixInstances","matrixInfo","breakPointer","_breakPointer","brokenMatrix","breakMatrix","nextLevel","removeExtraCells","RowVisualMatrix","row_matrix_classCallCheck","row_matrix_possibleConstructorReturn","row_matrix_getPrototypeOf","maxHeights","maxWidths","matrixInst","cellDimOptions","matrixIndex","_this2$getCellDimensi","getCellDimensions","widths","rowHeights","columnWidths","primary","secondary","begCellLen","endCellLen","remainingAvailWidth","cWidths","maxPrioritySpace","availableWidth","currentWidth","prioritySpace","logicalWidths","getPriorityDistribution","mWidth","mHeight","redistributeViewSpaces","computeViewableSpaces","rHeights","gutter","spaceTakenByColumn","spaces","getDistributedHeight","heightWithoutGutter","distSum","gutterSum","availableHeight","colLen","distHeight","borderWidth","colHeight","colWidth","heights","ColumnVisualMatrix","column_matrix_classCallCheck","column_matrix_possibleConstructorReturn","column_matrix_getPrototypeOf","heightDist","divider","spaceTakenByRow","getDistributedWidth","layoutConfig","distWidth","rowLen","oldLogicalSpace","heightDistribution","getMatrixMeasurement","setViewSpaces","pointerType","viewSpaces","pointer","computations_defineProperty","paginationDetailsMap","scrollType","paginationMeasureGetter","relatedMaxMeasure","getMatrixMeasureForPagination","measureDetails","actualMeasure","scrollInfo","getMatrixHeightDetails","columnMatrixWidth","_getHeightRequiredByC","getHeightRequiredByColMatrix","maxColumnMatrixHeight","columnViewSpace","getViewableSpaces","columnPointer","columnMatrixHeight","maxHeightAvailableForRowMatrix","rowMatrixHeight","bufferCondition","isScroll","getActualBufferFromConfig","computations_slicedToArray","getBufferFromCondition","currentBufferType","horizontalBuffer","verticalBuffer","computeLayoutMeasurements","_getMatrixWidthDetail","getMatrixWidthDetails","_layout$config3","rowMatrixWidth","maxRowMatrixWidth","maxWidthAvailableForColumnMatrix","_getMatrixHeightDetai","_getActualBufferFromC","rowViewableSpaces","columnViewableSpaces","setValueMatrixMeasurements","computations_toConsumableArray","rowWidthsPrimary","rowWidthsSecondary","columnHeightsPrimary","columnHeightsSecondary","measureSum","total","GridLayout","layout_classCallCheck","layout_possibleConstructorReturn","layout_getPrototypeOf","_layoutId","_scrollInfo","generateVisualMatrices","begColCells","endColCells","gutterSpace","layout_helper_slicedToArray","_center","_bottom","layout_helper_toConsumableArray","RowMatrix","ColumnMatrix","layout_get","_computeLayoutMeasure","setViewInformation","pageNumber","pageType","totalPages","layout_defineProperty","renderGrid","currentPage","_viewInfo","maxRowHeight","maxColWidth","rowPointer","getViewMatrices","rowMatrices","getViewableMatrices","columnMatrices","centralMatrixPointer","rowMatrixLen","columnMatrixLen","rowPages","columnPages","layoutDimensions","getViewMeasurements","_layout$config","rowSpaces","colSpaces","rightWidth","topHeight","bottomHeight","centerHeight","centerWidth","viewWidth","viewHeight","actualCenterMeasures","totalMeasures","unitHeights","unitWidths","borderMap","border_helper_defineProperty","_borderMap","specificBorderApplier","borderTypes","showBorders","borderInfo","borderType","applySpecificBorder","applyBorders","borderApplierFn","borderApplier","borderMapVal","orderMaker","nestByStack","updateArr","optionalParams","currStack","prevStack","arrVal","stackVal","currElemIndex","newElem","arrElem","returnArr","spanCalculator","isNull","maskCreator","_nestByStack","viewMatrix","hierarchy","_nestByStack2","spanGenerator","spans","ridx","currSpan","getOrder","matrixSpanGeneratorMap","span_maker_defineProperty","_matrixSpanGeneratorM","orderGetter","viewMatrixMaker","spanMaker","matrixSpanGenerator","spanApplier","cellCounter","spaceAllocationDueToSpan","primaryUnitWidth","cumulativeWidth","spanApplierMap","_spanApplierMap","TransactionSupport","INTERFACE_IMPl","CLASSPREFIX","HEADER","DATA","AXES","FACET_BY_FIELDS","FIELDS","TRANSFORM","LAYER_DEF","CONFIG","DETAIL_FIELDS","AXIS","GEOM","BLANK","SimpleCell","simple_cell_classCallCheck","enums_defaults_defineProperty","_DEFAULT_CONFIG","_CONSTANTS$MARGIN","CONSTANTS","DEFAULT_PROPS","minSpacing","visual_cell_src_props_defineProperty","visual_cell_src_props_PROPS","caption","smartText","axis_cell_classCallCheck","axis_cell_possibleConstructorReturn","axis_cell_getPrototypeOf","_availHeight","_availWidth","axis_cell_assertThisInitialized","computeAxisSpace","logicalWidth","logicalHeight","spaceFixer","_axis$getLogicalSpace","actualWidth","actualHeight","_axis$config2","wrapperDiv","blank_cell_classCallCheck","blank_cell_possibleConstructorReturn","blank_cell_getPrototypeOf","blank_cell_assertThisInitialized","setSmartText","_context$minSpacing","minHeightSpace","minWidthSpace","paddedHeight","paddedWidth","text_cell_classCallCheck","text_cell_possibleConstructorReturn","text_cell_getPrototypeOf","text_cell_assertThisInitialized","computeTextSpace","_context$minSpacing2","minText","_minTextSpace","smartSpace","textAlign","vAlign","_this$smartText","translation","middle","geom_cell_classCallCheck","geom_cell_possibleConstructorReturn","geom_cell_getPrototypeOf","_unit","_datamodel","_facetByFields","_transform","_caption","geom_cell_assertThisInitialized","captionSpace","computeGeomSpace","getCaptionSpace","captionDom","DEFAULT_PLACEHOLDERS","src_defaults_defineProperty","_DEFAULT_PLACEHOLDERS","resolveTitleSubTitleContent","rawContent","escapeHTML","htmlEscapes","&","<",">","\"","'","/","createHeading","prevCell","cellType","_minTickDiff","legendInitializer","legendConfig","prevLegends","legends","headerHeight","legendInfo","legendCreator","LegendCls","dataset","scaleProps","_scale$config","stepMapper","dataInfo","legendMeasures","titleText","getGroupByData","setLegendMeasures","MuzeComponent","_this$boundBox","HeaderComponent","headerComponent_classCallCheck","headerComponent_possibleConstructorReturn","headerComponent_getPrototypeOf","setParams","cont","renderHeader","LegendComponent","legendComponent_classCallCheck","legendComponent_possibleConstructorReturn","legendComponent_getPrototypeOf","legendSpace","sectionComponents","_this$params$config","legendMount","legWidth","legHeight","sections","currHeight","currWidth","leg","legendHeight","legendWidth","renderLegend","_defaultAlignmentHelp","defaultAlignmentHelper","arrowSizeMap","getUnitPositions","totalLength","viewLength","currentLen","unitPosition","createScrollBarArrow","createScrollBarRect","mover","applyScrollMouseDownAction","moverRect","scrollMaker","_mover$node$getBoundi","_rect$node$getBoundin","rectX","rectY","changeMoverPosition","registerListenerOnArrow","arrowType","_components","isTouchDevice","registerListeners","applyMoverDrag","moverStartPos","rectStartPos","distanceMoved","actualPosition","pageXOffset","pageYOffset","applyRectClick","emptyScrollAreaClick","manager","unitPositions","ScrollMaker","scroll_maker_classCallCheck","_attachedScrollAction","_unitPositions","scroll_maker_createClass","scrollTo","scrollDeltaTo","createScroll","scrollBarContainer","scrollContainerHelper","attachScrollAction","externalScrollAction","detachScrollAction","scrollMakerMap","_ScrollMaker","HorizontalScrollMaker","horizontal_scroll_maker_classCallCheck","horizontal_scroll_maker_possibleConstructorReturn","horizontal_scroll_maker_getPrototypeOf","horizontal_scroll_maker_inherits","horizontal_scroll_maker_createClass","horizontal_scroll_maker_get","prevArrow","nextArrow","_this$logicalSpace","scrollBarWithouArrowLength","_scrollBarWithouArrowLength","_this$_components$mov","positionAdjuster","newPosition","currentPos","_this$_components$mov2","moverPos","movedViewLength","performAttachedScrollFunction","delta","_this$_components$mov3","scrollPercentage","movement","VerticalScrollMaker","vertical_scroll_maker_classCallCheck","vertical_scroll_maker_possibleConstructorReturn","vertical_scroll_maker_getPrototypeOf","vertical_scroll_maker_inherits","vertical_scroll_maker_createClass","vertical_scroll_maker_get","ScrollComponent","scroll_component_classCallCheck","scrollBarComponentConfig","scroll_component_possibleConstructorReturn","scroll_component_getPrototypeOf","unitIndex","sanitizedUnitIndex","externalAction","MatrixComponent","matrix_component_classCallCheck","matrix_component_possibleConstructorReturn","matrix_component_getPrototypeOf","_this$params$config$s","containerForMatrix","applyScroll","_cellSpanMaker","cellSpanMaker","_matrixSpanGenerator","renderTable","applySpans","applier","renderPlaceholders","renderMatrix","applyScrollAction","scollDistance","GridComponent","grid_component_classCallCheck","grid_component_possibleConstructorReturn","grid_component_getPrototypeOf","_this$component$viewI","matrixDim","matrixName","updateWrapper","matrixWrapper","allComponents","_scrollBarManager","scrollBarManager","wheelDeltaX","wheelDeltaY","preventBrowserScroll","triggerScrollBarAction","movedView","scrollActionApplier","_this$component$0$0$b","sanitizeGrid","attachScrollListener","MessageComponent","message_component_classCallCheck","message_component_possibleConstructorReturn","message_component_getPrototypeOf","_config$dimensions","message","_params$config","headerMap","headerCell","configType","isGridPresent","renderDetails","_renderDetails$compon","checkParamsValidation","createHeaderWrapper","headerType","layoutManager","_headerMap$headerType","headerConfig","component_wrapper_maker_objectSpread","wrapperParams","existingComponent","createScrollBarWrapper","scrollBarType","grid","_scrollBarMap$scrollB","scrollBarMap","layoutBasedMeasure","viewMeasure","rowAlign","colAlign","componentWrapperMaker","_layoutManager","createMessageWrapper","defaultDimensions","gridComponent","getBoundBox","createLegendWrapper","legendWrapper","gridLayoutWrapper","verticalScrollBar","horizontalScrollBar","ScrollManager","scroll_manager_classCallCheck","_scrollBarComponents","_attachedComponents","scroll_manager_createClass","scrollBarComponents","attachedComponents","performScrollAction","getRenderDetails","_mount$getBoundingCli","heightAttr","widthAttr","visGroup","_visGroup$placeholder","legendPosition","layoutArrangement","arrangeComponents","_titleLayouts","titleLayouts","component_resolver_defineProperty","legendLayouts","titlePosition","subtitlePosition","availableHeightForCanvas","availableWidthForCanvas","_createHeaders","canvasHeight","canvasWidth","isSubtitle","headerOptions","_createHeading","createLegend","getLegendSpace","mountSpace","componentIndexes","componentNames","3","4","5","6","renderLayout","gridLayout","compWrappers","componentWrappers","createScrollManager","horizontalScrollWrapper","verticalScrollWrapper","gridWrapper","hScrollBar","vScrollBar","componentWrapper","deleteElementName","removeComponent","registerComponents","attachListeners","attachListener","defaultInteractionPolicy","isMeasure","group_firebolt_toConsumableArray","getFieldsFromChannel","colDim","unitColFacets","equals","unitRowFacets","propagateWith","defaultCrossInteractionPolicy","propagationCanvasAlias","propagationUnit","GroupFireBolt","group_firebolt_classCallCheck","group_firebolt_possibleConstructorReturn","group_firebolt_getPrototypeOf","behaviouralAction","validFields","APP_INITIAL_STATE","app","Canvas","globalDependencies","canvas_classCallCheck","canvas_possibleConstructorReturn","canvas_getPrototypeOf","canvas_defineProperty","canvas_assertThisInitialized","initedComponents","initCanvas","createGroupState","_VisualGroup$getState2","canvas_helper_slicedToArray","register","prepareLayout","triggerReflow","setLayoutInfForUnits","getRootNodeId","setLabelRotationForAxes","rotationVal","getAxes","initialSettings","regEntry","COMPONENTS","SUBREGISTRIES","regObj","globalCache","defaultRegistry","overrideRegistryDefinitions","overrideRegistry","muze","_transactor2","muze_slicedToArray","env","globalStore","componentSubRegistryDef","settings","withSettings","enableChainedTransaction","transactionModel","transactionEndpoint","transactionItems","Smartlabel","SideEffects","standards","Behaviours","pkg","operators","utils","lookupWhat","lookupDetails","lookupTarget"],"mappings":"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ACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA3T,IAAI+yC,+BAES8W,cAAKK,aCZTA,YAAS,IAAItpD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA3T,IAAI+yC,+BAES8W,cAAKK,aCALL,cAZK,IAAIjpD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA3T,IAAI+yC,gCCES8W,cAZK,IAAIjpD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA3T,IAAI+yC,gCCES8W,cAZK,IAAIjpD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA3T,IAAI+yC,gCCES8W,gBAZK,IAAIjpD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA3T,IAAI+yC,gCCES8W,gBAZK,IAAIjpD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA3T,IAAI+yC,gCCES8W,kBAZK,IAAIjpD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA3T,IAAI+yC,gCCAS8W,cAVK,IAAIjpD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA3T,IAAI+yC,gCCES8W,cAVK,IAAIjpD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA3T,IAAI+yC,gCCES8W,cAVK,IAAIjpD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA3T,IAAI+yC,gCCES8W,cAVK,IAAIjpD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA3T,IAAI+yC,gCCES8W,gBAVK,IAAIjpD,MAAM,GAAG+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","file":"muze.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"muze\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"muze\"] = factory();\n\telse\n\t\troot[\"muze\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"DataModel\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DataModel\"] = factory();\n\telse\n\t\troot[\"DataModel\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","const DataModel = require('./export');\n\nmodule.exports = DataModel.default ? DataModel.default : DataModel;\n","/**\n * DataFormat Enum defines the format of the input data.\n * Based on the format of the data the respective adapter is loaded.\n *\n * @readonly\n * @enum {string}\n */\nconst DataFormat = {\n    FLAT_JSON: 'FlatJSON',\n    DSV_STR: 'DSVStr',\n    DSV_ARR: 'DSVArr',\n    AUTO: 'Auto'\n};\n\nexport default DataFormat;\n","/**\n * DimensionSubtype enum defines the sub types of the Dimensional Field.\n *\n * @readonly\n * @enum {string}\n */\nconst DimensionSubtype = {\n    CATEGORICAL: 'categorical',\n    TEMPORAL: 'temporal',\n    GEO: 'geo',\n    BINNED: 'binned'\n};\n\nexport default DimensionSubtype;\n","/**\n * MeasureSubtype enum defines the sub types of the Measure Field.\n *\n * @readonly\n * @enum {string}\n */\nconst MeasureSubtype = {\n    CONTINUOUS: 'continuous'\n};\n\nexport default MeasureSubtype;\n","/**\n * FieldType enum defines the high level field based on which visuals are controlled.\n * Measure in a high level is numeric field and Dimension in a high level is string field.\n *\n * @readonly\n * @enum {string}\n */\nconst FieldType = {\n    MEASURE: 'measure',\n    DIMENSION: 'dimension'\n};\n\nexport default FieldType;\n","/**\n * Filtering mode enum defines the filering modes of DataModel.\n *\n * @readonly\n * @enum {string}\n */\nconst FilteringMode = {\n    NORMAL: 'normal',\n    INVERSE: 'inverse',\n    ALL: 'all'\n};\n\nexport default FilteringMode;\n","/**\n * Group by function names\n *\n * @readonly\n * @enum {string}\n */\nconst GROUP_BY_FUNCTIONS = {\n    SUM: 'sum',\n    AVG: 'avg',\n    MIN: 'min',\n    MAX: 'max',\n    FIRST: 'first',\n    LAST: 'last',\n    COUNT: 'count',\n    STD: 'std'\n};\n\nexport default GROUP_BY_FUNCTIONS;\n","/**\n * Creates a JS native date object from input\n *\n * @param {string | number | Date} date Input using which date object to be created\n * @return {Date} : JS native date object\n */\nfunction convertToNativeDate (date) {\n    if (date instanceof Date) {\n        return date;\n    }\n\n    return new Date(date);\n}\n/**\n * Apply padding before a number if its less than 1o. This is used when constant digit's number to be returned\n * between 0 - 99\n *\n * @param {number} n Input to be padded\n * @return {string} Padded number\n */\nfunction pad (n) {\n    return (n < 10) ? (`0${n}`) : n;\n}\n/*\n * DateFormatter utility to convert any date format to any other date format\n * DateFormatter parse a date time stamp specified by a user abiding by rules which are defined\n * by user in terms of token. It creates JS native date object from the user specified format.\n * That native date can also be displayed\n * in any specified format.\n * This utility class only takes care of format conversion only\n */\n\n/*\n * Escapes all the special character that are used in regular expression.\n * Like\n * RegExp.escape('sgfd-$') // Output: sgfd\\-\\$\n *\n * @param text {String} : text which is to be escaped\n */\nRegExp.escape = function (text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n};\n\n/**\n * DateTimeFormatter class to convert any user format of date time stamp to any other format\n * of date time stamp.\n *\n * @param {string} format Format of the date given. For the above date,\n * 'year: %Y, month: %b, day: %d'.\n * @class\n */\n/* istanbul ignore next */ function DateTimeFormatter (format) {\n    this.format = format;\n    this.dtParams = undefined;\n    this.nativeDate = undefined;\n}\n\n// The identifier of the tokens\nDateTimeFormatter.TOKEN_PREFIX = '%';\n\n// JS native Date constructor takes the date params (year, month, etc) in a certail sequence.\n// This defines the sequence of the date parameters in the constructor.\nDateTimeFormatter.DATETIME_PARAM_SEQUENCE = {\n    YEAR: 0,\n    MONTH: 1,\n    DAY: 2,\n    HOUR: 3,\n    MINUTE: 4,\n    SECOND: 5,\n    MILLISECOND: 6\n};\n\n/*\n * This is a default number parsing utility. It tries to parse a number in integer, if parsing is unsuccessful, it\n * gives back a default value.\n *\n * @param: defVal {Number} : Default no if the parsing to integer is not successful\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be parsed.\n */\nDateTimeFormatter.defaultNumberParser = function (defVal) {\n    return function (val) {\n        let parsedVal;\n        if (isFinite(parsedVal = parseInt(val, 10))) {\n            return parsedVal;\n        }\n\n        return defVal;\n    };\n};\n\n/*\n * This is a default number range utility. It tries to find an element in the range. If not found it returns a\n * default no as an index.\n *\n * @param: range {Array} : The list which is to be serached\n * @param: defVal {Number} : Default no if the serach and find does not return anything\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be found\n */\nDateTimeFormatter.defaultRangeParser = function (range, defVal) {\n    return (val) => {\n        let i;\n        let l;\n\n        if (!val) { return defVal; }\n\n        const nVal = val.toLowerCase();\n\n        for (i = 0, l = range.length; i < l; i++) {\n            if (range[i].toLowerCase() === nVal) {\n                return i;\n            }\n        }\n\n        if (i === undefined) {\n            return defVal;\n        }\n        return null;\n    };\n};\n\n/*\n * Defines the tokens which are supporter by the dateformatter. Using this definitation a value gets extracted from\n * the user specifed date string. This also formats the value for display purpose from native JS date.\n * The definition of each token contains the following named properties\n * {\n *     %token_name% : {\n *         name: name of the token, this is used in reverse lookup,\n *         extract: a function that returns the regular expression to extract that piece of information. All the\n *                  regex should be gouped by using ()\n *         parser: a function which receives value extracted by the above regex and parse it to get the date params\n *         formatter: a formatter function that takes milliseconds or JS Date object and format the param\n *                  represented by the token only.\n *     }\n * }\n *\n * @return {Object} : Definition of the all the supported tokens.\n */\nDateTimeFormatter.getTokenDefinitions = function () {\n    const daysDef = {\n        short: [\n            'Sun',\n            'Mon',\n            'Tue',\n            'Wed',\n            'Thu',\n            'Fri',\n            'Sat'\n        ],\n        long: [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday'\n        ]\n    };\n    const monthsDef = {\n        short: [\n            'Jan',\n            'Feb',\n            'Mar',\n            'Apr',\n            'May',\n            'Jun',\n            'Jul',\n            'Aug',\n            'Sep',\n            'Oct',\n            'Nov',\n            'Dec'\n        ],\n        long: [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December'\n        ]\n    };\n\n    const definitions = {\n        H: {\n            // 24 hours format\n            name: 'H',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n\n                return d.getHours().toString();\n            }\n        },\n        l: {\n            // 12 hours format\n            name: 'l',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours() % 12;\n\n                return (hours === 0 ? 12 : hours).toString();\n            }\n        },\n        p: {\n            // AM or PM\n            name: 'p',\n            index: 3,\n            extract () { return '(AM|PM)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'AM' : 'PM');\n            }\n        },\n        P: {\n            // am or pm\n            name: 'P',\n            index: 3,\n            extract () { return '(am|pm)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'am' : 'pm');\n            }\n        },\n        M: {\n            // Two digit minutes 00 - 59\n            name: 'M',\n            index: 4,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const mins = d.getMinutes();\n\n                return pad(mins);\n            }\n        },\n        S: {\n            // Two digit seconds 00 - 59\n            name: 'S',\n            index: 5,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const seconds = d.getSeconds();\n\n                return pad(seconds);\n            }\n        },\n        K: {\n            // Milliseconds\n            name: 'K',\n            index: 6,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const ms = d.getMilliseconds();\n\n                return ms.toString();\n            }\n        },\n        a: {\n            // Short name of day, like Mon\n            name: 'a',\n            index: 2,\n            extract () { return `(${daysDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.short[day]).toString();\n            }\n        },\n        A: {\n            // Long name of day, like Monday\n            name: 'A',\n            index: 2,\n            extract () { return `(${daysDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.long[day]).toString();\n            }\n        },\n        e: {\n            // 8 of March, 11 of November\n            name: 'e',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return day.toString();\n            }\n        },\n        d: {\n            // 08 of March, 11 of November\n            name: 'd',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return pad(day);\n            }\n        },\n        b: {\n            // Short month, like Jan\n            name: 'b',\n            index: 1,\n            extract () { return `(${monthsDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.short[month]).toString();\n            }\n        },\n        B: {\n            // Long month, like January\n            name: 'B',\n            index: 1,\n            extract () { return `(${monthsDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.long[month]).toString();\n            }\n        },\n        m: {\n            // Two digit month of year like 01 for January\n            name: 'm',\n            index: 1,\n            extract () { return '(\\\\d+)'; },\n            parser (val) { return DateTimeFormatter.defaultNumberParser()(val) - 1; },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return pad(month + 1);\n            }\n        },\n        y: {\n            // Short year like 90 for 1990\n            name: 'y',\n            index: 0,\n            extract () { return '(\\\\d{2})'; },\n            parser (val) {\n                let result;\n                if (val) {\n                    const l = val.length;\n                    val = val.substring(l - 2, l);\n                }\n                let parsedVal = DateTimeFormatter.defaultNumberParser()(val);\n                let presentDate = new Date();\n                let presentYear = Math.trunc((presentDate.getFullYear()) / 100);\n\n                result = `${presentYear}${parsedVal}`;\n\n                if (convertToNativeDate(result).getFullYear() > presentDate.getFullYear()) {\n                    result = `${presentYear - 1}${parsedVal}`;\n                }\n                return convertToNativeDate(result).getFullYear();\n            },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                let year = d.getFullYear().toString();\n                let l;\n\n                if (year) {\n                    l = year.length;\n                    year = year.substring(l - 2, l);\n                }\n\n                return year;\n            }\n        },\n        Y: {\n            // Long year like 1990\n            name: 'Y',\n            index: 0,\n            extract () { return '(\\\\d{4})'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const year = d.getFullYear().toString();\n\n                return year;\n            }\n        }\n    };\n\n    return definitions;\n};\n\n/*\n * The tokens which works internally is not user friendly in terms of memorizing the names. This gives a formal\n * definition to the informal notations.\n *\n * @return {Object} : Formal definition of the tokens\n */\nDateTimeFormatter.getTokenFormalNames = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n\n    return {\n        HOUR: definitions.H,\n        HOUR_12: definitions.l,\n        AMPM_UPPERCASE: definitions.p,\n        AMPM_LOWERCASE: definitions.P,\n        MINUTE: definitions.M,\n        SECOND: definitions.S,\n        SHORT_DAY: definitions.a,\n        LONG_DAY: definitions.A,\n        DAY_OF_MONTH: definitions.e,\n        DAY_OF_MONTH_CONSTANT_WIDTH: definitions.d,\n        SHORT_MONTH: definitions.b,\n        LONG_MONTH: definitions.B,\n        MONTH_OF_YEAR: definitions.m,\n        SHORT_YEAR: definitions.y,\n        LONG_YEAR: definitions.Y\n    };\n};\n\n/*\n * This defines the rules and declares dependencies that resolves a date parameter (year, month etc) from\n * the date time parameter array.\n *\n * @return {Object} : An object that contains dependencies and a resolver function. The dependencies values are fed\n *                  to the resolver function in that particular sequence only.\n */\nDateTimeFormatter.tokenResolver = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const defaultResolver = (...args) => { // eslint-disable-line require-jsdoc\n        let i = 0;\n        let arg;\n        let targetParam;\n        const l = args.length;\n\n        for (; i < l; i++) {\n            arg = args[i];\n            if (args[i]) {\n                targetParam = arg;\n            }\n        }\n\n        if (!targetParam) { return null; }\n\n        return targetParam[0].parser(targetParam[1]);\n    };\n\n    return {\n        YEAR: [definitions.y, definitions.Y,\n            defaultResolver\n        ],\n        MONTH: [definitions.b, definitions.B, definitions.m,\n            defaultResolver\n        ],\n        DAY: [definitions.a, definitions.A, definitions.e, definitions.d,\n            defaultResolver\n        ],\n        HOUR: [definitions.H, definitions.l, definitions.p, definitions.P,\n            function (hourFormat24, hourFormat12, ampmLower, ampmUpper) {\n                let targetParam;\n                let amOrpm;\n                let isPM;\n                let val;\n\n                if (hourFormat12 && (amOrpm = (ampmLower || ampmUpper))) {\n                    if (amOrpm[0].parser(amOrpm[1]) === 'pm') {\n                        isPM = true;\n                    }\n\n                    targetParam = hourFormat12;\n                } else if (hourFormat12) {\n                    targetParam = hourFormat12;\n                } else {\n                    targetParam = hourFormat24;\n                }\n\n                if (!targetParam) { return null; }\n\n                val = targetParam[0].parser(targetParam[1]);\n                if (isPM) {\n                    val += 12;\n                }\n                return val;\n            }\n        ],\n        MINUTE: [definitions.M,\n            defaultResolver\n        ],\n        SECOND: [definitions.S,\n            defaultResolver\n        ]\n    };\n};\n\n/*\n * Finds token from the format rule specified by a user.\n * @param format {String} : The format of the input date specified by the user\n * @return {Array} : An array of objects which contains the available token and their occurence index in the format\n */\nDateTimeFormatter.findTokens = function (format) {\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenLiterals = Object.keys(definitions);\n    const occurrence = [];\n    let i;\n    let forwardChar;\n\n    while ((i = format.indexOf(tokenPrefix, i + 1)) >= 0) {\n        forwardChar = format[i + 1];\n        if (tokenLiterals.indexOf(forwardChar) === -1) { continue; }\n\n        occurrence.push({\n            index: i,\n            token: forwardChar\n        });\n    }\n\n    return occurrence;\n};\n\n/*\n * Format any JS date to a specified date given by user.\n *\n * @param date {Number | Date} : The date object which is to be formatted\n * @param format {String} : The format using which the date will be formatted for display\n */\nDateTimeFormatter.formatAs = function (date, format) {\n    const nDate = convertToNativeDate(date);\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    let formattedStr = String(format);\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    let token;\n    let formattedVal;\n    let i;\n    let l;\n\n    for (i = 0, l = occurrence.length; i < l; i++) {\n        token = occurrence[i].token;\n        formattedVal = definitions[token].formatter(nDate);\n        formattedStr = formattedStr.replace(new RegExp(tokenPrefix + token, 'g'), formattedVal);\n    }\n\n    return formattedStr;\n};\n\n/*\n * Parses the user specified date string to extract the date time params.\n *\n * @return {Array} : Value of date time params in an array [year, month, day, hour, minutes, seconds, milli]\n */\nDateTimeFormatter.prototype.parse = function (dateTimeStamp, options) {\n    const tokenResolver = DateTimeFormatter.tokenResolver();\n    const dtParams = this.extractTokenValue(dateTimeStamp);\n    const dtParamSeq = DateTimeFormatter.DATETIME_PARAM_SEQUENCE;\n    const noBreak = options && options.noBreak;\n    const dtParamArr = [];\n    const args = [];\n    let resolverKey;\n    let resolverParams;\n    let resolverFn;\n    let val;\n    let i;\n    let param;\n    let resolvedVal;\n    let l;\n    let result = [];\n\n    for (resolverKey in tokenResolver) {\n        if (!{}.hasOwnProperty.call(tokenResolver, resolverKey)) { continue; }\n\n        args.length = 0;\n        resolverParams = tokenResolver[resolverKey];\n        resolverFn = resolverParams.splice(resolverParams.length - 1, 1)[0];\n\n        for (i = 0, l = resolverParams.length; i < l; i++) {\n            param = resolverParams[i];\n            val = dtParams[param.name];\n\n            if (val === undefined) {\n                args.push(null);\n            } else {\n                args.push([param, val]);\n            }\n        }\n\n        resolvedVal = resolverFn.apply(this, args);\n\n        if ((resolvedVal === undefined || resolvedVal === null) && !noBreak) {\n            break;\n        }\n\n        dtParamArr[dtParamSeq[resolverKey]] = resolvedVal;\n    }\n\n    if (dtParamArr.length && this.checkIfOnlyYear(dtParamArr.length))\n     {\n        result.unshift(dtParamArr[0], 0, 1); }\n    else {\n        result.unshift(...dtParamArr);\n    }\n\n    return result;\n};\n\n/*\n * Extract the value of the token from user specified date time string.\n *\n * @return {Object} : An key value pair which contains the tokens as key and value as pair\n */\nDateTimeFormatter.prototype.extractTokenValue = function (dateTimeStamp) {\n    const format = this.format;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const tokenObj = {};\n\n    let lastOccurrenceIndex;\n    let occObj;\n    let occIndex;\n    let targetText;\n    let regexFormat;\n\n    let l;\n    let i;\n\n    regexFormat = String(format);\n\n    const tokenArr = occurrence.map(obj => obj.token);\n    const occurrenceLength = occurrence.length;\n    for (i = occurrenceLength - 1; i >= 0; i--) {\n        occIndex = occurrence[i].index;\n\n        if (occIndex + 1 === regexFormat.length - 1) {\n            lastOccurrenceIndex = occIndex;\n            continue;\n        }\n\n        if (lastOccurrenceIndex === undefined) {\n            lastOccurrenceIndex = regexFormat.length;\n        }\n\n        targetText = regexFormat.substring(occIndex + 2, lastOccurrenceIndex);\n        regexFormat = regexFormat.substring(0, occIndex + 2) +\n            RegExp.escape(targetText) +\n            regexFormat.substring(lastOccurrenceIndex, regexFormat.length);\n\n        lastOccurrenceIndex = occIndex;\n    }\n\n    for (i = 0; i < occurrenceLength; i++) {\n        occObj = occurrence[i];\n        regexFormat = regexFormat.replace(tokenPrefix + occObj.token, definitions[occObj.token].extract());\n    }\n\n    const extractValues = dateTimeStamp.match(new RegExp(regexFormat)) || [];\n    extractValues.shift();\n\n    for (i = 0, l = tokenArr.length; i < l; i++) {\n        tokenObj[tokenArr[i]] = extractValues[i];\n    }\n    return tokenObj;\n};\n\n/*\n * Give back the JS native date formed from  user specified date string\n *\n * @return {Date} : Native JS Date\n */\nDateTimeFormatter.prototype.getNativeDate = function (dateTimeStamp) {\n    let date = null;\n    if (Number.isFinite(dateTimeStamp)) {\n        date = new Date(dateTimeStamp);\n    } else if (!this.format && Date.parse(dateTimeStamp)) {\n        date = new Date(dateTimeStamp);\n    }\n    else {\n        const dtParams = this.dtParams = this.parse(dateTimeStamp);\n        if (dtParams.length) {\n            this.nativeDate = new Date(...dtParams);\n            date = this.nativeDate;\n        }\n    }\n    return date;\n};\n\nDateTimeFormatter.prototype.checkIfOnlyYear = function(len) {\n    return len === 1 && this.format.match(/y|Y/g).length;\n};\n\n/*\n * Represents JS native date to a user specified format.\n *\n * @param format {String} : The format according to which the date is to be represented\n * @return {String} : The formatted date string\n */\nDateTimeFormatter.prototype.formatAs = function (format, dateTimeStamp) {\n    let nativeDate;\n\n    if (dateTimeStamp) {\n        nativeDate = this.nativeDate = this.getNativeDate(dateTimeStamp);\n    } else if (!(nativeDate = this.nativeDate)) {\n        nativeDate = this.getNativeDate(dateTimeStamp);\n    }\n\n    return DateTimeFormatter.formatAs(nativeDate, format);\n};\n\nexport { DateTimeFormatter as default };\n","/**\n * The utility function to calculate major column.\n *\n * @param {Object} store - The store object.\n * @return {Function} Returns the push function.\n */\nexport default (store) => {\n    let i = 0;\n    return (...fields) => {\n        fields.forEach((val, fieldIndex) => {\n            if (!(store[fieldIndex] instanceof Array)) {\n                store[fieldIndex] = Array.from({ length: i });\n            }\n            store[fieldIndex].push(val);\n        });\n        i++;\n    };\n};\n","/* eslint-disable */\nconst OBJECTSTRING = 'object';\nconst objectToStrFn = Object.prototype.toString;\nconst objectToStr = '[object Object]';\nconst arrayToStr = '[object Array]';\n\nfunction checkCyclicRef(obj, parentArr) {\n    let i = parentArr.length;\n    let bIndex = -1;\n\n    while (i) {\n        if (obj === parentArr[i]) {\n            bIndex = i;\n            return bIndex;\n        }\n        i -= 1;\n    }\n\n    return bIndex;\n}\n\nfunction merge(obj1, obj2, skipUndef, tgtArr, srcArr) {\n    var item,\n        srcVal,\n        tgtVal,\n        str,\n        cRef;\n    // check whether obj2 is an array\n    // if array then iterate through it's index\n    // **** MOOTOOLS precution\n\n    if (!srcArr) {\n        tgtArr = [obj1];\n        srcArr = [obj2];\n    }\n    else {\n        tgtArr.push(obj1);\n        srcArr.push(obj2);\n    }\n\n    if (obj2 instanceof Array) {\n        for (item = 0; item < obj2.length; item += 1) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (typeof tgtVal !== OBJECTSTRING) {\n                if (!(skipUndef && tgtVal === undefined)) {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                    srcVal = obj1[item] = tgtVal instanceof Array ? [] : {};\n                }\n                cRef = checkCyclicRef(tgtVal, srcArr);\n                if (cRef !== -1) {\n                    srcVal = obj1[item] = tgtArr[cRef];\n                }\n                else {\n                    merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                }\n            }\n        }\n    }\n    else {\n        for (item in obj2) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (tgtVal !== null && typeof tgtVal === OBJECTSTRING) {\n                // Fix for issue BUG: FWXT-602\n                // IE < 9 Object.prototype.toString.call(null) gives\n                // '[object Object]' instead of '[object Null]'\n                // that's why null value becomes Object in IE < 9\n                str = objectToStrFn.call(tgtVal);\n                if (str === objectToStr) {\n                    if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                        srcVal = obj1[item] = {};\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else if (str === arrayToStr) {\n                    if (srcVal === null || !(srcVal instanceof Array)) {\n                        srcVal = obj1[item] = [];\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (skipUndef && tgtVal === undefined) {\n                    continue;\n                }\n                obj1[item] = tgtVal;\n            }\n        }\n    }\n    return obj1;\n}\n\n\nfunction extend2 (obj1, obj2, skipUndef) {\n    //if none of the arguments are object then return back\n    if (typeof obj1 !== OBJECTSTRING && typeof obj2 !== OBJECTSTRING) {\n        return null;\n    }\n\n    if (typeof obj2 !== OBJECTSTRING || obj2 === null) {\n        return obj1;\n    }\n\n    if (typeof obj1 !== OBJECTSTRING) {\n        obj1 = obj2 instanceof Array ? [] : {};\n    }\n    merge(obj1, obj2, skipUndef);\n    return obj1;\n}\n\nexport { extend2 as default };\n","import { DataFormat } from '../enums';\n\n/**\n * Checks whether the value is an array.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an array otherwise returns false.\n */\nexport function isArray (val) {\n    return Array.isArray(val);\n}\n\n/**\n * Checks whether the value is an object.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an object otherwise returns false.\n */\nexport function isObject (val) {\n    return val === Object(val);\n}\n\n/**\n * Checks whether the value is a string value.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is a string value otherwise returns false.\n */\nexport function isString (val) {\n    return typeof val === 'string';\n}\n\n/**\n * Checks whether the value is callable.\n *\n * @param {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is callable otherwise returns false.\n */\nexport function isCallable (val) {\n    return typeof val === 'function';\n}\n\n/**\n * Returns the unique values from the input array.\n *\n * @param {Array} data - The input array.\n * @return {Array} Returns a new array of unique values.\n */\nexport function uniqueValues (data) {\n    return [...new Set(data)];\n}\n\nexport const getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Checks Whether two arrays have same content.\n *\n * @param {Array} arr1 - The first array.\n * @param {Array} arr2 - The 2nd array.\n * @return {boolean} Returns whether two array have same content.\n */\nexport function isArrEqual(arr1, arr2) {\n    if (!isArray(arr1) || !isArray(arr2)) {\n        return arr1 === arr2;\n    }\n\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n * It is the default number format function for the measure field type.\n *\n * @param {any} val - The input value.\n * @return {number} Returns a number value.\n */\nexport function formatNumber(val) {\n    return val;\n}\n\n/**\n * Returns the detected data format.\n *\n * @param {any} data - The input data to be tested.\n * @return {string} Returns the data format name.\n */\nexport const detectDataFormat = (data) => {\n    if (isString(data)) {\n        return DataFormat.DSV_STR;\n    } else if (isArray(data) && isArray(data[0])) {\n        return DataFormat.DSV_ARR;\n    } else if (isArray(data) && (data.length === 0 || isObject(data[0]))) {\n        return DataFormat.FLAT_JSON;\n    }\n    return null;\n};\n","import { FieldType } from './enums';\nimport { getUniqueId } from './utils';\n\nconst fieldStore = {\n    data: {},\n\n    createNamespace (fieldArr, name) {\n        const dataId = name || getUniqueId();\n\n        this.data[dataId] = {\n            name: dataId,\n            fields: fieldArr,\n\n            fieldsObj () {\n                let fieldsObj = this._cachedFieldsObj;\n\n                if (!fieldsObj) {\n                    fieldsObj = this._cachedFieldsObj = {};\n                    this.fields.forEach((field) => {\n                        fieldsObj[field.name()] = field;\n                    });\n                }\n                return fieldsObj;\n            },\n            getMeasure () {\n                let measureFields = this._cachedMeasure;\n\n                if (!measureFields) {\n                    measureFields = this._cachedMeasure = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.MEASURE) {\n                            measureFields[field.name()] = field;\n                        }\n                    });\n                }\n                return measureFields;\n            },\n            getDimension () {\n                let dimensionFields = this._cachedDimension;\n\n                if (!this._cachedDimension) {\n                    dimensionFields = this._cachedDimension = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.DIMENSION) {\n                            dimensionFields[field.name()] = field;\n                        }\n                    });\n                }\n                return dimensionFields;\n            },\n        };\n        return this.data[dataId];\n    },\n};\n\nexport default fieldStore;\n","/**\n * The wrapper class on top of the primitive value of a field.\n *\n * @todo Need to have support for StringValue, NumberValue, DateTimeValue\n * and GeoValue. These types should expose predicate API mostly.\n */\nclass Value {\n\n  /**\n   * Creates new Value instance.\n   *\n   * @param {*} val - the primitive value from the field cell.\n   * @param {string | Field} field - The field from which the value belongs.\n   */\n    constructor (val, field) {\n        Object.defineProperty(this, '_value', {\n            enumerable: false,\n            configurable: false,\n            writable: false,\n            value: val\n        });\n\n        this.field = field;\n    }\n\n  /**\n   * Returns the field value.\n   *\n   * @return {*} Returns the current value.\n   */\n    get value () {\n        return this._value;\n    }\n\n  /**\n   * Converts to human readable string.\n   *\n   * @override\n   * @return {string} Returns a human readable string of the field value.\n   *\n   */\n    toString () {\n        return String(this.value);\n    }\n\n  /**\n   * Returns the value of the field.\n   *\n   * @override\n   * @return {*} Returns the field value.\n   */\n    valueOf () {\n        return this.value;\n    }\n}\n\nexport default Value;\n","/**\n * Iterates through the diffSet array and call the callback with the current\n * index.\n *\n * @param {string} rowDiffset - The row diffset string e.g. '0-4,6,10-13'.\n * @param {Function} callback - The callback function to be called with every index.\n */\nexport function rowDiffsetIterator (rowDiffset, callback) {\n    if (rowDiffset.length > 0) {\n        const rowDiffArr = rowDiffset.split(',');\n        rowDiffArr.forEach((diffStr) => {\n            const diffStsArr = diffStr.split('-');\n            const start = +(diffStsArr[0]);\n            const end = +(diffStsArr[1] || diffStsArr[0]);\n            if (end >= start) {\n                for (let i = start; i <= end; i += 1) {\n                    callback(i);\n                }\n            }\n        });\n    }\n}\n","/**\n * A parser to parser null, undefined, invalid and NIL values.\n *\n * @public\n * @class\n */\nclass InvalidAwareTypes {\n    /**\n     * Static method which gets/sets the invalid value registry.\n     *\n     * @public\n     * @param {Object} config - The custom configuration supplied by user.\n     * @return {Object} Returns the invalid values registry.\n     */\n    static invalidAwareVals (config) {\n        if (!config) {\n            return InvalidAwareTypes._invalidAwareValsMap;\n        }\n        return Object.assign(InvalidAwareTypes._invalidAwareValsMap, config);\n    }\n\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} value - The value of the invalid data type.\n     */\n    constructor (value) {\n        this._value = value;\n    }\n\n    /**\n     * Returns the current value of the instance.\n     *\n     * @public\n     * @return {string} Returns the value of the invalid data type.\n     */\n    value () {\n        return this._value;\n    }\n\n    /**\n     * Returns the current value of the instance in string format.\n     *\n     * @public\n     * @return {string} Returns the value of the invalid data type.\n     */\n    toString () {\n        return String(this._value);\n    }\n\n    static isInvalid(val) {\n        return (val instanceof InvalidAwareTypes) || !!InvalidAwareTypes.invalidAwareVals()[val];\n    }\n\n    static getInvalidType(val) {\n        return val instanceof InvalidAwareTypes ? val : InvalidAwareTypes.invalidAwareVals()[val];\n    }\n}\n\n/**\n * Enums for Invalid types.\n */\nInvalidAwareTypes.NULL = new InvalidAwareTypes('null');\nInvalidAwareTypes.NA = new InvalidAwareTypes('na');\nInvalidAwareTypes.NIL = new InvalidAwareTypes('nil');\n\n/**\n * Default Registry for mapping the invalid values.\n *\n * @private\n */\nInvalidAwareTypes._invalidAwareValsMap = {\n    invalid: InvalidAwareTypes.NA,\n    nil: InvalidAwareTypes.NIL,\n    null: InvalidAwareTypes.NULL,\n    undefined: InvalidAwareTypes.NA\n};\n\nexport default InvalidAwareTypes;\n","import { persistDerivations } from '../helper';\nimport { DM_DERIVATIVES } from '../constants';\n\n/**\n * DataModel's opearators are exposed as composable functional operators as well as chainable operators. Chainable\n * operators are called on the instances of {@link Datamodel} and {@link Relation} class.\n *\n * Those same operators can be used as composable operators from `DataModel.Operators` namespace.\n *\n * All these operators have similar behaviour. All these operators when called with the argument returns a function\n * which expects a DataModel instance.\n *\n * @public\n * @module Operators\n * @namespace DataModel\n */\n\n/**\n * This is functional version of selection operator. {@link link_to_selection | Selection} is a row filtering operation.\n * It takes {@link SelectionPredicate | predicate} for filtering criteria and returns a function.\n * The returned function is called with the DataModel instance on which the action needs to be performed.\n *\n * {@link SelectionPredicate} is a function which returns a boolean value. For selection opearation the selection\n * function is called for each row of DataModel instance with the current row passed as argument.\n *\n * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n * of rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * [Warn] Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * [Error] `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @example\n * const select = DataModel.Operators.select;\n * usaCarsFn = select(fields => fields.Origin.value === 'USA');\n * usaCarsDm = usaCarsFn(dm);\n * console.log(usaCarsDm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {SelectionPredicate} selectFn - Predicate funciton which is called for each row with the current row\n *      ```\n *          function (row, i)  { ... }\n *      ```\n * @param {Object} [config] - The configuration object to control the inclusion exclusion of a row in resultant\n *      DataModel instance\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const select = (...args) => dm => dm.select(...args);\n\n/**\n * This is functional version of projection operator. {@link link_to_projection | Projection} is a column filtering\n * operation.It expects list of fields name and either include those or exclude those based on {@link FilteringMode} on\n * the  resultant variable.It returns a function which is called with the DataModel instance on which the action needs\n * to be performed.\n *\n * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n * @param {Object} [config] - An optional config to control the creation of new DataModel\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const project = (...args) => dm => dm.project(...args);\n\n/**\n * This is functional version of binnig operator. Binning happens on a measure field based on a binning configuration.\n * Binning in DataModel does not aggregate the number of rows present in DataModel instance after binning, it just adds\n * a new field with the binned value. Refer binning {@link example_of_binning | example} to have a intuition of what\n * binning is and the use case.\n *\n * Binning can be configured by\n * - providing custom bin configuration with non uniform buckets\n * - providing bin count\n * - providing each bin size\n *\n * When custom buckets are provided as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const buckets = {\n *      start: 30\n *      stops: [80, 100, 110]\n *  };\n *  const config = { buckets, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(dm);\n *\n * @text\n * When `binCount` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binCount: 5, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @text\n * When `binSize` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binSize: 200, name: 'binnedHorsepower' }\n *  const binnedDm = dataModel.bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {String} name Name of measure which will be used to create bin\n * @param {Object} config Config required for bin creation\n * @param {Array.<Number>} config.bucketObj.stops Defination of bucket ranges. Two subsequent number from arrays\n *      are picked and a range is created. The first number from range is inclusive and the second number from range\n *      is exclusive.\n * @param {Number} [config.bucketObj.startAt] Force the start of the bin from a particular number.\n *      If not mentioned, the start of the bin or the lower domain of the data if stops is not mentioned, else its\n *      the first value of the stop.\n * @param {Number} config.binSize Bucket size for each bin\n * @param {Number} config.binCount Number of bins which will be created\n * @param {String} config.name Name of the new binned field to be created\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const bin = (...args) => dm => dm.bin(...args);\n\n/**\n * This is functional version of `groupBy` operator.Groups the data using particular dimensions and by reducing\n * measures. It expects a list of dimensions using which it projects the datamodel and perform aggregations to reduce\n * the duplicate tuples. Refer this {@link link_to_one_example_with_group_by | document} to know the intuition behind\n * groupBy.\n *\n * DataModel by default provides definition of few {@link reducer | Reducers}.\n * {@link ReducerStore | User defined reducers} can also be registered.\n *\n * This is the chained implementation of `groupBy`.\n * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n *\n * @example\n * const groupBy = DataModel.Operators.groupBy;\n * const groupedFn = groupBy(['Year'], { horsepower: 'max' } );\n * groupedDM = groupByFn(dm);\n *\n * @public\n *\n * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n *      schema of the variable.\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const groupBy = (...args) => dm => dm.groupBy(...args);\n\n/**\n * Enables composing operators to run multiple operations and save group of operataion as named opration on a DataModel.\n * The resulting DataModel will be the result of all the operation provided. The operations provided will be executed in\n * a serial manner ie. result of one operation will be the input for the next operations (like pipe operator in unix).\n *\n * Suported operations in compose are\n * - `select`\n * - `project`\n * - `groupBy`\n * - `bin`\n * - `compose`\n *\n * @example\n * const compose = DataModel.Operators.compose;\n * const select = DataModel.Operators.select;\n * const project = DataModel.Operators.project;\n *\n * let composedFn = compose(\n *    select(fields => fields.netprofit.value <= 15),\n *    project(['netprofit', 'netsales']));\n *\n * const dataModel = new DataModel(data1, schema1);\n *\n * let composedDm = composedFn(dataModel);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<Operators>} operators: An array of operation that will be applied on the\n * datatable.\n *\n * @returns {DataModel} Instance of resultant DataModel\n */\nexport const compose = (...operations) =>\n    (dm, config = { saveChild: true }) => {\n        let currentDM = dm;\n        let firstChild;\n        const derivations = [];\n\n        operations.forEach((operation) => {\n            currentDM = operation(currentDM);\n            derivations.push(...currentDM._derivation);\n            if (!firstChild) {\n                firstChild = currentDM;\n            }\n        });\n\n        if (firstChild && firstChild !== currentDM) {\n            firstChild.dispose();\n        }\n\n        // reset all ancestorDerivation saved in-between compose\n        currentDM._ancestorDerivation = [];\n        persistDerivations(\n            dm,\n            currentDM,\n            DM_DERIVATIVES.COMPOSE,\n            null,\n            derivations\n        );\n\n        if (config.saveChild) {\n            currentDM.setParent(dm);\n        } else {\n            currentDM.setParent(null);\n        }\n\n        return currentDM;\n    };\n","export { DataFormat, FilteringMode } from '../enums';\n/**\n * The event name for data propagation.\n */\nexport const PROPAGATION = 'propagation';\n\n/**\n * The name of the unique row id column in DataModel.\n */\nexport const ROW_ID = '__id__';\n\n/**\n * The enums for operation names performed on DataModel.\n */\nexport const DM_DERIVATIVES = {\n    SELECT: 'select',\n    PROJECT: 'project',\n    GROUPBY: 'group',\n    COMPOSE: 'compose',\n    CAL_VAR: 'calculatedVariable',\n    BIN: 'bin',\n    SORT: 'sort'\n};\n\nexport const JOINS = {\n    CROSS: 'cross',\n    LEFTOUTER: 'leftOuter',\n    RIGHTOUTER: 'rightOuter',\n    NATURAL: 'natural',\n    FULLOUTER: 'fullOuter'\n};\n\nexport const LOGICAL_OPERATORS = {\n    AND: 'and',\n    OR: 'or'\n};\n","/**\n * The helper function that returns an array of common schema\n * from two fieldStore instances.\n *\n * @param {FieldStore} fs1 - The first FieldStore instance.\n * @param {FieldStore} fs2 - The second FieldStore instance.\n * @return {Array} An array containing the common schema.\n */\nexport function getCommonSchema (fs1, fs2) {\n    const retArr = [];\n    const fs1Arr = [];\n    fs1.fields.forEach((field) => {\n        fs1Arr.push(field.schema().name);\n    });\n    fs2.fields.forEach((field) => {\n        if (fs1Arr.indexOf(field.schema().name) !== -1) {\n            retArr.push(field.schema().name);\n        }\n    });\n    return retArr;\n}\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { getCommonSchema } from './get-common-schema';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { JOINS } from '../constants';\nimport { prepareJoinData } from '../helper';\n/**\n * Default filter function for crossProduct.\n *\n * @return {boolean} Always returns true.\n */\nfunction defaultFilterFn() { return true; }\n\n/**\n * Implementation of cross product operation between two DataModel instances.\n * It internally creates the data and schema for the new DataModel.\n *\n * @param {DataModel} dataModel1 - The left DataModel instance.\n * @param {DataModel} dataModel2 - The right DataModel instance.\n * @param {Function} filterFn - The filter function which is used to filter the tuples.\n * @param {boolean} [replaceCommonSchema=false] - The flag if the common name schema should be there.\n * @return {DataModel} Returns The newly created DataModel instance from the crossProduct operation.\n */\nexport function crossProduct (dm1, dm2, filterFn, replaceCommonSchema = false, jointype = JOINS.CROSS) {\n    const schema = [];\n    const data = [];\n    const applicableFilterFn = filterFn || defaultFilterFn;\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreName = dm1FieldStore.name;\n    const dm2FieldStoreName = dm2FieldStore.name;\n    const name = `${dm1FieldStore.name}.${dm2FieldStore.name}`;\n    const commonSchemaList = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    if (dm1FieldStoreName === dm2FieldStoreName) {\n        throw new Error('DataModels must have different alias names');\n    }\n    // Here prepare the schema\n    dm1FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1 && !replaceCommonSchema) {\n            tmpSchema.name = `${dm1FieldStore.name}.${tmpSchema.name}`;\n        }\n        schema.push(tmpSchema);\n    });\n    dm2FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1) {\n            if (!replaceCommonSchema) {\n                tmpSchema.name = `${dm2FieldStore.name}.${tmpSchema.name}`;\n                schema.push(tmpSchema);\n            }\n        } else {\n            schema.push(tmpSchema);\n        }\n    });\n\n    // Here prepare Data\n    rowDiffsetIterator(dm1._rowDiffset, (i) => {\n        let rowAdded = false;\n        let rowPosition;\n        rowDiffsetIterator(dm2._rowDiffset, (ii) => {\n            const tuple = [];\n            const userArg = {};\n            userArg[dm1FieldStoreName] = {};\n            userArg[dm2FieldStoreName] = {};\n            dm1FieldStore.fields.forEach((field) => {\n                tuple.push(field.partialField.data[i]);\n                userArg[dm1FieldStoreName][field.name()] = field.partialField.data[i];\n            });\n            dm2FieldStore.fields.forEach((field) => {\n                if (!(commonSchemaList.indexOf(field.schema().name) !== -1 && replaceCommonSchema)) {\n                    tuple.push(field.partialField.data[ii]);\n                }\n                userArg[dm2FieldStoreName][field.name()] = field.partialField.data[ii];\n            });\n\n            let cachedStore = {};\n            let cloneProvider1 = () => dm1.detachedRoot();\n            let cloneProvider2 = () => dm2.detachedRoot();\n\n            const dm1Fields = prepareJoinData(userArg[dm1FieldStoreName]);\n            const dm2Fields = prepareJoinData(userArg[dm2FieldStoreName]);\n            if (applicableFilterFn(dm1Fields, dm2Fields, cloneProvider1, cloneProvider2, cachedStore)) {\n                const tupleObj = {};\n                tuple.forEach((cellVal, iii) => {\n                    tupleObj[schema[iii].name] = cellVal;\n                });\n                if (rowAdded && JOINS.CROSS !== jointype) {\n                    data[rowPosition] = tupleObj;\n                }\n                else {\n                    data.push(tupleObj);\n                    rowAdded = true;\n                    rowPosition = i;\n                }\n            } else if ((jointype === JOINS.LEFTOUTER || jointype === JOINS.RIGHTOUTER) && !rowAdded) {\n                const tupleObj = {};\n                let len = dm1FieldStore.fields.length - 1;\n                tuple.forEach((cellVal, iii) => {\n                    if (iii <= len) {\n                        tupleObj[schema[iii].name] = cellVal;\n                    }\n                    else {\n                        tupleObj[schema[iii].name] = null;\n                    }\n                });\n                rowAdded = true;\n                rowPosition = i;\n                data.push(tupleObj);\n            }\n        });\n    });\n\n    return new DataModel(data, schema, { name });\n}\n","/**\n * The default sort function.\n *\n * @param {*} a - The first value.\n * @param {*} b - The second value.\n * @return {number} Returns the comparison result e.g. 1 or 0 or -1.\n */\nfunction defSortFn (a, b) {\n    const a1 = `${a}`;\n    const b1 = `${b}`;\n    if (a1 < b1) {\n        return -1;\n    }\n    if (a1 > b1) {\n        return 1;\n    }\n    return 0;\n}\n\n/**\n * The helper function for merge sort which creates the sorted array\n * from the two halves of the input array.\n *\n * @param {Array} arr - The target array which needs to be merged.\n * @param {number} lo - The starting index of the first array half.\n * @param {number} mid - The ending index of the first array half.\n * @param {number} hi - The ending index of the second array half.\n * @param {Function} sortFn - The sort function.\n */\nfunction merge (arr, lo, mid, hi, sortFn) {\n    const mainArr = arr;\n    const auxArr = [];\n    for (let i = lo; i <= hi; i += 1) {\n        auxArr[i] = mainArr[i];\n    }\n    let a = lo;\n    let b = mid + 1;\n\n    for (let i = lo; i <= hi; i += 1) {\n        if (a > mid) {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        } else if (b > hi) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else if (sortFn(auxArr[a], auxArr[b]) <= 0) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        }\n    }\n}\n\n/**\n * The helper function for merge sort which would be called\n * recursively for sorting the array halves.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {number} lo - The starting index of the array half.\n * @param {number} hi - The ending index of the array half.\n * @param {Function} sortFn - The sort function.\n * @return {Array} Returns the target array itself.\n */\nfunction sort (arr, lo, hi, sortFn) {\n    if (hi === lo) { return arr; }\n\n    const mid = lo + Math.floor((hi - lo) / 2);\n    sort(arr, lo, mid, sortFn);\n    sort(arr, mid + 1, hi, sortFn);\n    merge(arr, lo, mid, hi, sortFn);\n\n    return arr;\n}\n\n/**\n * The implementation of merge sort.\n * It is used in DataModel for stable sorting as it is not sure\n * what the sorting algorithm used by browsers is stable or not.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {Function} [sortFn=defSortFn] - The sort function.\n * @return {Array} Returns the input array itself in sorted order.\n */\nexport function mergeSort (arr, sortFn = defSortFn) {\n    if (arr.length > 1) {\n        sort(arr, 0, arr.length - 1, sortFn);\n    }\n    return arr;\n}\n","import { DimensionSubtype, MeasureSubtype } from '../enums';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { mergeSort } from './merge-sort';\nimport { fieldInSchema } from '../helper';\nimport { isCallable, isArray, } from '../utils';\n/**\n * Generates the sorting functions to sort the data of a DataModel instance\n * according to the input data type.\n *\n * @param {string} dataType - The data type e.g. 'measure', 'datetime' etc.\n * @param {string} sortType - The sorting order i.e. 'asc' or 'desc'.\n * @param {integer} index - The index of the data which will be sorted.\n * @return {Function} Returns the the sorting function.\n */\nfunction getSortFn (dataType, sortType, index) {\n    let retFunc;\n    switch (dataType) {\n    case MeasureSubtype.CONTINUOUS:\n    case DimensionSubtype.TEMPORAL:\n        if (sortType === 'desc') {\n            retFunc = (a, b) => b[index] - a[index];\n        } else {\n            retFunc = (a, b) => a[index] - b[index];\n        }\n        break;\n    default:\n        retFunc = (a, b) => {\n            const a1 = `${a[index]}`;\n            const b1 = `${b[index]}`;\n            if (a1 < b1) {\n                return sortType === 'desc' ? 1 : -1;\n            }\n            if (a1 > b1) {\n                return sortType === 'desc' ? -1 : 1;\n            }\n            return 0;\n        };\n    }\n    return retFunc;\n}\n\n/**\n * Groups the data according to the specified target field.\n *\n * @param {Array} data - The input data array.\n * @param {number} fieldIndex - The target field index within schema array.\n * @return {Array} Returns an array containing the grouped data.\n */\nfunction groupData(data, fieldIndex) {\n    const hashMap = new Map();\n    const groupedData = [];\n\n    data.forEach((datum) => {\n        const fieldVal = datum[fieldIndex];\n        if (hashMap.has(fieldVal)) {\n            groupedData[hashMap.get(fieldVal)][1].push(datum);\n        } else {\n            groupedData.push([fieldVal, [datum]]);\n            hashMap.set(fieldVal, groupedData.length - 1);\n        }\n    });\n\n    return groupedData;\n}\n\n/**\n * Creates the argument value used for sorting function when sort is done\n * with another fields.\n *\n * @param {Array} groupedDatum - The grouped datum for a single dimension field value.\n * @param {Array} targetFields - An array of the sorting fields.\n * @param {Array} targetFieldDetails - An array of the sorting field details in schema.\n * @return {Object} Returns an object containing the value of sorting fields and the target field name.\n */\nfunction createSortingFnArg(groupedDatum, targetFields, targetFieldDetails) {\n    const arg = {\n        label: groupedDatum[0]\n    };\n\n    targetFields.reduce((acc, next, idx) => {\n        acc[next] = groupedDatum[1].map(datum => datum[targetFieldDetails[idx].index]);\n        return acc;\n    }, arg);\n\n    return arg;\n}\n\n/**\n * Sorts the data before return in dataBuilder.\n *\n * @param {Object} dataObj - An object containing the data and schema.\n * @param {Array} sortingDetails - An array containing the sorting configs.\n */\nfunction sortData(dataObj, sortingDetails) {\n    const { data, schema } = dataObj;\n    let fieldName;\n    let sortMeta;\n    let fDetails;\n    let i = sortingDetails.length - 1;\n\n    for (; i >= 0; i--) {\n        fieldName = sortingDetails[i][0];\n        sortMeta = sortingDetails[i][1];\n        fDetails = fieldInSchema(schema, fieldName);\n\n        if (!fDetails) {\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n\n        if (isCallable(sortMeta)) {\n            // eslint-disable-next-line no-loop-func\n            mergeSort(data, (a, b) => sortMeta(a[fDetails.index], b[fDetails.index]));\n        } else if (isArray(sortMeta)) {\n            const groupedData = groupData(data, fDetails.index);\n            const sortingFn = sortMeta[sortMeta.length - 1];\n            const targetFields = sortMeta.slice(0, sortMeta.length - 1);\n            const targetFieldDetails = targetFields.map(f => fieldInSchema(schema, f));\n\n            groupedData.forEach((groupedDatum) => {\n                groupedDatum.push(createSortingFnArg(groupedDatum, targetFields, targetFieldDetails));\n            });\n\n            mergeSort(groupedData, (a, b) => {\n                const m = a[2];\n                const n = b[2];\n                return sortingFn(m, n);\n            });\n\n            // Empty the array\n            data.length = 0;\n            groupedData.forEach((datum) => {\n                data.push(...datum[1]);\n            });\n        } else {\n            sortMeta = String(sortMeta).toLowerCase() === 'desc' ? 'desc' : 'asc';\n            mergeSort(data, getSortFn(fDetails.type, sortMeta, fDetails.index));\n        }\n    }\n\n    dataObj.uids = [];\n    data.forEach((value) => {\n        dataObj.uids.push(value.pop());\n    });\n}\n\n\n/**\n * Builds the actual data array.\n *\n * @param {Array} fieldStore - An array of field.\n * @param {string} rowDiffset - A string consisting of which rows to be included eg. '0-2,4,6';\n * @param {string} colIdentifier - A string consisting of the details of which column\n * to be included eg 'date,sales,profit';\n * @param {Object} sortingDetails - An object containing the sorting details of the DataModel instance.\n * @param {Object} options - The options required to create the type of the data.\n * @return {Object} Returns an object containing the multidimensional array and the relative schema.\n */\nexport function dataBuilder (fieldStore, rowDiffset, colIdentifier, sortingDetails, options) {\n    const defOptions = {\n        addUid: false,\n        columnWise: false\n    };\n    options = Object.assign({}, defOptions, options);\n\n    const retObj = {\n        schema: [],\n        data: [],\n        uids: []\n    };\n    const addUid = options.addUid;\n    const reqSorting = sortingDetails && sortingDetails.length > 0;\n    // It stores the fields according to the colIdentifier argument\n    const tmpDataArr = [];\n    // Stores the fields according to the colIdentifier argument\n    const colIArr = colIdentifier.split(',');\n\n    colIArr.forEach((colName) => {\n        for (let i = 0; i < fieldStore.length; i += 1) {\n            if (fieldStore[i].name() === colName) {\n                tmpDataArr.push(fieldStore[i]);\n                break;\n            }\n        }\n    });\n\n    // Inserts the schema to the schema object\n    tmpDataArr.forEach((field) => {\n        /** @todo Need to use extend2 here otherwise user can overwrite the schema. */\n        retObj.schema.push(field.schema());\n    });\n\n    if (addUid) {\n        retObj.schema.push({\n            name: 'uid',\n            type: 'identifier'\n        });\n    }\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        retObj.data.push([]);\n        const insertInd = retObj.data.length - 1;\n        let start = 0;\n        tmpDataArr.forEach((field, ii) => {\n            retObj.data[insertInd][ii + start] = field.partialField.data[i];\n        });\n        if (addUid) {\n            retObj.data[insertInd][tmpDataArr.length] = i;\n        }\n        // Creates an array of unique identifiers for each row\n        retObj.uids.push(i);\n\n        // If sorting needed then there is the need to expose the index\n        // mapping from the old index to its new index\n        if (reqSorting) { retObj.data[insertInd].push(i); }\n    });\n\n    // Handles the sort functionality\n    if (reqSorting) {\n        sortData(retObj, sortingDetails);\n    }\n\n    if (options.columnWise) {\n        const tmpData = Array(...Array(retObj.schema.length)).map(() => []);\n        retObj.data.forEach((tuple) => {\n            tuple.forEach((data, i) => {\n                tmpData[i].push(data);\n            });\n        });\n        retObj.data = tmpData;\n    }\n\n    return retObj;\n}\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n\n/**\n * Performs the union operation between two dm instances.\n *\n * @todo Fix the conflicts between union and difference terminology here.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function difference (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n   // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     * @param {boolean} addData - If true only tuple will be added to the data.\n     */\n    function prepareDataHelper(dm, fieldsObj, addData) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                if (addData) { data.push(tuple); }\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj, false);\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj, true);\n\n    return new DataModel(data, schema, { name });\n}\n\n","import { isArray } from '../utils';\nimport InvalidAwareTypes from '../invalid-aware-types';\nimport { GROUP_BY_FUNCTIONS } from '../enums';\n\nconst { SUM, AVG, FIRST, LAST, COUNT, STD, MIN, MAX } = GROUP_BY_FUNCTIONS;\n\nfunction getFilteredValues(arr) {\n    return arr.filter(item => !(item instanceof InvalidAwareTypes));\n}\n/**\n * Reducer function that returns the sum of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the sum of the array.\n */\nfunction sum (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        const filteredNumber = getFilteredValues(arr);\n        const totalSum = filteredNumber.length ?\n                            filteredNumber.reduce((acc, curr) => acc + curr, 0)\n                            : InvalidAwareTypes.NULL;\n        return totalSum;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that returns the average of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the mean value of the array.\n */\nfunction avg (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        const totalSum = sum(arr);\n        const len = arr.length || 1;\n        return (Number.isNaN(totalSum) || totalSum instanceof InvalidAwareTypes) ?\n                 InvalidAwareTypes.NULL : totalSum / len;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the min value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the minimum value of the array.\n */\nfunction min (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = getFilteredValues(arr);\n\n        return (filteredValues.length) ? Math.min(...filteredValues) : InvalidAwareTypes.NULL;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the max value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the maximum value of the array.\n */\nfunction max (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = getFilteredValues(arr);\n\n        return (filteredValues.length) ? Math.max(...filteredValues) : InvalidAwareTypes.NULL;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the first value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the first value of the array.\n */\nfunction first (arr) {\n    return arr[0];\n}\n\n/**\n * Reducer function that gives the last value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the last value of the array.\n */\nfunction last (arr) {\n    return arr[arr.length - 1];\n}\n\n/**\n * Reducer function that gives the count value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the length of the array.\n */\nfunction count (arr) {\n    if (isArray(arr)) {\n        return arr.length;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Calculates the variance of the input array.\n *\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the variance of the input array.\n */\nfunction variance (arr) {\n    let mean = avg(arr);\n    return avg(arr.map(num => (num - mean) ** 2));\n}\n\n/**\n * Calculates the square root of the variance of the input array.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the square root of the variance.\n */\nfunction std (arr) {\n    return Math.sqrt(variance(arr));\n}\n\n\nconst fnList = {\n    [SUM]: sum,\n    [AVG]: avg,\n    [MIN]: min,\n    [MAX]: max,\n    [FIRST]: first,\n    [LAST]: last,\n    [COUNT]: count,\n    [STD]: std\n};\n\nconst defaultReducerName = SUM;\n\nexport {\n    defaultReducerName,\n    sum as defReducer,\n    fnList,\n};\n","import { defReducer, fnList } from '../operator';\n\n/**\n * A page level storage which stores, registers, unregisters reducers for all the datamodel instances. There is only one\n * reducer store available in a page. All the datamodel instances receive same instance of reducer store. DataModel\n * out of the box provides handful of {@link reducer | reducers} which can be used as reducer funciton.\n *\n * @public\n * @namespace DataModel\n */\nclass ReducerStore {\n    constructor () {\n        this.store = new Map();\n        this.store.set('defReducer', defReducer);\n\n        Object.entries(fnList).forEach((key) => {\n            this.store.set(key[0], key[1]);\n        });\n    }\n\n    /**\n     * Changes the `defaultReducer` globally. For all the fields which does not have `defAggFn` mentioned in schema, the\n     * value of `defaultReducer` is used for aggregation.\n     *\n     * @public\n     * @param {string} [reducer='sum'] - The name of the default reducer. It picks up the definition from store by doing\n     * name lookup. If no name is found then it takes `sum` as the default reducer.\n     * @return {ReducerStore} Returns instance of the singleton store in page.\n     */\n    defaultReducer (...params) {\n        if (!params.length) {\n            return this.store.get('defReducer');\n        }\n\n        let reducer = params[0];\n\n        if (typeof reducer === 'function') {\n            this.store.set('defReducer', reducer);\n        } else {\n            reducer = String(reducer);\n            if (Object.keys(fnList).indexOf(reducer) !== -1) {\n                this.store.set('defReducer', fnList[reducer]);\n            } else {\n                throw new Error(`Reducer ${reducer} not found in registry`);\n            }\n        }\n        return this;\n    }\n\n    /**\n     *\n     * Registers a {@link reducer | reducer}.\n     * A {@link reducer | reducer} has to be registered before it is used.\n     *\n     * @example\n     *  // find the mean squared value of a given set\n     *  const reducerStore = DataModel.Reducers();\n     *\n     *  reducers.register('meanSquared', (arr) => {\n     *      const squaredVal = arr.map(item => item * item);\n     *      let sum = 0;\n     *      for (let i = 0, l = squaredVal.length; i < l; i++) {\n     *          sum += squaredVal[i++];\n     *      }\n     *\n     *      return sum;\n     *  })\n     *\n     *  // datamodel (dm) is already prepared with cars.json\n     *  const dm1 = dm.groupBy(['origin'], {\n     *      accleration: 'meanSquared'\n     *  });\n     *\n     * @public\n     *\n     * @param {string} name formal name for a reducer. If the given name already exists in store it is overridden by new\n     *      definition.\n     * @param {Function} reducer definition of {@link reducer} function.\n     *\n     * @return {Function} function for unregistering the reducer.\n     */\n    register (name, reducer) {\n        if (typeof reducer !== 'function') {\n            throw new Error('Reducer should be a function');\n        }\n\n        name = String(name);\n        this.store.set(name, reducer);\n\n        return () => { this.__unregister(name); };\n    }\n\n    __unregister (name) {\n        if (this.store.has(name)) {\n            this.store.delete(name);\n        }\n    }\n\n    resolve (name) {\n        if (name instanceof Function) {\n            return name;\n        }\n        return this.store.get(name);\n    }\n}\n\nconst reducerStore = (function () {\n    let store = null;\n\n    function getStore () {\n        if (store === null) {\n            store = new ReducerStore();\n        }\n        return store;\n    }\n    return getStore();\n}());\n\nexport default reducerStore;\n","import { getCommonSchema } from './get-common-schema';\n\n/**\n * The filter function used in natural join.\n * It generates a function that will have the logic to join two\n * DataModel instances by the process of natural join.\n *\n * @param {DataModel} dm1 - The left DataModel instance.\n * @param {DataModel} dm2 - The right DataModel instance.\n * @return {Function} Returns a function that is used in cross-product operation.\n */\nexport function naturalJoinFilter (dm1, dm2) {\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    // const dm1FieldStoreName = dm1FieldStore.name;\n    // const dm2FieldStoreName = dm2FieldStore.name;\n    const commonSchemaArr = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    return (dm1Fields, dm2Fields) => {\n        let retainTuple = true;\n        commonSchemaArr.forEach((fieldName) => {\n            if (dm1Fields[fieldName].value ===\n                dm2Fields[fieldName].value && retainTuple) {\n                retainTuple = true;\n            } else {\n                retainTuple = false;\n            }\n        });\n        return retainTuple;\n    };\n}\n","import DataModel from '../export';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n/**\n * Performs the union operation between two dm instances.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function union (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n    // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     */\n    function prepareDataHelper (dm, fieldsObj) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                data.push(tuple);\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj);\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj);\n\n    return new DataModel(data, schema, { name });\n}\n","import { crossProduct } from './cross-product';\nimport { JOINS } from '../constants';\nimport { union } from './union';\n\n\nexport function leftOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel1, dataModel2, filterFn, false, JOINS.LEFTOUTER);\n}\n\nexport function rightOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel2, dataModel1, filterFn, false, JOINS.RIGHTOUTER);\n}\n\nexport function fullOuterJoin (dataModel1, dataModel2, filterFn) {\n    return union(leftOuterJoin(dataModel1, dataModel2, filterFn), rightOuterJoin(dataModel1, dataModel2, filterFn));\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\n\n/**\n * In {@link DataModel}, every tabular data consists of column, a column is stored as field.\n * Field contains all the data for a given column in an array.\n *\n * Each record consists of several fields; the fields of all records form the columns.\n * Examples of fields: name, gender, sex etc.\n *\n * In DataModel, each field can have multiple attributes which describes its data and behaviour.\n * A field can have two types of data: Measure and Dimension.\n *\n * A Dimension Field is the context on which a data is categorized and the measure is the numerical values that\n * quantify the data set.\n * In short a dimension is the lens through which you are looking at your measure data.\n *\n * Refer to {@link Schema} to get info about possible field attributes.\n *\n * @public\n * @class\n */\nexport default class Field {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        this.partialField = partialField;\n        this.rowDiffset = rowDiffset;\n    }\n\n    /**\n     * Generates the field type specific domain.\n     *\n     * @public\n     * @abstract\n     */\n    domain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the the field schema.\n     *\n     * @public\n     * @return {string} Returns the field schema.\n     */\n    schema () {\n        return this.partialField.schema;\n    }\n\n    /**\n     * Returns the name of the field.\n     *\n     * @public\n     * @return {string} Returns the name of the field.\n     */\n    name () {\n        return this.partialField.name;\n    }\n\n    /**\n     * Returns the type of the field.\n     *\n     * @public\n     * @return {string} Returns the type of the field.\n     */\n    type () {\n        return this.partialField.schema.type;\n    }\n\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return this.partialField.schema.subtype;\n    }\n\n    /**\n     * Returns the description of the field.\n     *\n     * @public\n     * @return {string} Returns the description of the field.\n     */\n    description () {\n        return this.partialField.schema.description;\n    }\n\n    /**\n     * Returns the display name of the field.\n     *\n     * @public\n     * @return {string} Returns the display name of the field.\n     */\n    displayName () {\n        return this.partialField.schema.displayName || this.partialField.schema.name;\n    }\n\n    /**\n     * Returns the data associated with the field.\n     *\n     * @public\n     * @return {Array} Returns the data.\n     */\n    data () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            data.push(this.partialField.data[i]);\n        });\n        return data;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @abstract\n     */\n    formattedData () {\n        throw new Error('Not yet implemented');\n    }\n}\n","import Field from '../field';\n\n/**\n * Represents dimension field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Dimension extends Field {\n    /**\n     * Returns the domain for the dimension field.\n     *\n     * @override\n     * @public\n     * @return {any} Returns the calculated domain.\n     */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @abstract\n     */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n     /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { DimensionSubtype } from '../../enums';\nimport Dimension from '../dimension';\n/**\n * Represents categorical field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Categorical extends Dimension {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return DimensionSubtype.CATEGORICAL;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n        return domain;\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport Dimension from '../dimension';\nimport { DateTimeFormatter } from '../../utils';\nimport InvalidAwareTypes from '../../invalid-aware-types';\n\n/**\n * Represents temporal field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Temporal extends Dimension {\n     /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        super(partialField, rowDiffset);\n\n        this._cachedMinDiff = null;\n    }\n\n     /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be\n        // occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n\n        return domain;\n    }\n\n\n    /**\n     * Calculates the minimum consecutive difference from the associated field data.\n     *\n     * @public\n     * @return {number} Returns the minimum consecutive diff in milliseconds.\n     */\n    minimumConsecutiveDifference () {\n        if (this._cachedMinDiff) {\n            return this._cachedMinDiff;\n        }\n\n        const sortedData = this.data().filter(item => !(item instanceof InvalidAwareTypes)).sort((a, b) => a - b);\n        const arrLn = sortedData.length;\n        let minDiff = Number.POSITIVE_INFINITY;\n        let prevDatum;\n        let nextDatum;\n        let processedCount = 0;\n\n        for (let i = 1; i < arrLn; i++) {\n            prevDatum = sortedData[i - 1];\n            nextDatum = sortedData[i];\n\n            if (nextDatum === prevDatum) {\n                continue;\n            }\n\n            minDiff = Math.min(minDiff, nextDatum - sortedData[i - 1]);\n            processedCount++;\n        }\n\n        if (!processedCount) {\n            minDiff = null;\n        }\n        this._cachedMinDiff = minDiff;\n\n        return this._cachedMinDiff;\n    }\n\n    /**\n     * Returns the format specified in the input schema while creating field.\n     *\n     * @public\n     * @return {string} Returns the datetime format.\n     */\n    format () {\n        return this.partialField.schema.format;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum instanceof InvalidAwareTypes) {\n                data.push(datum);\n            } else {\n                data.push(DateTimeFormatter.formatAs(datum, this.format()));\n            }\n        });\n        return data;\n    }\n}\n\n","import Dimension from '../dimension';\n\n/**\n * Represents binned field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Binned extends Dimension {\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the last and first values of bins config array.\n     */\n    calculateDataDomain () {\n        const binsArr = this.partialField.schema.bins;\n        return [binsArr[0], binsArr[binsArr.length - 1]];\n    }\n\n    /**\n     * Returns the bins config provided while creating the field instance.\n     *\n     * @public\n     * @return {Array} Returns the bins array config.\n     */\n    bins () {\n        return this.partialField.schema.bins;\n    }\n}\n","import { formatNumber } from '../../utils';\nimport { defaultReducerName } from '../../operator/group-by-function';\nimport Field from '../field';\n\n/**\n * Represents measure field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Measure extends Field {\n  /**\n   * Returns the domain for the measure field.\n   *\n   * @override\n   * @public\n   * @return {any} Returns the calculated domain.\n   */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n  /**\n   * Returns the unit of the measure field.\n   *\n   * @public\n   * @return {string} Returns unit of the field.\n   */\n    unit () {\n        return this.partialField.schema.unit;\n    }\n\n  /**\n   * Returns the aggregation function name of the measure field.\n   *\n   * @public\n   * @return {string} Returns aggregation function name of the field.\n   */\n    defAggFn () {\n        return this.partialField.schema.defAggFn || defaultReducerName;\n    }\n\n  /**\n   * Returns the number format of the measure field.\n   *\n   * @public\n   * @return {Function} Returns number format of the field.\n   */\n    numberFormat () {\n        const { numberFormat } = this.partialField.schema;\n        return numberFormat instanceof Function ? numberFormat : formatNumber;\n    }\n\n  /**\n   * Calculates the corresponding field domain.\n   *\n   * @public\n   * @abstract\n   */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { MeasureSubtype } from '../../enums';\nimport Measure from '../measure';\nimport InvalidAwareTypes from '../../invalid-aware-types';\n\n/**\n * Represents continuous field subtype.\n *\n * @public\n * @class\n * @extends Measure\n */\nexport default class Continuous extends Measure {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return MeasureSubtype.CONTINUOUS;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the min and max values.\n     */\n    calculateDataDomain () {\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum instanceof InvalidAwareTypes) {\n                return;\n            }\n\n            if (datum < min) {\n                min = datum;\n            }\n            if (datum > max) {\n                max = datum;\n            }\n        });\n\n        return [min, max];\n    }\n}\n","/**\n * A interface to represent a parser which is responsible to parse the field.\n *\n * @public\n * @interface\n */\nexport default class FieldParser {\n    /**\n     * Parses a single value of a field and return the sanitized form.\n     *\n     * @public\n     * @abstract\n     */\n    parse () {\n        throw new Error('Not yet implemented');\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the categorical values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class CategoricalParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the stringified form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the stringified value.\n   */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            result = String(val).trim();\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import { DateTimeFormatter } from '../../../utils';\nimport FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the temporal values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class TemporalParser extends FieldParser {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {Object} schema - The schema object for the corresponding field.\n     */\n    constructor (schema) {\n        super();\n        this.schema = schema;\n        this._dtf = new DateTimeFormatter(this.schema.format);\n    }\n\n    /**\n     * Parses a single value of a field and returns the millisecond value.\n     *\n     * @public\n     * @param {string|number} val - The value of the field.\n     * @return {number} Returns the millisecond value.\n     */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let nativeDate = this._dtf.getNativeDate(val);\n            result = nativeDate ? nativeDate.getTime() : InvalidAwareTypes.NA;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the binned values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class BinnedParser extends FieldParser {\n  /**\n   * Parses a single binned value of a field and returns the sanitized value.\n   *\n   * @public\n   * @param {string} val - The value of the field.\n   * @return {string} Returns the sanitized value.\n   */\n    parse (val) {\n        const regex = /^\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*-\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*$/;\n        val = String(val);\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let matched = val.match(regex);\n            result = matched ? `${Number.parseFloat(matched[1])}-${Number.parseFloat(matched[2])}`\n                             : InvalidAwareTypes.NA;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the continuous values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class ContinuousParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the number form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the number value.\n   */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let parsedVal = parseFloat(val, 10);\n            result = Number.isNaN(parsedVal) ? InvalidAwareTypes.NA : parsedVal;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","/**\n * Stores the full data and the metadata of a field. It provides\n * a single source of data from which the future Field\n * instance can get a subset of it with a rowDiffset config.\n *\n * @class\n * @public\n */\nexport default class PartialField {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} name - The name of the field.\n     * @param {Array} data - The data array.\n     * @param {Object} schema - The schema object of the corresponding field.\n     * @param {FieldParser} parser - The parser instance corresponding to that field.\n     */\n    constructor (name, data, schema, parser) {\n        this.name = name;\n        this.schema = schema;\n        this.parser = parser;\n        this.data = this._sanitize(data);\n    }\n\n    /**\n     * Sanitizes the field data.\n     *\n     * @private\n     * @param {Array} data - The actual input data.\n     * @return {Array} Returns the sanitized data.\n     */\n    _sanitize (data) {\n        return data.map(datum => this.parser.parse(datum));\n    }\n}\n","import { FieldType, DimensionSubtype, MeasureSubtype } from './enums';\nimport {\n    Categorical,\n    Temporal,\n    Binned,\n    Continuous,\n    CategoricalParser,\n    TemporalParser,\n    BinnedParser,\n    ContinuousParser,\n    PartialField\n} from './fields';\n\n/**\n * Creates a field instance according to the provided data and schema.\n *\n * @param {Array} data - The field data array.\n * @param {Object} schema - The field schema object.\n * @return {Field} Returns the newly created field instance.\n */\nfunction createUnitField(data, schema) {\n    data = data || [];\n    let partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.TEMPORAL:\n            partialField = new PartialField(schema.name, data, schema, new TemporalParser(schema));\n            return new Temporal(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.BINNED:\n            partialField = new PartialField(schema.name, data, schema, new BinnedParser());\n            return new Binned(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        }\n    default:\n        partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n        return new Categorical(partialField, `0-${data.length - 1}`);\n    }\n}\n\n\n/**\n * Creates a field instance from partialField and rowDiffset.\n *\n * @param {PartialField} partialField - The corresponding partial field.\n * @param {string} rowDiffset - The data subset config.\n * @return {Field} Returns the newly created field instance.\n */\nexport function createUnitFieldFromPartial(partialField, rowDiffset) {\n    const { schema } = partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            return new Continuous(partialField, rowDiffset);\n        default:\n            return new Continuous(partialField, rowDiffset);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            return new Categorical(partialField, rowDiffset);\n        case DimensionSubtype.TEMPORAL:\n            return new Temporal(partialField, rowDiffset);\n        case DimensionSubtype.BINNED:\n            return new Binned(partialField, rowDiffset);\n        default:\n            return new Categorical(partialField, rowDiffset);\n        }\n    default:\n        return new Categorical(partialField, rowDiffset);\n    }\n}\n\n/**\n * Creates the field instances with input data and schema.\n *\n * @param {Array} dataColumn - The data array for fields.\n * @param {Array} schema - The schema array for fields.\n * @param {Array} headers - The array of header names.\n * @return {Array.<Field>} Returns an array of newly created field instances.\n */\nexport function createFields(dataColumn, schema, headers) {\n    const headersObj = {};\n\n    if (!(headers && headers.length)) {\n        headers = schema.map(item => item.name);\n    }\n\n    headers.forEach((header, i) => {\n        headersObj[header] = i;\n    });\n\n    return schema.map(item => createUnitField(dataColumn[headersObj[item.name]], item));\n}\n","import { DataFormat } from './enums';\n\nexport default {\n    dataFormat: DataFormat.AUTO\n};\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in DSV array to a manageable internal format.\n *\n * @param {Array.<Array>} arr - A 2D array containing of the DSV data.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv data is header or not.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    [\"a\", \"b\", \"c\"],\n *    [1, 2, 3],\n *    [4, 5, 6],\n *    [7, 8, 9]\n * ];\n */\nfunction DSVArr (arr, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    let header;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    if (options.firstRowHeader) {\n        // If header present then mutate the array.\n        // Do in-place mutation to save space.\n        header = arr.splice(0, 1)[0];\n    } else {\n        header = [];\n    }\n\n    arr.forEach(field => push(...field));\n\n    return [header, columns];\n}\n\nexport default DSVArr;\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatRows = csv.formatRows;\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatRows = tsv.formatRows;\n","import { dsvFormat as d3Dsv } from 'd3-dsv';\nimport DSVArr from './dsv-arr';\n\n/**\n * Parses and converts data formatted in DSV string to a manageable internal format.\n *\n * @todo Support to be given for https://tools.ietf.org/html/rfc4180.\n * @todo Sample implementation https://github.com/knrz/CSV.js/.\n *\n * @param {string} str - The input DSV string.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv string data is header or not.\n * @param {string} [options.fieldSeparator=\",\"] - The separator of two consecutive field.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = `\n * a,b,c\n * 1,2,3\n * 4,5,6\n * 7,8,9\n * `\n */\nfunction DSVStr (str, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n        fieldSeparator: ','\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    const dsv = d3Dsv(options.fieldSeparator);\n    return DSVArr(dsv.parseRows(str), options);\n}\n\nexport default DSVStr;\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in JSON to a manageable internal format.\n *\n * @param {Array.<Object>} arr - The input data formatted in JSON.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    {\n *      \"a\": 1,\n *      \"b\": 2,\n *      \"c\": 3\n *    },\n *    {\n *      \"a\": 4,\n *      \"b\": 5,\n *      \"c\": 6\n *    },\n *    {\n *      \"a\": 7,\n *      \"b\": 8,\n *      \"c\": 9\n *    }\n * ];\n */\nfunction FlatJSON (arr) {\n    const header = {};\n    let i = 0;\n    let insertionIndex;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    arr.forEach((item) => {\n        const fields = [];\n        for (let key in item) {\n            if (key in header) {\n                insertionIndex = header[key];\n            } else {\n                header[key] = i++;\n                insertionIndex = i - 1;\n            }\n            fields[insertionIndex] = item[key];\n        }\n        push(...fields);\n    });\n\n    return [Object.keys(header), columns];\n}\n\nexport default FlatJSON;\n","import FlatJSON from './flat-json';\nimport DSVArr from './dsv-arr';\nimport DSVStr from './dsv-str';\nimport { detectDataFormat } from '../utils';\n\n/**\n * Parses the input data and detect the format automatically.\n *\n * @param {string|Array} data - The input data.\n * @param {Object} options - An optional config specific to data format.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n */\nfunction Auto (data, options) {\n    const converters = { FlatJSON, DSVStr, DSVArr };\n    const dataFormat = detectDataFormat(data);\n\n    if (!dataFormat) {\n        throw new Error('Couldn\\'t detect the data format');\n    }\n\n    return converters[dataFormat](data, options);\n}\n\nexport default Auto;\n","import { FieldType, FilteringMode, DimensionSubtype, MeasureSubtype, DataFormat } from './enums';\nimport fieldStore from './field-store';\nimport Value from './value';\nimport {\n    rowDiffsetIterator\n} from './operator';\nimport { DM_DERIVATIVES, LOGICAL_OPERATORS } from './constants';\nimport { createFields, createUnitFieldFromPartial } from './field-creator';\nimport defaultConfig from './default-config';\nimport * as converter from './converter';\nimport { extend2, detectDataFormat } from './utils';\n\n/**\n * Prepares the selection data.\n */\nfunction prepareSelectionData (fields, i) {\n    const resp = {};\n    for (let field of fields) {\n        resp[field.name()] = new Value(field.partialField.data[i], field);\n    }\n    return resp;\n}\n\nexport function prepareJoinData (fields) {\n    const resp = {};\n    Object.keys(fields).forEach((key) => { resp[key] = new Value(fields[key], key); });\n    return resp;\n}\n\nexport const updateFields = ([rowDiffset, colIdentifier], partialFieldspace, fieldStoreName) => {\n    let collID = colIdentifier.length ? colIdentifier.split(',') : [];\n    let partialFieldMap = partialFieldspace.fieldsObj();\n    let newFields = collID.map(coll => createUnitFieldFromPartial(partialFieldMap[coll].partialField, rowDiffset));\n    return fieldStore.createNamespace(newFields, fieldStoreName);\n};\n\nexport const persistCurrentDerivation = (model, operation, config = {}, criteriaFn) => {\n    if (operation === DM_DERIVATIVES.COMPOSE) {\n        model._derivation.length = 0;\n        model._derivation.push(...criteriaFn);\n    } else {\n        model._derivation.push({\n            op: operation,\n            meta: config,\n            criteria: criteriaFn\n        });\n    }\n};\n\nexport const persistAncestorDerivation = (sourceDm, newDm) => {\n    newDm._ancestorDerivation.push(...sourceDm._ancestorDerivation, ...sourceDm._derivation);\n};\n\nexport const persistDerivations = (sourceDm, model, operation, config = {}, criteriaFn) => {\n    persistCurrentDerivation(model, operation, config, criteriaFn);\n    persistAncestorDerivation(sourceDm, model);\n};\n\nconst generateRowDiffset = (rowDiffset, i, lastInsertedValue) => {\n    if (lastInsertedValue !== -1 && i === (lastInsertedValue + 1)) {\n        const li = rowDiffset.length - 1;\n\n        rowDiffset[li] = `${rowDiffset[li].split('-')[0]}-${i}`;\n    } else {\n        rowDiffset.push(`${i}`);\n    }\n};\n\nexport const selectHelper = (rowDiffset, fields, selectFn, config, sourceDm) => {\n    let newRowDiffSet = [];\n    const rejRowDiffSet = [];\n    let lastInsertedValue = -1;\n    let lastInsertedValueRej = -1;\n    let { mode } = config;\n    let cachedStore = {};\n    let cloneProvider = () => sourceDm.detachedRoot();\n    const selectorHelperFn = index => selectFn(\n        fields[index],\n        index,\n        cloneProvider,\n        cachedStore\n    );\n\n    const checker = mode === FilteringMode.INVERSE ? index => !selectorHelperFn(index) :\n        index => selectorHelperFn(index);\n\n    const passFn = (i) => {\n        if (checker(i)) {\n            generateRowDiffset(newRowDiffSet, i, lastInsertedValue);\n            lastInsertedValue = i;\n            return true;\n        }\n        return false;\n    };\n\n    if (mode === FilteringMode.ALL) {\n        rowDiffsetIterator(rowDiffset, (i) => {\n            if (!passFn(i)) {\n                generateRowDiffset(rejRowDiffSet, i, lastInsertedValueRej);\n                lastInsertedValueRej = i;\n            }\n        });\n        return [newRowDiffSet.join(','), rejRowDiffSet.join(',')];\n    }\n\n    rowDiffsetIterator(rowDiffset, passFn);\n    return [newRowDiffSet.join(',')];\n};\n\nexport const cloneWithAllFields = (model) => {\n    const clonedDm = model.clone(false);\n    const partialFieldspace = model.getPartialFieldspace();\n    clonedDm._colIdentifier = partialFieldspace.fields.map(f => f.name()).join(',');\n\n    // flush out cached namespace values on addition of new fields\n    partialFieldspace._cachedFieldsObj = null;\n    partialFieldspace._cachedDimension = null;\n    partialFieldspace._cachedMeasure = null;\n    clonedDm.__calculateFieldspace().calculateFieldsConfig();\n\n    return clonedDm;\n};\n\nconst getKey = (arr, data, fn) => {\n    let key = fn(arr, data, 0);\n\n    for (let i = 1, len = arr.length; i < len; i++) {\n        key = `${key},${fn(arr, data, i)}`;\n    }\n    return key;\n};\n\nexport const filterPropagationModel = (model, propModels, config = {}) => {\n    let fns = [];\n    const operation = config.operation || LOGICAL_OPERATORS.AND;\n    const filterByMeasure = config.filterByMeasure || false;\n    const clonedModel = cloneWithAllFields(model);\n    const modelFieldsConfig = clonedModel.getFieldsConfig();\n\n    if (!propModels.length) {\n        fns = [() => false];\n    } else {\n        fns = propModels.map(propModel => ((dataModel) => {\n            let keyFn;\n            const dataObj = dataModel.getData();\n            const fieldsConfig = dataModel.getFieldsConfig();\n            const dimensions = Object.keys(dataModel.getFieldspace().getDimension())\n                .filter(d => d in modelFieldsConfig);\n            const dLen = dimensions.length;\n            const indices = dimensions.map(d =>\n                fieldsConfig[d].index);\n            const measures = Object.keys(dataModel.getFieldspace().getMeasure())\n                .filter(d => d in modelFieldsConfig);\n            const fieldsSpace = dataModel.getFieldspace().fieldsObj();\n            const data = dataObj.data;\n            const domain = measures.reduce((acc, v) => {\n                acc[v] = fieldsSpace[v].domain();\n                return acc;\n            }, {});\n            const valuesMap = {};\n\n            keyFn = (arr, row, idx) => row[arr[idx]];\n            if (dLen) {\n                data.forEach((row) => {\n                    const key = getKey(indices, row, keyFn);\n                    valuesMap[key] = 1;\n                });\n            }\n\n            keyFn = (arr, fields, idx) => fields[arr[idx]].value;\n            return data.length ? (fields) => {\n                const present = dLen ? valuesMap[getKey(dimensions, fields, keyFn)] : true;\n\n                if (filterByMeasure) {\n                    return measures.every(field => fields[field].value >= domain[field][0] &&\n                        fields[field].value <= domain[field][1]) && present;\n                }\n                return present;\n            } : () => false;\n        })(propModel));\n    }\n\n    let filteredModel;\n    if (operation === LOGICAL_OPERATORS.AND) {\n        filteredModel = clonedModel.select(fields => fns.every(fn => fn(fields)), {\n            saveChild: false\n        });\n    } else {\n        filteredModel = clonedModel.select(fields => fns.some(fn => fn(fields)), {\n            saveChild: false\n        });\n    }\n\n    return filteredModel;\n};\n\nexport const cloneWithSelect = (sourceDm, selectFn, selectConfig, cloneConfig) => {\n    const cloned = sourceDm.clone(cloneConfig.saveChild);\n    const [rowDiffset, rejRowDiffSet] = selectHelper(\n        cloned._rowDiffset,\n        cloned.getPartialFieldspace()._cachedValueObjects,\n        selectFn,\n        selectConfig,\n        sourceDm\n    );\n    cloned._rowDiffset = rowDiffset;\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n    let oDm = cloned;\n    if (selectConfig.mode === FilteringMode.ALL) {\n        const rejCloned = sourceDm.clone(cloneConfig.saveChild);\n\n        rejCloned._rowDiffset = rejRowDiffSet;\n        rejCloned.__calculateFieldspace().calculateFieldsConfig();\n        persistDerivations(\n            sourceDm,\n            rejCloned,\n            DM_DERIVATIVES.SELECT,\n             { config: selectConfig },\n              selectFn\n        );\n        oDm = [cloned, rejCloned];\n    }\n    persistDerivations(\n        sourceDm,\n        cloned,\n        DM_DERIVATIVES.SELECT,\n         { config: selectConfig },\n          selectFn\n    );\n\n    return oDm;\n};\n\nexport const cloneWithProject = (sourceDm, projField, config, allFields) => {\n    const cloned = sourceDm.clone(config.saveChild);\n    let projectionSet = projField;\n    if (config.mode === FilteringMode.INVERSE) {\n        projectionSet = allFields.filter(fieldName => projField.indexOf(fieldName) === -1);\n    }\n    // cloned._colIdentifier = sourceDm._colIdentifier.split(',')\n    //                         .filter(coll => projectionSet.indexOf(coll) !== -1).join();\n    cloned._colIdentifier = projectionSet.join(',');\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n\n    persistDerivations(\n        sourceDm,\n        cloned,\n        DM_DERIVATIVES.PROJECT,\n        { projField, config, actualProjField: projectionSet },\n        null\n    );\n\n    return cloned;\n};\n\nexport const sanitizeUnitSchema = (unitSchema) => {\n    // Do deep clone of the unit schema as the user might change it later.\n    unitSchema = extend2({}, unitSchema);\n    if (!unitSchema.type) {\n        unitSchema.type = FieldType.DIMENSION;\n    }\n\n    if (!unitSchema.subtype) {\n        switch (unitSchema.type) {\n        case FieldType.MEASURE:\n            unitSchema.subtype = MeasureSubtype.CONTINUOUS;\n            break;\n        default:\n        case FieldType.DIMENSION:\n            unitSchema.subtype = DimensionSubtype.CATEGORICAL;\n            break;\n        }\n    }\n\n    return unitSchema;\n};\n\nexport const validateUnitSchema = (unitSchema) => {\n    const supportedMeasureSubTypes = [MeasureSubtype.CONTINUOUS];\n    const supportedDimSubTypes = [\n        DimensionSubtype.CATEGORICAL,\n        DimensionSubtype.BINNED,\n        DimensionSubtype.TEMPORAL,\n        DimensionSubtype.GEO\n    ];\n    const { type, subtype, name } = unitSchema;\n\n    switch (type) {\n    case FieldType.DIMENSION:\n        if (supportedDimSubTypes.indexOf(subtype) === -1) {\n            throw new Error(`DataModel doesn't support dimension field subtype ${subtype} used for ${name} field`);\n        }\n        break;\n    case FieldType.MEASURE:\n        if (supportedMeasureSubTypes.indexOf(subtype) === -1) {\n            throw new Error(`DataModel doesn't support measure field subtype ${subtype} used for ${name} field`);\n        }\n        break;\n    default:\n        throw new Error(`DataModel doesn't support field type ${type} used for ${name} field`);\n    }\n};\n\nexport const sanitizeAndValidateSchema = schema => schema.map((unitSchema) => {\n    unitSchema = sanitizeUnitSchema(unitSchema);\n    validateUnitSchema(unitSchema);\n    return unitSchema;\n});\n\nexport const resolveFieldName = (schema, dataHeader) => {\n    schema.forEach((unitSchema) => {\n        const fieldNameAs = unitSchema.as;\n        if (!fieldNameAs) { return; }\n\n        const idx = dataHeader.indexOf(unitSchema.name);\n        dataHeader[idx] = fieldNameAs;\n        unitSchema.name = fieldNameAs;\n        delete unitSchema.as;\n    });\n};\n\nexport const updateData = (relation, data, schema, options) => {\n    schema = sanitizeAndValidateSchema(schema);\n    options = Object.assign(Object.assign({}, defaultConfig), options);\n    const converterFn = converter[options.dataFormat];\n\n    if (!(converterFn && typeof converterFn === 'function')) {\n        throw new Error(`No converter function found for ${options.dataFormat} format`);\n    }\n\n    const [header, formattedData] = converterFn(data, options);\n    resolveFieldName(schema, header);\n    const fieldArr = createFields(formattedData, schema, header);\n\n    // This will create a new fieldStore with the fields\n    const nameSpace = fieldStore.createNamespace(fieldArr, options.name);\n    relation._partialFieldspace = nameSpace;\n\n    // If data is provided create the default colIdentifier and rowDiffset\n    relation._rowDiffset = formattedData.length && formattedData[0].length ? `0-${formattedData[0].length - 1}` : '';\n\n    // This stores the value objects which is passed to the filter method when selection operation is done.\n    const valueObjects = [];\n    rowDiffsetIterator(relation._rowDiffset, (i) => {\n        valueObjects[i] = prepareSelectionData(nameSpace.fields, i);\n    });\n    nameSpace._cachedValueObjects = valueObjects;\n\n    relation._colIdentifier = (schema.map(_ => _.name)).join();\n    relation._dataFormat = options.dataFormat === DataFormat.AUTO ? detectDataFormat(data) : options.dataFormat;\n    return relation;\n};\n\nexport const fieldInSchema = (schema, field) => {\n    let i = 0;\n\n    for (; i < schema.length; ++i) {\n        if (field === schema[i].name) {\n            return {\n                type: schema[i].subtype || schema[i].type,\n                index: i\n            };\n        }\n    }\n    return null;\n};\n\n\nexport const getDerivationArguments = (derivation) => {\n    let params = [];\n    let operation;\n    operation = derivation.op;\n    switch (operation) {\n    case DM_DERIVATIVES.SELECT:\n        params = [derivation.criteria];\n        break;\n    case DM_DERIVATIVES.PROJECT:\n        params = [derivation.meta.actualProjField];\n        break;\n    case DM_DERIVATIVES.GROUPBY:\n        operation = 'groupBy';\n        params = [derivation.meta.groupByString.split(','), derivation.criteria];\n        break;\n    default:\n        operation = null;\n    }\n\n    return {\n        operation,\n        params\n    };\n};\n\nconst applyExistingOperationOnModel = (propModel, dataModel) => {\n    const derivations = dataModel.getDerivations();\n    let selectionModel = propModel;\n\n    derivations.forEach((derivation) => {\n        if (!derivation) {\n            return;\n        }\n\n        const { operation, params } = getDerivationArguments(derivation);\n        if (operation) {\n            selectionModel = selectionModel[operation](...params, {\n                saveChild: false\n            });\n        }\n    });\n\n    return selectionModel;\n};\n\nconst getFilteredModel = (propModel, path) => {\n    for (let i = 0, len = path.length; i < len; i++) {\n        const model = path[i];\n        propModel = applyExistingOperationOnModel(propModel, model);\n    }\n    return propModel;\n};\n\nconst propagateIdentifiers = (dataModel, propModel, config = {}, propModelInf = {}) => {\n    const nonTraversingModel = propModelInf.nonTraversingModel;\n    const excludeModels = propModelInf.excludeModels || [];\n\n    if (dataModel === nonTraversingModel) {\n        return;\n    }\n\n    const propagate = excludeModels.length ? excludeModels.indexOf(dataModel) === -1 : true;\n\n    propagate && dataModel.handlePropagation(propModel, config);\n\n    const children = dataModel._children;\n    children.forEach((child) => {\n        const selectionModel = applyExistingOperationOnModel(propModel, child);\n        propagateIdentifiers(child, selectionModel, config, propModelInf);\n    });\n};\n\nexport const getRootGroupByModel = (model) => {\n    while (model._parent && model._derivation.find(d => d.op !== DM_DERIVATIVES.GROUPBY)) {\n        model = model._parent;\n    }\n    return model;\n};\n\nexport const getRootDataModel = (model) => {\n    while (model._parent) {\n        model = model._parent;\n    }\n    return model;\n};\n\nexport const getPathToRootModel = (model, path = []) => {\n    while (model._parent) {\n        path.push(model);\n        model = model._parent;\n    }\n    return path;\n};\n\nexport const propagateToAllDataModels = (identifiers, rootModels, propagationInf, config) => {\n    let criteria;\n    let propModel;\n    const { propagationNameSpace, propagateToSource } = propagationInf;\n    const propagationSourceId = propagationInf.sourceId;\n    const propagateInterpolatedValues = config.propagateInterpolatedValues;\n    const filterFn = (entry) => {\n        const filter = config.filterFn || (() => true);\n        return filter(entry, config);\n    };\n\n    let criterias = [];\n\n    if (identifiers === null && config.persistent !== true) {\n        criterias = [{\n            criteria: []\n        }];\n    } else {\n        let actionCriterias = Object.values(propagationNameSpace.mutableActions);\n        if (propagateToSource !== false) {\n            actionCriterias = actionCriterias.filter(d => d.config.sourceId !== propagationSourceId);\n        }\n\n        const filteredCriteria = actionCriterias.filter(filterFn).map(action => action.config.criteria);\n\n        const excludeModels = [];\n\n        if (propagateToSource !== false) {\n            const sourceActionCriterias = Object.values(propagationNameSpace.mutableActions);\n\n            sourceActionCriterias.forEach((actionInf) => {\n                const actionConf = actionInf.config;\n                if (actionConf.applyOnSource === false && actionConf.action === config.action &&\n                        actionConf.sourceId !== propagationSourceId) {\n                    excludeModels.push(actionInf.model);\n                    criteria = sourceActionCriterias.filter(d => d !== actionInf).map(d => d.config.criteria);\n                    criteria.length && criterias.push({\n                        criteria,\n                        models: actionInf.model,\n                        path: getPathToRootModel(actionInf.model)\n                    });\n                }\n            });\n        }\n\n\n        criteria = [].concat(...[...filteredCriteria, identifiers]).filter(d => d !== null);\n        criterias.push({\n            criteria,\n            excludeModels: [...excludeModels, ...config.excludeModels || []]\n        });\n    }\n\n    const rootModel = rootModels.model;\n\n    const propConfig = Object.assign({\n        sourceIdentifiers: identifiers,\n        propagationSourceId\n    }, config);\n\n    const rootGroupByModel = rootModels.groupByModel;\n    if (propagateInterpolatedValues && rootGroupByModel) {\n        propModel = filterPropagationModel(rootGroupByModel, criteria, {\n            filterByMeasure: propagateInterpolatedValues\n        });\n        propagateIdentifiers(rootGroupByModel, propModel, propConfig);\n    }\n\n    criterias.forEach((inf) => {\n        const propagationModel = filterPropagationModel(rootModel, inf.criteria);\n        const path = inf.path;\n\n        if (path) {\n            const filteredModel = getFilteredModel(propagationModel, path.reverse());\n            inf.models.handlePropagation(filteredModel, propConfig);\n        } else {\n            propagateIdentifiers(rootModel, propagationModel, propConfig, {\n                excludeModels: inf.excludeModels,\n                nonTraversingModel: propagateInterpolatedValues && rootGroupByModel\n            });\n        }\n    });\n};\n\nexport const propagateImmutableActions = (propagationNameSpace, rootModels, propagationInf) => {\n    const immutableActions = propagationNameSpace.immutableActions;\n\n    for (const action in immutableActions) {\n        const actionInf = immutableActions[action];\n        const actionConf = actionInf.config;\n        const propagationSourceId = propagationInf.config.sourceId;\n        const filterImmutableAction = propagationInf.propConfig.filterImmutableAction ?\n            propagationInf.propConfig.filterImmutableAction(actionConf, propagationInf.config) : true;\n        if (actionConf.sourceId !== propagationSourceId && filterImmutableAction) {\n            const criteriaModel = actionConf.criteria;\n            propagateToAllDataModels(criteriaModel, rootModels, {\n                propagationNameSpace,\n                propagateToSource: false,\n                sourceId: propagationSourceId\n            }, actionConf);\n        }\n    }\n};\n\nexport const addToPropNamespace = (propagationNameSpace, config = {}, model) => {\n    let sourceNamespace;\n    const isMutableAction = config.isMutableAction;\n    const criteria = config.criteria;\n    const key = `${config.action}-${config.sourceId}`;\n\n    if (isMutableAction) {\n        sourceNamespace = propagationNameSpace.mutableActions;\n    } else {\n        sourceNamespace = propagationNameSpace.immutableActions;\n    }\n\n    if (criteria === null) {\n        delete sourceNamespace[key];\n    } else {\n        sourceNamespace[key] = {\n            model,\n            config\n        };\n    }\n\n    return this;\n};\n","import { FilteringMode } from './enums';\nimport { getUniqueId } from './utils';\nimport { updateFields, cloneWithSelect, cloneWithProject, updateData } from './helper';\nimport { crossProduct, difference, naturalJoinFilter, union } from './operator';\n\n/**\n * Relation provides the definitions of basic operators of relational algebra like *selection*, *projection*, *union*,\n * *difference* etc.\n *\n * It is extended by {@link DataModel} to inherit the functionalities of relational algebra concept.\n *\n * @class\n * @public\n * @module Relation\n * @namespace DataModel\n */\nclass Relation {\n\n    /**\n     * Creates a new Relation instance by providing underlying data and schema.\n     *\n     * @private\n     *\n     * @param {Object | string | Relation} data - The input tabular data in dsv or json format or\n     * an existing Relation instance object.\n     * @param {Array} schema - An array of data schema.\n     * @param {Object} [options] - The optional options.\n     */\n    constructor (...params) {\n        let source;\n\n        this._parent = null;\n        this._derivation = [];\n        this._ancestorDerivation = [];\n        this._children = [];\n\n        if (params.length === 1 && ((source = params[0]) instanceof Relation)) {\n            // parent datamodel was passed as part of source\n            this._colIdentifier = source._colIdentifier;\n            this._rowDiffset = source._rowDiffset;\n            this._dataFormat = source._dataFormat;\n            this._parent = source;\n            this._partialFieldspace = this._parent._partialFieldspace;\n            this._fieldStoreName = getUniqueId();\n            this.__calculateFieldspace().calculateFieldsConfig();\n        } else {\n            updateData(this, ...params);\n            this._fieldStoreName = this._partialFieldspace.name;\n            this.__calculateFieldspace().calculateFieldsConfig();\n            this._propagationNameSpace = {\n                mutableActions: {},\n                immutableActions: {}\n            };\n        }\n    }\n\n    /**\n     * Retrieves the {@link Schema | schema} details for every {@link Field | field} as an array.\n     *\n     * @public\n     *\n     * @return {Array.<Schema>} Array of fields schema.\n     *      ```\n     *      [\n     *          { name: 'Name', type: 'dimension' },\n     *          { name: 'Miles_per_Gallon', type: 'measure', numberFormat: (val) => `${val} miles / gallon` },\n     *          { name: 'Cylinder', type: 'dimension' },\n     *          { name: 'Displacement', type: 'measure', defAggFn: 'max' },\n     *          { name: 'HorsePower', type: 'measure', defAggFn: 'max' },\n     *          { name: 'Weight_in_lbs', type: 'measure', defAggFn: 'avg',  },\n     *          { name: 'Acceleration', type: 'measure', defAggFn: 'avg' },\n     *          { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *          { name: 'Origin' }\n     *      ]\n     *      ```\n     */\n    getSchema () {\n        return this.getFieldspace().fields.map(d => d.schema());\n    }\n\n    /**\n     * Returns the name of the {@link DataModel} instance. If no name was specified during {@link DataModel}\n     * initialization, then it returns a auto-generated name.\n     *\n     * @public\n     *\n     * @return {string} Name of the DataModel instance.\n     */\n    getName() {\n        return this._fieldStoreName;\n    }\n\n    getFieldspace () {\n        return this._fieldspace;\n    }\n\n    __calculateFieldspace () {\n        this._fieldspace = updateFields([this._rowDiffset, this._colIdentifier],\n             this.getPartialFieldspace(), this._fieldStoreName);\n        return this;\n    }\n\n    getPartialFieldspace () {\n        return this._partialFieldspace;\n    }\n\n    /**\n     * Performs {@link link_of_cross_product | cross-product} between two {@link DataModel} instances and returns a\n     * new {@link DataModel} instance containing the results. This operation is also called theta join.\n     *\n     * Cross product takes two set and create one set where each value of one set is paired with each value of another\n     * set.\n     *\n     * This method takes an optional predicate which filters the generated result rows. If the predicate returns true\n     * the combined row is included in the resulatant table.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.join(originDM)));\n     *\n     *  console.log(carsDM.join(originDM,\n     *      obj => obj.[originDM.getName()].Origin === obj.[carsDM.getName()].Origin));\n     *\n     * @text\n     * This is chained version of `join` operator. `join` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel to be joined with the current instance DataModel.\n     * @param {SelectionPredicate} filterFn - The predicate function that will filter the result of the crossProduct.\n     *\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    join (joinWith, filterFn) {\n        return crossProduct(this, joinWith, filterFn);\n    }\n\n    /**\n     * {@link natural_join | Natural join} is a special kind of cross-product join where filtering of rows are performed\n     * internally by resolving common fields are from both table and the rows with common value are included.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.naturalJoin(originDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel with which the current instance of DataModel on which the method is\n     *      called will be joined.\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    naturalJoin (joinWith) {\n        return crossProduct(this, joinWith, naturalJoinFilter(this, joinWith), true);\n    }\n\n    /**\n     * {@link link_to_union | Union} operation can be termed as vertical stacking of all rows from both the DataModel\n     * instances, provided that both of the {@link DataModel} instances should have same column names.\n     *\n     * @example\n     * console.log(EuropeanMakerDM.union(USAMakerDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} unionWith - DataModel instance for which union has to be applied with the instance on which\n     *      the method is called\n     *\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    union (unionWith) {\n        return union(this, unionWith);\n    }\n\n    /**\n     * {@link link_to_difference | Difference } operation only include rows which are present in the datamodel on which\n     * it was called but not on the one passed as argument.\n     *\n     * @example\n     * console.log(highPowerDM.difference(highExpensiveDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} differenceWith - DataModel instance for which difference has to be applied with the instance\n     *      on which the method is called\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    difference (differenceWith) {\n        return difference(this, differenceWith);\n    }\n\n    /**\n     * {@link link_to_selection | Selection} is a row filtering operation. It expects a predicate and an optional mode\n     * which control which all rows should be included in the resultant DataModel instance.\n     *\n     * {@link SelectionPredicate} is a function which returns a boolean value. For selection operation the selection\n     * function is called for each row of DataModel instance with the current row passed as argument.\n     *\n     * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n     * of rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resultant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  // with selection mode NORMAL:\n     *  const normDt = dt.select(fields => fields.Origin.value === \"USA\")\n     *  console.log(normDt));\n     *\n     * // with selection mode INVERSE:\n     * const inverDt = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.INVERSE })\n     * console.log(inverDt);\n     *\n     * // with selection mode ALL:\n     * const dtArr = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.ALL })\n     * // print the selected parts\n     * console.log(dtArr[0]);\n     * // print the inverted parts\n     * console.log(dtArr[1]);\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Function} selectFn - The predicate function which is called for each row with the current row.\n     * ```\n     *  function (row, i, cloneProvider, store)  { ... }\n     * ```\n     * @param {Object} config - The configuration object to control the inclusion exclusion of a row in resultant\n     * DataModel instance.\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection.\n     * @return {DataModel} Returns the new DataModel instance(s) after operation.\n     */\n    select (selectFn, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n\n        const cloneConfig = { saveChild: config.saveChild };\n\n        return cloneWithSelect(\n            this,\n            selectFn,\n            config,\n            cloneConfig\n        );\n    }\n\n    /**\n     * Retrieves a boolean value if the current {@link DataModel} instance has data.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'CarName', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     * const data = [];\n     *\n     * const dt = new DataModel(data, schema);\n     * console.log(dt.isEmpty());\n     *\n     * @public\n     *\n     * @return {Boolean} True if the datamodel has no data, otherwise false.\n     */\n    isEmpty () {\n        return !this._rowDiffset.length || !this._colIdentifier.length;\n    }\n\n    /**\n     * Creates a clone from the current DataModel instance with child parent relationship.\n     *\n     * @private\n     * @param {boolean} [saveChild=true] - Whether the cloned instance would be recorded in the parent instance.\n     * @return {DataModel} - Returns the newly cloned DataModel instance.\n     */\n    clone (saveChild = true) {\n        const clonedDm = new this.constructor(this);\n        if (saveChild) {\n            clonedDm.setParent(this);\n        } else {\n            clonedDm.setParent(null);\n        }\n        return clonedDm;\n    }\n\n    /**\n     * {@link Projection} is filter column (field) operation. It expects list of fields' name and either include those\n     * or exclude those based on {@link FilteringMode} on the resultant variable.\n     *\n     * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n     * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resulatant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *\n     *  // with projection mode NORMAL:\n     *  const normDt = dt.project([\"Name\", \"HorsePower\"]);\n     *  console.log(normDt.getData());\n     *\n     *  // with projection mode INVERSE:\n     *  const inverDt = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.INVERSE })\n     *  console.log(inverDt.getData());\n     *\n     *  // with selection mode ALL:\n     *  const dtArr = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.ALL })\n     *  // print the normal parts\n     *  console.log(dtArr[0].getData());\n     *  // print the inverted parts\n     *  console.log(dtArr[1].getData());\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n     * @param {Object} [config] - An optional config to control the creation of new DataModel\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n     *\n     * @return {DataModel} Returns the new DataModel instance after operation.\n     */\n    project (projField, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n        const fieldConfig = this.getFieldsConfig();\n        const allFields = Object.keys(fieldConfig);\n        const { mode } = config;\n\n        let normalizedProjField = projField.reduce((acc, field) => {\n            if (field.constructor.name === 'RegExp') {\n                acc.push(...allFields.filter(fieldName => fieldName.search(field) !== -1));\n            } else if (field in fieldConfig) {\n                acc.push(field);\n            }\n            return acc;\n        }, []);\n\n        normalizedProjField = Array.from(new Set(normalizedProjField)).map(field => field.trim());\n        let dataModel;\n\n        if (mode === FilteringMode.ALL) {\n            let projectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.NORMAL,\n                saveChild: config.saveChild\n            }, allFields);\n            let rejectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.INVERSE,\n                saveChild: config.saveChild\n            }, allFields);\n            dataModel = [projectionClone, rejectionClone];\n        } else {\n            let projectionClone = cloneWithProject(this, normalizedProjField, config, allFields);\n            dataModel = projectionClone;\n        }\n\n        return dataModel;\n    }\n\n    getFieldsConfig () {\n        return this._fieldConfig;\n    }\n\n    calculateFieldsConfig () {\n        this._fieldConfig = this._fieldspace.fields.reduce((acc, fieldObj, i) => {\n            acc[fieldObj.name()] = {\n                index: i,\n                def: fieldObj.schema(),\n            };\n            return acc;\n        }, {});\n        return this;\n    }\n\n\n    /**\n     * Frees up the resources associated with the current DataModel instance and breaks all the links instance has in\n     * the DAG.\n     *\n     * @public\n     */\n    dispose () {\n        this._parent && this._parent.removeChild(this);\n        this._parent = null;\n        this._children.forEach((child) => {\n            child._parent = null;\n        });\n        this._children = [];\n    }\n\n    /**\n     * Removes the specified child {@link DataModel} from the child list of the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\")\n     * dt.removeChild(dt2);\n     *\n     * @private\n     *\n     * @param {DataModel} child - Delegates the parent to remove this child.\n     */\n    removeChild (child) {\n        let idx = this._children.findIndex(sibling => sibling === child);\n        idx !== -1 ? this._children.splice(idx, 1) : true;\n    }\n\n    /**\n     * Sets the specified {@link DataModel} as a parent for the current {@link DataModel} instance.\n     *\n     * @param {DataModel} parent - The datamodel instance which will act as parent.\n     */\n    setParent (parent) {\n        this._parent && this._parent.removeChild(this);\n        this._parent = parent;\n        parent && parent._children.push(this);\n    }\n\n    /**\n     * Returns the parent {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const parentDm = dt2.getParent();\n     *\n     * @return {DataModel} Returns the parent DataModel instance.\n     */\n    getParent () {\n        return this._parent;\n    }\n\n    /**\n     * Returns the immediate child {@link DataModel} instances.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const childDm1 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const childDm2 = dt.select(fields => fields.Origin.value === \"Japan\");\n     * const childDm3 = dt.groupBy([\"Origin\"]);\n     *\n     * @return {DataModel[]} Returns the immediate child DataModel instances.\n     */\n    getChildren () {\n        return this._children;\n    }\n\n    /**\n     * Returns the in-between operation meta data while creating the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *   { name: 'Name', type: 'dimension' },\n     *   { name: 'HorsePower', type: 'measure' },\n     *   { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *   { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *   { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *   { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *   { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const dt3 = dt2.groupBy([\"Origin\"]);\n     * const derivations = dt3.getDerivations();\n     *\n     * @return {Any[]} Returns the derivation meta data.\n     */\n    getDerivations () {\n        return this._derivation;\n    }\n\n    /**\n     * Returns the in-between operation meta data happened from root {@link DataModel} to current instance.\n     *\n     * @example\n     * const schema = [\n     *   { name: 'Name', type: 'dimension' },\n     *   { name: 'HorsePower', type: 'measure' },\n     *   { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *   { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *   { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *   { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *   { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const dt3 = dt2.groupBy([\"Origin\"]);\n     * const ancDerivations = dt3.getAncestorDerivations();\n     *\n     * @return {Any[]} Returns the previous derivation meta data.\n     */\n    getAncestorDerivations () {\n        return this._ancestorDerivation;\n    }\n}\n\nexport default Relation;\n","/* eslint-disable default-case */\n\nimport { FieldType, DimensionSubtype, DataFormat } from './enums';\nimport {\n    persistDerivations,\n    getRootGroupByModel,\n    propagateToAllDataModels,\n    getRootDataModel,\n    propagateImmutableActions,\n    addToPropNamespace,\n    sanitizeUnitSchema\n} from './helper';\nimport { DM_DERIVATIVES, PROPAGATION } from './constants';\nimport {\n    dataBuilder,\n    rowDiffsetIterator,\n    groupBy\n} from './operator';\nimport { createBinnedFieldData } from './operator/bucket-creator';\nimport Relation from './relation';\nimport reducerStore from './utils/reducer-store';\nimport { createFields } from './field-creator';\nimport InvalidAwareTypes from './invalid-aware-types';\nimport Value from './value';\n\n/**\n * DataModel is an in-browser representation of tabular data. It supports\n * {@link https://en.wikipedia.org/wiki/Relational_algebra | relational algebra} operators as well as generic data\n * processing opearators.\n * DataModel extends {@link Relation} class which defines all the relational algebra opreators. DataModel gives\n * definition of generic data processing operators which are not relational algebra complient.\n *\n * @public\n * @class\n * @extends Relation\n * @memberof Datamodel\n */\nclass DataModel extends Relation {\n    /**\n     * Creates a new DataModel instance by providing data and schema. Data could be in the form of\n     * - Flat JSON\n     * - DSV String\n     * - 2D Array\n     *\n     * By default DataModel finds suitable adapter to serialize the data. DataModel also expects a\n     * {@link Schema | schema} for identifying the variables present in data.\n     *\n     * @constructor\n     * @example\n     * const data = loadData('cars.csv');\n     * const schema = [\n     *      { name: 'Name', type: 'dimension' },\n     *      { name: 'Miles_per_Gallon', type: 'measure', unit : 'cm', scale: '1000', numberformat: val => `${val}G`},\n     *      { name: 'Cylinders', type: 'dimension' },\n     *      { name: 'Displacement', type: 'measure' },\n     *      { name: 'Horsepower', type: 'measure' },\n     *      { name: 'Weight_in_lbs', type: 'measure' },\n     *      { name: 'Acceleration', type: 'measure' },\n     *      { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *      { name: 'Origin', type: 'dimension' }\n     * ];\n     * const dm = new DataModel(data, schema, { name: 'Cars' });\n     * table(dm);\n     *\n     * @public\n     *\n     * @param {Array.<Object> | string | Array.<Array>} data Input data in any of the mentioned formats\n     * @param {Array.<Schema>} schema Defination of the variables. Order of the variables in data and order of the\n     *      variables in schema has to be same.\n     * @param {object} [options] Optional arguments to specify more settings regarding the creation part\n     * @param {string} [options.name] Name of the datamodel instance. If no name is given an auto generated name is\n     *      assigned to the instance.\n     * @param {string} [options.fieldSeparator=','] specify field separator type if the data is of type dsv string.\n     */\n    constructor (...args) {\n        super(...args);\n\n        this._onPropagation = [];\n    }\n\n    /**\n     * Reducers are simple functions which reduces an array of numbers to a representative number of the set.\n     * Like an array of numbers `[10, 20, 5, 15]` can be reduced to `12.5` if average / mean reducer function is\n     * applied. All the measure fields in datamodel (variables in data) needs a reducer to handle aggregation.\n     *\n     * @public\n     *\n     * @return {ReducerStore} Singleton instance of {@link ReducerStore}.\n     */\n    static get Reducers () {\n        return reducerStore;\n    }\n\n    /**\n     * Configure null, undefined, invalid values in the source data\n     *\n     * @public\n     *\n     * @param {Object} [config] - Configuration to control how null, undefined and non-parsable values are\n     * represented in DataModel.\n     * @param {string} [config.undefined] - Define how an undefined value will be represented.\n     * @param {string} [config.null] - Define how a null value will be represented.\n     * @param {string} [config.invalid] - Define how a non-parsable value will be represented.\n     */\n    static configureInvalidAwareTypes (config) {\n        return InvalidAwareTypes.invalidAwareVals(config);\n    }\n\n    /**\n     * Retrieve the data attached to an instance in JSON format.\n     *\n     * @example\n     * // DataModel instance is already prepared and assigned to dm variable\n     *  const data = dm.getData({\n     *      order: 'column',\n     *      formatter: {\n     *          origin: (val) => val === 'European Union' ? 'EU' : val;\n     *      }\n     *  });\n     *  console.log(data);\n     *\n     * @public\n     *\n     * @param {Object} [options] Options to control how the raw data is to be returned.\n     * @param {string} [options.order='row'] Defines if data is retieved in row order or column order. Possible values\n     *      are `'rows'` and `'columns'`\n     * @param {Function} [options.formatter=null] Formats the output data. This expects an object, where the keys are\n     *      the name of the variable needs to be formatted. The formatter function is called for each row passing the\n     *      value of the cell for a particular row as arguments. The formatter is a function in the form of\n     *      `function (value, rowId, schema) => { ... }`\n     *      Know more about {@link Fomatter}.\n     *\n     * @return {Array} Returns a multidimensional array of the data with schema. The return format looks like\n     *      ```\n     *          {\n     *              data,\n     *              schema\n     *          }\n     *      ```\n     */\n    getData (options) {\n        const defOptions = {\n            order: 'row',\n            formatter: null,\n            withUid: false,\n            getAllFields: false,\n            sort: []\n        };\n        options = Object.assign({}, defOptions, options);\n        const fields = this.getPartialFieldspace().fields;\n\n        const dataGenerated = dataBuilder.call(\n            this,\n            this.getPartialFieldspace().fields,\n            this._rowDiffset,\n            options.getAllFields ? fields.map(d => d.name()).join() : this._colIdentifier,\n            options.sort,\n            {\n                columnWise: options.order === 'column',\n                addUid: !!options.withUid\n            }\n        );\n\n        if (!options.formatter) {\n            return dataGenerated;\n        }\n\n        const { formatter } = options;\n        const { data, schema, uids } = dataGenerated;\n        const fieldNames = schema.map((e => e.name));\n        const fmtFieldNames = Object.keys(formatter);\n        const fmtFieldIdx = fmtFieldNames.reduce((acc, next) => {\n            const idx = fieldNames.indexOf(next);\n            if (idx !== -1) {\n                acc.push([idx, formatter[next]]);\n            }\n            return acc;\n        }, []);\n\n        if (options.order === 'column') {\n            fmtFieldIdx.forEach((elem) => {\n                const fIdx = elem[0];\n                const fmtFn = elem[1];\n\n                data[fIdx].forEach((datum, datumIdx) => {\n                    data[fIdx][datumIdx] = fmtFn.call(\n                        undefined,\n                        datum,\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        } else {\n            data.forEach((datum, datumIdx) => {\n                fmtFieldIdx.forEach((elem) => {\n                    const fIdx = elem[0];\n                    const fmtFn = elem[1];\n\n                    datum[fIdx] = fmtFn.call(\n                        undefined,\n                        datum[fIdx],\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        }\n\n        return dataGenerated;\n    }\n\n    /**\n     * Returns the unique ids in an array.\n     *\n     * @return {Array} Returns an array of ids.\n     */\n    getUids () {\n        const rowDiffset = this._rowDiffset;\n        const ids = [];\n\n        if (rowDiffset.length) {\n            const diffSets = rowDiffset.split(',');\n\n            diffSets.forEach((set) => {\n                let [start, end] = set.split('-').map(Number);\n\n                end = end !== undefined ? end : start;\n                ids.push(...Array(end - start + 1).fill().map((_, idx) => start + idx));\n            });\n        }\n\n        return ids;\n    }\n    /**\n     * Groups the data using particular dimensions and by reducing measures. It expects a list of dimensions using which\n     * it projects the datamodel and perform aggregations to reduce the duplicate tuples. Refer this\n     * {@link link_to_one_example_with_group_by | document} to know the intuition behind groupBy.\n     *\n     * DataModel by default provides definition of few {@link reducer | Reducers}.\n     * {@link ReducerStore | User defined reducers} can also be registered.\n     *\n     * This is the chained implementation of `groupBy`.\n     * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n     *\n     * @example\n     * const groupedDM = dm.groupBy(['Year'], { horsepower: 'max' } );\n     * console.log(groupedDm);\n     *\n     * @public\n     *\n     * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n     * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n     *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n     *      schema of the variable.\n     *\n     * @return {DataModel} Returns a new DataModel instance after performing the groupby.\n     */\n    groupBy (fieldsArr, reducers = {}, config = { saveChild: true }) {\n        const groupByString = `${fieldsArr.join()}`;\n        let params = [this, fieldsArr, reducers];\n        const newDataModel = groupBy(...params);\n\n        persistDerivations(\n            this,\n            newDataModel,\n            DM_DERIVATIVES.GROUPBY,\n            { fieldsArr, groupByString, defaultReducer: reducerStore.defaultReducer() },\n            reducers\n        );\n\n        if (config.saveChild) {\n            newDataModel.setParent(this);\n        } else {\n            newDataModel.setParent(null);\n        }\n\n        return newDataModel;\n    }\n\n    /**\n     * Performs sorting operation on the current {@link DataModel} instance according to the specified sorting details.\n     * Like every other operator it doesn't mutate the current DataModel instance on which it was called, instead\n     * returns a new DataModel instance containing the sorted data.\n     *\n     * DataModel support multi level sorting by listing the variables using which sorting needs to be performed and\n     * the type of sorting `ASC` or `DESC`.\n     *\n     * In the following example, data is sorted by `Origin` field in `DESC` order in first level followed by another\n     * level of sorting by `Acceleration` in `ASC` order.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * let sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\"] // Default value is ASC\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * // Sort with a custom sorting function\n     * sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\", (a, b) => a - b] // Custom sorting function\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @text\n     * DataModel also provides another sorting mechanism out of the box where sort is applied to a variable using\n     * another variable which determines the order.\n     * Like the above DataModel contains three fields `Origin`, `Name` and `Acceleration`. Now, the data in this\n     * model can be sorted by `Origin` field according to the average value of all `Acceleration` for a\n     * particular `Origin` value.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * const sortedDm = dm.sort([\n     *     ['Origin', ['Acceleration', (a, b) => avg(...a.Acceleration) - avg(...b.Acceleration)]]\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @public\n     *\n     * @param {Array.<Array>} sortingDetails - Sorting details based on which the sorting will be performed.\n     * @return {DataModel} Returns a new instance of DataModel with sorted data.\n     */\n    sort (sortingDetails, config = { saveChild: false }) {\n        const rawData = this.getData({\n            order: 'row',\n            sort: sortingDetails\n        });\n        const header = rawData.schema.map(field => field.name);\n        const dataInCSVArr = [header].concat(rawData.data);\n\n        const sortedDm = new this.constructor(dataInCSVArr, rawData.schema, { dataFormat: 'DSVArr' });\n\n        persistDerivations(\n            this,\n            sortedDm,\n            DM_DERIVATIVES.SORT,\n            config,\n            sortingDetails\n        );\n\n        if (config.saveChild) {\n            sortedDm.setParent(this);\n        } else {\n            sortedDm.setParent(null);\n        }\n\n        return sortedDm;\n    }\n\n    /**\n     * Performs the serialization operation on the current {@link DataModel} instance according to the specified data\n     * type. When an {@link DataModel} instance is created, it de-serializes the input data into its internal format,\n     * and during its serialization process, it converts its internal data format to the specified data type and returns\n     * that data regardless what type of data is used during the {@link DataModel} initialization.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance.\n     * const csvData = dm.serialize(DataModel.DataFormat.DSV_STR, { fieldSeparator: \",\" });\n     * console.log(csvData); // The csv formatted data.\n     *\n     * const jsonData = dm.serialize(DataModel.DataFormat.FLAT_JSON);\n     * console.log(jsonData); // The json data.\n     *\n     * @public\n     *\n     * @param {string} type - The data type name for serialization.\n     * @param {Object} options - The optional option object.\n     * @param {string} options.fieldSeparator - The field separator character for DSV data type.\n     * @return {Array|string} Returns the serialized data.\n     */\n    serialize (type, options) {\n        type = type || this._dataFormat;\n        options = Object.assign({}, { fieldSeparator: ',' }, options);\n\n        const fields = this.getFieldspace().fields;\n        const colData = fields.map(f => f.formattedData());\n        const rowsCount = colData[0].length;\n        let serializedData;\n        let rowIdx;\n        let colIdx;\n\n        if (type === DataFormat.FLAT_JSON) {\n            serializedData = [];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = {};\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row[fields[colIdx].name()] = colData[colIdx][rowIdx];\n                }\n                serializedData.push(row);\n            }\n        } else if (type === DataFormat.DSV_STR) {\n            serializedData = [fields.map(f => f.name()).join(options.fieldSeparator)];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row.join(options.fieldSeparator));\n            }\n            serializedData = serializedData.join('\\n');\n        } else if (type === DataFormat.DSV_ARR) {\n            serializedData = [fields.map(f => f.name())];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row);\n            }\n        } else {\n            throw new Error(`Data type ${type} is not supported`);\n        }\n\n        return serializedData;\n    }\n\n    addField (field) {\n        const fieldName = field.name();\n        this._colIdentifier += `,${fieldName}`;\n        const partialFieldspace = this._partialFieldspace;\n        const cachedValueObjects = partialFieldspace._cachedValueObjects;\n\n        if (!partialFieldspace.fieldsObj()[field.name()]) {\n            partialFieldspace.fields.push(field);\n            cachedValueObjects.forEach((obj, i) => {\n                obj[field.name()] = new Value(field.partialField.data[i], field);\n            });\n        } else {\n            const fieldIndex = partialFieldspace.fields.findIndex(fieldinst => fieldinst.name() === fieldName);\n            fieldIndex >= 0 && (partialFieldspace.fields[fieldIndex] = field);\n        }\n\n        // flush out cached namespace values on addition of new fields\n        partialFieldspace._cachedFieldsObj = null;\n        partialFieldspace._cachedDimension = null;\n        partialFieldspace._cachedMeasure = null;\n\n        this.__calculateFieldspace().calculateFieldsConfig();\n        return this;\n    }\n\n    /**\n    * Creates a new variable calculated from existing variables. This method expects the definition of the newly created\n    * variable and a function which resolves the value of the new variable from existing variables.\n    *\n    * Can create a new measure based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const newDm = dataModel.calculateVariable({\n    *      name: 'powerToWeight',\n    *      type: 'measure'\n    *  }, ['horsepower', 'weight_in_lbs', (hp, weight) => hp / weight ]);\n    *\n    *\n    * Can create a new dimension based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const child = dataModel.calculateVariable(\n    *     {\n    *       name: 'Efficiency',\n    *       type: 'dimension'\n    *     }, ['horsepower', (hp) => {\n    *      if (hp < 80) { return 'low'; },\n    *      else if (hp < 120) { return 'moderate'; }\n    *      else { return 'high' }\n    *  }]);\n    *\n    * @public\n    *\n    * @param {Object} schema - The schema of newly defined variable.\n    * @param {Array.<string|function>} dependency - An array containing the dependency variable names and a resolver\n    * function as the last element.\n    * @param {Object} config - An optional config object.\n    * @param {boolean} [config.saveChild] - Whether the newly created DataModel will be a child.\n    * @param {boolean} [config.replaceVar] - Whether the newly created variable will replace the existing variable.\n    * @return {DataModel} Returns an instance of DataModel with the new field.\n    */\n    calculateVariable (schema, dependency, config) {\n        schema = sanitizeUnitSchema(schema);\n        config = Object.assign({}, { saveChild: true, replaceVar: false }, config);\n\n        const fieldsConfig = this.getFieldsConfig();\n        const depVars = dependency.slice(0, dependency.length - 1);\n        const retrieveFn = dependency[dependency.length - 1];\n\n        if (fieldsConfig[schema.name] && !config.replaceVar) {\n            throw new Error(`${schema.name} field already exists in datamodel`);\n        }\n\n        const depFieldIndices = depVars.map((field) => {\n            const fieldSpec = fieldsConfig[field];\n            if (!fieldSpec) {\n                // @todo dont throw error here, use warning in production mode\n                throw new Error(`${field} is not a valid column name.`);\n            }\n            return fieldSpec.index;\n        });\n\n        const clone = this.clone(config.saveChild);\n\n        const fs = clone.getFieldspace().fields;\n        const suppliedFields = depFieldIndices.map(idx => fs[idx]);\n\n        let cachedStore = {};\n        let cloneProvider = () => this.detachedRoot();\n\n        const computedValues = [];\n        rowDiffsetIterator(clone._rowDiffset, (i) => {\n            const fieldsData = suppliedFields.map(field => field.partialField.data[i]);\n            computedValues[i] = retrieveFn(...fieldsData, i, cloneProvider, cachedStore);\n        });\n        const [field] = createFields([computedValues], [schema], [schema.name]);\n        clone.addField(field);\n\n        persistDerivations(\n            this,\n            clone,\n            DM_DERIVATIVES.CAL_VAR,\n            { config: schema, fields: depVars },\n            retrieveFn\n        );\n\n        return clone;\n    }\n\n    /**\n     * Propagates changes across all the connected DataModel instances.\n     *\n     * @param {Array} identifiers - A list of identifiers that were interacted with.\n     * @param {Object} payload - The interaction specific details.\n     *\n     * @return {DataModel} DataModel instance.\n     */\n    propagate (identifiers, config = {}, addToNameSpace, propConfig = {}) {\n        const isMutableAction = config.isMutableAction;\n        const propagationSourceId = config.sourceId;\n        const payload = config.payload;\n        const rootModel = getRootDataModel(this);\n        const propagationNameSpace = rootModel._propagationNameSpace;\n        const rootGroupByModel = getRootGroupByModel(this);\n        const rootModels = {\n            groupByModel: rootGroupByModel,\n            model: rootModel\n        };\n\n        addToNameSpace && addToPropNamespace(propagationNameSpace, config, this);\n        propagateToAllDataModels(identifiers, rootModels, { propagationNameSpace, sourceId: propagationSourceId },\n            Object.assign({\n                payload\n            }, config));\n\n        if (isMutableAction) {\n            propagateImmutableActions(propagationNameSpace, rootModels, {\n                config,\n                propConfig\n            }, this);\n        }\n\n        return this;\n    }\n\n    /**\n     * Associates a callback with an event name.\n     *\n     * @param {string} eventName - The name of the event.\n     * @param {Function} callback - The callback to invoke.\n     * @return {DataModel} Returns this current DataModel instance itself.\n     */\n    on (eventName, callback) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation.push(callback);\n            break;\n        }\n        return this;\n    }\n\n    /**\n     * Unsubscribes the callbacks for the provided event name.\n     *\n     * @param {string} eventName - The name of the event to unsubscribe.\n     * @return {DataModel} Returns the current DataModel instance itself.\n     */\n    unsubscribe (eventName) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation = [];\n            break;\n\n        }\n        return this;\n    }\n\n    /**\n     * This method is used to invoke the method associated with propagation.\n     *\n     * @param {Object} payload The interaction payload.\n     * @param {DataModel} identifiers The propagated DataModel.\n     * @memberof DataModel\n     */\n    handlePropagation (propModel, payload) {\n        let propListeners = this._onPropagation;\n        propListeners.forEach(fn => fn.call(this, propModel, payload));\n    }\n\n    /**\n     * Performs the binning operation on a measure field based on the binning configuration. Binning means discretizing\n     * values of a measure. Binning configuration contains an array; subsequent values from the array marks the boundary\n     * of buckets in [inclusive, exclusive) range format. This operation does not mutate the subject measure field,\n     * instead, it creates a new field (variable) of type dimension and subtype binned.\n     *\n     * Binning can be configured by\n     * - providing custom bin configuration with non-uniform buckets,\n     * - providing bins count,\n     * - providing each bin size,\n     *\n     * When custom `buckets` are provided as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', buckets: [30, 80, 100, 110] }\n     *  const binnedDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binsCount` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', binsCount: 5, start: 0, end: 100 }\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binSize` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHorsepower', binSize: 20, start: 5}\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @public\n     *\n     * @param {string} measureFieldName - The name of the target measure field.\n     * @param {Object} config - The config object.\n     * @param {string} [config.name] - The name of the new field which will be created.\n     * @param {string} [config.buckets] - An array containing the bucket ranges.\n     * @param {string} [config.binSize] - The size of each bin. It is ignored when buckets are given.\n     * @param {string} [config.binsCount] - The total number of bins to generate. It is ignored when buckets are given.\n     * @param {string} [config.start] - The start value of the bucket ranges. It is ignored when buckets are given.\n     * @param {string} [config.end] - The end value of the bucket ranges. It is ignored when buckets are given.\n     * @return {DataModel} Returns a new {@link DataModel} instance with the new field.\n     */\n    bin (measureFieldName, config) {\n        const fieldsConfig = this.getFieldsConfig();\n\n        if (!fieldsConfig[measureFieldName]) {\n            throw new Error(`Field ${measureFieldName} doesn't exist`);\n        }\n\n        const binFieldName = config.name || `${measureFieldName}_binned`;\n\n        if (fieldsConfig[binFieldName]) {\n            throw new Error(`Field ${binFieldName} already exists`);\n        }\n\n        const measureField = this.getFieldspace().fieldsObj()[measureFieldName];\n        const { binnedData, bins } = createBinnedFieldData(measureField, this._rowDiffset, config);\n\n        const binField = createFields([binnedData], [\n            {\n                name: binFieldName,\n                type: FieldType.DIMENSION,\n                subtype: DimensionSubtype.BINNED,\n                bins\n            }], [binFieldName])[0];\n\n        const clone = this.clone(config.saveChild);\n        clone.addField(binField);\n\n        persistDerivations(\n            this,\n            clone,\n            DM_DERIVATIVES.BIN,\n             { measureFieldName, config, binFieldName },\n             null\n        );\n\n        return clone;\n    }\n\n    /**\n     * Creates a new {@link DataModel} instance with completely detached root from current {@link DataModel} instance,\n     * the new {@link DataModel} instance has no parent-children relationship with the current one, but has same data as\n     * the current one.\n     * This API is useful when a completely different {@link DataModel} but with same data as the current instance is\n     * needed.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *  const detachedDm = dm.detachedRoot();\n     *\n     * // has different namespace\n     * console.log(dm.getPartialFieldspace().name);\n     * console.log(detachedDm.getPartialFieldspace().name);\n     *\n     * // has same data\n     * console.log(dm.getData());\n     * console.log(detachedDm.getData());\n     *\n     * @public\n     *\n     * @return {DataModel} Returns a detached {@link DataModel} instance.\n     */\n    detachedRoot () {\n        const data = this.serialize(DataFormat.FLAT_JSON);\n        const schema = this.getSchema();\n\n        return new DataModel(data, schema);\n    }\n}\n\nexport default DataModel;\n","import { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport DataModel from '../export';\nimport reducerStore from '../utils/reducer-store';\nimport { defaultReducerName } from './group-by-function';\nimport { FieldType } from '../enums';\n\n/**\n * This function sanitize the user given field and return a common Array structure field\n * list\n * @param  {DataModel} dataModel the dataModel operating on\n * @param  {Array} fieldArr  user input of field Array\n * @return {Array}           arrays of field name\n */\nfunction getFieldArr (dataModel, fieldArr) {\n    const retArr = [];\n    const fieldStore = dataModel.getFieldspace();\n    const dimensions = fieldStore.getDimension();\n\n    Object.entries(dimensions).forEach(([key]) => {\n        if (fieldArr && fieldArr.length) {\n            if (fieldArr.indexOf(key) !== -1) {\n                retArr.push(key);\n            }\n        } else {\n            retArr.push(key);\n        }\n    });\n\n    return retArr;\n}\n\n/**\n * This sanitize the reducer provide by the user and create a common type of object.\n * user can give function Also\n * @param  {DataModel} dataModel     dataModel to worked on\n * @param  {Object|function} [reducers={}] reducer provided by the users\n * @return {Object}               object containing reducer function for every measure\n */\nfunction getReducerObj (dataModel, reducers = {}) {\n    const retObj = {};\n    const fieldStore = dataModel.getFieldspace();\n    const measures = fieldStore.getMeasure();\n    const defReducer = reducerStore.defaultReducer();\n\n    Object.keys(measures).forEach((measureName) => {\n        if (typeof reducers[measureName] !== 'string') {\n            reducers[measureName] = measures[measureName].defAggFn();\n        }\n        const reducerFn = reducerStore.resolve(reducers[measureName]);\n        if (reducerFn) {\n            retObj[measureName] = reducerFn;\n        } else {\n            retObj[measureName] = defReducer;\n            reducers[measureName] = defaultReducerName;\n        }\n    });\n    return retObj;\n}\n\n/**\n * main function which perform the group-by operations which reduce the measures value is the\n * fields are common according to the reducer function provided\n * @param  {DataModel} dataModel the dataModel to worked\n * @param  {Array} fieldArr  fields according to which the groupby should be worked\n * @param  {Object|Function} reducers  reducers function\n * @param {DataModel} existingDataModel Existing datamodel instance\n * @return {DataModel} new dataModel with the group by\n */\nfunction groupBy (dataModel, fieldArr, reducers, existingDataModel) {\n    const sFieldArr = getFieldArr(dataModel, fieldArr);\n    const reducerObj = getReducerObj(dataModel, reducers);\n    const fieldStore = dataModel.getFieldspace();\n    const fieldStoreObj = fieldStore.fieldsObj();\n    const dbName = fieldStore.name;\n    const dimensionArr = [];\n    const measureArr = [];\n    const schema = [];\n    const hashMap = {};\n    const data = [];\n    let newDataModel;\n\n    // Prepare the schema\n    Object.entries(fieldStoreObj).forEach(([key, value]) => {\n        if (sFieldArr.indexOf(key) !== -1 || reducerObj[key]) {\n            schema.push(extend2({}, value.schema()));\n\n            switch (value.schema().type) {\n            case FieldType.MEASURE:\n                measureArr.push(key);\n                break;\n            default:\n            case FieldType.DIMENSION:\n                dimensionArr.push(key);\n            }\n        }\n    });\n    // Prepare the data\n    let rowCount = 0;\n    rowDiffsetIterator(dataModel._rowDiffset, (i) => {\n        let hash = '';\n        dimensionArr.forEach((_) => {\n            hash = `${hash}-${fieldStoreObj[_].partialField.data[i]}`;\n        });\n        if (hashMap[hash] === undefined) {\n            hashMap[hash] = rowCount;\n            data.push({});\n            dimensionArr.forEach((_) => {\n                data[rowCount][_] = fieldStoreObj[_].partialField.data[i];\n            });\n            measureArr.forEach((_) => {\n                data[rowCount][_] = [fieldStoreObj[_].partialField.data[i]];\n            });\n            rowCount += 1;\n        } else {\n            measureArr.forEach((_) => {\n                data[hashMap[hash]][_].push(fieldStoreObj[_].partialField.data[i]);\n            });\n        }\n    });\n\n    // reduction\n    let cachedStore = {};\n    let cloneProvider = () => dataModel.detachedRoot();\n    data.forEach((row) => {\n        const tuple = row;\n        measureArr.forEach((_) => {\n            tuple[_] = reducerObj[_](row[_], cloneProvider, cachedStore);\n        });\n    });\n    if (existingDataModel) {\n        existingDataModel.__calculateFieldspace();\n        newDataModel = existingDataModel;\n    }\n    else {\n        newDataModel = new DataModel(data, schema, { name: dbName });\n    }\n    return newDataModel;\n}\n\nexport { groupBy, getFieldArr, getReducerObj };\n","import { rowDiffsetIterator } from './row-diffset-iterator';\nimport InvalidAwareTypes from '../invalid-aware-types';\n\nconst generateBuckets = (binSize, start, end) => {\n    const buckets = [];\n    let next = start;\n\n    while (next < end) {\n        buckets.push(next);\n        next += binSize;\n    }\n    buckets.push(next);\n\n    return buckets;\n};\n\nconst findBucketRange = (bucketRanges, value) => {\n    let leftIdx = 0;\n    let rightIdx = bucketRanges.length - 1;\n    let midIdx;\n    let range;\n\n    // Here use binary search as the bucketRanges is a sorted array\n    while (leftIdx <= rightIdx) {\n        midIdx = leftIdx + Math.floor((rightIdx - leftIdx) / 2);\n        range = bucketRanges[midIdx];\n\n        if (value >= range.start && value < range.end) {\n            return range;\n        } else if (value >= range.end) {\n            leftIdx = midIdx + 1;\n        } else if (value < range.start) {\n            rightIdx = midIdx - 1;\n        }\n    }\n\n    return null;\n};\n\n /**\n  * Creates the bin data from input measure field and supplied configs.\n  *\n  * @param {Measure} measureField - The Measure field instance.\n  * @param {string} rowDiffset - The datamodel rowDiffset values.\n  * @param {Object} config - The config object.\n  * @return {Object} Returns the binned data and the corresponding bins.\n  */\nexport function createBinnedFieldData (measureField, rowDiffset, config) {\n    let { buckets, binsCount, binSize, start, end } = config;\n    const [dMin, dMax] = measureField.domain();\n\n    if (!buckets) {\n        start = (start !== 0 && (!start || start > dMin)) ? dMin : start;\n        end = (end !== 0 && (!end || end < dMax)) ? (dMax + 1) : end;\n\n        if (binsCount) {\n            binSize = Math.ceil(Math.abs(end - start) / binsCount);\n        }\n\n        buckets = generateBuckets(binSize, start, end);\n    }\n\n    if (buckets[0] > dMin) {\n        buckets.unshift(dMin);\n    }\n    if (buckets[buckets.length - 1] <= dMax) {\n        buckets.push(dMax + 1);\n    }\n\n    const bucketRanges = [];\n    for (let i = 0; i < buckets.length - 1; i++) {\n        bucketRanges.push({\n            start: buckets[i],\n            end: buckets[i + 1]\n        });\n    }\n\n    const binnedData = [];\n    rowDiffsetIterator(rowDiffset, (i) => {\n        const datum = measureField.partialField.data[i];\n        if (datum instanceof InvalidAwareTypes) {\n            binnedData.push(datum);\n            return;\n        }\n\n        const range = findBucketRange(bucketRanges, datum);\n        binnedData.push(`${range.start}-${range.end}`);\n    });\n\n    return { binnedData, bins: buckets };\n}\n","import { fnList } from '../operator/group-by-function';\n\nexport const { sum, avg, min, max, first, last, count, std: sd } = fnList;\n","import DataModel from './datamodel';\nimport {\n  compose,\n  bin,\n  select,\n  project,\n  groupby as groupBy,\n  calculateVariable,\n  sort,\n  crossProduct,\n  difference,\n  naturalJoin,\n  leftOuterJoin,\n  rightOuterJoin,\n  fullOuterJoin,\n  union\n} from './operator';\nimport * as Stats from './stats';\nimport * as enums from './enums';\nimport { DateTimeFormatter } from './utils';\nimport { DataFormat, FilteringMode, DM_DERIVATIVES } from './constants';\nimport InvalidAwareTypes from './invalid-aware-types';\nimport pkg from '../package.json';\n\nconst Operators = {\n    compose,\n    bin,\n    select,\n    project,\n    groupBy,\n    calculateVariable,\n    sort,\n    crossProduct,\n    difference,\n    naturalJoin,\n    leftOuterJoin,\n    rightOuterJoin,\n    fullOuterJoin,\n    union\n};\n\nconst version = pkg.version;\nObject.assign(DataModel, {\n    Operators,\n    Stats,\n    DM_DERIVATIVES,\n    DateTimeFormatter,\n    DataFormat,\n    FilteringMode,\n    InvalidAwareTypes,\n    version\n}, enums);\n\nexport default DataModel;\n","/**\n * Wrapper on calculateVariable() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const calculateVariable = (...args) => dm => dm.calculateVariable(...args);\n\n/**\n * Wrapper on sort() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const sort = (...args) => dm => dm.sort(...args);\n","import { crossProduct } from './cross-product';\nimport { naturalJoinFilter } from './natural-join-filter-function';\n\nexport function naturalJoin (dataModel1, dataModel2) {\n    return crossProduct(dataModel1, dataModel2, naturalJoinFilter(dataModel1, dataModel2), true);\n}\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar _containerManager = require('./container-manager');\n\nvar _containerManager2 = _interopRequireDefault(_containerManager);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    M = slLib.win.Math,\n    max = M.max,\n    round = M.round,\n    BLANK = '',\n    htmlSplCharSpace = { ' ': '&nbsp;' },\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\n/*\n * Create new instance of SmartLabelManager.\n *\n * SmartLabelManager controls the lifetime of the execution space where the text's metrics will be calculated.\n * This takes a string for a given style and returns the height, width.\n * If a bound box is defined it wraps the text and returns the wrapped height and width.\n * It allows to append ellipsis at the end if the text is truncated.\n *\n * @param {String | Number} id - Id of the instance. If the same id is passed, it disposes the old instance and\n *                              save the new one;\n * @param {String | HTMLElement} container - The id or the instance of the container where the intermediate dom\n *                              elements are to be attached. If not passed, it appends in div\n *\n * @param {Boolean} useEllipses - This decides if a ellipses to be appended if the text is truncated.\n * @param {Object} options - Control options\n *                          {\n *                              maxCacheLimit: No of letter to be cached. Default: 500.\n *                          }\n * @constructor\n */\nfunction SmartLabelManager(id, container, useEllipses, options) {\n    var wrapper,\n        prop,\n        max,\n        prevInstance,\n        isBrowserLess = false,\n        store = SmartLabelManager.store;\n\n    if (typeof id === 'undefined' || typeof id === 'object') {\n        return;\n    }\n\n    if (prevInstance = store[id]) {\n        prevInstance.dispose();\n    }\n\n    store[id] = this;\n    options = options || {};\n    options.maxCacheLimit = isFinite(max = options.maxCacheLimit) ? max : slLib.maxDefaultCacheLimit;\n\n    if (typeof container === 'string') {\n        container = doc.getElementById(container);\n    }\n\n    wrapper = slLib.createContainer(container);\n    wrapper.innerHTML = slLib.testStrAvg;\n\n    if (documentSupport.isHeadLess || !documentSupport.isIE && !wrapper.offsetHeight && !wrapper.offsetWidth) {\n        isBrowserLess = true;\n    }\n\n    wrapper.innerHTML = '';\n    for (prop in slLib.parentContainerStyle) {\n        wrapper.style[prop] = slLib.parentContainerStyle[prop];\n    }\n\n    this.id = id;\n    this.parentContainer = wrapper;\n\n    this._containerManager = new _containerManager2['default'](wrapper, isBrowserLess, 10);\n    this._showNoEllipses = !useEllipses;\n    this._init = true;\n    this.style = {};\n    this.options = options;\n\n    this.setStyle();\n}\n\n/*\n * getSmartText returns the text separated by <br/> whenever a break is necessary. This is to recgonize one\n * generalized format independent of the implementation (canvas based solution, svg based solution). This method\n * converts the output of getSmartText().text to array of lines if the text is wrapped. It sets a named property\n * `lines` on the object passed as parameter.\n *\n * @param {Object} smartlabel - the object returned by getSmartText based on which line arr which to be formed.\n *\n * @return {Object} - The same object which was passed in the arguments. Also a named property `lines` is set.\n */\nSmartLabelManager.textToLines = function (smartlabel) {\n    smartlabel = smartlabel || {};\n\n    if (!smartlabel.text) {\n        smartlabel.text = '';\n    } else if (typeof smartlabel.text !== 'string') {\n        smartlabel.text = smartlabel.text.toString();\n    }\n\n    smartlabel.lines = smartlabel.text.split(/\\n|<br\\s*?\\/?>/ig);\n    return smartlabel;\n};\n\n// Saves all the instance created so far\nSmartLabelManager.store = {};\n\n// Calculates space taken by a character with an approximation value which is calculated by repeating the\n// character by string length times.\nSmartLabelManager.prototype._calCharDimWithCache = function (text, calculateDifference, length) {\n    if (!this._init) {\n        return false;\n    }\n\n    var size,\n        csArr,\n        tw,\n        twi,\n        cachedStyle,\n        asymmetricDifference,\n        maxAdvancedCacheLimit = this.options.maxCacheLimit,\n        container = this._container,\n        style = this.style || {},\n        cache = this._advancedCache || (this._advancedCache = {}),\n        advancedCacheKey = this._advancedCacheKey || (this._advancedCacheKey = []),\n        cacheName = text + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK),\n        cacheInitName = text + 'init' + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK);\n\n    htmlSplCharSpace[text] && (text = htmlSplCharSpace[text]);\n\n    if (!calculateDifference) {\n        asymmetricDifference = 0;\n    } else {\n        if ((asymmetricDifference = cache[cacheInitName]) === undefined) {\n            container.innerHTML = text.repeat ? text.repeat(length) : Array(length + 1).join(text); // jshint ignore:line\n            tw = container.offsetWidth;\n\n            container.innerHTML = text;\n            twi = container.offsetWidth;\n\n            asymmetricDifference = cache[cacheInitName] = (tw - length * twi) / (length + 1);\n            advancedCacheKey.push(cacheInitName);\n            if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n                delete cache[advancedCacheKey.shift()];\n            }\n        }\n    }\n\n    if (cachedStyle = cache[cacheName]) {\n        csArr = cachedStyle.split(',');\n        return {\n            width: parseFloat(csArr[0], 10),\n            height: parseFloat(csArr[1], 10)\n        };\n    }\n\n    container.innerHTML = text;\n\n    size = {\n        height: container.offsetHeight,\n        width: container.offsetWidth + asymmetricDifference\n    };\n\n    cache[cacheName] = size.width + ',' + size.height;\n    advancedCacheKey.push(cacheName);\n    if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n        delete cache[advancedCacheKey.shift()];\n    }\n\n    return size;\n};\n\n// Provide function to calculate the height and width based on the environment and available support from dom.\nSmartLabelManager.prototype._getWidthFn = function () {\n    var contObj = this._containerObj,\n        container = this._container,\n        svgText = contObj.svgText;\n\n    if (svgText) {\n        return function (str) {\n            var bbox, width;\n\n            svgText.textContent = str;\n            bbox = svgText.getBBox();\n            width = bbox.width - SVG_BBOX_CORRECTION;\n            if (width < 1) {\n                width = bbox.width;\n            }\n\n            return width;\n        };\n    } else {\n        return function (str) {\n            container.innerHTML = str;\n            return container.offsetWidth;\n        };\n    }\n};\n\n/*\n * Sets the style based on which the text's metrics to be calculated.\n *\n * @param {Object} style - The style object which affects the text size\n *                      {\n *                          fontSize / 'font-size' : MUST BE FOLLOWED BY PX (10px, 11px)\n *                          fontFamily / 'font-family'\n *                          fontWeight / 'font-weight'\n *                          fontStyle / 'font-style'\n *                      }\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.setStyle = function (style) {\n    if (!this._init) {\n        return this;\n    }\n\n    var sCont;\n\n    if (style === this.style && !this._styleNotSet) {\n        return;\n    }\n\n    if (!style) {\n        style = this.style;\n    }\n\n    slLib.setLineHeight(style);\n    this.style = style;\n\n    this._containerObj = sCont = this._containerManager.get(style);\n\n    if (this._containerObj) {\n        this._container = sCont.node;\n        this._context = sCont.context;\n        this._cache = sCont.charCache;\n        this._lineHeight = sCont.lineHeight;\n        this._styleNotSet = false;\n    } else {\n        this._styleNotSet = true;\n    }\n\n    return this;\n};\n\n/*\n * Decides whether ellipses to be shown if the node is truncated\n *\n * @param {Boolean} useEllipses - decides if a ellipses to be appended if the text is truncated. Default: false\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.useEllipsesOnOverflow = function (useEllipses) {\n    if (!this._init) {\n        return this;\n    }\n    this._showNoEllipses = !useEllipses;\n    return this;\n};\n\n/*\n * Get wrapped or truncated text if a bound box is defined around it. The result text would be separated by <br/>\n * if wrapped\n *\n * @param {String} text - the subject text\n * @param {Number} maxWidth - width in px of the the bound box\n * @param {Number} maxHeight - height in px of the the bound box\n * @param {Boolean} noWrap - whether the text to be wrapped. Default false.\n *\n * @return {Object} - The metrics of the text bounded by the box\n *                  {\n *                      height : height of the wrapped text\n *                      width : width of the wrapped text\n *                      isTruncated : whether the text is truncated\n *                      maxHeight : Maximum height given\n *                      maxWidth : Maximum width given\n *                      oriText : Original text sent\n *                      oriTextHeight : Original text height\n *                      oriTextWidth : Original text width\n *                      text : SMART TEXT\n *                  }\n */\nSmartLabelManager.prototype.getSmartText = function (text, maxWidth, maxHeight, noWrap) {\n    if (!this._init) {\n        return false;\n    }\n\n    if (text === undefined || text === null) {\n        text = '';\n    } else if (typeof text !== 'string') {\n        text = text.toString();\n    }\n\n    var len,\n        trimStr,\n        tempArr,\n        tmpText,\n        maxWidthWithEll,\n        toolText,\n        oriWidth,\n        oriHeight,\n        newCharIndex,\n        nearestChar,\n        tempChar,\n        getWidth,\n        initialLeft,\n        initialTop,\n        getOriSizeImproveObj,\n        spanArr,\n        x,\n        y,\n        minWidth,\n        elem,\n        chr,\n        elemRightMostPoint,\n        elemLowestPoint,\n        lastBR,\n        removeFromIndex,\n        removeFromIndexForEllipses,\n        hasHTMLTag = false,\n        maxStrWidth = 0,\n        lastDash = -1,\n        lastSpace = -1,\n        lastIndexBroken = -1,\n        strWidth = 0,\n        strHeight = 0,\n        oriTextArr = [],\n        i = 0,\n        ellipsesStr = this._showNoEllipses ? '' : '...',\n        lineHeight = this._lineHeight,\n        context = this._context,\n        container = this._container,\n        sCont = this._containerObj,\n        ellipsesWidth = sCont.ellipsesWidth,\n        dotWidth = sCont.dotWidth,\n        characterArr = [],\n        dashIndex = -1,\n        spaceIndex = -1,\n        lastLineBreak = -1,\n        fastTrim = function fastTrim(str) {\n        str = str.replace(/^\\s\\s*/, '');\n        var ws = /\\s/,\n            i = str.length;\n        while (ws.test(str.charAt(i -= 1))) {/* jshint noempty:false */}\n        return str.slice(0, i + 1);\n    },\n        smartLabel = {\n        text: text,\n        maxWidth: maxWidth,\n        maxHeight: maxHeight,\n        width: null,\n        height: null,\n        oriTextWidth: null,\n        oriTextHeight: null,\n        oriText: text,\n        isTruncated: false\n    };\n\n    getWidth = this._getWidthFn();\n\n    // In some browsers, offsetheight of a single-line text is getting little (1 px) heigher value of the\n    // lineheight. As a result, smartLabel is unable to return single-line text.\n    // To fix this, increase the maxHeight a little amount. Hence maxHeight =  lineHeight * 1.2\n    if (maxHeight === lineHeight) {\n        maxHeight *= 1.2;\n    }\n\n    if (container) {\n        if (!documentSupport.isBrowserLess) {\n            hasHTMLTag = slLib.xmlTagRegEx.test(text);\n            if (!hasHTMLTag) {\n                // Due to support of <,> for xml we convert &lt;, &gt; to <,> respectively so to get the correct\n                // width it is required to convert the same before calculation for the new improve version of the\n                // get text width.\n                tmpText = text.replace(slLib.ltgtRegex, function (match) {\n                    return match === '&lt;' ? '<' : '>';\n                });\n                getOriSizeImproveObj = this.getOriSize(tmpText, true);\n\n                smartLabel.oriTextWidth = oriWidth = getOriSizeImproveObj.width;\n                smartLabel.oriTextHeight = oriHeight = getOriSizeImproveObj.height;\n            } else {\n                container.innerHTML = text;\n                smartLabel.oriTextWidth = oriWidth = container.offsetWidth;\n                smartLabel.oriTextHeight = oriHeight = container.offsetHeight;\n            }\n\n            if (oriHeight <= maxHeight && oriWidth <= maxWidth) {\n                smartLabel.width = smartLabel.oriTextWidth = oriWidth;\n                smartLabel.height = smartLabel.oriTextHeight = oriHeight;\n                return smartLabel;\n            }\n\n            if (lineHeight > maxHeight) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = 0;\n                smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            }\n        }\n\n        // Calculate width with ellipses\n        text = fastTrim(text).replace(/(\\s+)/g, ' ');\n        maxWidthWithEll = this._showNoEllipses ? maxWidth : maxWidth - ellipsesWidth;\n\n        if (!hasHTMLTag) {\n            oriTextArr = text.split('');\n            len = oriTextArr.length;\n            trimStr = '', tempArr = [];\n            tempChar = oriTextArr[0];\n\n            if (this._cache[tempChar]) {\n                minWidth = this._cache[tempChar].width;\n            } else {\n                minWidth = getWidth(tempChar);\n                this._cache[tempChar] = { width: minWidth };\n            }\n\n            if (maxWidthWithEll > minWidth) {\n                tempArr = text.substr(0, slLib.getNearestBreakIndex(text, maxWidthWithEll, this)).split('');\n                i = tempArr.length;\n            } else if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            } else if (ellipsesStr) {\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            strWidth = getWidth(tempArr.join(''));\n            strHeight = this._lineHeight;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                            smartLabel.tooltext = smartLabel.oriText;\n                            smartLabel.width = getWidth(smartLabel.text);\n                            smartLabel.height = this._lineHeight;\n                            return smartLabel;\n                        }\n                    }\n                }\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = strWidth;\n                smartLabel.height = this._lineHeight;\n                return smartLabel;\n            } else {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (tempChar === ' ' && !context) {\n                        tempChar = '&nbsp;';\n                    }\n\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            /** @todo use regular expressions for better performance. */\n                            lastSpace = text.substr(0, tempArr.length).lastIndexOf(' ');\n                            lastDash = text.substr(0, tempArr.length).lastIndexOf('-');\n                            if (lastSpace > lastIndexBroken) {\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                tempArr.splice(lastSpace, 1, '<br/>');\n                                lastIndexBroken = lastSpace;\n                                newCharIndex = lastSpace + 1;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === tempArr.length - 1) {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '<br/>-');\n                                } else {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '-<br/>');\n                                }\n                                lastIndexBroken = lastDash;\n                                newCharIndex = lastDash + 1;\n                            } else {\n                                tempArr.splice(tempArr.length - 1, 1, '<br/>' + oriTextArr[i]);\n                                lastLineBreak = tempArr.length - 2;\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastLineBreak + 1).join(''));\n                                lastIndexBroken = lastLineBreak;\n                                newCharIndex = i;\n                            }\n                            strHeight += this._lineHeight;\n                            if (strHeight > maxHeight) {\n                                smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                                smartLabel.tooltext = smartLabel.oriText;\n                                // The max width among all the lines will be the width of the string.\n                                smartLabel.width = maxWidth;\n                                smartLabel.height = strHeight - this._lineHeight;\n                                return smartLabel;\n                            } else {\n                                maxStrWidth = max(maxStrWidth, strWidth);\n                                trimStr = null;\n                                nearestChar = slLib.getNearestBreakIndex(text.substr(newCharIndex), maxWidthWithEll, this);\n                                strWidth = getWidth(text.substr(newCharIndex, nearestChar || 1));\n                                if (tempArr.length < newCharIndex + nearestChar) {\n                                    tempArr = tempArr.concat(text.substr(tempArr.length, newCharIndex + nearestChar - tempArr.length).split(''));\n                                    i = tempArr.length - 1;\n                                }\n                            }\n                        }\n                    }\n                }\n\n                maxStrWidth = max(maxStrWidth, strWidth);\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = maxStrWidth;\n                smartLabel.height = strHeight;\n                return smartLabel;\n            }\n        } else {\n            toolText = text.replace(slLib.spanAdditionRegx, '$2');\n            text = text.replace(slLib.spanAdditionRegx, slLib.spanAdditionReplacer);\n            text = text.replace(/(<br\\s*\\/*\\>)/g, '<span class=\"' + [slLib.classNameWithTag, ' ', slLib.classNameWithTagBR].join('') + '\">$1</span>');\n\n            container.innerHTML = text;\n\n            spanArr = container[documentSupport.childRetriverFn](documentSupport.childRetriverString);\n\n            for (x = 0, y = spanArr.length; x < y; x += 1) {\n                elem = spanArr[x];\n                //chech whether this span is temporary inserted span from it's class\n                if (documentSupport.noClassTesting || slLib.classNameReg.test(elem.className)) {\n                    chr = elem.innerHTML;\n                    if (chr !== '') {\n                        if (chr === ' ') {\n                            spaceIndex = characterArr.length;\n                        } else if (chr === '-') {\n                            dashIndex = characterArr.length;\n                        }\n\n                        characterArr.push({\n                            spaceIdx: spaceIndex,\n                            dashIdx: dashIndex,\n                            elem: elem\n                        });\n                        oriTextArr.push(chr);\n                    }\n                }\n            }\n\n            i = 0;\n            len = characterArr.length;\n            minWidth = characterArr[0].elem.offsetWidth;\n\n            if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n\n                return smartLabel;\n            } else if (minWidth > maxWidthWithEll && !this._showNoEllipses) {\n\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            initialLeft = characterArr[0].elem.offsetLeft;\n            initialTop = characterArr[0].elem.offsetTop;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n                        if (container.offsetWidth > maxWidth) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            } else {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemLowestPoint = elem.offsetHeight + (elem.offsetTop - initialTop);\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    lastBR = null;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n\n                        if (elemRightMostPoint > maxWidth) {\n                            lastSpace = characterArr[i].spaceIdx;\n                            lastDash = characterArr[i].dashIdx;\n                            if (lastSpace > lastIndexBroken) {\n                                characterArr[lastSpace].elem.innerHTML = '<br/>';\n                                lastIndexBroken = lastSpace;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === i) {\n                                    // in case the overflowing character itself is the '-'\n                                    characterArr[lastDash].elem.innerHTML = '<br/>-';\n                                } else {\n                                    characterArr[lastDash].elem.innerHTML = '-<br/>';\n                                }\n                                lastIndexBroken = lastDash;\n                            } else {\n                                elem.parentNode.insertBefore(lastBR = doc.createElement('br'), elem);\n                            }\n\n                            //check whether this break made current element outside the area height\n                            if (elem.offsetHeight + elem.offsetTop > maxHeight) {\n                                //remove the lastly inserted line break\n                                if (lastBR) {\n                                    lastBR.parentNode.removeChild(lastBR);\n                                } else if (lastIndexBroken === lastDash) {\n                                    characterArr[lastDash].elem.innerHTML = '-';\n                                } else {\n                                    characterArr[lastSpace].elem.innerHTML = ' ';\n                                }\n                                removeFromIndex = i;\n                                //break the looping condition\n                                i = len;\n                            } else {\n                                removeFromIndexForEllipses = null;\n                            }\n                        }\n                    } else {\n                        //check whether this break made current element outside the area height\n                        if (elemLowestPoint > maxHeight) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            }\n\n            if (removeFromIndex < len) {\n                //set the trancated property of the smartlabel\n                smartLabel.isTruncated = true;\n\n                /** @todo is this really needed? */\n                removeFromIndexForEllipses = removeFromIndexForEllipses ? removeFromIndexForEllipses : removeFromIndex;\n\n                for (i = len - 1; i >= removeFromIndexForEllipses; i -= 1) {\n                    elem = characterArr[i].elem;\n                    //chech whether this span is temporary inserted span from it's class\n                    elem.parentNode.removeChild(elem);\n                }\n\n                for (; i >= 0; i -= 1) {\n                    elem = characterArr[i].elem;\n                    if (slLib.classNameBrReg.test(elem.className)) {\n                        //chech whether this span is temporary inserted span from it's class\n                        elem.parentNode.removeChild(elem);\n                    } else {\n                        i = 0;\n                    }\n                }\n            }\n\n            //get the smart text\n            smartLabel.text = container.innerHTML.replace(slLib.spanRemovalRegx, '$1').replace(/\\&amp\\;/g, '&');\n            if (smartLabel.isTruncated) {\n                smartLabel.text += ellipsesStr;\n                smartLabel.tooltext = toolText;\n            }\n        }\n\n        smartLabel.height = container.offsetHeight;\n        smartLabel.width = container.offsetWidth;\n\n        return smartLabel;\n    } else {\n        smartLabel.error = new Error('Body Tag Missing!');\n        return smartLabel;\n    }\n};\n\n/*\n * Get the height and width of a text.\n *\n * @param {String} text - Text whose metrics to be measured\n * @param {Boolean} Optional detailedCalculationFlag - this flag if set it calculates per letter position\n *                          information and returns it. Ideally you dont need it unless you want to post process the\n *                          string. And its an EXPENSIVE OPERATION.\n *\n * @return {Object} - If detailedCalculationFlag is set to true the returned object would be\n *                  {\n *                      height: height of the text\n *                      width: width of the text\n *                      detailObj: detail calculation of letters in the format {lettername: width}\n *                  }\n *                  If detailedCalculationFlag is set to false the returned object wont have the detailObj prop.\n */\nSmartLabelManager.prototype.getOriSize = function (text, detailedCalculationFlag) {\n    if (!this._init) {\n        return false;\n    }\n\n    var textArr,\n        letter,\n        lSize,\n        i,\n        l,\n        cumulativeSize = 0,\n        height = 0,\n        indiSizeStore = {};\n\n    if (!detailedCalculationFlag) {\n        return this._calCharDimWithCache(text);\n    }\n\n    // Calculate the width of every letter with an approximation\n    textArr = text.split('');\n    for (i = 0, l = textArr.length; i < l; i++) {\n        letter = textArr[i];\n        lSize = this._calCharDimWithCache(letter, true, textArr.length);\n        height = max(height, lSize.height);\n        cumulativeSize += lSize.width;\n        indiSizeStore[letter] = lSize.width;\n    }\n\n    return {\n        width: round(cumulativeSize),\n        height: height,\n        detailObj: indiSizeStore\n    };\n};\n\n/*\n * Dispose the container and object allocated by the smartlabel\n */\nSmartLabelManager.prototype.dispose = function () {\n    if (!this._init) {\n        return this;\n    }\n\n    this._containerManager && this._containerManager.dispose && this._containerManager.dispose();\n\n    delete this._container;\n    delete this._context;\n    delete this._cache;\n    delete this._containerManager;\n    delete this._containerObj;\n    delete this.id;\n    delete this.style;\n    delete this.parentContainer;\n    delete this._showNoEllipses;\n\n    return this;\n};\n\nexports['default'] = SmartLabelManager;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\nvar lib = {\n\tinit: function init(win) {\n\t\tvar doc = win.document,\n\t\t    nav = win.navigator,\n\t\t    userAgent = nav.userAgent,\n\t\t    DIV = 'DIV',\n\t\t    ceil = Math.ceil,\n\t\t    floor = Math.floor,\n\t\t    containerInstanceCount = 0,\n\t\t    clsNameSpace = 'fusioncharts-smartlabel-',\n\t\t    containerClass = clsNameSpace + 'container',\n\t\t    classNameWithTag = clsNameSpace + 'tag',\n\t\t    classNameWithTagBR = clsNameSpace + 'br';\n\n\t\tlib = {\n\t\t\twin: win,\n\n\t\t\tcontainerClass: containerClass,\n\n\t\t\tclassNameWithTag: classNameWithTag,\n\n\t\t\tclassNameWithTagBR: classNameWithTagBR,\n\n\t\t\tmaxDefaultCacheLimit: 500,\n\n\t\t\tclassNameReg: new RegExp('\\b' + classNameWithTag + '\\b'),\n\n\t\t\tclassNameBrReg: new RegExp('\\b' + classNameWithTagBR + '\\b'),\n\n\t\t\tspanAdditionRegx: /(<[^<\\>]+?\\>)|(&(?:[a-z]+|#[0-9]+);|.)/ig,\n\n\t\t\tspanAdditionReplacer: '$1<span class=\"' + classNameWithTag + '\">$2</span>',\n\n\t\t\tspanRemovalRegx: new RegExp('\\\\<span[^\\\\>]+?' + classNameWithTag + '[^\\\\>]{0,}\\\\>(.*?)\\\\<\\\\/span\\\\>', 'ig'),\n\n\t\t\txmlTagRegEx: new RegExp('<[^>][^<]*[^>]+>', 'i'),\n\n\t\t\tltgtRegex: /&lt;|&gt;/g,\n\n\t\t\tbrReplaceRegex: /<br\\/>/ig,\n\n\t\t\ttestStrAvg: 'WgI',\n\n\t\t\t// This style is applied over the parent smartlabel container. The container is kept hidden from the viewport\n\t\t\tparentContainerStyle: {\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: '-9999em',\n\t\t\t\twhiteSpace: 'nowrap',\n\t\t\t\tpadding: '0px',\n\t\t\t\twidth: '1px',\n\t\t\t\theight: '1px',\n\t\t\t\toverflow: 'hidden'\n\t\t\t},\n\n\t\t\t// All the style which might affect the text metrics\n\t\t\tsupportedStyle: {\n\t\t\t\tfont: 'font',\n\t\t\t\tfontFamily: 'font-family',\n\t\t\t\t'font-family': 'font-family',\n\t\t\t\tfontWeight: 'font-weight',\n\t\t\t\t'font-weight': 'font-weight',\n\t\t\t\tfontSize: 'font-size',\n\t\t\t\t'font-size': 'font-size',\n\t\t\t\tlineHeight: 'line-height',\n\t\t\t\t'line-height': 'line-height',\n\t\t\t\tfontStyle: 'font-style',\n\t\t\t\t'font-style': 'font-style'\n\t\t\t},\n\n\t\t\t// Get the support list for html the document where the text calcution is to be done.\n\t\t\tgetDocumentSupport: function getDocumentSupport() {\n\t\t\t\tvar childRetriverFn, childRetriverString, noClassTesting;\n\n\t\t\t\tif (doc.getElementsByClassName) {\n\t\t\t\t\tchildRetriverFn = 'getElementsByClassName';\n\t\t\t\t\tchildRetriverString = classNameWithTag;\n\t\t\t\t\tnoClassTesting = true;\n\t\t\t\t} else {\n\t\t\t\t\tchildRetriverFn = 'getElementsByTagName';\n\t\t\t\t\tchildRetriverString = 'span';\n\t\t\t\t\tnoClassTesting = false;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tisIE: /msie/i.test(userAgent) && !win.opera,\n\t\t\t\t\thasSVG: Boolean(win.SVGAngle || doc.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1')),\n\t\t\t\t\tisHeadLess: new RegExp(' HtmlUnit').test(userAgent),\n\t\t\t\t\tisWebKit: new RegExp(' AppleWebKit/').test(userAgent),\n\t\t\t\t\tchildRetriverFn: childRetriverFn,\n\t\t\t\t\tchildRetriverString: childRetriverString,\n\t\t\t\t\tnoClassTesting: noClassTesting\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t/*\n    * Create a html div element and attach it with a parent. All the subsequent operations are performed\n    * by upding this dom tree only.\n    *\n    * @param {HTMLElement} - The html element where the newly created div is to be attached. If not passed,\n    *                      the new div is appended on the body.\n    */\n\t\t\tcreateContainer: function createContainer(containerParent) {\n\t\t\t\tvar body, container;\n\n\t\t\t\tif (containerParent && (containerParent.offsetWidth || containerParent.offsetHeight)) {\n\t\t\t\t\tif (containerParent.appendChild) {\n\t\t\t\t\t\tcontainerParent.appendChild(container = doc.createElement(DIV));\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbody = doc.getElementsByTagName('body')[0];\n\n\t\t\t\t\tif (body && body.appendChild) {\n\t\t\t\t\t\tcontainer = doc.createElement(DIV);\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\tcontainerInstanceCount += 1;\n\t\t\t\t\t\tbody.appendChild(container);\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// Finds a approximate position where the text is to be broken\n\t\t\tgetNearestBreakIndex: function getNearestBreakIndex(text, maxWidth, sl) {\n\t\t\t\tif (!text || !text.length) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\tvar difference,\n\t\t\t\t    getWidth = sl._getWidthFn(),\n\t\t\t\t    charLen = 0,\n\t\t\t\t    increment = 0,\n\t\t\t\t    oriWidth = getWidth(text),\n\t\t\t\t    avgWidth = oriWidth / text.length;\n\n\t\t\t\tdifference = maxWidth;\n\t\t\t\tcharLen = ceil(maxWidth / avgWidth);\n\n\t\t\t\tif (oriWidth < maxWidth) {\n\t\t\t\t\treturn text.length - 1;\n\t\t\t\t}\n\n\t\t\t\tif (charLen > text.length) {\n\t\t\t\t\tdifference = maxWidth - oriWidth;\n\t\t\t\t\tcharLen = text.length;\n\t\t\t\t}\n\n\t\t\t\twhile (difference > 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\twhile (difference < 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn charLen;\n\t\t\t},\n\n\t\t\t/*\n    * Determine lineheight of a text for a given style. It adds propery lineHeight to the style passed\n    *\n    * @param {Object} - The style based on which the text's metric needs to be calculated. The calculation happens\n    *                  based on fontSize property, if its not present a default font size is assumed.\n    *\n    * @return {Object} - The style that was passed with lineHeight as a named propery set on the object.\n    */\n\t\t\tsetLineHeight: function setLineHeight(styleObj) {\n\t\t\t\tvar fSize = styleObj.fontSize = styleObj.fontSize || '12px';\n\t\t\t\tstyleObj.lineHeight = styleObj.lineHeight || styleObj['line-height'] || parseInt(fSize, 10) * 1.2 + 'px';\n\t\t\t\treturn styleObj;\n\t\t\t}\n\t\t};\n\n\t\treturn lib;\n\t}\n};\n\nexports['default'] = lib;\nmodule.exports = exports['default'];","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"hyperdis\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hyperdis\"] = factory();\n\telse\n\t\troot[\"hyperdis\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import {\n    pullableRecent,\n    pullableEnd\n} from './utils';\n\nexport default class ElectricNode {\n    constructor () {\n        this.edges = [];\n        this.listeners = {\n            nextFrame: [],\n            currentFrame: []\n        };\n    }\n\n    addEdges (...nodes) {\n        this.edges.push(...nodes);\n        return this;\n    }\n\n    regListenerForCurrFrame (fn) {\n        const lstnrs = this.listeners.currentFrame;\n        let index = lstnrs.push(pullableRecent(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.currentFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    regListenerForNextFrame (fn) {\n        const lstnrs = this.listeners.nextFrame;\n        let index = lstnrs.push(pullableEnd(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.nextFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    hasNextFrameListener () {\n        return !!this.listeners.nextFrame.length;\n    }\n}\n","export default class GraphNode {\n    constructor (name, qualifiedName, options) {\n        /* istanbul ignore next */options = options || {};\n        this.name = name;\n        this.qualifiedName = qualifiedName;\n        this.edges = [];\n        this.outgoingEdges = [];\n        this._seed = null;\n        this.requireResolve = true;\n        this.retriever = options.retriever;\n        this.history = [];\n        this.resolver = null;\n        this.electricEdges = [];\n    }\n\n    addDependencies (...dep) {\n        this.edges.push(...dep);\n        dep.forEach(entry => entry.outgoingEdges.push(this));\n        return this;\n    }\n\n    addElectricNode (node) {\n        this.electricEdges.push(node);\n        return this;\n    }\n\n    get seed () {\n        return this._seed;\n    }\n\n    set seed (value) {\n        this._seed = value;\n        this.requireResolve = true;\n        return this;\n    }\n\n    resolve () {\n        this.seed = this.resolver(...this.retrieveDetails());\n        this.history.push(this.seed);\n        this.requireResolve = false;\n        return this;\n    }\n\n    retrieveDetails () {\n        if (this.edges.length === 0) {\n            return [{\n                name: this.name,\n                qualifiedName: this.qualifiedName,\n                value: this.seed\n            }];\n        }\n        return this.retriever(...this.edges.map(edge => edge.qualifiedName));\n    }\n\n    repeatHead () {\n        const\n            history = this.history,\n            head = history[history.length - 1];\n        // @todo- Akash, write test case if history.length === 0 to pass code coverage\n        if (history.length === 0) {\n            return this;\n        }\n        history.push(head);\n        return this;\n    }\n\n    flush () {\n        const hist = this.history,\n            head = hist[hist.length - 1];\n        hist.length = 0;\n        hist.push(head);\n        return this;\n    }\n\n    isRoot () {\n        return this.name === null;\n    }\n}\n","import {\n    isSimpleObject,\n    resolver,\n    // upstreamNodes,\n    flat,\n    resolveDependencyOrder,\n    getUpstreamNodes,\n    ForeignSet,\n    fetch,\n    CustomResolver,\n    scheduler\n} from './utils';\nimport Node from './graph-node';\nimport ElectricNode from './electric-node';\n\nexport default class Graph {\n    constructor () {\n        this.qualifiedNodeMap = {};\n        this.retriever = fetch(this.qualifiedNodeMap);\n        this.root = new Node(null, null, { retriever: this.retriever });\n        this.root.resolver = resolver.accumulate;\n\n        this._wholeSet = null;\n        this._propagate = true;\n        this.propagationOverride = {\n            currentFrameListeners: false,\n            nextFrameListeners: false\n        };\n\n        this._schedule = scheduler((payload) => {\n            let qname;\n            for (qname in payload.flushTarget) {\n                if (!({}).hasOwnProperty.call(this.qualifiedNodeMap, qname)) {\n                    return;\n                }\n                this.qualifiedNodeMap[qname].flush();\n            }\n        });\n    }\n\n    createNodesFrom (obj, mount) {\n        let val,\n            resolveReqList;\n        const qualifiedNodeMap = this.qualifiedNodeMap,\n            root = this.root,\n            retriever = this.retriever;\n\n        (function rec (objn, qualifiedName, history) {\n            let key,\n                qname,\n                perv,\n                node;\n\n            for (key in objn) {\n                if (!({}).hasOwnProperty.call(objn, key)) {\n                    continue;\n                }\n                qname = `${qualifiedName}${key}`;\n                node = new Node(key, qname, { retriever });\n                qualifiedNodeMap[qname] = node;\n\n                if ((perv = history.perv) !== undefined) {\n                    perv.addDependencies(node);\n                } else {\n                    // top most level entries\n                    root.addDependencies(node);\n                }\n\n                if (isSimpleObject(val = objn[key])) {\n                    rec(val, `${qualifiedName}${key}.`, { perv: node });\n                    node.resolver = resolver.accumulate;\n                } else if (val instanceof CustomResolver) {\n                    node.resolver = val.get();\n                    node.addDependencies(...val.getDependencies().map(qname => qualifiedNodeMap[qname]));\n                } else {\n                    node.resolver = resolver.identity;\n                    node.seed = val;\n                    // node.resolve();\n                }\n            }\n        }(obj, mount === null ? '' : `${mount}.`, {\n            perv: qualifiedNodeMap[mount]\n        }));\n\n        this._wholeSet = new ForeignSet(Object.keys(this.qualifiedNodeMap));\n\n        // Recalculate the model without firing the listeners\n        // @todo selective branch resolve. Currently resolve gets called even for a branch which was updated\n        resolveReqList = this.constructor.getResolvedList(root).concat(root).filter(node => node.requireResolve);\n        resolveReqList.forEach(node => node.resolve());\n        getUpstreamNodes(resolveReqList).forEach(node => node.resolve());\n        return this;\n    }\n\n    getNodeValue (prop) {\n        if (prop in this.qualifiedNodeMap) {\n            return this.qualifiedNodeMap[prop].seed;\n        }\n        return undefined;\n    }\n\n    createElectricNodeOf (props, fnSpec) {\n        const nodes = props.map(prop => this.qualifiedNodeMap[prop]),\n            eNode = new ElectricNode().addEdges(...nodes);\n\n        nodes.forEach(node => node.addElectricNode(eNode));\n        return eNode[`regListenerFor${fnSpec.type}`](fnSpec.fn);\n    }\n\n    update (...params) {\n        let changedSet,\n            upstreamNodes;\n        const\n            electricEdges = [],\n            nodes = params.map((entry) => {\n                entry[0].seed = entry[1];\n                return entry[0];\n            });\n        nodes.forEach(node => node.resolve());\n        electricEdges.push(...flat(...nodes.map(node => node.electricEdges)));\n        changedSet = new ForeignSet(nodes.map(node => node.qualifiedName));\n\n        if (!this._propagate) {\n            this.__execUniqueElectricEdges(electricEdges);\n            this._propagate = true;\n            return this;\n        }\n\n        upstreamNodes = getUpstreamNodes(nodes);\n        upstreamNodes.forEach(upstreamNode => upstreamNode.resolve());\n        changedSet.append(upstreamNodes.map(node => node.qualifiedName));\n        electricEdges.push(...flat(...upstreamNodes.map(node => node.electricEdges)));\n\n        this.__execUniqueElectricEdges(Array.from(new Set(electricEdges)), changedSet);\n        return this;\n    }\n\n    __execUniqueElectricEdges (electricEdges, changedSet) {\n        const\n            cfLstnrs = [], // current frame listeners\n            nfLstnrs = []; // next frame listeners\n        if (changedSet) {\n            const\n                differenceSet = ForeignSet.difference(this._wholeSet, changedSet),\n                entries = differenceSet.toArray();\n\n            entries.forEach(entry => this.qualifiedNodeMap[entry].repeatHead());\n        }\n\n        electricEdges.forEach((e) => {\n            cfLstnrs.push(...e.listeners.currentFrame);\n        });\n        electricEdges.forEach((e) => {\n            nfLstnrs.push(...e.listeners.nextFrame);\n        });\n\n        !this.propagationOverride.currentFrameListeners && cfLstnrs.forEach(fn => fn());\n        !this.propagationOverride.nextFrameListeners && this._schedule(nfLstnrs, { flushTarget: changedSet });\n        this.resetPropagationOverride();\n        return this;\n    }\n\n    resetNodeValue (...qnames) {\n        const nodes = qnames.map(qname => this.qualifiedNodeMap[qname]),\n            args = nodes.map(node => [node, node.seed]);\n        this.update(...args);\n        return this;\n    }\n\n    static getResolvedList (node) {\n        const resolved = [];\n        resolveDependencyOrder(node, resolved, {});\n        return resolved;\n    }\n\n    stopPropagation () {\n        this._propagate = false;\n        return this;\n    }\n\n    resetPropagationOverride () {\n        this.propagationOverride.currentFrameListeners = false;\n        this.propagationOverride.nextFrameListeners = false;\n        return this;\n    }\n\n    setPropagationOverride (key) {\n        this.propagationOverride[`${key}Listeners`] = true;\n        return this;\n    }\n\n    getNodeFromQualifiedName (qname) {\n        return this.qualifiedNodeMap[qname];\n    }\n}\n","import Model from './model';\n\nexport default Model;\n","import Graph from './graph';\nimport { CustomResolver, fetchAggregator } from './utils';\n\n/**\n * The container class for Hyperdis. Hyperdis is an enabler for observable object with few interesting features like,\n * calculated property, next frame and same frame listeners, multiple listeners etc with a dependency resolving system.\n * It internally uses a graph to hold the hierarchial relationship of a object. Model is merely a container which\n * ties all the components together.\n *\n * @todo Circular dependency detection is not present\n *\n * @example check src/index.spec.js\n * @class\n */\nclass Model {\n    constructor () {\n        this._graph = new Graph();\n        this._lockFlag = false;\n        this._reqQ = [];\n    }\n\n    /**\n     * Static method to create and init the model with an observable seed\n     *\n     * @param {Object} obj The target object which is required to be made observable\n     * @return {Model} instance of the observable object model\n     */\n    static create (obj) {\n        return new Model()._addPropInModel(null, obj);\n    }\n\n    /**\n     * Appends more observable property on the already observable instance. This mutates the original model.\n     *\n     * This function works in two mode. One being\n     * @param {String} mountPoint the property on which the new set of properties will be mounted. If its a nested\n     *                          property then the mountPoint has to be written such a way so it feels like you are\n     *                          accessing the object. If the mount point is not found then he obeservables are added in\n     *                          the root.\n     * @param {Object} The target object which is required to be made observable\n     *\n     * Another being\n     * @param {Object} The target object which is required to be made observable\n     *\n     * @return {Model} instance of the observable object model\n     */\n    append (...params) {\n        let mountPoint,\n            obj;\n\n        if (params.length === 1) {\n            mountPoint = null;\n            obj = params[0];\n        } else {\n            mountPoint = params[0];\n            obj = params[1];\n        }\n\n        this._addPropInModel(mountPoint, obj);\n        return this;\n    }\n\n    /**\n     * Creates a calculated variable from existing variable. This variable can't be updated from outside.\n     * @param {string} mountpoint property path on which the new variable will be placed\n     * @param {string} name name of the variable. If the variable could have hierarchy like `limits.start`\n     * @param {Function} fn funtion where the dependent variables are injected based on the dependency requirement\n     */\n    calculatedProp (...params) {\n        let calculationConfig,\n            customResolver,\n            varName,\n            mount,\n            fetchFn;\n\n        if (params.length > 2) {\n            mount = params[0];\n            varName = params[1];\n            fetchFn = params[2];\n        } else {\n            mount = null;\n            varName = params[0];\n            fetchFn = params[1];\n        }\n\n        calculationConfig = fetchFn(fetchAggregator);\n        customResolver = new CustomResolver(calculationConfig.fn);\n        customResolver.addDependencies(...calculationConfig.dependencies);\n\n        this._addPropInModel(mount, { [varName]: customResolver });\n        return this;\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    _addPropInModel (mountPoint, obj) {\n        this._graph.createNodesFrom(obj, mountPoint);\n        return this;\n    }\n\n    /**\n     * Register a listener in the current frame when a property or group of properties is changed.\n     *\n     * @example\n     * This function takes a single or group of property and handler which is called when any of the properties are\n     * changed.\n     * When a single property is changed the handler is called with two parameter, what was the old value of the state\n     * property and what is the new value.\n     * myState.on('range.start', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 9);\n     * // Output\n     * Value before prop change 1\n     * Value after prop change 9\n     *\n     * If a handler is registered on change of a property which has another state property as value, then the handler\n     * gets called whenever any state property connected to it gets changed\n     *\n     * myState.on('range', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 10);\n     * myState.prop('range.type.absolute', false);\n     *\n     * // Output\n     * Value before prop change\n     * range {\n     *      start: 9,\n     *      end: 5,\n     *      type: {\n     *          absolute: true\n     *      }\n     * }\n     * Value after prop change\n     * range: {\n     *      start: 10,\n     *      end: 5,\n     *      type: {\n     *          absolute: false\n     *      }\n     * }\n     * If a handler is registered with more than one property change then, the handler is called when any of the\n     * properties gets changed. In this cast the handler is called with more than one parameter: each for one state\n     * property which is registered for listening. Each parameter is of type array containing [oldValue, newValue]\n     *\n     * myState.on('range.start', 'range.end', (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * myState.prop('range.start', 12);\n     *\n     * // Output\n     * Start [10, 12]\n     * End [5, 5]\n     *\n     * myState.prop('range.end', 7);\n     *\n     * // Output\n     * Start [12, 12]\n     * End [5, 7]\n     *\n     * The on returns a function which is when called the listener registered gets unregistered\n     *\n     * let unsub = myState.on(['range.start', 'range.end'], (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * // Unsubscribe\n     * unsub()\n     *\n     * On takes an optional boolean value as the last parameter, which if passed as a true value the handler gets called\n     * during registration itself.\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    on (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed in the current stack frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'CurrFrame',\n                fn\n            });\n\n        if (instantCall) {\n            // Bar current next frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('nextFrame').resetNodeValue(...props);\n        }\n        return unsub;\n    }\n\n    /**\n     * Register a listener for the next frame when a property or group of properties is changed.\n     *\n     * @example\n     * See the examples for the on listener\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties. Here the oldvalue is last value of the last frame\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    next (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed at the tick of next animation frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'NextFrame',\n                fn\n            });\n\n        // @todo check support for this from the graph side\n        if (instantCall) {\n            // Bar current frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('currentFrame').resetNodeValue(...props);\n        }\n\n        return unsub;\n    }\n\n    /**\n     * Lock queues the request of property change and releases the change when unlock is called. This is helpful when\n     * multiple property is getting called and the model listeners are to be fired once at the end of update.\n     *\n     * @return {Model} instance of the model\n     */\n    lock () {\n        this._lockFlag = true;\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * Unlock unleashes the change done after the lock was called.\n\n     * @return {Model} instance of the model\n     */\n    unlock () {\n        this._lockFlag = false;\n        this.setProp(...this._reqQ);\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * This acts as getter and setter. If the function is called by passing only one argument, it retrieve the value\n     * associated with the property. If the same function is called using two parameters, first one being the property\n     * and second one being the value, then the value is set for the property and the handlers are called (if any)\n     * which got registered using the on function\n     *\n     * Getter\n     * @param {string} prop property path whose value to be retrieved\n     * @return {Object} value of the property at the time of call\n     *\n     * Setter\n     * @param {string} property property path whose value to be ser\n     * @return {Model} instance of the model\n     */\n    prop (...params) {\n        let prop,\n            val,\n            len;\n\n        switch (len = params.length) {\n        case 1:\n            prop = params[0];\n            break;\n\n        case 2:\n            prop = params[0];\n            val = params[1];\n            break;\n\n        default:\n            return this;\n        }\n\n        if (len === 2) {\n            this._lockFlag ? this._reqQ.push([prop, val]) : this.setProp([prop, val]);\n            return this;\n        }\n\n        return this._graph.getNodeValue(prop);\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    setProp (...props) {\n        // Filter out the calculated variables, so that it cant be changed from outside\n        // @todo if a node is not leafValue, and change is called, ignore it too\n        // props = props.filter(prop => !(VirtualObj.walkTill(prop[0].split('.'), this._vObj).leafValue()\n        //     instanceof CalculatedVar));\n\n        if (props.length === 0) {\n            return this;\n        }\n\n        this._graph.update(...props.map(prop => [this._graph.getNodeFromQualifiedName(prop[0]), prop[1]]));\n        return this;\n    }\n\n    /**\n     * Retrieves the graph representation of the object\n     * @return {Graph} instance of the graph associated to the model\n     */\n    graph () {\n        return this._graph;\n    }\n\n    /**\n     * Get serialized data from the model\n     *\n     * @return {Object} Serialized data\n     */\n    serialize () {\n        return this._graph.root.seed;\n    }\n}\n\nexport default Model;\n","/* global window */\n\nimport ForeignSet from './set';\n\nconst\n    isSimpleObject = (obj) => {\n        let token;\n        if (typeof obj === 'object') {\n            if (obj === null) { return false; }\n            token = Object.prototype.toString.call(obj);\n            if (token === '[object Object]') {\n                return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n            }\n        }\n        return false;\n    },\n    minMsThreshold = 16,\n    /* istanbul ignore next */win = typeof window === 'undefined' ? (this || {}) : window,\n    /* istanbul ignore next */ reqAnimFrame = win.requestAnimationFrame || win.webkitRequestAnimationFrame ||\n        win.mozRequestAnimationFrame || win.oRequestAnimationFrame ||\n        win.msRequestAnimationFrame ||\n        function (callback) {\n            setTimeout(callback, minMsThreshold);\n        },\n\n    getTimeBasedId = () => {\n        if (getTimeBasedId.__lastTime === new Date().getTime()) {\n            return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n        }\n\n        getTimeBasedId.__id = 0;\n        getTimeBasedId.__lastTime = new Date().getTime();\n        return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n    },\n    pullableRecent = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const\n                    hist = node.history,\n                    l = hist.length - 1;\n                return [hist[l - 1 < 0 ? 0 : l - 1], hist[l]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    pullableEnd = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const hist = node.history;\n                return [hist[0], hist[hist.length - 1]];\n            }));\n        };\n        nFn.__fn = fn.__callBack;\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    unique = fns => fns\n                    .reduce((store, fn) => {\n                // @warn function with side effect, it mutates the store passed during initialization\n                        if (fn.__id in store.map) {\n                            return store;\n                        }\n\n                        store.map[fn.__id] = 1;\n                        store.unique.push(fn);\n\n                        return store;\n                    }, { map: {}, unique: [] })\n                    .unique,\n    compose = fns => () => {\n        fns.forEach(fn => fn());\n    },\n    flat = (...params) => {\n        const res = [];\n        params.forEach(param => res.push(...param));\n        return res;\n    },\n    identityMap = arrays => arrays,\n    splitPathProp = (path) => {\n        const pathArr = path.split('.'),\n            len = pathArr.length;\n        return [pathArr.slice(0, len - 1), pathArr[len - 1]];\n    },\n    scheduler = (onFinishCallback) => {\n        let queue = [],\n            animationFrame = null;\n\n        onFinishCallback = onFinishCallback &&\n            typeof onFinishCallback === 'function' && onFinishCallback || (() => { });\n\n        return (listeners, payload) => {\n            [].push.apply(queue, listeners);\n            if (animationFrame === null) {\n                animationFrame = reqAnimFrame(() => {\n                    const tempQ = queue.slice(0);\n                    queue.length = 0;\n                    animationFrame = null;\n\n                    unique(tempQ).forEach(fn => fn());\n                    onFinishCallback(payload);\n                });\n            }\n        };\n    },\n    fetch = namedNode => (...params) => params.map((param) => {\n        const node = namedNode[param];\n        return {\n            name: node.name,\n            qualifiedName: node.qualifiedName,\n            value: node.seed\n        };\n    }),\n    fetchAggregator = (...params) => ({\n        dependencies: params.slice(0, params.length - 1),\n        fn: params[params.length - 1]\n    }),\n    getUpstreamNodes = (list) => {\n        let res = [];\n        const map = {};\n        list.forEach(node => map[node.qualifiedName] = -1);\n        function rec (arr) {\n            arr.forEach((node) => {\n                let qname,\n                    placedIndex,\n                    preArr,\n                    postArr;\n                if (!((qname = node.qualifiedName) in map)) {\n                    map[qname] = res.push(node) - 1;\n                } else {\n                    placedIndex = map[qname];\n                    if (placedIndex !== -1 && placedIndex !== res.length - 1) {\n                        // If not the last element, readjust the array so that the later dependency position is saved\n                        preArr = res.slice(0, placedIndex);\n                        postArr = res.slice(placedIndex + 1);\n                        res = preArr.concat(postArr);\n\n                        // reset the index in map\n                        postArr.forEach((elem, i) => map[elem.qualifiedName] = i + preArr.length);\n                        map[qname] = res.push(node) - 1;\n                    }\n                }\n                rec(node.outgoingEdges);\n            });\n        }\n        rec(list);\n        return res;\n    },\n    resolver = {\n        accumulate: (...params) => {\n            const resp = {};\n            params.forEach((nodeDetails) => {\n                Object.assign(resp, { [nodeDetails.name]: nodeDetails.value });\n            });\n            return resp;\n        },\n        identity: nodeDetails => nodeDetails.value\n    };\n\nfunction resolveDependencyOrder (node, resolved, resolveMap) {\n    let qname;\n    node.edges.forEach((neighbour) => {\n        resolveDependencyOrder(neighbour, resolved, resolveMap);\n    });\n\n    if (node.isRoot() || (qname = node.qualifiedName) in resolveMap) {\n        return;\n    }\n    resolved.push(node);\n    resolveMap[qname] = 1;\n}\n\nclass CustomResolver {\n    constructor (resolver) {\n        this.fn = resolver;\n        this.dep = [];\n    }\n\n    addDependencies(...dep) {\n        this.dep.push(...dep);\n        return this;\n    }\n\n    getDependencies () {\n        return this.dep;\n    }\n\n    get () {\n        return this.fn;\n    }\n}\n\nexport {\n    isSimpleObject,\n    scheduler,\n    compose,\n    flat,\n    identityMap,\n    pullableEnd,\n    pullableRecent,\n    unique,\n    splitPathProp,\n    resolver,\n    ForeignSet,\n    resolveDependencyOrder,\n    fetch,\n    fetchAggregator,\n    CustomResolver,\n    getUpstreamNodes\n};\n","const makeEntry = (arr, sCon) => {\n    arr.forEach((elem) => {\n        if (elem === undefined || elem === null) {\n            return;\n        }\n        sCon[elem] = 1;\n    });\n};\n\nexport default class ForeignSet {\n    constructor (arr) {\n        this._set = {};\n        makeEntry(arr, this._set);\n    }\n\n    append (arr) {\n        makeEntry(arr, this._set);\n        return this;\n    }\n\n    toArray () {\n        return Object.keys(this._set);\n    }\n\n    static difference (set1, set2) {\n        let key;\n        const filteredKeys = [],\n            s1 = set1._set,\n            s2 = set2._set;\n        for (key in s1) {\n            if (!({}).hasOwnProperty.call(s1, key)) {\n                continue;\n            }\n            if (key in s2) {\n                continue;\n            }\n            filteredKeys.push(key);\n        }\n        return new ForeignSet(filteredKeys);\n    }\n}\n","const Muze = require('./muze');\n\nmodule.exports = Muze.default ? Muze.default : Muze;\n","'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\nfunction ContainerManager(parentContainer, isBrowserLess, maxContainers) {\n    var svg;\n\n    maxContainers = maxContainers > 5 ? maxContainers : 5;\n    maxContainers = maxContainers < 20 ? maxContainers : 20;\n\n    this.maxContainers = maxContainers;\n    this.first = null;\n    this.last = null;\n    this.containers = {};\n    this.length = 0;\n    this.rootNode = parentContainer;\n\n    if (isBrowserLess) {\n        svg = doc.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'xlink', 'http://www.w3.org/1999/xlink');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'height', '0');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'width', '0');\n        this.svgRoot = svg;\n        this.rootNode.appendChild(svg);\n    }\n}\n\nContainerManager.prototype.get = function (style) {\n    var diff,\n        key,\n        containerObj,\n        containers = this.containers,\n        len = this.length,\n        max = this.maxContainers,\n        keyStr = '';\n\n    for (key in slLib.supportedStyle) {\n        if (style[key] !== undefined) {\n            keyStr += slLib.supportedStyle[key] + ':' + style[key] + ';';\n        }\n    }\n\n    if (!keyStr) {\n        return false;\n    }\n\n    if (containerObj = containers[keyStr]) {\n        if (this.first !== containerObj) {\n            containerObj.prev && (containerObj.prev.next = containerObj.next);\n            containerObj.next && (containerObj.next.prev = containerObj.prev);\n            containerObj.next = this.first;\n            containerObj.next.prev = containerObj;\n            this.last === containerObj && (this.last = containerObj.prev);\n            containerObj.prev = null;\n            this.first = containerObj;\n        }\n    } else {\n        if (len >= max) {\n            diff = len - max + 1;\n            // +1 is to remove an extra entry to make space for the new container to be added.\n            while (diff--) {\n                this.removeContainer(this.last);\n            }\n        }\n        containerObj = this.addContainer(keyStr);\n    }\n\n    return containerObj;\n};\n\nContainerManager.prototype.addContainer = function (keyStr) {\n    var node, container;\n\n    this.containers[keyStr] = container = {\n        next: null,\n        prev: null,\n        node: null,\n        ellipsesWidth: 0,\n        lineHeight: 0,\n        dotWidth: 0,\n        avgCharWidth: 4,\n        keyStr: keyStr,\n        charCache: {}\n    };\n\n    // Since the container objects are arranged from most recent to least recent order, we need to add the new\n    // object at the beginning of the list.\n    container.next = this.first;\n    container.next && (container.next.prev = container);\n    this.first = container;\n    if (!this.last) {\n        this.last = container;\n    }\n    this.length += 1;\n\n    node = container.node = doc.createElement('div');\n    this.rootNode.appendChild(node);\n\n    if (documentSupport.isIE && !documentSupport.hasSVG) {\n        node.style.setAttribute('cssText', keyStr);\n    } else {\n        node.setAttribute('style', keyStr);\n    }\n\n    node.setAttribute('aria-hidden', 'true');\n    node.setAttribute('role', 'presentation');\n    node.style.display = 'inline-block';\n\n    node.innerHTML = slLib.testStrAvg; // A test string.\n    container.lineHeight = node.offsetHeight;\n    container.avgCharWidth = node.offsetWidth / 3;\n\n    if (documentSupport.isBrowserLess) {\n        node = container.svgText = doc.createElementNS('http://www.w3.org/2000/svg', 'text');\n        node.setAttribute('style', keyStr);\n        this.svgRoot.appendChild(node);\n\n        node.textContent = slLib.testStrAvg; // A test string.\n        container.lineHeight = node.getBBox().height;\n        container.avgCharWidth = (node.getBBox().width - SVG_BBOX_CORRECTION) / 3;\n\n        node.textContent = '...';\n        container.ellipsesWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n        node.textContent = '.';\n        container.dotWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n    } else {\n        node.innerHTML = '...';\n        container.ellipsesWidth = node.offsetWidth;\n        node.innerHTML = '.';\n        container.dotWidth = node.offsetWidth;\n        node.innerHTML = '';\n    }\n\n    return container;\n};\n\nContainerManager.prototype.removeContainer = function (cObj) {\n    var keyStr = cObj.keyStr;\n\n    if (!keyStr || !this.length || !cObj) {\n        return;\n    }\n    this.length -= 1;\n\n    cObj.prev && (cObj.prev.next = cObj.next);\n    cObj.next && (cObj.next.prev = cObj.prev);\n    this.first === cObj && (this.first = cObj.next);\n    this.last === cObj && (this.last = cObj.prev);\n\n    cObj.node.parentNode.removeChild(cObj.node);\n\n    delete this.containers[keyStr];\n};\n\nContainerManager.prototype.dispose = function () {\n    var key,\n        containers = this.containers;\n\n    this.maxContainers = null;\n    for (key in containers) {\n        this.removeContainer(containers[key]);\n    }\n\n    this.rootNode.parentNode.removeChild(this.rootNode);\n\n    this.rootNode = null;\n    this.first = null;\n    this.last = null;\n};\n\nmodule.exports = ContainerManager;","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal(range) {\n  var index = map(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  scale.invertExtent = function(r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1, a, b, t,\n        hiIndex;\n    values.push(values[n] + this.step());\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo));\n    hiIndex = getClosestIndexOf(values, hi);\n    b = lo===hi ? a : Math.max(a, hiIndex - 1);\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    if (reverse) t = a, a = n - b, b = n - t; // map + swap\n    return (a > b) ? undefined : domain().slice(a, b+1);\n  };\n\n  scale.invert = function (r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1,\n        a,\n        t;\n\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo, 'left'));\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    return domain()[reverse ? n - a : a];\n  }\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band().paddingInner(1));\n}\n\nfunction getClosestIndexOf (arr, value, side) {\n  var low = 0,\n      arrLen = arr.length,\n      high = arrLen - 1,\n      highVal,\n      mid,\n      d1,\n      d2;\n\n  while (low < high) {\n      mid = Math.floor((low + high) / 2);\n      d1 = Math.abs(arr[mid] - value);\n      d2 = Math.abs(arr[mid + 1] - value);\n\n      if (d2 <= d1) {\n          low = mid + 1;\n      }\n      else {\n          high = mid;\n      }\n  }\n\n  if (!side) {\n      return high;\n  }\n\n  highVal = arr[high];\n  if (highVal === value) {\n      return high;\n  } else if (highVal > value) {\n      if (high === 0) { return high; }\n      return side === 'left'? high - 1 : high;\n  } else {\n      if (high === arr.length - 1) { return high; }\n      return side === 'left'? high : high + 1;\n  }\n}","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n","import {map} from \"./array\";\nimport {linearish} from \"./linear\";\nimport number from \"./number\";\n\nexport default function identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport constant from \"./constant\";\nimport nice from \"./nice\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport default function log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n","import constant from \"./constant\";\nimport {linearish} from \"./linear\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nexport default function pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nexport function sqrt() {\n  return pow().exponent(0.5);\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {linearish} from \"./linear\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(date - date.getMilliseconds());\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationSecond} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute, durationSecond} from \"./duration\";\n\nvar hour = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","import {bisector, tickStep} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n","export default function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n}\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"./colors\";\n\nexport default colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n","import colors from \"./colors\";\n\nexport default colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n}\n","import colors from \"./colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","import {linearish} from \"./linear\";\n\nexport default function sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import colors from \"../colors\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","import colors from \"../colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","export const UNIT_GLOBAL_NAMESPACE = 'app.units';\nexport const UNIT_LOCAL_NAMESPACE = 'local.units';\nexport const LAYER_LOCAL_NAMESPACE = 'local.layers';\nexport const LAYER_GLOBAL_NAMESPACE = 'app.layers';\nexport const GROUP_GLOBAL_NAMESPACE = 'app.group';\nexport const GROUP_LOCAL_NAMESPACE = 'local.group';\nexport const CANVAS_LOCAL_NAMESPACE = 'local.canvas';\nexport const CANVAS_GLOBAL_NAMESPACE = 'app.canvas';\n\n","const ReservedFields = {\n    ROW_ID: '__id__'\n};\n\nexport default ReservedFields;\n","const CommonProps = {\n    ACTION_INF: 'actionInf',\n    ON_LAYER_DRAW: 'onLayerDraw',\n    MATRIX_CREATED: 'matrixCreated'\n};\n\nexport default CommonProps;\n","export const COORD_TYPES = {\n    POLAR: 'polar',\n    CARTESIAN: 'cartesian'\n};\nexport const DATA_TYPE = {\n    FUNCTION: 'function',\n    STRING: 'string',\n    NUMBER: 'number',\n    BOOLEAN: 'Boolean'\n};\nexport const SORT_ORDER_ASCENDING = 'asc';\nexport const SORT_ORDER_DESCENDING = 'desc';\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return x;\n}\n","import {slice} from \"./array\";\nimport identity from \"./identity\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickTransform = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"))\n        .style('transform', tickTransform);\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.tickTransform = function(_) {\n    return arguments.length ? (tickTransform = _, axis) : tickTransform;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi) {\n          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport line from \"./line\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport line from \"./line\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n","export var slice = Array.prototype.slice;\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","export default function() {}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport offsetNone from \"./offset/none\";\nimport orderNone from \"./order/none\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function x(d) {\n  return d[0];\n}\n\nexport function y(d) {\n  return d[1];\n}\n","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n","import constant from \"./constant\";\nimport {x as pointX, y as pointY} from \"./point\";\nimport Diagram, {epsilon} from \"./Diagram\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n","import { defaultValue } from '../common-utils';\n\nconst sortSelection = (dataObjects, updateData, sortFn) =>\n    (a, b) => {\n        const kA = a[0];\n        const kB = b[0];\n        return sortFn([a[0], dataObjects.get(kA), updateData.get(kA)], [kB, dataObjects.get(kB), updateData.get(kB)]);\n    };\n\n/**\n * This class represents a selection applied on a data array.\n *\n * @class Selection\n */\nclass Selection {\n    /**\n     * Creates an instance of Selection.\n     * @param {Array<DataObject>} data Array of DataObjects.\n     * @memberof Selection\n     */\n    constructor (idGetter) {\n        this._dataObjects = new Map();\n        this._updateData = new Map();\n        this._enterData = new Map();\n        this._exitData = new Map();\n        this._idGetter = idGetter;\n    }\n\n    /**\n     * This method is used to supply seed data to a selection.\n     *\n     * @param {Array} newData Seed data to create the enter selection.\n     * @param {Functon | undefined } idGetter This function is used to uniqely identify a data entry.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    data (newData) {\n        const entryData = new Map();\n        const exitdata = new Map();\n        const tempMap = new Map();\n        const duplicateData = new Map();\n        const updatedData = this._updateData;\n        const idGetter = this._idGetter;\n\n        newData.forEach((...params) => {\n            const key = idGetter ? idGetter(...params) : params[1];\n            if (!tempMap.has(key)) {\n                tempMap.set(key, params[0]);\n            } else {\n                duplicateData.push(key, params[0]);\n            }\n        });\n\n        let val;\n        // prepare enter data\n        let entries = tempMap.entries();\n        while (val = entries.next().value) {\n            if (!updatedData.has(val[0])) {\n                entryData.set(val[0], val[1]);\n            } else {\n                updatedData.set(val[0], val[1]);\n            }\n        }\n        // prepare exit data\n        entries = updatedData.entries();\n        while (val = entries.next().value) {\n            if (!tempMap.has(val[0])) {\n                exitdata.set(val[0], val[1]);\n            }\n        }\n\n        // put duplicate data to exit list\n        entries = duplicateData.entries();\n        while (val = entries.next().value) {\n            exitdata.set(val[0], val[1]);\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updateData = updatedData;\n        newSelection._dataObjects = this._dataObjects;\n        newSelection._enterData = entryData;\n        newSelection._exitData = exitdata;\n\n        return newSelection;\n    }\n\n    /**\n     * Applies the supplied callback to each data element\n     * and returns a new selection.\n     *\n     * @param {Function} callback Callback to execute on each item.\n     * @return {Selection} New selection with data created using callback.\n     * @memberof Selection\n     */\n    append (callback) {\n        let val;\n        const dataObjects = new Map();\n        const data = new Map();\n        const mode = defaultValue(this._mode, 'update');\n        const currentData = this[`_${mode}Data`];\n        const entries = currentData.entries();\n\n        while (val = entries.next().value) {\n            dataObjects.set(val[0], callback(val[1]));\n            data.set(val[0], val[1]);\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updateData = data;\n        newSelection._dataObjects = dataObjects;\n\n        return newSelection;\n    }\n\n     /**\n     * This method returns an enter selection that\n     * allows or update operations.\n     *\n     * @return {Selection} Instance of enter selection.\n     * @memberof Selection\n     */\n    enter () {\n        this._mode = 'enter';\n        return this;\n    }\n\n    /**\n     * Returns a selection with exit data.\n     *\n     * @return {Selection} Instance of selection.\n     * @memberof Selection\n     */\n    exit () {\n        this._mode = 'exit';\n        return this;\n    }\n\n     /**\n     * This method merges the data of one selection with another.\n     *\n     * @param {Selection} selection Instance of selection.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    merge (target) {\n        const mergedObjects = new Map();\n        const mergedData = new Map();\n        let val;\n        let entries;\n\n        // merge Object and data present in this selection\n        entries = this._updateData.entries();\n        while (val = entries.next().value) {\n            if (!this._exitData.has(val[0])) {\n                mergedData.set(val[0], val[1]);\n                mergedObjects.set(val[0], this._dataObjects.get(val[0]));\n            }\n        }\n\n        // merge object from target selection\n        entries = target._updateData.entries();\n        while (val = entries.next().value) {\n            if (!(mergedData.has(val[0]) || target._exitData.has(val[0]))) {\n                mergedData.set(val[0], val[1]);\n                mergedObjects.set(val[0], target._dataObjects.get(val[0]));\n            }\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updateData = mergedData;\n        newSelection._dataObjects = mergedObjects;\n\n        return newSelection;\n    }\n\n    each (fn) {\n        let val;\n        const entries = this._dataObjects.entries();\n\n        while (val = entries.next().value) {\n            fn(val[1], this._updateData.get(val[0]), val[0]);\n        }\n    }\n\n    map (fn) {\n        const newdata = new Map();\n        let val;\n        const entries = this._dataObjects.entries();\n\n        while (val = entries.next().value) {\n            newdata.set(val[0], fn(val[1], this._updateData.get(val[0]), val[0]));\n        }\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updateData = this._updateData;\n        newSelection._dataObjects = newdata;\n\n        return newSelection;\n    }\n\n    remove () {\n        const mode = defaultValue(this._mode, 'update');\n        const currentData = this[`_${mode}Data`];\n\n        currentData.clear();\n\n        return this;\n    }\n\n    sort (sortFn) {\n        const updateData = this._updateData;\n        const dataObjects = this._dataObjects;\n        const sortSel = sortSelection(dataObjects, updateData, sortFn);\n\n        this._updateData = new Map([...updateData.entries()].sort(sortSel));\n        this._dataObjects = new Map([...dataObjects.entries()].sort(sortSel));\n        return this;\n    }\n\n    /**\n     *  Gets the object bound to a class\n     *\n     * @return {Object} current data set bound to the class\n     * @memberof Selection\n     */\n    getObjects () {\n        let val;\n        const objects = [];\n        const dataObjects = this._dataObjects;\n        // select the data to create object\n        const mode = defaultValue(this._mode, 'update');\n        const currentData = this[`_${mode}Data`];\n        const entries = currentData.entries();\n\n        while (val = entries.next().value) {\n            if (dataObjects.has(val[0])) {\n                objects.push(dataObjects.get(val[0]));\n            }\n        }\n\n        return objects;\n    }\n}\n\nexport default Selection;\n","export const ORDER_ASCENDING = 'ascending';\nexport const ORDER_DESCENDING = 'descending';\nexport const ORDER_NONE = 'none';\nexport const OFFSET_DIVERGING = 'diverging';\nexport const OFFSET_NONE = 'none';\nexport const OFFSET_EXPAND = 'expand';\nexport const OFFSET_WIGGLE = 'wiggle';\n","/* global window, requestAnimationFrame, cancelAnimationFrame */\nimport { FieldType, DimensionSubtype, DateTimeFormatter, DM_DERIVATIVES, default as DataModel } from 'datamodel';\nimport {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom\n} from 'd3-axis';\nimport {\n    symbolCircle,\n    symbolCross,\n    symbolDiamond,\n    symbolSquare,\n    symbolStar,\n    symbolWye,\n    symbolTriangle,\n    symbol,\n    stack as d3Stack,\n    stackOffsetDiverging,\n    stackOrderNone,\n    stackOrderAscending,\n    stackOrderDescending,\n    stackOffsetNone,\n    stackOffsetExpand,\n    stackOffsetWiggle,\n    pie,\n    arc,\n    line,\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    area\n} from 'd3-shape';\nimport { scaleBand } from 'd3-scale';\nimport { nest } from 'd3-collection';\nimport {\n    interpolate,\n    interpolateRgb,\n    piecewise,\n    interpolateNumber,\n    interpolateHslLong\n} from 'd3-interpolate';\nimport {\n    easeCubic,\n    easeBounce,\n    easePoly,\n    easeBack,\n    easeCircle,\n    easeLinear,\n    easeElastic\n} from 'd3-ease';\nimport {\n   color,\n   rgb,\n   hsl\n} from 'd3-color';\nimport { voronoi } from 'd3-voronoi';\nimport { dataSelect } from './DataSystem';\nimport { DATA_TYPE, SORT_ORDER_ASCENDING, SORT_ORDER_DESCENDING } from './enums';\nimport * as STACK_CONFIG from './enums/stack-config';\n\nconst { CATEGORICAL, TEMPORAL } = DimensionSubtype;\nconst { STRING, FUNCTION } = DATA_TYPE;\nconst { InvalidAwareTypes } = DataModel;\nconst HTMLElement = window.HTMLElement;\n\nconst isSimpleObject = (obj) => {\n    let token;\n    if (typeof obj === 'object') {\n        if (obj === null) { return false; }\n        token = Object.prototype.toString.call(obj);\n        if (token === '[object Object]') {\n            return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n        }\n    }\n    return false;\n};\n\n/**\n * Returns unique id\n * @return {string} Unique id string\n */\nconst\n    getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Deep copies an object and returns a new object.\n * @param {Object} o Object to clone\n * @return {Object} New Object.\n */\nconst clone = (o) => {\n    const output = {};\n    let v;\n    for (const key in o) {\n        if ({}.hasOwnProperty.call(o, key)) {\n            v = o[key];\n            output[key] = isSimpleObject(v) ? clone(v) : v;\n        }\n    }\n    return output;\n};\n\n/**\n* Checks the existence of keys in an object\n* @param {Array} keys Set of keys which are to be checked\n* @param {Object} obj whose keys are checked from the set of keys provided\n* @return {Object} Error if the keys are absent, or the object itself\n*/\nconst checkExistence = (keys, obj) => {\n    const nonExistentKeys = [];\n    keys.forEach((key) => {\n        if (key in obj) {\n            return;\n        }\n        nonExistentKeys.push(key);\n    });\n    return nonExistentKeys;\n};\n\nconst sanitizeIP = {\n    typeObj: (keys, obj) => {\n        if (typeof obj !== 'object') {\n            return Error('Argument type object expected');\n        }\n\n        const nonExistentKeys = checkExistence(keys, obj);\n        if (nonExistentKeys.length) {\n            return Error(`Missing keys from parameter ${nonExistentKeys.join(', ')}`);\n        }\n        return obj;\n    },\n\n    /* istanbul ignore next */ htmlElem: (elem) => {\n        if (!(elem instanceof HTMLElement)) {\n            return Error('HTMLElement required');\n        }\n        return elem;\n    }\n};\n\n/**\n * Gets the maximum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Maximum value\n */\nconst getMax = (data, field) => Math.max(...data.map(d => d[field]));\n\n/**\n * Gets the minimum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Minimum value\n */\nconst getMin = (data, field) => Math.min(...data.map(d => d[field]));\n\n/**\n * Gets the domain from the data based on the field name and type of field\n * @param  {Array.<Object> | Array.<Array>} data       Data Array\n * @param  {Array.<string>} fields    Array of fields from where the domain will be calculated\n * @param {string} fieldType Type of field - nominal, quantitiative, temporal.\n * @return {Array} Usually contains a min and max value if field is quantitative or\n * an array of values if field type is nominal or ordinal\n */\nconst getDomainFromData = (data, fields, fieldType) => {\n    let domain;\n    const domArr = [];\n    data = data[0] instanceof Array ? data : [data];\n    switch (fieldType) {\n    case CATEGORICAL:\n        domain = [].concat(...data.map(arr => arr.map(d => d[fields[0]]).filter(d => d !== undefined)));\n        break;\n    default:\n        for (let i = 0, len = data.length; i < len; i++) {\n            const arr = data[i];\n            const [field0, field1] = fields;\n            const arr0 = arr.filter(d => !isNaN(d[field0]));\n            const arr1 = arr.filter(d => !isNaN(d[field1]));\n            if (arr0.length || arr1.length) {\n                const firstMin = getMin(arr0, field0);\n                const secondMin = getMin(arr1, field1);\n                const firstMax = getMax(arr0, field0);\n                const secondMax = getMax(arr1, field1);\n                domArr.push([Math.min(firstMin, secondMin), Math.max(firstMax, secondMax)]);\n            }\n        }\n        domain = domArr.length ? [Math.min(...domArr.map(d => d[0])), Math.max(...domArr.map(d => d[1]))] : [];\n        break;\n    }\n    return domain;\n};\n\nconst sanitizeDomainWhenEqual = (domain) => {\n    if (domain[0] === domain[1]) {\n        domain[0] = domain[0] > 0 ? 0 : domain[0];\n        domain[1] = domain[1] > 0 ? domain[1] : 0;\n    }\n    return domain;\n};\n\n/**\n * Union Domain values\n * @param {Array.<Array>} domains Array of domain values\n * @param {string} fieldType type of field - dimension,measure or datetime.\n * @return {Array} Unioned domain of all domain values.\n */\nconst unionDomain = (domains, fieldType) => {\n    let domain = [];\n    domains = domains.filter(dom => dom && dom.length);\n    if (domains.length) {\n        if (fieldType === CATEGORICAL) {\n            domain = [].concat(...domains);\n        } else {\n            domain = [Math.min(...domains.map(d => d[0])), Math.max(...domains.map(d => d[1]))];\n        }\n    }\n\n    return domain;\n};\n\nconst symbolFns = {\n    circle: symbolCircle,\n    cross: symbolCross,\n    diamond: symbolDiamond,\n    square: symbolSquare,\n    star: symbolStar,\n    wye: symbolWye,\n    triangle: symbolTriangle\n};\n\nconst easeFns = {\n    cubic: easeCubic,\n    bounce: easeBounce,\n    linear: easeLinear,\n    elastic: easeElastic,\n    back: easeBack,\n    poly: easePoly,\n    circle: easeCircle\n};\n\n/**\n * Returns the maximum or minimum points of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @param {string} minOrMax minimum or maximum.\n * @return {Object} Minimum or maximum point.\n */\nconst getExtremePoint = (points, compareValue, minOrMax) => {\n    let extremePoint;\n    let point;\n    const len = points.length;\n    let minOrMaxVal = minOrMax === 'max' ? -Infinity : Infinity;\n    let val;\n\n    for (let i = 0; i < len; i++) {\n        point = points[i];\n        val = point[compareValue];\n        if (minOrMax === 'min' ? val < minOrMaxVal : val > minOrMaxVal) {\n            minOrMaxVal = val;\n            extremePoint = point;\n        }\n    }\n\n    return extremePoint;\n};\n\n/**\n * Returns the minimum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Minimum point.\n */\nconst getMinPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'min');\n\n/**\n * Returns the maximum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Maximum point.\n */\nconst getMaxPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'max');\n\n/**\n * Gets the index of the closest value of the given value from the array.\n * @param {Array} arr Array of values\n * @param {number} value Value from which the nearest value will be calculated.\n * @param {string} side side property.\n * @return {number} index of the closest value\n */\n/* istanbul ignore next */const getClosestIndexOf = (arr, value, side) => {\n    let low = 0;\n    const arrLen = arr.length;\n    let high = arrLen - 1;\n\n    let mid;\n    let d1;\n    let d2;\n\n    while (low < high) {\n        mid = Math.floor((low + high) / 2);\n        d1 = Math.abs(arr[mid] - value);\n        d2 = Math.abs(arr[mid + 1] - value);\n\n        if (d2 <= d1) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n\n    if (!side) {\n        return high;\n    }\n\n    const highVal = arr[high];\n    if (highVal === value) {\n        return high;\n    } else if (highVal > value) {\n        if (high === 0) { return high; }\n        return side === 'left' ? high - 1 : high;\n    }\n    if (high === arr.length - 1) { return high; }\n    return side === 'left' ? high : high + 1;\n};\n\nconst getNearestValue = (data, key) => {\n    const filterData = data.filter(d => typeof d === 'number');\n    return filterData[getClosestIndexOf(filterData, key)];\n};\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst getWindow = () => window;\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst reqAnimFrame = (() => requestAnimationFrame)();\n\nconst cancelAnimFrame = (() => cancelAnimationFrame)();\n\n/**\n * Capitalizes the first letter of the word\n * @param {string} text word\n * @return {string} Capitalized word\n */\nconst capitalizeFirst = (text) => {\n    text = text.toLowerCase();\n\n    return text.replace(/\\w\\S*/g, txt => txt.charAt(0).toUpperCase() + txt.substr(1));\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst unique = arr => ([...new Set(arr)]);\n\n/**\n * Gets the minimum difference between two consecutive numbers  in an array.\n * @param {Array} arr Array of numbers\n * @param {number} index index of the value\n * @return {number} minimum difference between values\n */\n/* istanbul ignore next */ const getMinDiff = (arr, index) => {\n    let diff;\n    let uniqueVals;\n    if (index !== undefined) {\n        uniqueVals = unique(arr.map(d => d[index]));\n    } else {\n        uniqueVals = unique(arr);\n    }\n    if (uniqueVals.length > 1) {\n        diff = Math.abs(uniqueVals[1] - uniqueVals[0]);\n        for (let i = 2, len = uniqueVals.length; i < len; i++) {\n            diff = Math.min(diff, Math.abs(uniqueVals[i] - uniqueVals[i - 1]));\n        }\n    } else {\n        diff = uniqueVals[0];\n    }\n\n    return diff;\n};\n\n/**\n * Returns the class name appended with a given id.\n * @param {string} cls class name\n * @param {string} id unique identifier\n * @param {string} prefix string needed to add before the classname\n * @return {string} qualified class name\n */\n/* istanbul ignore next */const getQualifiedClassName = (cls, id, prefix) => {\n    cls = cls.replace(/^\\.*/, '');\n    return [`${prefix}-${cls}`, `${prefix}-${cls}-${id}`];\n};\n\n/**\n * This method is used to set the default value for variables\n * without sullying the code with conditional statements.\n *\n * @export\n * @param {any} param The parameter to test.\n * @param {any} value The default value to assign.\n * @return {any} The value.\n */\n/* istanbul ignore next */ const defaultValue = (param, value) => {\n    if (typeof param === 'undefined' || (typeof param === 'object' && !param)) {\n        return value;\n    }\n    return param;\n};\n\n/**\n * DESCRIPTION TODO\n *\n * @export\n * @param {Object} graph graph whose dependency order has to be generated\n * @return {Object}\n */\nconst getDependencyOrder = (graph) => {\n    const dependencyOrder = [];\n    const visited = {};\n    const keys = Object.keys(graph);\n    /**\n     * DESCRIPTION TODO\n     *\n     * @export\n     * @param {Object} name\n     * @return {Object}\n     */\n    const visit = (name) => {\n        if (dependencyOrder.length === keys.length) {\n            return true;\n        }\n        visited[name] = true;\n        const edges = graph[name];\n        for (let e = 0; e < edges.length; e++) {\n            const dep = edges[e];\n            if (!visited[dep]) {\n                visit(dep);\n            }\n        }\n\n        dependencyOrder.push(name);\n        return false;\n    };\n\n    for (let i = 0; i < keys.length; i++) {\n        if (visit(keys[i], i)) break;\n    }\n\n    return dependencyOrder;\n};\n\n/**\n * Iterates over the properties of an object and applies the function\n *\n * @param {any} obj object to be iterated upon\n * @param {any} fn  function to be applied on it\n */\nconst objectIterator = (obj, fn) => {\n    for (const key in obj) {\n        if (Object.hasOwnProperty.call(obj, key)) {\n            fn(key, obj);\n        }\n    }\n};\n\n/**\n * This class creates a d3 voronoi for retrieving the nearest neighbour of any point from a set of two\n * dimensional points\n * @class Voronoi\n */\n/* istanbul ignore next */ class Voronoi {\n    /**\n     * Initialize the voronoi with the data given.\n     * @param {Array.<Object>} data Array of points.\n     */\n    constructor (data = []) {\n        this._voronoi = voronoi().x(d => d.x).y(d => d.y);\n        this.data(data);\n    }\n\n    /**\n     * Sets the data to voronoi\n     * @param {Array.<Object>} data Array of objects.\n     * @return {Voronoi} Instance of voronoi.\n     */\n    data (data) {\n        if (data) {\n            this._voronoiFn = this._voronoi(data);\n        }\n        return this;\n    }\n\n    /**\n     * Finds the closest point to the x and y position given.\n     * @param {number} x x value\n     * @param {number} y y value\n     * @param {number} radius search radius.\n     * @return {Object} Details of the nearest point.\n     */\n    find (x, y, radius) {\n        return this._voronoiFn.find(x, y, radius);\n    }\n}\n\nconst getObjProp = (obj, ...fields) => {\n    if (obj === undefined || obj === null) {\n        return obj;\n    }\n    let retObj = obj;\n    for (let i = 0, len = fields.length; i < len; i++) {\n        retObj = retObj[fields[i]];\n        if (retObj === undefined || retObj === null) {\n            break;\n        }\n    }\n    return retObj;\n};\n\n/**\n * Sanitize an input number / string mixed number. Currently dot in the no is not supported.\n *\n * @param {number | string} val pure number or string mixed number\n * @return {number | null}  Number if it can be extracted. Otherwise null\n */\nconst intSanitizer = (val) => {\n    const arr = val.toString().match(/(\\d+)(px)*/g);\n    if (!arr) {\n        // If only characters are passed\n        return null;\n    }\n\n    return parseInt(arr[0], 10);\n};\n\nconst generateGetterSetters = (context, props) => {\n    Object.entries(props).forEach((propInfo) => {\n        const prop = propInfo[0];\n        const { sanitization, preset, onset, typeChecker, defaultValue: defVal } = propInfo[1];\n        const prototype = context.constructor.prototype;\n        if (!(Object.hasOwnProperty.call(prototype, prop))) {\n            if (defVal) {\n                context[`_${prop}`] = defVal;\n            }\n            context[prop] = (...params) => {\n                if (params.length) {\n                    let value = params[0];\n                    if (sanitization) {\n                        value = sanitization(context, params[0], context[`_${prop}`]);\n                    }\n                    if (preset) {\n                        preset(context, value);\n                    }\n                    if (typeChecker && !typeChecker(value)) {\n                        return context[`_${prop}`];\n                    }\n                    context[`_${prop}`] = value;\n                    if (onset) {\n                        onset(context, value);\n                    }\n                    return context;\n                } return context[`_${prop}`];\n            };\n        }\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} prop\n */\nconst getArraySum = (arr, prop) => arr.reduce((total, elem) => {\n    total += prop ? elem[prop] : elem;\n    return total;\n}, 0);\n\n/**\n *\n *\n * @param {*} arr1\n * @param {*} arr2\n *\n */\nconst arraysEqual = (arr1, arr2) => {\n    if (arr1.length !== arr2.length) { return false; }\n    for (let i = arr1.length; i >= 0; i--) {\n        if (arr1[i] !== arr2[i]) { return false; }\n    }\n\n    return true;\n};\n\n/* eslint valid-typeof:0 */\n/**\n * Returns a validation function which can be used to validate variables against a type and value\n *\n * @param {any} type type of value that the object should have\n * @return {Object} validation function\n */\nconst isEqual = type => (oldVal, newVal) => {\n    if (type === 'Array') {\n        if (!oldVal) {\n            return false;\n        }\n        return arraysEqual(oldVal, newVal);\n    } else if (type === 'Object') {\n        return Object.is(oldVal, newVal);\n    } return oldVal === newVal;\n};\n\n/**\n * Description @todo\n *\n * @param {any} transactionModel @todo\n * @param {any} transactionEndpoint @todo\n * @param {any} transactionItems @todo\n * @return {any} @todo\n */\nconst enableChainedTransaction = (transactionModel, transactionEndpoint, transactionItems) =>\n    transactionItems.forEach(item => transactionModel\n        .registerImmediateListener(item, ([, newVal]) => transactionEndpoint[item](newVal)));\n\n/**\n * Chceks if the element is istanceof HTMLElement\n *\n * @param {Object} elem any JS Object\n */\nconst isHTMLElem = elem => elem instanceof HTMLElement;\n\nconst ERROR_MSG = {\n    INTERFACE_IMPL: 'Method not implemented'\n};\n\n/**\n * Merges the sink object in the source by recursively iterating through the object properties\n * @param {Object} source Source Object\n * @param {Object} sink Sink Object\n * @return {Object} Merged object\n */\nconst mergeRecursive = (source, sink) => {\n    for (const prop in sink) {\n        if (isSimpleObject(source[prop]) && isSimpleObject(sink[prop])) {\n            mergeRecursive(source[prop], sink[prop]);\n        } else if (sink[prop] instanceof Object && sink[prop].constructor === Object) {\n            source[prop] = {};\n            mergeRecursive(source[prop], sink[prop]);\n        } else {\n            source[prop] = sink[prop];\n        }\n    }\n    return source;\n};\n\n/**\n * Creates a selection set from a data set with corresponding attributes\n *\n * @export\n * @param {Selection} sel contains previous selection\n * @param {Object} appendObj Object to be appended\n * @param {Array} data Data based on which the selection is entered/updated/removed\n * @param {Object} [attrs={}] Attributes to be set on the data\n * @return {Selection} Merged selection\n */\nconst createSelection = (sel, appendObj, data, idFn) => {\n    let selection = sel || dataSelect(idFn);\n\n    selection = selection.data(data);\n\n    const enter = selection.enter().append(appendObj);\n    const mergedSelection = enter.merge(selection);\n\n    const exitSelection = selection.exit();\n    exitSelection.getObjects().forEach(inst => inst.remove());\n    exitSelection.remove();\n    return mergedSelection;\n};\n\nconst interpolateArray = (data, fitCount) => {\n    const linearInterpolate = function (before, after, atPoint) {\n        return before + (after - before) * atPoint;\n    };\n    const newData = [];\n    const springFactor = ((data.length - 1) / (fitCount - 1));\n    newData[0] = data[0]; // for new allocation\n    for (let i = 1; i < fitCount - 1; i++) {\n        const tmp = i * springFactor;\n        const before = (Math.floor(tmp)).toFixed();\n        const after = (Math.ceil(tmp)).toFixed();\n        const atPoint = tmp - before;\n        newData[i] = linearInterpolate(data[before], data[after], atPoint);\n    }\n    newData[fitCount - 1] = data[data.length - 1]; // for new allocation\n    return newData;\n};\n\n/**\n *\n *\n * @param {*} fn\n */\nconst nextFrame = (fn) => {\n    setTimeout(() => {\n        fn();\n    }, 0);\n};\n\n/**\n *\n *\n * @param {*} angle\n */\nconst angleToRadian = angle => angle * Math.PI / 180;\n\n/**\n *\n *\n * @param {*} newName\n * @param {*} oldName\n */\nconst replaceCSSPrefix = () => {\n    // @todo\n};\n\n/**\n * Gets the  interpolator function from d3 color\n *\n */\nconst interpolator = () => interpolate;\n\n/**\n * Gets the number interpolator from d3 color\n *\n */\nconst numberInterpolator = () => interpolateNumber;\n\n/**\n * Gets the rgb interpolator from d3 color\n *\n */\nconst colorInterpolator = () => interpolateRgb;\n\n/**\n * Gets the hsl interpolator from d3 color\n *\n */\nconst hslInterpolator = () => interpolateHslLong;\n\nconst transformColors = () => ({\n    color,\n    rgb,\n    hsl\n});\n\n/**\n * Gets the piecewise interpolator from d3 color\n *\n */\nconst piecewiseInterpolator = () => piecewise;\n\nfunction hue2rgb (p, q, t) {\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\n    if (t < 1 / 2) return q;\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n\n  /**\n   * Converts an HSL color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n   * Assumes h, s, and l are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  l       The lightness\n   * @return  Array           The RGB representation\n   */\nconst hslToRgb = (h, s, l, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    if (s === 0) {\n        r = g = b = l; // achromatic\n    } else {\n        const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        const p = 2 * l - q;\n\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\n  /**\n   * Converts an RGB color value to HSV. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes r, g, and b are contained in the set [0, 255] and\n   * returns h, s, and v in the set [0, 1].\n   *\n   * @param   Number  r       The red color value\n   * @param   Number  g       The green color value\n   * @param   Number  b       The blue color value\n   * @return  Array           The HSV representation\n   */\nconst rgbToHsv = (r, g, b, a = 1) => {\n    r = +r; g = +g; b = +b; a = +a;\n    r /= 255; g /= 255; b /= 255;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    let h;\n    let s;\n    const l = (max + min) / 2;\n\n    if (max === min) {\n        h = s = 0; // achromatic\n    } else {\n        const d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n        case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n        case g: h = (b - r) / d + 2; break;\n        case b: h = (r - g) / d + 4; break;\n        default: break;\n        }\n        h /= 6;\n    }\n    return [h, s, l, a];\n};\n\n  /**\n   * Converts an HSV color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes h, s, and v are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  v       The value\n   * @return  Array           The RGB representation\n   */\nconst hsvToRgb = (h, s, v, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    const i = Math.floor(h * 6);\n    const f = h * 6 - i;\n    const p = v * (1 - s);\n    const q = v * (1 - f * s);\n    const t = v * (1 - (1 - f) * s);\n\n    switch (i % 6) {\n    case 0: r = v; g = t; b = p; break;\n    case 1: r = q; g = v; b = p; break;\n    case 2: r = p; g = v; b = t; break;\n    case 3: r = p; g = q; b = v; break;\n    case 4: r = t; g = p; b = v; break;\n    case 5: r = v; g = p; b = q; break;\n    default: break;\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\nconst hexToHsv = (hex) => {\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n    hex = hex.replace(shorthandRegex, (m, r, g, b) => r + r + g + g + b + b);\n\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? rgbToHsv(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) : '';\n};\n\nconst detectColor = (col) => {\n    const matchRgb = /rgb\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3})\\)/;\n    const matchHsl = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g;\n\n    // Source :  https://gist.github.com/sethlopezme/d072b945969a3cc2cc11\n     // eslint-disable-next-line\n    const matchRgba = /rgba?\\(((25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,\\s*?){2}(25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,?\\s*([01]\\.?\\d*?)?\\)/;\n     // eslint-disable-next-line\n    const matchHsla = /^hsla\\((\\d.+),\\s*([\\d.]+)%,\\s*([\\d.]+)%,\\s*(\\d*(?:\\.\\d+)?)\\)$/;\n    const matchHex = /^#([0-9a-f]{3}){1,2}$/i;\n\n    if (matchRgb.test(col) || matchRgba.test(col)) {\n        return 'rgb';\n    } else if (matchHsl.test(col) || matchHsla.test(col)) {\n        return 'hsl';\n    } else if (matchHex.test(col)) {\n        return 'hex';\n    } return col;\n};\n\nconst assembleModelFromIdentifiers = (model, identifiers) => {\n    let schema = [];\n    let data;\n    const fieldMap = model.getFieldsConfig();\n    if (identifiers.length) {\n        const fields = identifiers[0];\n        const len = fields.length;\n        for (let i = 0; i < len; i++) {\n            const field = fields[i];\n            const fieldObj = fieldMap[field] && Object.assign({}, fieldMap[field].def);\n            if (fieldObj) {\n                schema.push(Object.assign(fieldObj));\n            }\n        }\n\n        data = [];\n        const header = identifiers[0];\n        for (let i = 1; i < identifiers.length; i += 1) {\n            const vals = identifiers[i];\n            const temp = {};\n            vals.forEach((fieldVal, cIdx) => {\n                temp[header[cIdx]] = fieldVal;\n            });\n            data.push(temp);\n        }\n    } else {\n        data = [];\n        schema = [];\n    }\n\n    return new model.constructor(data, schema);\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} criteria\n *\n */\nconst getDataModelFromRange = (dataModel, criteria, mode) => {\n    if (criteria === null) {\n        return null;\n    }\n    const selFields = Object.keys(criteria);\n    const selFn = fields => selFields.every((field) => {\n        const val = fields[field].value;\n        const range = criteria[field][0] instanceof Array ? criteria[field][0] : criteria[field];\n        if (typeof range[0] === STRING) {\n            return range.find(d => d === val) !== undefined;\n        }\n        return range ? val >= range[0] && val <= range[1] : true;\n    });\n\n    return dataModel.select(selFn, {\n        saveChild: false,\n        mode\n    });\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} identifiers\n *\n */\nconst getDataModelFromIdentifiers = (dataModel, identifiers, mode) => {\n    let filteredDataModel;\n    if (identifiers instanceof Array) {\n        const fieldsConfig = dataModel.getFieldsConfig();\n\n        const dataArr = identifiers.slice(1, identifiers.length);\n        if (identifiers instanceof Function) {\n            filteredDataModel = identifiers(dataModel, {}, false);\n        } else if (identifiers instanceof Array && identifiers[0].length) {\n            const filteredSchema = identifiers[0].filter(d => d in fieldsConfig);\n            filteredDataModel = dataModel.select((fields) => {\n                let include = true;\n                filteredSchema.forEach((propField, idx) => {\n                    const value = fields[propField].valueOf();\n                    const index = dataArr.findIndex(d => d[idx] === value);\n                    include = include && index !== -1;\n                });\n                return include;\n            }, {\n                saveChild: false,\n                mode\n            });\n        } else {\n            filteredDataModel = dataModel.select(() => false, {\n                saveChild: false,\n                mode\n            });\n        }\n    } else {\n        filteredDataModel = getDataModelFromRange(dataModel, identifiers, mode);\n    }\n    return filteredDataModel;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} listenerMap\n */\nconst registerListeners = (context, listenerMap, ...params) => {\n    const propListenerMap = listenerMap(context, ...params);\n    for (const key in propListenerMap) {\n        if ({}.hasOwnProperty.call(propListenerMap, key)) {\n            const { namespace } = params[1];\n            let ns = null;\n            if (namespace) {\n                ns = namespace;\n            }\n            const mapObj = propListenerMap[key];\n            const propType = mapObj.type;\n            const props = mapObj.props;\n            const listenerFn = mapObj.listener;\n            context.store()[propType](props, listenerFn, false, {\n                namespace: ns\n            });\n        }\n    }\n};\n\nconst isValidValue = value => !isNaN(value) && value !== -Infinity && value !== Infinity;\n/**\n *\n *\n * @param {*} str\n *\n */\nconst escapeHTML = (str) => {\n    const htmlEscapes = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#x27;',\n        '/': '&#x2F;'\n    };\n    const htmlEscaper = /[&<>\"'/]/g;\n    return (`${str}`).replace(htmlEscaper, match => htmlEscapes[match]);\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst transposeArray = arr => arr[0].map((col, i) => arr.map(row => row[i]));\nconst toArray = arr => (arr instanceof Array ? arr : [arr]);\nconst extendsClass = (cls, extendsFrom, found) => {\n    if (!cls) {\n        return false;\n    }\n    const prototype = cls.prototype;\n    if (prototype instanceof extendsFrom) {\n        found = true;\n    } else {\n        found = extendsClass(prototype, extendsFrom, found);\n    }\n    return found;\n};\n\n/**\n *\n * @param {*} dm1\n * @param {*} dm2\n */\nconst concatModels = (dm1, dm2) => {\n    const dataObj1 = dm1.getData();\n    const dataObj2 = dm2.getData();\n    const data1 = dataObj1.data;\n    const data2 = dataObj2.data;\n    const schema1 = dataObj1.schema;\n    const schema2 = dataObj2.schema;\n    const tuples1 = {};\n    const tuples2 = {};\n    const commonTuples = {};\n    for (let i = 0; i < data1.length; i++) {\n        for (let ii = 0; ii < data2.length; ii++) {\n            const row1 = data1[i];\n            const row2 = data2[ii];\n            const dim1Values = row1.filter((d, idx) => schema1[idx].type === FieldType.DIMENSION);\n            const dim2Values = row2.filter((d, idx) => schema2[idx].type === FieldType.DIMENSION);\n            const allDimSame = dim1Values.every(value => dim2Values.indexOf(value) !== -1);\n            if (allDimSame) {\n                const key = dim1Values.join();\n                !commonTuples[key] && (commonTuples[key] = {});\n                row1.forEach((value, idx) => {\n                    commonTuples[key][schema1[idx].name] = value;\n                });\n                row2.forEach((value, idx) => {\n                    commonTuples[key][schema2[idx].name] = value;\n                });\n            } else {\n                const dm1Key = dim1Values.join();\n                const dm2Key = dim2Values.join();\n                if (!commonTuples[dm1Key] && !commonTuples[dm2Key]) {\n                    !tuples1[dm1Key] && (tuples1[dm1Key] = {});\n                    !tuples2[dm2Key] && (tuples2[dm2Key] = {});\n                    row1.forEach((value, idx) => {\n                        tuples1[dm1Key][schema1[idx].name] = value;\n                    });\n                    row2.forEach((value, idx) => {\n                        tuples2[dm2Key][schema2[idx].name] = value;\n                    });\n                }\n            }\n        }\n    }\n\n    const commonSchema = [...schema1, ...schema2.filter(s2 => schema1.findIndex(s1 => s1.name === s2.name) === -1)];\n    const data = [...Object.values(tuples1), ...Object.values(tuples2), ...Object.values(commonTuples)];\n    return [data, commonSchema];\n};\n\nconst getSymbol = type => symbol().type(symbolFns[type]);\n\nconst stackOrders = {\n    [STACK_CONFIG.ORDER_NONE]: stackOrderNone,\n    [STACK_CONFIG.ORDER_ASCENDING]: stackOrderAscending,\n    [STACK_CONFIG.ORDER_DESCENDING]: stackOrderDescending\n};\nconst stackOffsets = {\n    [STACK_CONFIG.OFFSET_DIVERGING]: stackOffsetDiverging,\n    [STACK_CONFIG.OFFSET_NONE]: stackOffsetNone,\n    [STACK_CONFIG.OFFSET_EXPAND]: stackOffsetExpand,\n    [STACK_CONFIG.OFFSET_WIGGLE]: stackOffsetWiggle\n};\n\n// eslint-disable-next-line require-jsdoc\nconst stack = params => d3Stack().keys(params.keys).offset(stackOffsets[params.offset])\n                .order(stackOrders[params.order])(params.data);\n\n/**\n * Groups the data into a hierarchical tree structure based on one or more fields.\n * @param { Object } params Configuration properties for nesting data\n * @param { Array.<Array> } params.data Data which needs to be grouped\n * @param { Array.<number> } params.keys Field indices by which the data will be grouped\n * @return { Array.<Object> } Grouped data array\n */\nconst nestCollection = (params) => {\n    const nestFn = nest();\n    params.keys.forEach(key => nestFn.key(d => d[key]));\n    return nestFn.entries(params.data);\n};\n\nconst pathInterpolators = {\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    stepAfter: curveStepAfter,\n    catmullRom: curveCatmullRom,\n    step: curveStep,\n    stepBefore: curveStepBefore,\n    linear: curveLinear\n};\n\nconst Symbols = {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom,\n    line,\n    area,\n    pie,\n    arc,\n    nest\n};\n\nconst Scales = {\n    band: scaleBand\n};\n\nconst getSmallestDiff = (points) => {\n    points = points.sort((a, b) => a - b);\n    let minDiff = points[1] - points[0];\n    for (let i = 2; i < points.length; i++) {\n        minDiff = Math.min(minDiff, points[i] - points[i - 1]);\n    }\n\n    return minDiff;\n};\n\nconst timeFormats = {\n    millisecond: '%A, %b %e, %H:%M:%S.%L',\n    second: '%A, %b %e, %H:%M:%S',\n    minute: '%A, %b %e, %H:%M',\n    hour: '%A, %b %e, %H:%M',\n    day: '%A, %b %e, %Y',\n    month: '%B %Y',\n    year: '%Y'\n};\n\nconst timeDurations = [\n    ['millisecond', 'second', 'minute', 'hour', 'day', 'month', 'year'],\n    [1, 1000, 60000, 3600000, 86400000, 2592000000, 31536000000]\n];\n\nconst getNearestInterval = (interval) => {\n    const index = getClosestIndexOf(timeDurations[1], interval);\n    return timeDurations[0][index];\n};\n\nconst formatTemporal = (value, interval) => {\n    const nearestInterval = getNearestInterval(interval);\n    return DateTimeFormatter.formatAs(value, timeFormats[nearestInterval]);\n};\n\nconst temporalFields = (dataModel) => {\n    const filteredFields = {};\n    Object.entries(dataModel.getFieldspace().getDimension()).forEach(([fieldName, fieldObj]) => {\n        if (fieldObj.subtype() === TEMPORAL) {\n            filteredFields[fieldName] = fieldObj;\n        }\n    });\n    return filteredFields;\n};\n\nconst require = (lookupWhat, lookupDetails) => ({\n    resolvable: (store) => {\n        const lookupTarget = store[lookupWhat];\n        const depArr = lookupDetails.slice(0, lookupDetails.length - 1);\n        const fn = lookupDetails[lookupDetails.length - 1]; // fn\n\n        const deps = depArr.map(str => lookupTarget[str]);\n        return {\n            fn: fn(...deps),\n            depArr\n        };\n    }\n});\n\nconst nextAnimFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame ||\n    function (callback) {\n        setTimeout(callback, 16);\n    };\n\nconst getValueParser = config => (val) => {\n    if (val instanceof InvalidAwareTypes) {\n        return val in config ? config[val] : `${val}`;\n    }\n    return val;\n};\n\nconst retrieveNearestGroupByReducers = (dataModel, ...measureFieldNames) => {\n    const filteredReducers = {};\n    if (dataModel instanceof DataModel) {\n        const derivations = [...dataModel.getDerivations().reverse(), ...dataModel.getAncestorDerivations().reverse()];\n        const nearestReducers = defaultValue(\n            getObjProp(derivations.find(derv => derv.op === DM_DERIVATIVES.GROUPBY), 'criteria'), {});\n\n        const measures = dataModel.getFieldspace().getMeasure();\n        measureFieldNames = measureFieldNames.length ? measureFieldNames : Object.keys(measures);\n        measureFieldNames.forEach((measureName) => {\n            if (nearestReducers[measureName]) {\n                filteredReducers[measureName] = nearestReducers[measureName];\n            } else {\n                const measureField = measures[measureName];\n                if (measureField) {\n                    filteredReducers[measureName] = measureField.defAggFn();\n                }\n            }\n        });\n    }\n    return filteredReducers;\n};\n\nconst retrieveFieldDisplayName = (dm, fieldName) => dm.getFieldspace().fieldsObj()[fieldName].displayName();\n/**\n * Fetches the nearest sort operation details by traversing the chain of parent DataModels\n * @param {Object} dataModel Instance of DataModel\n *\n * @return {Array|null} sort criteria, null if no sort operation found\n */\nconst nearestSortingDetails = (dataModel) => {\n    const allDerivations = [...dataModel.getAncestorDerivations(), ...dataModel.getDerivations()];\n    const nearestSortDerivation = allDerivations.reverse().find(derivation => derivation.op === DM_DERIVATIVES.SORT);\n\n    return nearestSortDerivation ? nearestSortDerivation.criteria : null;\n};\n\n/**\n * Sort categorical field based on it's sorting order\n * @param {string} sortOrder Order by which field is to be sorted (asc or desc or func)\n * @param {string} firstVal First sort parameter\n * @param {string} secondVal Second sort parameter\n * @return {number} position\n*/\nconst sortCategoricalField = (sortOrder, firstVal, secondVal) => {\n    const sortOrderType = typeof sortOrder;\n\n    switch (sortOrderType) {\n    case FUNCTION:\n        return sortOrder(firstVal, secondVal);\n    case SORT_ORDER_ASCENDING:\n        return firstVal.localeCompare(secondVal);\n    case SORT_ORDER_DESCENDING:\n        return secondVal.localeCompare(firstVal);\n    default:\n        return null;\n    }\n};\n\nexport {\n    getValueParser,\n    require,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    stack,\n    nestCollection,\n    getSymbol,\n    transformColors,\n    detectColor,\n    hexToHsv,\n    hslToRgb,\n    rgbToHsv,\n    hsvToRgb,\n    concatModels,\n    toArray,\n    angleToRadian,\n    escapeHTML,\n    generateGetterSetters,\n    getArraySum,\n    interpolator,\n    piecewiseInterpolator,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    colorInterpolator,\n    numberInterpolator,\n    ERROR_MSG,\n    reqAnimFrame,\n    nextAnimFrame,\n    transposeArray,\n    cancelAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    symbolFns,\n    easeFns,\n    clone,\n    isEqual,\n    interpolateArray,\n    getMinPoint,\n    defaultValue,\n    getMaxPoint,\n    getClosestIndexOf,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    enableChainedTransaction,\n    isHTMLElem,\n    isSimpleObject,\n    nextFrame,\n    registerListeners,\n    replaceCSSPrefix,\n    getObjProp,\n    extendsClass,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    hslInterpolator,\n    getSmallestDiff,\n    getNearestValue,\n    retrieveNearestGroupByReducers,\n    nearestSortingDetails,\n    createSelection,\n    formatTemporal,\n    temporalFields,\n    retrieveFieldDisplayName,\n    sanitizeDomainWhenEqual,\n    sortCategoricalField\n};\n","export function linear(t) {\n  return +t;\n}\n","export function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nexport function circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n","import Selection from './selection';\n/**\n * This function applies a selection operation on a data array.\n *\n * @export\n * @param {Array} [data=[]] The data array to be observed.\n * @return {Selection} Instance of a selection.\n */\nexport default function dataSelect (idFn) {\n    return new Selection(idFn);\n}\n\n","import {path} from \"d3-path\";\nimport circle from \"./symbol/circle\";\nimport cross from \"./symbol/cross\";\nimport diamond from \"./symbol/diamond\";\nimport star from \"./symbol/star\";\nimport square from \"./symbol/square\";\nimport triangle from \"./symbol/triangle\";\nimport wye from \"./symbol/wye\";\nimport constant from \"./constant\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n","import ascending from \"./ascending\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n","import constant from \"./constant\";\nimport descending from \"./descending\";\nimport identity from \"./identity\";\nimport {tau} from \"./math\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","var matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nexport default matcher;\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTING) throw new Error(\"too late; already started\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value + \"\"));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleRemove(name, interpolate) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant(name, i, value + \"\"), priority);\n}\n","function styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import { select, event as d3event, selection, clientPoint } from 'd3-selection';\nimport { drag as d3drag } from 'd3-drag';\nimport 'd3-transition';\nimport { mergeRecursive } from './common-utils';\n/**\n * This function takes a raw DOM element or\n * a string and returns a d3 selection of that element.\n *\n * @param {HTMLElement | string} element The element to wrap in d3 selection.\n * @return {Selection} Instance of d3 selection.\n */\nconst selectElement = element => select(element);\n\n/**\n * It creates a new d3 element on the parent element\n * @param  {Selection} parent Element to which the element is to be appended\n * @param  {Object} elemType Type of the new element\n * @param  {Array} data Data for the new element\n * @param  {Object} selector classname/id/tagname for the element\n * @return {HTMLElement} Newly Created Element\n */\nconst makeElement = (parent, elemType, data, selector, callbacks = {}, keyFn) => {\n    if ((parent instanceof HTMLElement || parent instanceof SVGElement)) {\n        parent = selectElement(parent);\n    }\n\n    const selectorVal = selector ? selector[0] : null;\n    let selectorType = null;\n    let actualSelector = null;\n    let element = null;\n    let enterSel = null;\n    let mergeSel = null;\n    let filter;\n    if (selectorVal) {\n        if (selectorVal === '#') {\n            selectorType = 'id';\n            actualSelector = selector;\n        } else {\n            selectorType = 'class';\n            actualSelector = selector[0] === '.' ? selector : `.${selector}`;\n        }\n    } else {\n        actualSelector = elemType;\n        filter = true;\n    }\n    element = parent.selectAll(actualSelector);\n\n    filter && (element = element.filter(function () {\n        return this.parentNode === parent.node();\n    }));\n    element = element.data(data, keyFn);\n\n    enterSel = element.enter()\n                            .append(elemType || 'div');\n    callbacks.enter && enterSel.each(function (...params) {\n        callbacks.enter(selectElement(this), ...params);\n    });\n\n    mergeSel = enterSel.merge(element);\n    callbacks.update && mergeSel.each(function (...params) {\n        callbacks.update(selectElement(this), ...params);\n    });\n    if (selectorType === 'class') {\n        mergeSel.classed(selectorVal === '.' ? selector.substring(1, selector.length) : selector, true);\n    } else if (selectorType === 'id') {\n        mergeSel.attr('id', selector.substring(1, selector.length));\n    }\n    const exitSel = element.exit();\n\n    if (callbacks.exit) {\n        exitSel.each(function (...params) {\n            callbacks.exit(selectElement(this), ...params);\n        });\n    } else {\n        exitSel.remove();\n    }\n    return mergeSel;\n};\n\n/**\n * This function applies styles to an element\n *  @param  {Object} elem Element Selection\n * @param  {Object} styleObj Style Object to be applied\n * @return {Element} Newly Created Element\n*/\nconst applyStyle = (elem, styleObj) => {\n    Object.entries(styleObj).forEach((d) => {\n        elem.style(d[0], d[1]);\n    }, this);\n    return elem;\n};\n\n/**\n * This function appends a dom element in another element.\n * @param {HTMLElement | SVGElement} element1 The element in which to append the second element\n * @param {HTMLElement | SVGElement} element2 The element which will be appended.\n */\nconst appendElement = (element1, element2) => {\n    element1.appendChild(element2);\n};\n\n/**\n * Sets the attributes to the element.\n * @param {HTMLElement | SVGElement} element Element on which attributes will be applied\n * @param {Object} attrs Attributes which need to be applied\n */\nconst setElementAttrs = (element, attrs) => {\n    for (const key in attrs) {\n        if ({}.hasOwnProperty.call(attrs, key)) {\n            element.attr(key, attrs[key]);\n        }\n    }\n};\n\n/**\n * Sets attributes in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which attrs will be applied\n * @param {Array.<Object>} attrs Array of attributes\n * @param {string} className className of elements to select.\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setAttrs = (element, attrs, className) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    className !== undefined ? element.selectAll(`.${className}`).each(function () {\n        setElementAttrs(select(this), attrs);\n    }) : setElementAttrs(element, attrs);\n    return element;\n};\n\n/**\n * Adds a css class to elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst addClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, true) :\n                elem.classed(className, true);\n    });\n};\n\n/**\n * Removes the css class from elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst removeClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, false) :\n                elem.classed(className, false);\n    });\n};\n\n/**\n * Sets styles in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which styles will be applied\n * @param {Array.<Object>} styles Array of style attributes\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setStyles = (element, styles) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            element.style(key, styles[key]);\n        }\n    }\n    return element;\n};\n\n/**\n * Creates svg or html elements by binding data to the selection.Removes extra elements\n * on exit.\n * @param {Object} params Parameter object\n * @param {SVGElement | HTMLElement} params.container Container element where all elements will be appended\n * @param {string} params.selector Selector by which elements will be selected from dom\n * @param {string} params.append Append tag\n * @param {Function} params.each Function which will be executed for each data point and element.\n */\nconst createElements = (params) => {\n    const container = select(params.container);\n    let data;\n    let sel;\n\n    data = params.data;\n    if (typeof data === 'number') {\n        data = Array(data).fill().map((d, i) => i);\n    }\n    sel = container.selectAll(params.selector).data(data);\n\n    sel = container.selectAll(params.selector).filter(function () {\n        return this.parentNode === container.node();\n    }).data(params.data);\n\n    const selectionMerge = sel.enter().append(params.append).merge(sel).each(function (d, i) {\n        params.each(d, select(this), i);\n    });\n\n    selectionMerge.attr('class', params.className || '');\n    sel.exit().remove();\n};\n\n/**\n * Clips an element with given measurement. Basically it is used to hide overflowing portions\n * of any element.\n * @param {SVGElement} container svg element which needs to be clipped.\n * @param {Object} measurement Dimensions of the clipped rectangle.\n * @param {string} id Unique id of the clip element\n */\nconst clipElement = (container, measurement, id) => {\n    const clipPathElement = makeElement(select(container), 'clipPath', [1], `#${id}`);\n    const clipPathRect = makeElement(clipPathElement, 'rect', [1]);\n    clipPathRect.attr('x', measurement.x)\n                    .attr('y', measurement.x)\n                    .attr('width', measurement.width)\n                    .attr('height', measurement.height);\n    clipPathElement.attr('clip-path', `url(#${id})`);\n};\n\n/**\n * Returns the element of the corresponding classname.\n * @param {HTMLElement | SVGElement} node html or svg node element.\n * @param {string} className css class to be applied.\n * @return {HTMLElement | SVGElement} html or svg element.\n */\nconst getElementsByClassName = (node, className) => select(node).selectAll(className).nodes();\n\n/**\n * Gets the mouse position relative to an svg type of element\n * @param {SVGElement} element Any svg element like rect, circle, etc.\n * @param {Event} event Event object.\n * @return {Object} x and y position relative to the container element passed.\n */\nconst getMousePos = (element, event) => {\n    const boundingClientRect = element.getBoundingClientRect();\n    return {\n        x: event.x - boundingClientRect.x,\n        y: event.y - boundingClientRect.y\n    };\n};\n\nconst getClientPoint = (...params) => {\n    const pos = clientPoint(...params);\n    return {\n        x: pos[0],\n        y: pos[1]\n    };\n};\n\n/** This function appends a dom element in another element.\n * @param {Object} tag The tag name of the element to append\n * @param {Object} mount Mount point fo the element\n * @return {Object} selection of the appended element\n */\nconst createElement = (tag, mount) => select(mount).append(tag).node();\n\n/**\n * Gets the d3 event function\n * @return {Object} d3 event\n */\nconst getEvent = () => d3event;\n\n/**\n * Gets the d3 drag function\n * @return {Object} d3 drag\n */\nconst getD3Drag = () => d3drag;\n\nconst getSmartComputedStyle = (group, css) => {\n    let textEl;\n    const testText = 'W';\n    const mandatoryStyle = {\n        'fill-opacity': 0\n    };\n    const className = typeof css === 'string' ? css : (css instanceof Array ? css.join(' ') : undefined);\n\n    if (group.node() instanceof HTMLElement) {\n        textEl = group.append('div').html(testText);\n    } else {\n        textEl = group.append('text').text(testText);\n    }\n\n    if (className) {\n        textEl.attr('class', className);\n    } else if (typeof css === 'object') {\n        delete css['fill-opacity'];\n        mergeRecursive(mandatoryStyle, css);\n    }\n\n    textEl.style(mandatoryStyle);\n    const computedStyle = window.getComputedStyle(textEl.node());\n    const styleForSmartLabel = {\n        fontSize: computedStyle.fontSize,\n        fontFamily: computedStyle.fontFamily,\n        fontWeight: computedStyle.fontWeight,\n        fontStyle: computedStyle.fontStyle\n    };\n\n    textEl.remove();\n\n    return styleForSmartLabel;\n};\n\nconst hasTouch = () => 'ontouchstart' in document.documentElement;\n\nexport {\n    hasTouch,\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint\n};\n","import Model from 'hyperdis';\nimport { defaultValue, getObjProp } from './common-utils';\n\nconst initProp = (obj, props, val = () => ({})) => {\n    props.forEach((prop) => {\n        if (!obj[prop]) {\n            obj[prop] = val();\n        }\n        obj = obj[prop];\n    });\n    return obj;\n};\n\nconst fetchPropValues = (propNames, params, deps) => params.map((param, i) => {\n    const prop = propNames[i];\n\n    return param.map(val => (val === undefined || val === null ? val : val[deps[prop]]));\n});\n\nconst addListenerToNamespace = (namespaceInf, fn, context) => {\n    let key = namespaceInf.key;\n    const namespace = namespaceInf.id;\n    const listeners = context._listeners;\n\n    if (namespace) {\n        !listeners.get(namespace) && (listeners.set(namespace, new Map()));\n        const namespaceListeners = listeners.get(namespace);\n\n        if (!key) {\n            key = namespaceListeners.size;\n        }\n        namespaceListeners.set(key, fn);\n    } else {\n        key = key || listeners.size;\n        listeners.set(key, fn);\n    }\n};\n\nconst setContexts = (contexts, propObj, contextMap) => {\n    for (const key of propObj.keys()) {\n        contexts[key] = {\n            context: contextMap[key],\n            deps: propObj.get(key).depProps\n        };\n    }\n    return contexts;\n};\n\nconst registerPropInMaps = (store, props, namespaceInf, type) => {\n    const {\n        _registeredListeners: registeredListeners,\n        _propListenerMap: propListenerMap\n    } = store;\n    const {\n        subNamespace,\n        namespace: ns\n    } = namespaceInf;\n\n    initProp(registeredListeners, [ns]);\n    props.forEach((prop) => {\n        const subNamespaces = defaultValue(getObjProp(registeredListeners, ns, prop, 'subNamespace'), []);\n        let fns = defaultValue(getObjProp(propListenerMap, prop, type, 'fns'), 0);\n\n        fns++;\n        subNamespace && subNamespaces.push(subNamespace);\n        registeredListeners[ns][prop] = {\n            subNamespace: subNamespaces,\n            allProps: props,\n            subNamespaces: {}\n        };\n        initProp(propListenerMap, [prop, type]);\n        propListenerMap[prop][type] = {\n            fns,\n            _fnCount: fns\n        };\n    });\n};\n\nconst registerListener = (context, type, ...options) => {\n    const [propList, callBack, instantCall, namespaceInf = {}] = options;\n    let props = propList;\n\n    if (!Array.isArray(propList)) {\n        props = [propList];\n    }\n\n    const { namespace: ns } = namespaceInf;\n    const callbackFn = ((propNames, namespaceVal) => (...params) => {\n        const { _savedCommits: commits, _propListenerMap: propListenerMap } = context;\n\n        if (!propNames.some(prop => getObjProp(propListenerMap, prop, 'disabled'))) {\n            if (namespaceVal) {\n                const listenersObj = context._registeredListeners[namespaceVal];\n                const contextMap = context._contextMap[namespaceVal];\n                const contextsObj = {};\n\n                propNames.forEach((prop) => {\n                    const commitsObj = defaultValue(getObjProp(commits, prop, type), {});\n                    const listeners = listenersObj[prop].subNamespaces;\n                    const propDeps = propListenerMap[prop][type];\n\n                    for (const nm in commitsObj) {\n                        const fnInf = defaultValue(propDeps[nm], { fns: 0 });\n                        let { fns } = fnInf;\n\n                        if (fns > 0) {\n                            setContexts(contextsObj, listeners[nm], contextMap);\n                            fns--;\n                        }\n\n                        if (fns <= 0) {\n                            delete commitsObj[nm];\n                        }\n                        fnInf.fns = fns;\n                    }\n                });\n                for (const key in contextsObj) {\n                    const obj = contextsObj[key];\n\n                    callBack(obj.context, ...fetchPropValues(propNames, params, obj.deps));\n                }\n            } else {\n                callBack(...params);\n            }\n        }\n    })(props, ns, type);\n\n    const fn = context.model[type](props, callbackFn, instantCall);\n\n    if (ns) {\n        registerPropInMaps(context, props, namespaceInf, type);\n    }\n    addListenerToNamespace(namespaceInf, fn, context);\n};\n\nconst retrieveNamespaces = (names, key) => {\n    if (names instanceof Object) {\n        return [names[key]];\n    } else if (names instanceof Array) {\n        return names;\n    }\n    return [names];\n};\n\nconst createMap = () => new Map();\n\nconst listenerTypes = ['next', 'on'];\n\nconst removePropValue = (context, map, propInf) => {\n    const { subNamespace: sns, prop, propListenerMap } = propInf;\n    const propObj = propListenerMap[prop];\n\n    listenerTypes.forEach((type) => {\n        if (type in propObj) {\n            delete propObj[type][sns];\n        }\n    });\n    if (map.has(sns)) {\n        const value = context.get(prop);\n\n        if (value instanceof Object && sns in value) {\n            delete value[sns];\n        }\n        map.delete(sns);\n    }\n};\n\n/**\n * Methods to handle changes to table configuration and reactivity are handled by this\n * class.\n */\n/**\n *  Common store class\n *\n * @class Store\n */\nexport class Store {\n    /**\n     * Creates an instance of Store.\n     * @param {Object} config The object to create the state store with.\n     * @memberof Store\n     */\n    constructor (config) {\n        // create reactive model\n        this.model = Model.create(config);\n        this._listeners = new Map();\n        this._registeredListeners = {};\n        this._contextMap = {};\n        this._commits = {};\n        this._savedCommits = {};\n        this._queuedProps = {};\n        this._propListenerMap = {};\n        this._locked = false;\n    }\n\n    lockModel () {\n        this.model.lock();\n        this._locked = true;\n        return this;\n    }\n\n    unlockModel () {\n        this._locked = false;\n        this.model.unlock();\n        return this;\n    }\n\n    /**\n     * This method returns a plain JSON object\n     * with all the fields in the state store.\n     *\n     * @return {Object} Serialized representation of state store.\n     * @memberof Store\n     */\n    serialize () {\n        return this.model.serialize();\n    }\n\n    lockCommits (props) {\n        props.forEach((prop) => {\n            this._commits[prop] = {\n                locked: true,\n                queue: []\n            };\n        });\n        return this;\n    }\n\n    unlockCommits (props) {\n        const commitsObj = this._commits;\n\n        this.lockModel();\n        props.forEach((prop) => {\n            commitsObj[prop].locked = false;\n            const queuedProps = {};\n            const { queue } = commitsObj[prop];\n\n            queue.forEach((params) => {\n                const [propName, value, namespace] = params;\n\n                if (namespace) {\n                    const propObj = initProp(queuedProps, [propName, namespace]);\n\n                    Object.assign(propObj, value);\n                }\n            });\n            queue.forEach((params) => {\n                const [propName, value, namespace] = params;\n\n                this.commit(propName, propName in queuedProps ? queuedProps[propName][namespace] : value,\n                    namespace);\n            });\n            delete commitsObj[prop];\n        });\n        this.unlockModel();\n        return this;\n    }\n\n    addSubNamespace (sns, namespace, context) {\n        // Get all the listeners registered by the component\n        const listeners = this._registeredListeners[namespace];\n        const propListenerMap = this._propListenerMap;\n\n        initProp(this._contextMap, [namespace]);\n        this._contextMap[namespace][sns] = context;\n        for (const key in listeners) {\n            const obj = listeners[key];\n            const propObj = propListenerMap[key];\n            const propFns = listenerTypes.reduce((acc, type) => {\n                const val = defaultValue(getObjProp(propObj, type, 'fns'), 0);\n                val && (acc[type] = val);\n                return acc;\n            }, {});\n            const { allProps, subNamespaces, subNamespace } = obj;\n            const snsArr = subNamespace.length ? subNamespace : [sns];\n\n            snsArr.forEach((ns) => {\n                const nsObj = ns instanceof Function ? ns(context) : ns;\n                const names = retrieveNamespaces(nsObj, key);\n                const depProps = allProps.reduce((acc, prop) => {\n                    acc[prop] = ns instanceof Function ? nsObj[prop] : ns;\n                    return acc;\n                }, {});\n\n                names.forEach((nm) => {\n                    initProp(subNamespaces, [nm], createMap).set(sns, {\n                        depProps\n                    });\n\n                    for (const type in propFns) {\n                        initProp(propObj, [type, nm]);\n                        const fns = propFns[type];\n\n                        propObj[type][nm] = {\n                            fns,\n                            _fnCount: fns\n                        };\n                    }\n                });\n            });\n        }\n        return this;\n    }\n\n    /**\n     * This method is used to update the value of a property in the state store.\n     *\n     * @param {string} propName The name of the property.\n     * @param {number} value The new value of the property.\n     * @memberof Store\n     */\n    commit (propName, value, namespace, disableListener = false) {\n        let sanitizedVal = value;\n        const commits = this._commits;\n        const savedCommits = this._savedCommits;\n        const locked = getObjProp(commits, propName, 'locked');\n        const propListenerMap = this._propListenerMap[propName] || {};\n\n        propListenerMap.disabled = disableListener;\n\n        if (locked) {\n            commits[propName].queue.push([propName, value, namespace]);\n            return this;\n        }\n\n        if (namespace) {\n            if (this._locked) {\n                const queuedProps = initProp(this._queuedProps, [propName]);\n                queuedProps[namespace] = value;\n                sanitizedVal = queuedProps;\n            } else {\n                sanitizedVal = defaultValue(this.get(propName), {});\n                sanitizedVal[namespace] = value;\n            }\n\n            listenerTypes.forEach((type) => {\n                initProp(savedCommits, [propName, type]);\n                savedCommits[propName][type][namespace] = true;\n                if (getObjProp(propListenerMap, type, namespace)) {\n                    propListenerMap[type][namespace].fns = propListenerMap[type][namespace]._fnCount;\n                }\n            });\n        }\n\n        this.model.prop(propName, sanitizedVal);\n        return this;\n    }\n\n    /**\n     * This method is used to register a callback that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */registerChangeListener (...params) {\n        registerListener(this, 'next', ...params);\n        return this;\n    }\n\n    /**\n     * This method is used to register a callback that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */ registerImmediateListener (...params) {\n        registerListener(this, 'on', ...params);\n    }\n\n    /**\n     * This method is used to get the name of the property\n     * from the state store.\n     *\n     * @param {string} propName The name of the field in state store.\n     * @return {any} The value of the field.\n     * @memberof Store\n     */\n    get (propName, subNamespace) {\n        const value = this.model.prop(propName);\n        return subNamespace ? value && value[subNamespace] : value;\n    }\n\n    /**\n     * This method is used to register a computed property that is computed every time\n     * the store value changes.\n     *\n     * @param {string} propName The name of the property to create.\n     * @param {Function} callBack The function to execute when depemdent props change.\n     * @memberof Store\n     */\n    computed (propName, callBack) {\n        return this.model.calculatedProp(propName, callBack);\n    }\n\n    append (...params) {\n        this.model.append(...params);\n        return this;\n    }\n\n    unsubscribeAll () {\n        Object.values(this._listeners).forEach(fn => fn());\n        return this;\n    }\n\n    unsubscribe (namespaceInf = {}) {\n        const { id, key } = namespaceInf;\n        const listenersMap = this._listeners;\n        const listeners = listenersMap.get(id);\n\n        if (key) {\n            const fn = listenersMap.get(key);\n\n            fn && fn();\n        } else {\n            for (const fn of listeners.values()) {\n                fn();\n            }\n            listenersMap.set(id, []);\n        }\n        return this;\n    }\n\n    removeSubNamespace (subNamespace, namespace) {\n        const {\n            _registeredListeners: listenerMap,\n            _contextMap: contextMap,\n            _propListenerMap: propListenerMap\n        } = this;\n        const listenersObj = listenerMap[namespace];\n\n        for (const prop in listenersObj) {\n            const { subNamespaces } = listenersObj[prop];\n            const propInf = {\n                subNamespace,\n                prop,\n                propListenerMap\n            };\n\n            if (subNamespaces[subNamespace]) {\n                removePropValue(this, subNamespaces[subNamespace], propInf);\n                delete subNamespaces[subNamespace];\n            } else {\n                for (const ns in subNamespaces) {\n                    const snsMap = subNamespaces[ns];\n\n                    removePropValue(this, snsMap, propInf);\n                    if (!snsMap.size) {\n                        delete subNamespaces[ns];\n                    }\n                }\n            }\n        }\n        delete contextMap[namespace][subNamespace];\n        return this;\n    }\n}\n\n/**\n * Setter getter creator from config\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args. (Optional)\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @param {Object} holder an empty object on which the getters and setters will be mounted\n * @param {Object} options options config based on which the getters and setters are determined.\n * @param {Hyperdis} model optional model to attach the property. If not sent new moel is created.\n * @return {Array}\n */\nexport const transactor = (holder, options, model, namespaceInf = {}) => {\n    let conf;\n    const store = model instanceof Store ? model : new Store({});\n    const stateProps = {};\n    const { namespace, subNamespace } = namespaceInf;\n\n    for (const prop in options) {\n        if ({}.hasOwnProperty.call(options, prop)) {\n            conf = options[prop];\n            const nameSpaceProp = namespace ? `${namespace}.${prop}` : prop;\n\n            if (subNamespace) {\n                const value = defaultValue(store.get(nameSpaceProp), {});\n                value[subNamespace] = conf.value;\n                stateProps[nameSpaceProp] = value;\n            } else {\n                stateProps[prop] = conf.value;\n            }\n\n            holder[prop] = ((context, meta, nsProp) => (...params) => {\n                let val;\n                let compareTo;\n                const paramsLen = params.length;\n                const prevVal = context.get(nsProp, subNamespace);\n                if (paramsLen) {\n                    // If parameters are passed then it's a setter\n                    const spreadParams = meta && meta.spreadParams;\n                    val = params;\n                    const values = [];\n                    if (meta) {\n                        for (let i = 0; i < paramsLen; i++) {\n                            val = params[i];\n                            const sanitization = meta.sanitization && (spreadParams ? meta.sanitization[i] :\n                                meta.sanitization);\n                            const typeCheck = meta.typeCheck && (spreadParams ? meta.typeCheck[i] : meta.typeCheck);\n                            if (sanitization && typeof sanitization === 'function') {\n                                // Sanitize if required\n                                val = sanitization(val, prevVal, holder);\n                            }\n\n                            if (typeCheck) {\n                                // Checking if a setter is valid\n                                if (typeof typeCheck === 'function') {\n                                    let typeExpected = meta.typeExpected;\n                                    if (typeExpected && spreadParams) {\n                                        typeExpected = typeExpected[i];\n                                    }\n                                    if (typeExpected) {\n                                        compareTo = typeExpected;\n                                    } else {\n                                        compareTo = true;\n                                    }\n\n                                    if (typeCheck(val) === compareTo) {\n                                        values.push(val);\n                                    }\n                                } else if (typeof typeCheck === 'string') {\n                                    if (typeCheck === 'constructor') {\n                                        const typeExpected = spreadParams ? meta.typeExpected[i] :\n                                            meta.typeExpected;\n                                        if (val && (val.constructor.name === typeExpected)) {\n                                            values.push(val);\n                                        }\n                                    }\n                                } else {\n                                    // context.prop(key, val);\n                                    values.push(val);\n                                }\n                            } else {\n                                values.push(val);\n                            }\n                        }\n                        const preset = meta.preset;\n                        const oldValues = context.get(nsProp, subNamespace);\n                        preset && preset(values[0], holder);\n                        if (spreadParams) {\n                            oldValues.forEach((value, i) => {\n                                if (values[i] === undefined) {\n                                    values[i] = value;\n                                }\n                            });\n                        }\n                        values.length && context.commit(nsProp, spreadParams ? values : values[0], subNamespace);\n                    } else {\n                        context.commit(nsProp, spreadParams ? val : val[0], subNamespace);\n                    }\n                    return holder;\n                }\n                // No parameters are passed hence its a getter\n                return context.get(nsProp, subNamespace);\n            })(store, conf.meta, nameSpaceProp, subNamespace);\n        }\n    }\n\n    if (subNamespace) {\n        for (const key in stateProps) {\n            store.commit(key, stateProps[key][subNamespace], subNamespace);\n        }\n    } else if (namespace === undefined) {\n        store.append(stateProps);\n    } else {\n        store.append(namespace, stateProps);\n    }\n\n    return [holder, store];\n};\n","const events = [\n    'initialized',\n    'beforeupdate',\n    'updated',\n    'beforedraw',\n    'drawn',\n    'beforeremove',\n    'removed',\n    'animationend'\n];\n\nconst compositions = [\n    'canvas',\n    'unit',\n    'layer',\n    'axis',\n    'facet-headers',\n    'legend',\n    'caption'\n];\n\nconst EVENT_LIST = [];\n\ncompositions.forEach((composition) => {\n    events.forEach((event) => {\n        EVENT_LIST.push(`${composition}.${event}`);\n    });\n});\n\nexport default EVENT_LIST;\n","import EVENT_LIST from './event-list';\nimport { createPromise } from './helper';\n\n/**\n * At first call it accepts one function\n * calling it second time accepts notification object.\n * notification object then called with first accepted function\n *\n * @param {Function} resolveFn a promise's resolve function\n * @return {Function} a function to accept notification object\n */\nconst resolver = resolveFn => notification => resolveFn(notification);\n\n/**\n * Checks if the property string is present in the source object\n *\n * @param {Object} source source object whom you want to check the property\n * @param {string} property key name that need to be checked\n * @return {boolean} returns true if the property found in the source object\n */\nconst hasOwn = (source, property) => Object.prototype.hasOwnProperty.call(source, property);\n\n/**\n * LifeCycleManager which goes as a dependendecy to a muze\n * it accepts notification from the entire library throughout\n * the exeecution life\n *\n * @export\n * @class LifeCycleManager\n */\nexport default class LifeCycleManager {\n\n    /**\n     * Creates an instance of LifeCycleManager.\n     * @memberof LifeCycleManager\n     */\n    constructor () {\n        this._eventList = EVENT_LIST;\n        this._promises = new Map();\n        this._notifiers = {};\n        this._lifeCycles = {};\n        this._unreleasedLifeCycles = {};\n        this._boot();\n    }\n\n    /**\n     * Fills all the notifiers with resolver callback\n     *\n     * @memberof LifeCycleManager\n     */\n    _boot () {\n        this._notifiers = this._eventList.reduce((acc, name) => {\n            acc[name] = resolver;\n            return acc;\n        }, {});\n        this._preparePromises();\n    }\n\n    /**\n     * Public method which gives the promise corresponding\n     * to the event name\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    retrieve (eventName) {\n        return this._promises.get(eventName);\n    }\n\n    /**\n     * Creates a promise that will be passed to user's callback\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} a pending promise waiting for resolve to be called\n     * @memberof LifeCycleManager\n     */\n    _makeNotifierPromise (eventName) {\n        return new Promise((resolve) => {\n            this._notifiers[eventName] = resolver(resolve);\n        });\n    }\n\n    /**\n     * Prepares the promise map with pending promises\n     * all the promises are in a pending state where their's\n     * resolve function waiting to be called with notification object\n     * @memberof LifeCycleManager\n     */\n    _preparePromises () {\n        this._eventList.forEach((eventName) => {\n            const promise = this._makeNotifierPromise(eventName);\n            this._promises.set(eventName, promise);\n            createPromise(promise, eventName, this);\n        });\n    }\n\n    /**\n     * Resolves the promise with notification object\n     *\n     * @param {string} eventName name of the event in the system\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     *\n     * @memberof LifeCycleManager\n     */\n    _resolvePromise (eventName, notification) {\n        this._notifiers[eventName](notification);\n    }\n\n    /**\n     * Public method which is being called by different\n     * subcompoents of the system at different execution atages\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    notify (notification) {\n        // get the composition name from notification\n        // or from static formalName() method\n        const composition = notification.formalName || notification.client.constructor.formalName();\n        notification.formalName = composition;\n        this._releasePromisesFromCache();\n        this._notify(composition, notification);\n    }\n\n    /**\n     * Notify user the with promsie in a callback\n     * if callback not found then cache it\n     *\n     * @param {string} composition\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    _notify (composition, notification) {\n        const stage = notification.action;\n        const eventName = `${composition}.${stage}`;\n\n        // resolves promise with the notification object\n        this._resolvePromise(eventName, notification);\n\n        // get the promise from the promise map\n        const promise = this.retrieve(eventName);\n\n        if (this._lifeCycles[composition]) {\n            if (this._lifeCycles[composition][stage]) {\n                // if user given call back exists, then call with promise\n                this._callLifeCycleCallback(composition, stage, promise);\n            } else {\n                // otherwise cache the promise\n                this._cachePromise(composition, stage, promise);\n            }\n        } else {\n            this._cachePromise(composition, stage, promise);\n        }\n    }\n\n    /**\n     * Calls the user's callback with callback\n     *\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _callLifeCycleCallback (composition, stage, promise) {\n        const eventName = `${composition}.${stage}`;\n        this._lifeCycles[composition][stage](promise);\n        this._resetTargetPromise(eventName);\n    }\n\n    /**\n     * Try to clear the cached promsies once we have\n     * macthed callbacks from the user\n     *\n     * @memberof LifeCycleManager\n     */\n    _releasePromisesFromCache () {\n        const compositions = Object.keys(this._unreleasedLifeCycles);\n        compositions.forEach((composition) => {\n            const stages = Object.keys(this._unreleasedLifeCycles[composition]);\n            stages.forEach((stage) => {\n                if (this._lifeCycles[composition]) {\n                    if (this._lifeCycles[composition][stage]) {\n                        // take the promise from unreleased lifeCycles\n                        const promise = this._unreleasedLifeCycles[composition][stage];\n                        // call the user given callback with that promise\n                        this._callLifeCycleCallback(composition, stage, promise);\n                        // delete promise from unreleased lifeCycles\n                        delete this._unreleasedLifeCycles[composition][stage];\n                    }\n                }\n            });\n        });\n    }\n\n    /**\n     * Cache the promise in the map. This cache\n     * then get consumed if we get user callbacks\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _cachePromise (composition, stage, promise) {\n        if (!hasOwn(this._unreleasedLifeCycles, composition)) {\n            this._unreleasedLifeCycles[composition] = {};\n        }\n\n        if (!hasOwn(this._unreleasedLifeCycles[composition], stage)) {\n            this._unreleasedLifeCycles[composition][stage] = {};\n        }\n        this._unreleasedLifeCycles[composition][stage] = promise;\n    }\n\n    /**\n     * It register's the callbacks gievn the user\n     *\n     * @param {Object} [lifeCycles={}] a object with list of callbacks\n     * @memberof LifeCycleManager\n     */\n    register (lifeCycles = {}) {\n        this._lifeCycles = lifeCycles;\n        // as we get all the callbacks, try to call them\n        // from unreleased promise map\n        this._releasePromisesFromCache();\n    }\n\n    /**\n     * Reset the promise into pending state\n     *\n     * @param {string} eventName name of the event happening\n     * @memberof LifeCycleManager\n     */\n    _resetTargetPromise (eventName) {\n        setTimeout(() => {\n            this._notifiers[eventName] = resolver;\n            this._promises.set(eventName, this._makeNotifierPromise(eventName));\n        }, 0);\n    }\n}\n","import LifeCycleManager from './lifecycle-manager';\n\nexport default LifeCycleManager;\n","/**\n * Creates a new promise when the given promise is resolved. This needs to be done so that after the lifecycle event\n * is completed, then again when the event gets completed, then a new promise gets resolved.\n *\n * @param {Promise} promise Instance of promise\n * @param {string} eventName name of event\n * @param {LifeCycleManager} context Instance of lifecyclemanager\n */\nexport const createPromise = (promise, eventName, context) => {\n    promise.then(() => {\n        const prm = context._makeNotifierPromise(eventName);\n        context._promises.set(eventName, prm);\n        createPromise(prm, eventName, context);\n    });\n};\n","import { default as DataModel } from 'datamodel';\nimport * as scales from './scales';\nimport * as colorSchemes from './color-schemes';\nimport * as STATE_NAMESPACES from './enums/namespace';\n\nconst InvalidAwareTypes = DataModel.InvalidAwareTypes;\n\nexport {\n    InvalidAwareTypes,\n    DataModel\n};\n\nexport {\n    ReservedFields,\n    CommonProps,\n    COORD_TYPES\n} from './enums';\n\nexport { STATE_NAMESPACES };\n\nexport {\n    scales,\n    colorSchemes\n};\n\nexport {\n    getNearestValue,\n    getValueParser,\n    transformColors,\n    detectColor,\n    hslToRgb,\n    rgbToHsv,\n    hexToHsv,\n    hsvToRgb,\n    escapeHTML,\n    angleToRadian,\n    generateGetterSetters,\n    getArraySum,\n    ERROR_MSG,\n    interpolator,\n    colorInterpolator,\n    numberInterpolator,\n    piecewiseInterpolator,\n    reqAnimFrame,\n    cancelAnimFrame,\n    nextAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    replaceCSSPrefix,\n    symbolFns,\n    defaultValue,\n    easeFns,\n    clone,\n    interpolateArray,\n    getMinPoint,\n    getMaxPoint,\n    getClosestIndexOf,\n    registerListeners,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    enableChainedTransaction,\n    isHTMLElem,\n    isEqual,\n    isSimpleObject,\n    nextFrame,\n    getObjProp,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    transposeArray,\n    toArray,\n    extendsClass,\n    concatModels,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    nestCollection,\n    stack,\n    getSymbol,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    hslInterpolator,\n    getSmallestDiff,\n    require,\n    formatTemporal,\n    nearestSortingDetails,\n    createSelection,\n    temporalFields,\n    retrieveNearestGroupByReducers,\n    retrieveFieldDisplayName,\n    sanitizeDomainWhenEqual,\n    sortCategoricalField\n} from './common-utils';\n\nexport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint,\n    hasTouch\n} from './renderer-utils';\n\nexport {\n    Store,\n    transactor\n} from './store';\n\nexport {\n    timeMillisecond,\n    timeSecond,\n    timeMinute,\n    timeHour,\n    timeDay,\n    timeWeek,\n    timeMonth,\n    timeYear\n} from 'd3-time';\n\nexport { default as Smartlabel } from 'fusioncharts-smartlabel';\nexport { dataSelect } from './DataSystem';\n\nexport { default as LifeCycleManager } from './lifecycle-manager';\n\nexport {\n    DimensionSubtype,\n    FieldType,\n    MeasureSubtype,\n    DateTimeFormatter,\n    DM_DERIVATIVES,\n    GROUP_BY_FUNCTIONS\n} from 'datamodel';\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\nexport const LONGTOUCH = 'longtouch';\nexport const TOUCHDRAG = 'touchdrag';\nexport const ALL_ACTIONS = '*';\n","const SELECTION_NEW_ENTRY = 1;\nconst SELECTION_NEW_EXIT = -1;\nconst SELECTION_NULL = 0;\nconst SELECTION_OLD_ENTRY = 2;\nconst SELECTION_OLD_EXIT = -2;\n\nexport {\n    SELECTION_NEW_ENTRY,\n    SELECTION_NEW_EXIT,\n    SELECTION_NULL,\n    SELECTION_OLD_ENTRY,\n    SELECTION_OLD_EXIT\n};\n","import SelectionSet from './selection-set';\n\nexport default SelectionSet;\n","import {\n    SELECTION_NEW_ENTRY, SELECTION_NEW_EXIT, SELECTION_NULL, SELECTION_OLD_ENTRY, SELECTION_OLD_EXIT\n} from '../enums/selection';\n/* eslint-disable guard-for-in */\n\n/**\n * This component is used to keep track of the row tuples of the data which gets added and removed. This keeps\n * information of which rows are in previous and new entry set and previous and new exit set. This is initialized by\n * {@link Firebolt}.\n *\n * @public\n *\n * @class SelectionSet\n */\nclass SelectionSet {\n    /**\n     * Creates an instance of selection set\n     *\n     * @param {Array.<string>} completeSet Set of unique ids.\n     */\n    constructor (completeSet, _volatile) {\n        this.completeSet = completeSet;\n        this._set = completeSet.reduce((obj, key) => {\n            obj[key] = SELECTION_NULL;\n            return obj;\n        }, {});\n        this._volatile = _volatile;\n        this._completeSetCount = completeSet.length;\n        this._lockedSelection = {};\n        this._resetted = true;\n    }\n\n    /**\n     * Adds a set of ids to the selection set. This also moves the other rows to exit set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    add (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_ENTRY;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_ENTRY && set[key] !== SELECTION_OLD_ENTRY) {\n                set[key] = set[key] < 0 ? SELECTION_OLD_EXIT : SELECTION_NEW_EXIT;\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Adds an array of ids to the old entry set.\n     *\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    update (ids) {\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_OLD_ENTRY;\n        });\n\n        return this;\n    }\n\n    /**\n     * Moves all ids which in new entry set  to old entry set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateEntry () {\n        const set = this._set;\n\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_ENTRY ? SELECTION_OLD_ENTRY : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Moves an array of ids which are in new exit set to old exit set.\n     *\n     * @public\n     *\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateExit () {\n        const set = this._set;\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_EXIT ? SELECTION_OLD_EXIT : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Removes an array of ids from the selection set. It also moves the remaining row ids to entry set.\n     *\n     * @public\n     * @param {Array.<string>} ids Array of unique ids\n     *\n     * @return {SelectionSet}  Instance of selection set\n     */\n    remove (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_EXIT;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_EXIT && set[key] !== SELECTION_OLD_EXIT) {\n                set[key] = set[key] === 0 ? SELECTION_NEW_ENTRY : SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n\n    getSets () {\n        const set = this._set;\n        const retObj = {\n            entrySet: [[], []],\n            exitSet: [[], []],\n            completeSet: []\n        };\n\n        for (const key in set) {\n            if (set[key] > 0) {\n                set[key] === SELECTION_OLD_ENTRY && retObj.entrySet[0].push(key);\n                set[key] === SELECTION_NEW_ENTRY && retObj.entrySet[1].push(key);\n            } else if (set[key] < 0) {\n                set[key] === SELECTION_OLD_EXIT && retObj.exitSet[0].push(key);\n                set[key] === SELECTION_NEW_EXIT && retObj.exitSet[1].push(key);\n            }\n            retObj.completeSet.push(key);\n        }\n\n        ['entrySet', 'exitSet'].forEach((type) => {\n            retObj[type] = retObj[type].map(e => e.map(Number));\n        });\n        retObj.completeSet = retObj.completeSet.map(Number);\n\n        return retObj;\n    }\n\n    /**\n     * Resets an array of ids in the selection set to initial state. It sets the value of every unique id value to\n     * null in the selection set which means they are neither in entry set nor in exit set. If no ids are passed,\n     * then it resets all the ids to null.\n     *\n     * @public\n     *\n     * @param {Array} ids Array of unique ids.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    reset (ids) {\n        const set = this._set;\n        if (ids) {\n            ids.forEach((i) => {\n                set[i] = SELECTION_NULL;\n            });\n        } else {\n            const lockedSel = this._lockedSelection;\n            for (const key in set) {\n                if (!(key in lockedSel)) {\n                    set[key] = SELECTION_NULL;\n                }\n            }\n        }\n        this._resetted = true;\n        return this;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     *\n     * @public\n     *\n     * @return {Array.<string>} Array of unique ids\n     */\n    getEntrySet () {\n        const set = this._set;\n        const addSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_ENTRY && addSet.push(key);\n        }\n\n        return addSet;\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in entry set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old entry set or new entry set\n     */\n    getExistingEntrySet (addSet) {\n        const set = this._set;\n        return addSet.filter(d => set[d] === SELECTION_NEW_ENTRY || set[d] === SELECTION_OLD_ENTRY);\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old exit set or new exit set\n     */\n    getExistingExitSet (removeSet) {\n        const set = this._set;\n        return removeSet.filter(d => set[d] === SELECTION_NEW_EXIT || set[d] === SELECTION_OLD_EXIT);\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldEntry () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_ENTRY && updateSet.push(key);\n        }\n        return updateSet;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldExit () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_EXIT && updateSet.push(key);\n        }\n\n        return updateSet;\n    }\n\n    /**\n     * Gets the array of ids which are in the exit set.\n     *\n     * @public\n     * @return {Array.<string>} Array of unique ids\n     */\n    getExitSet () {\n        const set = this._set;\n        const removeSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_EXIT && removeSet.push(key);\n        }\n        return removeSet;\n    }\n\n    /**\n     * Gets all the ids which are either in exit or entry set.\n     *\n     * @public\n     * @return {Array} Array of unique ids\n     */\n    getCompleteSet () {\n        const set = this._set;\n        const completeSet = [];\n\n        for (const key in set) {\n            completeSet.push(key);\n        }\n\n        return completeSet;\n    }\n\n    getCompleteSetCount () {\n        return this._completeSetCount;\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Swaps the add set and remove set in the selection set.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    toggle () {\n        const set = this._set;\n\n        for (const key in set) {\n            if (set[key] === SELECTION_NEW_ENTRY) {\n                set[key] = SELECTION_NEW_EXIT;\n            } else if (set[key] === SELECTION_NEW_EXIT) {\n                set[key] = SELECTION_NEW_ENTRY;\n            } else if (set[key] === SELECTION_OLD_ENTRY) {\n                set[key] = SELECTION_OLD_EXIT;\n            } else {\n                set[key] = SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n}\n\nexport default SelectionSet;\n","import { clone, retrieveNearestGroupByReducers } from 'muze-utils';\nimport * as SELECTION from '../enums/selection';\n\nexport const initializeSideEffects = (context, sideEffects) => {\n    const sideEffectsMap = context._sideEffects;\n    sideEffects = sideEffects instanceof Array ? sideEffects : Object.values(sideEffects);\n    sideEffects.forEach((SideEffect) => {\n        const formalName = SideEffect.formalName();\n        const sideEffectInstance = sideEffectsMap[formalName];\n        sideEffectsMap[formalName] = sideEffectInstance || new SideEffect(context);\n    });\n    return sideEffectsMap;\n};\n\nexport const setSideEffectConfig = (sideEffects, config) => {\n    for (const key in sideEffects) {\n        const sideEffect = sideEffects[key];\n        const formalName = sideEffect.constructor.formalName();\n        const sideEffectConf = config[formalName];\n\n        sideEffectConf && sideEffect.config(sideEffectConf);\n    }\n};\n\nexport const initializeBehaviouralActions = (context, actions) => {\n    const dispatchableBehaviours = {};\n\n    actions = actions instanceof Array ? actions : Object.values(actions);\n    actions.forEach((Action) => {\n        dispatchableBehaviours[Action.formalName()] = new Action(context);\n    });\n    return dispatchableBehaviours;\n};\n\nexport const initializePhysicalActions = (context, actions) => {\n    const physicalActions = {};\n\n    for (const name in actions) {\n        if (!({}).hasOwnProperty.call(name, actions)) {\n            physicalActions[name] = actions[name](context);\n        }\n    }\n    return physicalActions;\n};\n\nexport const changeSideEffectAvailability = (context, fn, toEnable) => {\n    const sideEffects = context.sideEffects();\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            let change = true;\n            if (fn && fn(key) === false) {\n                change = false;\n            }\n            if (change) {\n                toEnable ? sideEffects[key].enable() : sideEffects[key].disable();\n            }\n        }\n    }\n};\n\nexport const getMergedSet = set => [...new Set([...set[0], ...set[1]])];\n\nexport const getSourceFields = (propagationInf, criteria = {}) => {\n    const sourceIdentifiers = propagationInf.sourceIdentifiers;\n    let sourceFields;\n    if (sourceIdentifiers) {\n        sourceFields = sourceIdentifiers.getSchema().map(d => d.name);\n    } else if (criteria instanceof Array) {\n        sourceFields = criteria[0];\n    } else {\n        sourceFields = Object.keys(criteria || {});\n    }\n    return sourceFields;\n};\n\nconst conditionsMap = {\n    mergedEnter: [SELECTION.SELECTION_NEW_ENTRY, SELECTION.SELECTION_OLD_ENTRY],\n    mergedExit: [SELECTION.SELECTION_NEW_EXIT, SELECTION.SELECTION_OLD_EXIT],\n    complete: []\n};\n\nexport const getModelFromSet = (type, model, set) => {\n    const conditions = conditionsMap[type];\n    if (model && conditions) {\n        return model.select((fields, i) =>\n           (conditions.some(condition => set[i] === condition)), {\n               saveChild: false\n           });\n    }\n    return null;\n};\n\nexport const getSetInfo = (type, set, config) => {\n    let model = null;\n    const filteredDataModel = config.filteredDataModel;\n    const selectionSet = config.selectionSet;\n    if (!config.propagationData) {\n        if (selectionSet.resetted()) {\n            model = null;\n        } else if (type === 'mergedEnter') {\n            model = getModelFromSet(type, config.dataModel, config.selectionSet._set);\n        }\n    } else if (filteredDataModel) {\n        model = type === 'mergedEnter' ? filteredDataModel[0] : filteredDataModel[1];\n    }\n    return {\n        uids: set,\n        length: set.length,\n        model\n    };\n};\n\nexport const getSideEffects = (behaviour, behaviourEffectMap) => {\n    const sideEffects = [];\n    for (const key in behaviourEffectMap) {\n        const behaviours = key.split(',');\n        const found = behaviours.some(d => d === behaviour);\n        if (found) {\n            sideEffects.push({\n                effects: behaviourEffectMap[key],\n                behaviours\n            });\n        }\n    }\n    return sideEffects;\n};\n\nexport const unionSets = (context, behaviours) => {\n    let combinedSet = {};\n    const models = {\n        mergedEnter: null,\n        mergedExit: null\n    };\n    behaviours.forEach((behaviour) => {\n        const entryExitSet = context._entryExitSet[behaviour];\n        if (entryExitSet) {\n            combinedSet = Object.assign(combinedSet, clone(entryExitSet));\n            ['mergedEnter', 'mergedExit'].forEach((type) => {\n                const model = entryExitSet[type].model;\n                let existingModel = models[type];\n                let aggFns = retrieveNearestGroupByReducers(model);\n                if (!existingModel) {\n                    existingModel = models[type] = model;\n                } else if (`${model.getSchema().map(d => d.name).sort()}` ===\n                    `${existingModel.getSchema().map(d => d.name).sort()}`) {\n                    aggFns = Object.assign({}, retrieveNearestGroupByReducers(existingModel));\n                    existingModel = models[type] = model.union(existingModel);\n                } else {\n                    existingModel = model;\n                }\n                combinedSet[type].model = existingModel;\n                combinedSet[type].aggFns = aggFns;\n            });\n        }\n    });\n    return combinedSet;\n};\n","import {\n    mergeRecursive,\n    hasTouch,\n    selectElement,\n    isSimpleObject\n} from 'muze-utils';\nimport { ALL_ACTIONS } from './enums/actions';\nimport SelectionSet from './selection-set';\nimport {\n    initializeBehaviouralActions,\n    initializeSideEffects,\n    changeSideEffectAvailability,\n    initializePhysicalActions,\n    unionSets,\n    getSideEffects,\n    setSideEffectConfig\n} from './helper';\n\n/**\n * This class is responsible for dispatching behavioural actions and side effects. It also keeps the information of\n * registered physical actions, behavioural actions and side effects. Also, it keeps the map of physical and behavioural\n * actions and behavioural actions and side effects. Whenever any behavioural action is dispatched, it also propagates\n * the rows which got affected to the other datamodels. This class is initialized by {@link VisualUnit} and legend to\n * manage it's interaction.\n *\n * @public\n * @class Firebolt\n * @module Firebolt\n */\nexport default class Firebolt {\n    constructor (context, actions, sideEffects, behaviourEffectMap) {\n        this.context = context;\n        this._sideEffectDefinitions = {};\n        this._sideEffects = {};\n        this._propagationInf = {};\n        this._actions = {\n            behavioural: {},\n            physical: {}\n        };\n        this._selectionSet = {};\n        this._volatileSelectionSet = {};\n        this._propagationFields = {};\n        this._sourceSideEffects = {\n            selectionBox: () => false\n        };\n        this._propagationBehaviourMap = {};\n        this._sourceBehaviours = {};\n        this._actionBehaviourMap = {};\n        this._config = {};\n        this._behaviourEffectMap = {};\n        this._entryExitSet = {};\n        this._actionHistory = {};\n        this._queuedSideEffects = {};\n\n        this.mapSideEffects(behaviourEffectMap);\n        this.registerBehaviouralActions(actions.behavioural);\n        this.registerSideEffects(sideEffects);\n        this.registerPhysicalBehaviouralMap(actions.physicalBehaviouralMap);\n        this.registerPhysicalActions(actions.physical);\n    }\n\n    config (...config) {\n        if (config.length) {\n            this._config = mergeRecursive(this._config, config[0]);\n            setSideEffectConfig(this.sideEffects(), this._config);\n            return this;\n        }\n        return this._config;\n    }\n\n    mapSideEffects (behEffectMap) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        for (const key in behEffectMap) {\n            if ({}.hasOwnProperty.call(behEffectMap, key)) {\n                const sideEffects = behEffectMap[key] || [];\n                let preventDefaultActions = false;\n                let effectNames;\n                if (isSimpleObject(sideEffects)) {\n                    effectNames = sideEffects.effects;\n                    preventDefaultActions = sideEffects.preventDefaultActions;\n                } else {\n                    effectNames = sideEffects;\n                }\n                !behaviourEffectMap[key] && (behaviourEffectMap[key] = []);\n                this._behaviourEffectMap[key] = [...new Set(preventDefaultActions ? effectNames :\n                    [...behaviourEffectMap[key], ...effectNames])];\n            }\n        }\n        return this;\n    }\n\n    registerBehaviouralActions (actions) {\n        const behaviours = initializeBehaviouralActions(this, actions);\n        this.prepareSelectionSets(behaviours);\n        Object.assign(this._actions.behavioural, behaviours);\n        return this;\n    }\n\n    prepareSelectionSets () {\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        this.initializeSideEffects();\n        return this;\n    }\n\n    applySideEffects (sideEffects, selectionSet, payload) {\n        const sideEffectStore = this.sideEffects();\n        const actionHistory = this._actionHistory;\n        const queuedSideEffects = this._queuedSideEffects;\n        sideEffects.forEach((sideEffect) => {\n            let options;\n            let name;\n            const effects = sideEffect.effects;\n            const behaviours = sideEffect.behaviours;\n            const combinedSet = unionSets(this, behaviours, selectionSet);\n            effects.forEach((effect) => {\n                if (typeof effect === 'object') {\n                    name = effect.name;\n                    options = effect.options;\n                } else {\n                    name = effect;\n                }\n\n                const sideEffectInstance = sideEffectStore[name];\n                if (sideEffectInstance.isEnabled()) {\n                    if (!sideEffectInstance.constructor.mutates() &&\n                        Object.values(actionHistory).some(d => d.isMutableAction)) {\n                        queuedSideEffects[`${name}-${behaviours.join()}`] = {\n                            name,\n                            params: [combinedSet, payload, options]\n                        };\n                    } else {\n                        this.dispatchSideEffect(name, combinedSet, payload, options);\n                    }\n                }\n            });\n        });\n        return this;\n    }\n\n    dispatchSideEffect (name, selectionSet, payload, options = {}) {\n        const sideEffectStore = this.sideEffects();\n        const sideEffect = sideEffectStore[name];\n        let disable = false;\n        if (options.filter && options.filter(sideEffect)) {\n            disable = true;\n        }\n        !disable && sideEffectStore[name].apply(selectionSet, payload, options);\n    }\n\n    registerPropagationBehaviourMap (map) {\n        this._propagationBehaviourMap = Object.assign(this._propagationBehaviourMap, map || {});\n        return this;\n    }\n\n    dispatchBehaviour (behaviour, payload, propagationInfo = {}) {\n        const propagate = propagationInfo.propagate !== undefined ? propagationInfo.propagate : true;\n        const behaviouralActions = this._actions.behavioural;\n        const action = behaviouralActions[behaviour];\n        const behaviourEffectMap = this._behaviourEffectMap;\n        const sideEffects = getSideEffects(behaviour, behaviourEffectMap);\n        this._propagationInf = propagationInfo;\n\n        if (action) {\n            const selectionSet = action.dispatch(payload);\n            const propagationSelectionSet = this.getPropagationSelectionSet(selectionSet);\n            this._entryExitSet[behaviour] = propagationSelectionSet;\n            const shouldApplySideEffects = this.shouldApplySideEffects(propagate);\n\n            if (propagate) {\n                this.propagate(behaviour, payload, selectionSet.find(d => d.sourceSelectionSet), sideEffects);\n            }\n            if (shouldApplySideEffects) {\n                const applicableSideEffects = this.getApplicableSideEffects(sideEffects, payload, propagationInfo);\n                this.applySideEffects(applicableSideEffects, propagationSelectionSet, payload);\n            }\n        }\n\n        return this;\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet.find(d => !d.sourceSelectionSet);\n    }\n\n    shouldApplySideEffects () {\n        return true;\n    }\n\n    changeBehaviourStateOnPropagation (behaviour, value) {\n        if (value instanceof Function) {\n            this._sourceBehaviours[behaviour] = value;\n        } else {\n            this._sourceBehaviours[behaviour] = () => value;\n        }\n        return this;\n    }\n\n    changeSideEffectStateOnPropagation (sideEffect, value) {\n        if (value instanceof Function) {\n            this._sourceSideEffects[sideEffect] = value;\n        } else {\n            this._sourceSideEffects[sideEffect] = () => value;\n        }\n    }\n\n    propagate () {\n        return this;\n    }\n\n    sideEffects (...sideEffects) {\n        if (sideEffects.length) {\n            this._sideEffects = sideEffects[0];\n            return this;\n        }\n        return this._sideEffects;\n    }\n\n    enableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, true);\n        return this;\n    }\n\n    disableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, false);\n        return this;\n    }\n\n    dissociateBehaviour (behaviour, physicalAction) {\n        const actionBehaviourMap = this._actionBehaviourMap;\n        for (const key in actionBehaviourMap) {\n            if (key === physicalAction) {\n                const behaviourMap = actionBehaviourMap[key];\n                behaviourMap.behaviours = behaviourMap.behaviours.filter(d => d !== behaviour);\n                this.mapActionsAndBehaviour(key);\n            }\n        }\n\n        return this;\n    }\n\n    dissociateSideEffect (sideEffect, behaviour) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        behaviourEffectMap[behaviour] = behaviourEffectMap[behaviour].filter(d => (d.name || d) !== sideEffect);\n        return this;\n    }\n\n    getApplicableSideEffects (sideEffects) {\n        return sideEffects;\n    }\n\n    attachPropagationListener (dataModel) {\n        dataModel.unsubscribe('propagation');\n        dataModel.on('propagation', this.onDataModelPropagation());\n        return this;\n    }\n\n    onDataModelPropagation () {\n        return (propValue) => {\n            const payload = propValue.payload;\n            const action = payload.action;\n\n            this.dispatchBehaviour(action, payload, {\n                propagate: false\n            });\n        };\n    }\n\n    createSelectionSet (uniqueIds, behaviouralActions) {\n        const behaviours = behaviouralActions || this._actions.behavioural;\n        const selectionSet = this._selectionSet;\n        const volatileSelectionSet = this._volatileSelectionSet;\n\n        for (const key in behaviours) {\n            if ({}.hasOwnProperty.call(behaviours, key)) {\n                selectionSet[key] = new SelectionSet(uniqueIds);\n                volatileSelectionSet[key] = new SelectionSet(uniqueIds, true);\n            }\n        }\n        this._volatileSelectionSet = volatileSelectionSet;\n        this.selectionSet(selectionSet);\n        return this;\n    }\n\n    selectionSet (...selectionSet) {\n        if (selectionSet.length) {\n            this._selectionSet = selectionSet[0];\n            return this;\n        }\n        return this._selectionSet;\n    }\n\n    initializeSideEffects () {\n        const sideEffectDefinitions = this._sideEffectDefinitions;\n        this.sideEffects(initializeSideEffects(this, sideEffectDefinitions));\n        return this;\n    }\n\n    registerPhysicalActions (actions) {\n        const initedActions = initializePhysicalActions(this, actions);\n        Object.assign(this._actions.physical, initedActions);\n        return this;\n    }\n\n    /**\n     * Allows to propagate the datamodel with only the supplied fields. When propagation is done, then the fields\n     * which are supplied for the specified behavioural action is propagated.\n     *\n     * @public\n     *\n     * @param {string} action Name of behavioural action. If '*' is specified, then for all behavioural actions it is\n     * applied.\n     * @param {Array} fields Array of field names which will be propagated.\n     * @param {boolean} append If true, then it is appended to the existing propagation data model fields else only\n     * those fields are projected from propagation data model and propagated.\n     *\n     * @return {Firebolt} Instance of firebolt\n     */\n    propagateWith (action, fields, append = false) {\n        const behaviouralActions = this._actions.behavioural;\n        if (action === ALL_ACTIONS) {\n            for (const key in behaviouralActions) {\n                this._propagationFields[key] = {\n                    fields,\n                    append\n                };\n            }\n        } else {\n            this._propagationFields[action] = {\n                fields,\n                append\n            };\n        }\n        return this;\n    }\n\n    /**\n     * Map actions and behaviours\n     * @return {Firebolt} Firebolt instance\n     */\n    mapActionsAndBehaviour (phyAction) {\n        const initedPhysicalActions = this._actions.physical;\n        const map = this._actionBehaviourMap;\n\n        for (const action in map) {\n            if (!({}).hasOwnProperty.call(action, map) && action === (phyAction || action)) {\n                let target;\n                const mapObj = map[action];\n                target = mapObj.target;\n                const touch = mapObj.touch;\n                if (!target) {\n                    target = this.context.getDefaultTargetContainer();\n                }\n                const bind = hasTouch() ? touch === true || touch === undefined : !touch;\n                bind && this.bindActionWithBehaviour(initedPhysicalActions[action],\n                    target, mapObj.behaviours);\n            }\n        }\n        return this;\n    }\n\n    registerPhysicalBehaviouralMap (map) {\n        this._actionBehaviourMap = mergeRecursive(this._actionBehaviourMap, map);\n        return this;\n    }\n\n    /**\n     * Binds a target element with an action.\n     *\n     * @param {Function} action Action method\n     * @param {string} target Class name of element\n     * @param {Array} behaviourList Array of behaviours\n     * @return {FireBolt} Instance of firebolt\n     */\n    bindActionWithBehaviour (action, targets, behaviourList) {\n        if (typeof (targets) === 'string') {\n            targets = [targets];\n        }\n        targets.forEach((target) => {\n            const mount = this.context.mount();\n            const nodes = target.node instanceof Function ? target : selectElement(mount).selectAll(target);\n            if (!nodes.empty()) {\n                if (nodes instanceof Array) {\n                    nodes.forEach((node) => {\n                        action(selectElement(node), behaviourList);\n                    });\n                } else {\n                    action(nodes, behaviourList);\n                }\n            }\n        });\n        return this;\n    }\n\n    getPropagationInf () {\n        return this._propagationInf;\n    }\n\n    getAddSetFromCriteria (criteria, propagationInf = {}) {\n        const context = this.context;\n        const filteredDataModel = propagationInf.data ? propagationInf.data :\n            context.getDataModelFromIdentifiers(criteria, 'all');\n        return {\n            model: filteredDataModel,\n            uids: criteria === null ? null : (propagationInf.data ? propagationInf.entryRowIds :\n                filteredDataModel[0].getUids())\n        };\n    }\n\n    getSelectionSets (action) {\n        const sourceId = this.context.id();\n        const propagationInf = this._propagationInf || {};\n        const propagationSource = propagationInf.sourceId;\n        let applicableSelectionSets = [];\n        if (propagationSource !== sourceId) {\n            applicableSelectionSets = [this._volatileSelectionSet[action]];\n        }\n\n        if (propagationSource) {\n            applicableSelectionSets.push(this.selectionSet()[action]);\n        }\n        return applicableSelectionSets;\n    }\n\n    getFullData () {\n        return this.context.data();\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Returns the entry and exit set information of the specified behavioural action.\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of behavioural action.\n     *\n     * @return {Object} Entry exit set information.\n     */\n    getEntryExitSet (behaviour) {\n        return this._entryExitSet[behaviour];\n    }\n}\n","import { getSetInfo, getMergedSet, getSourceFields } from '../../helper';\n\n/**\n * This is the base class has all the common functionalities needed for all behavioural actions. Any other behavioural\n * action needs to extend this class.\n *\n * @public\n * @class GenericBehaviour\n * @module GenericBehaviour\n */\nexport default class GenericBehaviour {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n    }\n\n    /**\n     * Returns entry and exit set information. This method is called by firebolt when ```dispatchBehaviour``` is called\n     * dynamically or when any physical action is triggered on the chart.\n     *\n     * @param {Object} payload Payload information.\n     * @param {Object|Array} payload.criteria Identifiers of data interacted with.\n     *\n     * @return {Array} Entry and exit set information.\n     */\n    dispatch (payload) {\n        const criteria = payload.criteria;\n        const firebolt = this.firebolt;\n        const formalName = this.constructor.formalName();\n        const selectionSets = firebolt.getSelectionSets(formalName);\n        const {\n            model: filteredDataModel,\n            uids\n        } = this.firebolt.getAddSetFromCriteria(criteria, this.firebolt.getPropagationInf());\n        const entryExitSets = selectionSets.map((selectionSet) => {\n            this.setSelectionSet(uids, selectionSet);\n            return this.getEntryExitSet(selectionSet, filteredDataModel, payload);\n        });\n\n        return entryExitSets;\n    }\n\n    /**\n     * Updates the selection set by adding uids to the instance of {@link SelectionSet} or removing them.\n     * {@link SelectionSet} keeps the information of which rows are in the entry set and exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of row ids which got affected during interaction.\n     * @param {SelectionSet} selectionSet Instance of selection set.\n     *\n     * @return {GenericBehaviour} Instance of behaviour.\n     */\n    setSelectionSet () {\n        return this;\n    }\n\n    getEntryExitSet (selectionSet, filteredDataModel, payload) {\n        const {\n            entrySet,\n            exitSet,\n            completeSet\n        } = selectionSet.getSets();\n        const propagationInf = this.firebolt.getPropagationInf();\n        const dataModel = this.firebolt.getFullData();\n        const setConfig = {\n            isSourceFieldPresent: propagationInf.isSourceFieldPresent,\n            dataModel,\n            filteredDataModel,\n            propagationData: propagationInf.data,\n            selectionSet\n        };\n\n        return {\n            entrySet: [getSetInfo('oldEntry', entrySet[0], setConfig),\n                getSetInfo('newEntry', entrySet[1], setConfig)],\n            exitSet: [getSetInfo('oldEntry', exitSet[0], setConfig),\n                getSetInfo('newExit', exitSet[1], setConfig)],\n            mergedEnter: getSetInfo('mergedEnter', getMergedSet(entrySet), setConfig),\n            mergedExit: getSetInfo('mergedExit', getMergedSet(exitSet), setConfig),\n            completeSet: getSetInfo('complete', completeSet, setConfig),\n            isSourceFieldPresent: propagationInf.isSourceFieldPresent,\n            fields: getSourceFields(propagationInf, payload.criteria),\n            sourceSelectionSet: selectionSet._volatile === true\n        };\n    }\n\n    static mutates () {\n        return false;\n    }\n\n    enable () {\n        this._enabled = true;\n    }\n\n    disable () {\n        this._enabled = false;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n}\n\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class VolatileBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n                // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                    || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            selectionSet.updateExit();\n            const { entrySet } = selectionSet.getSets();\n            selectionSet.reset(getMergedSet(entrySet));\n            selectionSet.add(addSet);\n            selectionSet.update(existingAddSet);\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n    }\n}\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n","import VolatileBehaviour from './volatile';\nimport { HIGHLIGHT } from '../../enums/behaviours';\n\nexport default class HighlightBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return HIGHLIGHT;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport * as BEHAVIOURNAMES from '../../enums/behaviours';\n\n/**\n * This is the behaviour for brushing a region on the chart. It accepts a payload\n * which contains the x and y range of the data and other configuration. It will then\n * create a selection box from the range and select the points which fall within the range.\n */\nexport default class BrushBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return BEHAVIOURNAMES.BRUSH;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport { FILTER } from '../../enums/behaviours';\n\nexport default class FilterBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return FILTER;\n    }\n\n    static mutates () {\n        return true;\n    }\n}\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class PersistentBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            const propagationInf = this.firebolt.getPropagationInf();\n            // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            if (propagationInf.propagate === false) {\n                selectionSet.updateExit();\n                const { entrySet } = selectionSet.getSets();\n                selectionSet.reset(getMergedSet(entrySet));\n                selectionSet.add(addSet);\n                selectionSet.update(existingAddSet);\n            } else {\n                // existing add set\n                if (existingAddSet.length) {\n                    selectionSet.updateExit();\n                    selectionSet.remove(existingAddSet);\n                } else {\n                    selectionSet.updateEntry();\n                    selectionSet.add(addSet);\n                }\n                const { exitSet } = selectionSet.getSets();\n                const mergedExitSet = getMergedSet(exitSet);\n                const completeSetCount = selectionSet.getCompleteSet().length;\n                if (mergedExitSet.length === completeSetCount) {\n                    selectionSet.reset();\n                }\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n\n        return this;\n    }\n}\n","import PersistentBehaviour from './persistent';\nimport { SELECT } from '../../enums/behaviours';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return SELECT;\n    }\n}\n\n","import { DimensionSubtype, MeasureSubtype } from 'muze-utils';\n/**\n * Gets the drag action configuration\n * @param {VisualUnit} instance instance of visual unit\n * @param {Object} config x y positions\n * @return {Object} Payload of behaviour\n*/\n/* istanbul ignore next */ const getDragActionConfig = (sourceInfo, config, fieldsConfig) => {\n    if (!(sourceInfo.axes.x || sourceInfo.axes.y)) {\n        return {\n            criteria: null\n        };\n    }\n\n    const axes = sourceInfo.axes;\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const axisFields = sourceInfo.fields;\n    const xField = axisFields.x[0].getMembers()[0];\n    const yField = axisFields.y[0].getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n    const dimensions = {};\n    const stPos = config.startPos;\n    const endPos = config.endPos;\n\n    if (stPos.x === endPos.x && stPos.y === endPos.y) {\n        return {\n            criteria: null\n        };\n    }\n\n    const dragDim = xFieldType === MeasureSubtype.CONTINUOUS ? (yFieldType === MeasureSubtype.CONTINUOUS ?\n        ['x', 'y'] : ['y']) : ['x'];\n    const criteria = {};\n    const isXDimension = xFieldType === DimensionSubtype.CATEGORICAL;\n    const isYDimension = yFieldType === DimensionSubtype.CATEGORICAL;\n    const xRange = xAxis.invertExtent(stPos.x, endPos.x);\n    const yRange = yAxis.invertExtent(stPos.y, endPos.y);\n    const selectedDomains = {\n        x: stPos.x === endPos.x ? [] : (isXDimension ? xRange : xRange.sort((a, b) => a - b)),\n        y: stPos.y === endPos.y ? [] : (isYDimension ? yRange : yRange.sort((a, b) => a - b))\n    };\n    const rangeObj = {};\n\n    if (dragDim.length === 2) {\n        rangeObj[xField] = selectedDomains.x;\n        rangeObj[yField] = selectedDomains.y;\n        if (xField === yField) {\n            const xdom = selectedDomains.x;\n            const ydom = selectedDomains.y;\n            const min = xdom[0] > ydom[0] ? ydom : xdom;\n            const max = min === ydom ? xdom : ydom;\n            if (min[1] < max[0]) {\n                rangeObj[xField] = [];\n            } else {\n                rangeObj[xField] = [max[0], min[1] < max[1] ? min[1] : max[1]];\n            }\n            dimensions.x = [stPos.x, endPos.x];\n            dimensions.y = [stPos.y, endPos.y];\n        }\n    } else {\n        criteria[dragDim[0]] = selectedDomains[dragDim[0]] || [];\n\n        if (dragDim[0] === 'x') {\n            rangeObj[xField] = criteria.x;\n            if (xFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.x = (config.snap && stPos.x !== endPos.x) ? xAxis.getNearestRange(stPos.x, endPos.x) :\n                    [stPos.x, endPos.x];\n            }\n        } else {\n            rangeObj[yField] = criteria.y;\n            if (yFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.y = (config.snap && stPos.y !== endPos.y) ? yAxis.getNearestRange(stPos.y, endPos.y) :\n                    [stPos.y, endPos.y];\n            }\n        }\n    }\n\n    return {\n        criteria: rangeObj,\n        dimensions\n    };\n};\n\nexport default getDragActionConfig;\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './drag-action-config';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const attachDragEvent = (targetEl, behaviours, firebolt, touch) => {\n    let startPos = {};\n    let endPos = {};\n    let drawingInf;\n\n    const d3Drag = getD3Drag();\n    let touchStart;\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n        drawingInf = firebolt.context.getDrawingContext();\n        touchStart = new Date().getTime();\n    }).on('drag', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        if (touch && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos\n        }, firebolt.context.data().getFieldsConfig());\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }).on('end', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        const duration = new Date().getTime() - touchStart;\n\n        if (touch && duration > 100 && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos,\n            snap: true\n        }, firebolt.context.data().getFieldsConfig());\n        payload.dragEnd = true;\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }));\n};\n\n","import { getClientPoint, getEvent } from 'muze-utils';\nimport { CONSOLIDATED, FRAGMENTED } from '../../enums/constants';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} instance instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const context = firebolt.context;\n        const tooltipConf = context.config().interaction.tooltip;\n        const mode = tooltipConf.mode;\n        const pos = getClientPoint(context.getDrawingContext().svgContainer, event);\n        const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n            getAllPoints: mode === CONSOLIDATED || mode === FRAGMENTED,\n            data: args,\n            event\n        });\n        const payload = {\n            criteria: nearestPoint ? nearestPoint.id : null,\n            showInPosition: nearestPoint.showInPosition,\n            target: nearestPoint.target,\n            position: pos,\n            mode\n        };\n\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                            criteria: null\n                        }));\n                    });\n};\n\nexport default hover;\n","export const CLASSPREFIX = 'muze';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\n\n","import { getClientPoint } from 'muze-utils';\n\nexport const generatePayloadFromEvent = function (args, event, firebolt) {\n    const context = firebolt.context;\n    const pos = getClientPoint(context.getDrawingContext().svgContainer, event.touches ? event.touches[0] : event);\n    const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n        data: args,\n        event\n    });\n    return {\n        criteria: nearestPoint ? nearestPoint.id : null,\n        showInPosition: nearestPoint.showInPosition,\n        target: nearestPoint.target,\n        position: pos\n    };\n};\n","import { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport { longtouch } from './longtouch';\nimport { touchdrag } from './touch-drag';\nimport * as ACTIONNAMES from '../../enums/actions';\nimport click from './click';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click,\n    [ACTIONNAMES.LONGTOUCH]: longtouch,\n    [ACTIONNAMES.TOUCHDRAG]: touchdrag\n};\n\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt);\n};\n\nexport default drag;\n","/* global setTimeout */\nimport { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nexport const longtouch = firebolt => (targetEl, behaviours) => {\n    let event;\n    let touchEnd;\n    const dispatchBehaviour = function (args) {\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    touchEnd = false;\n    event = getEvent();\n    targetEl.on('touchstart', (args) => {\n        event = getEvent();\n        touchEnd = false;\n        setTimeout(() => {\n            if (!touchEnd) {\n                dispatchBehaviour(args);\n            } else {\n                behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                    criteria: null\n                }));\n            }\n        }, 100);\n    }).on('touchend', () => {\n        touchEnd = true;\n    });\n};\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const touchdrag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt, true);\n};\n\n","export const PROPS = {\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import GenericSideEffect from './generic-sideeffect';\n\nexport default GenericSideEffect;\n","import { mergeRecursive, getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { PROPS } from './props';\n\n/**\n * This is the base class of all side effects. It contains all common methods like setting configuration, disabling,\n * enabling side effect, etc. Every new side effect has to inherit this class or {@link SpawnableSideEffect} or\n * {@link SurrogateSideEffect} class. All side effects are initialized by firebolt. The instance of firebolt is\n * passed on initialization. The firebolt instance contains ```context``` which is the instance of visual unit with\n * which the firebolt is attached.\n *\n * @public\n * @class\n * @module GenericSideEffect\n */\nexport default class GenericSideEffect {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n        this._strategy = 'default';\n        this._config = {};\n        this._id = getUniqueId();\n        this._strategies = {};\n        generateGetterSetters(this, PROPS);\n        this.config(this.constructor.defaultConfig());\n    }\n\n    /**\n     * Returns the default configuration of the side effect.\n     *\n     * @public\n     * @return {Object} Default configuration of side effect.\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the formal name of a side effect. This method must be implemented by all side effects which changes\n     * or adds any element in the visualization.\n     *\n     * @return {string} Formal name of side effect.\n     */\n    static formalName () {\n        return 'generic';\n    }\n\n    static target () {\n        return 'all';\n    }\n\n    /**\n     * Returns true if the side effects mutates the data of chart.\n     *\n     * @public\n     *\n     * @return {boolean} If the side effect mutates the data of chart.\n     */\n    static mutates () {\n        return false;\n    }\n\n    /**\n     * Sets or gets the configuration of side effect.\n     *\n     * When setter,\n     * @param {Object} config Configuration of side effect.\n     * @return {GenericSideEffect} Side effect instance.\n     *\n     * When getter,\n     * @return {Object} Side effect configuration.\n     */\n    config (...params) {\n        if (params.length) {\n            this._config = mergeRecursive(this._config, params[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    disable () {\n        this._enabled = false;\n        return this;\n    }\n\n    enable () {\n        this._enabled = true;\n        return this;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n\n    /**\n     * Applies the interaction effect on the chart. This is where the implemntation of the side effect is defined.\n     *\n     * @param {Object} selectionSet Contains the entry and exit set of data which got affected during interaction.\n     * @param {Object} selectionSet.mergedEnter Combined previous entry and new entry set.\n     * @param {DataModel} selectionSet.mergedEnter.model Instance of data model containing all rows which got\n     * affected during interaction.\n     * @param {Array} selectionSet.mergedEnter.uids Ids of all rows which were affected during interaction.\n     * @param {Object} selectionSet.mergedExit Combined previous exit and new exit set.\n     * @param {DataModel} selectionSet.mergedExit.model Instance of data model containing rows which were not affected\n     * during interaction.\n     * @param {Array} selectionSet.mergedExit.uids Ids of all rows which were not affected during interaction.\n     * @param {Object} selectionSet.entrySet Entry set information.\n     * @param {Array} selectionSet.entrySet[0].uids All row ids which got affected during previous interaction.\n     * @param {Array} selectionSet.entrySet[1].uids All row ids which got affected during current interaction.\n     * @param {Array} selectionSet.exitSet[0].uids All row ids which were not affected during previous interaction.\n     * @param {Array} selectionSet.exitSet[1].uids All row ids which were not affected during current interaction.\n     * @param {Object} payload Payload information of the behavioural action on trigger of which this side effect\n     * is applied.\n     * @param {Object} options Optional information for side effect like strategy, etc.\n     */\n    apply () {\n        return this;\n    }\n\n    /**\n     * Adds a new strategy method for this side effect. The strategy method is implemented by side effect class.\n     *\n     * @param {string} name Name of the strategy.\n     * @param {Function} fn Strategy method.\n     *\n     * @return {GenericSideEffect} Instance of side effect.\n     */\n    setStrategy (name, fn) {\n        if (fn) {\n            this._strategies[name] = fn;\n        }\n        return this;\n    }\n}\n","import GenericSideEffect from './generic';\n\n/**\n * This class is inherited by all side effects which changes the look of any existing elements in the visualization.\n * For example, if a side effect wants to change the color of bar plots, then it is a surrogate side effect.\n *\n * To use this,\n * ```\n *      const SurrogateSideEffect = muze.SideEffects.standards.SurrogateSideEffect;\n *\n *      class BarColorChanger extends SurrogateSideEffect {\n *          static formalName () {\n *              return 'colorChanger';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n *\n * @module SurrogateSideEffect\n * @class\n * @extends GenericSideEffect\n */\nexport default class SurrogateSideEffect extends GenericSideEffect {\n    /**\n     * Applies or removes interaction styles from plot elements. An array of row ids needs to be passed\n     * which identifies the plot elements and applies styles to them.\n     *\n     * To apply the interaction style,\n     * ```\n     *      const entryRowIds = entrySet[0].uids;\n     *      const interactionStyle = [{\n     *          type: 'fill',\n     *          intensity: [0, 0, 15, 0] // hsla configuration\n     *      }];\n     *\n     *      this.applyInteractionStyle(entryRowIds, interactionStyle, 'brighten', true);\n     * ```\n     * @public\n     * @param {Array} set Array of row ids.\n     * @param {Array} config Style configuration.\n     * @param {Object} config[0] fill or stroke configuration.\n     * @param {string} config[0].type Type of style - fill or stroke.\n     * @param {Array} config[0].intensity hsla configuration.\n     * @param {string} interactionType Type of interaction. This is needed for storing the styles for\n     * each type of interaction in the plot elements.\n     * @param {boolean} apply Whether to apply or remove the interaction style.\n     *\n     * @return {SurrogateSideEffect} Instance of surrogate side effect.\n     */\n    applyInteractionStyle (set, config = {}, interactionType, apply) {\n        const layers = this.firebolt.context.layers();\n        layers.forEach(layer => layer.config().interactive !== false &&\n            layer.applyInteractionStyle(interactionType, set.uids, apply));\n        return this;\n    }\n}\n","import { makeElement } from 'muze-utils';\n\nimport GenericSideEffect from './generic';\n\n/**\n * Any side effect which will add any new element to the chart like drawing a rectangular box or any annotation over\n * the chart needs to inherit this class. This class has methods which returns the container where the dom elements\n * needs to be created.\n *\n * To use this,\n * ```\n *      const SpawnableSideEffect = muze.SideEffects.standards.SpawnableSideEffect;\n *\n *      class SelectionBox extends SpawnableSideEffect {\n *          static formalName () {\n *              return 'selectionBox';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n * @class\n * @extends GenericSideEffect\n * @module SpawnableSideEffect\n */\nexport default class SpawnableSideEffect extends GenericSideEffect {\n    /**\n     * Creates a html or svg element in the container.\n     *\n     * @public\n     * @param {SVGElement|HTMLElement} container Container where the dom element will be rendered.\n     * @param {string} elemType Type of dom element.\n     * @param {Array} data Array of objects with which the dom elements will be binded.\n     * @param {string} className class name of the element.\n     *\n     * @return {Selection} D3 Selection of the element.\n     */\n    createElement (container, elemType, data, className, callbacks) {\n        return makeElement(container, elemType, data, className, callbacks);\n    }\n\n    /**\n     * Returns the drawing information for side effect like svg container, dimensions of the visual unit.\n     *\n     * @public\n     * @return {Object} Drawing information for side effect.\n     * ```\n     *      sideEffectGroup: // svg container where the side effect needs to be appended.\n     *      svgContainer: // svg container of the {@link VisualUnit}.\n     *      htmlContainer: // html div container of the {@link VisualUnit}.\n     *      width: // Width of the {@link VisualUnit}\n     *      height: // Height of the {@link VisualUnit}\n     * ```\n     */\n    drawingContext (...drawingContext) {\n        if (drawingContext.length) {\n            this._drawingContext = drawingContext[0];\n            return this;\n        }\n        return this._drawingContext();\n    }\n\n    show () {\n        return this;\n    }\n\n    hide () {\n        return this;\n    }\n}\n","import { selectElement } from 'muze-utils';\n\nexport const getBoxDimensionsFromPayload = (payload, axes, axisFields) => {\n    let x1;\n    let x2;\n    let y1;\n    let y2;\n    let xRange;\n    let yRange;\n    let direction;\n    const criteria = payload.criteria;\n    const dimensions = payload.dimensions || {};\n    const xDim = dimensions.x;\n    const yDim = dimensions.y;\n\n    if (criteria === null) {\n        return null;\n    }\n\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const xLinear = xAxis.constructor.type() === 'linear';\n    const yLinear = yAxis.constructor.type() === 'linear';\n    const xField = `${axisFields.x[0]}`;\n    const yField = `${axisFields.y[0]}`;\n    const xCriteria = criteria[xField];\n    const yCriteria = criteria[yField];\n\n    if (xCriteria && xCriteria[0] instanceof Array) {\n        xRange = xCriteria[0];\n        yRange = xCriteria[1];\n    } else {\n        xRange = xCriteria || [];\n        yRange = yCriteria || [];\n    }\n    direction = xCriteria && yCriteria ? 'both' : (xCriteria ? 'vertical' : 'horizontal');\n    if (xRange && xRange.length) {\n        if ((yAxis.constructor.type() === 'band' && xLinear)) {\n            x1 = x2 = undefined;\n            direction = 'horizontal';\n        } else {\n            const domain = xAxis.domain();\n            const bandScale = xAxis.constructor.type() === 'band';\n            let x1Val;\n            let x2Val;\n            if (bandScale) {\n                let x1DomainIndex = domain.indexOf(xRange[0]);\n                let x2DomainIndex = domain.indexOf(xRange[xRange.length - 1]);\n                [x1DomainIndex, x2DomainIndex] = [x1DomainIndex, x2DomainIndex].sort((a, b) => a - b);\n                x1Val = domain[x1DomainIndex];\n                x2Val = domain[x2DomainIndex];\n            } else {\n                x1Val = xRange[0];\n                x2Val = xRange[xRange.length - 1];\n            }\n            x1 = xAxis.getScaleValue(x1Val);\n            x2 = xAxis.getScaleValue(x2Val);\n            x2 += bandScale ? xAxis.getUnitWidth() : 0;\n        }\n    } else {\n        x1 = x2 = undefined;\n    }\n    if (yRange && yRange.length) {\n        if ((xAxis.constructor.type() === 'band' && yLinear)) {\n            y1 = y2 = undefined;\n            direction = 'vertical';\n        } else {\n            const domain = yAxis.domain();\n            const bandScale = yAxis.constructor.type() === 'band';\n            let y1Val;\n            let y2Val;\n            if (bandScale) {\n                let y1DomainIndex = domain.indexOf(yRange[0]);\n                let y2DomainIndex = domain.indexOf(yRange[yRange.length - 1]);\n                [y1DomainIndex, y2DomainIndex] = [y1DomainIndex, y2DomainIndex].sort(((a, b) => b - a));\n                y1Val = domain[y1DomainIndex];\n                y2Val = domain[y2DomainIndex];\n            } else {\n                y1Val = yRange[0];\n                y2Val = yRange[yRange.length - 1];\n            }\n            y1 = yAxis.getScaleValue(y1Val);\n            y2 = yAxis.getScaleValue(y2Val);\n            y2 += yAxis.constructor.type() === 'band' ? yAxis.getUnitWidth() : 0;\n        }\n    } else {\n        y1 = y2 = undefined;\n    }\n\n    if ((yLinear && xLinear) || !payload.dragEnd) {\n        if (xDim) {\n            [x1, x2] = xDim;\n        }\n        if (yDim) {\n            [y1, y2] = yDim;\n        }\n    }\n\n    return {\n        dimension: {\n            x1,\n            x2,\n            y1,\n            y2\n        },\n        direction\n    };\n};\n\nexport const changeVisibility = (context, sideEffectGroup, visible) => {\n    const config = context.config();\n    const className = config.defClassName;\n    const classPrefix = config.classPrefix;\n    selectElement(sideEffectGroup).selectAll(`.${classPrefix}-${className}`)\n                    .style('display', visible ? 'block' : 'none');\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    isValidValue\n} from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport './styles.scss';\nimport SpawnableSideEffect from '../spawnable';\nimport { selectionBoxDrag } from '../../actions/physical/selection-box-drag';\nimport { getBoxDimensionsFromPayload, changeVisibility } from './helper';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\nclass SelectionBox extends SpawnableSideEffect {\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            defClassName: 'selection-box-group',\n            className: '',\n            classPrefix: CLASSPREFIX,\n            box: {\n                defClassName: 'selection-box',\n                className: ''\n            },\n            transition: {\n                duration: 200\n            }\n        };\n    }\n\n    static formalName () {\n        return 'selectionBox';\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     * @param {Object} dimension Dimensions of the selection box.\n     * @param {number} dimension.x1 Starting x position\n     * @param {number} dimension.x2 Ending x position\n     * @param {number} dimension.y1 Starting y position\n     * @param {number} dimension.y2 Ending y position\n     * @param {Object} conf Configuration needed to draw the selection box\n     * @param {number} unitWidth Width of the visual unit.\n     * @param {number} unitHeight Height of the visual unit.\n     */\n    apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const config = this._config;\n        const boxConf = config.box;\n        const firebolt = this.firebolt;\n        const drawingInf = this.drawingContext();\n        const mountPoint = drawingInf.sideEffectGroup;\n        const unitWidth = drawingInf.width;\n        const unitHeight = drawingInf.height;\n        const classPrefix = config.classPrefix;\n        const selectionGroupClassName = config.defClassName;\n\n        if (payload.criteria === null) {\n            this.hide(drawingInf);\n            return this;\n        }\n\n        const sourceInf = firebolt.context.getSourceInfo();\n        const { dimension, direction } = getBoxDimensionsFromPayload(payload, sourceInf.axes,\n            sourceInf.fields);\n        const transition = payload.dragEnd && config.transition;\n\n        if (direction === 'both' || direction === 'vertical') {\n            x = Math.min(dimension.x1, dimension.x2);\n            width = Math.abs(dimension.x2 - dimension.x1);\n        } else {\n            x = 0;\n            width = unitWidth;\n        }\n        if (direction === 'both' || direction === 'horizontal') {\n            y = Math.min(dimension.y1, dimension.y2);\n            height = Math.abs(dimension.y2 - dimension.y1);\n        } else {\n            height = unitHeight;\n            y = 0;\n        }\n        this.show(drawingInf);\n        // Create the data array for drawing the rectangle\n        const points = [\n            {\n                x,\n                y,\n                width,\n                height\n            }\n        ];\n        // Create the container group for selection box.\n        const selectionGroup = makeElement(selectElement(mountPoint), 'g', [1],\n            `.${classPrefix}-${selectionGroupClassName}`);\n        const sideEffect = this;\n        const selection = selectionGroup.selectAll('rect').data(points);\n        const selectionBox = selection.enter().append('rect')\n                        .each(function () {\n                            selectionBoxDrag(firebolt)(selectElement(this), ['brush'], sideEffect);\n                        })\n                        .merge(selection)\n                        .each(function (attrs) {\n                            let element = selectElement(this);\n                            transition && (element = element.transition().duration(transition.duration));\n                            for (const key in attrs) {\n                                if ({}.hasOwnProperty.call(attrs, key)) {\n                                    isValidValue(attrs[key]) && element.attr(key, attrs[key]);\n                                }\n                            }\n                        });\n        // Get the qualified class name for selection box rectangle\n        const boxClassName = getQualifiedClassName(boxConf.defClassName, this._id, classPrefix);\n        selectionBox.classed(boxClassName.join(' '), true);\n        selectionBox.classed(boxConf.className, true);\n\n        return this;\n    }\n\n    hide (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, false);\n    }\n\n    show (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, true);\n    }\n}\n\nexport default SelectionBox;\n\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './helpers/drag-action-config';\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let subject;\n    let drawingInf;\n    const context = firebolt.context;\n    const onDrag = (payload) => {\n        behaviours.forEach(action => firebolt.dispatchBehaviour(action, payload));\n    };\n    const d3Drag = getD3Drag();\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        drawingInf = context.getDrawingContext();\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        subject.x += event.dx;\n        subject.y += event.dy;\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                }\n            }, context.data().getFieldsConfig());\n            onDrag(payload);\n        }\n    }).on('end', () => {\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                },\n                snap: true\n            }, context.data().getFieldsConfig());\n            payload.dragEnd = true;\n            onDrag(payload);\n        }\n    }));\n};\n","export const CLASSPREFIX = 'muze';\nexport const ARROW_RIGHT = 'right';\nexport const ARROW_TOP = 'top';\nexport const ARROW_BOTTOM = 'bottom';\nexport const ARROW_LEFT = 'left';\nexport const TOOLTIP_LEFT = 'left';\nexport const TOOLTIP_RIGHT = 'right';\nexport const TOOLTIP_BOTTOM = 'bottom';\nexport const TOOLTIP_TOP = 'top';\nexport const INITIAL_STYLE = {\n    position: 'absolute',\n    width: 0,\n    height: 0\n};\n","import { CLASSPREFIX } from './constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'tooltip-box',\n    connectorClassName: 'tooltip-connectors',\n    className: '',\n    row: {\n        margin: 0\n    },\n    content: {\n        spacing: 5,\n        iconContainerSize: 10,\n        iconScale: 1,\n        iconShape: 'circle',\n        iconColor: '#ff0000',\n        rowMargin: '0px',\n        margin: 10,\n        separator: ':',\n        className: 'tooltip-content-container',\n        parentClassName: 'tooltip-content-parent-container'\n    },\n    arrow: {\n        size: 10,\n        disabled: false,\n        defClassName: 'tooltip-arrow',\n        className: '',\n        color: 'rgba(195,195,195,0.85)'\n    }\n};\n","import { getQualifiedClassName } from 'muze-utils';\nimport { TOOLTIP_LEFT, TOOLTIP_RIGHT, ARROW_RIGHT, ARROW_LEFT, TOOLTIP_BOTTOM } from './constants';\n\nexport const getArrowPos = (orient, dim, measurement, config) => {\n    let arrowPos;\n    const { x, y, boxHeight, boxWidth } = measurement;\n    const arrowDisabled = config.arrow.disabled;\n    const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n\n    if (orient === ARROW_LEFT || orient === ARROW_RIGHT) {\n        let start = 0;\n        let diff = boxHeight / 2;\n        const plotBottom = dim.y + dim.height;\n        const boxBottom = y + boxHeight;\n\n        if (dim.y > y) {\n            start = dim.y - y;\n            diff = (plotBottom >= boxBottom ? (boxBottom - dim.y) : dim.height) / 2;\n        } else if (boxBottom > plotBottom) {\n            diff = Math.abs(y - (dim.y + dim.height)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    } else {\n        let start = 0;\n        let diff = boxWidth / 2;\n        const plotRight = dim.x + dim.width;\n        const boxRight = x + boxWidth;\n\n        if (dim.x > x) {\n            start = dim.x - x;\n            diff = (plotRight >= boxRight ? (boxRight - dim.x) : dim.width) / 2;\n        } else if (boxRight > plotRight) {\n            diff = Math.abs(x - (dim.x + dim.width)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    }\n    return arrowPos;\n};\n\n/**\n * Places the arrow in the specified arrow position. It also applies appropriate arrow\n * class name to the arrow element.\n * @param {string} position Left, bottom or right position of the arrow;\n * @param {number} arrowPos position of arrow in pixels\n * @return {Tooltip} Instance of tooltip.\n */\nexport const placeArrow = (context, position, arrowPos) => {\n    const tooltipArrow = context._tooltipArrow;\n    const tooltipBackground = context._tooltipBackground;\n    const config = context._config;\n    const classPrefix = config.classPrefix;\n    const arrowConf = config.arrow;\n    const className = getQualifiedClassName(arrowConf.defClassName, context._id, config.classPrefix);\n\n    tooltipArrow.style('display', 'block');\n    tooltipArrow.attr('class', `${className.join(' ')}`);\n    if (position === TOOLTIP_LEFT || position === TOOLTIP_RIGHT) {\n        tooltipArrow.style('top', `${arrowPos}px`);\n        tooltipArrow.style('left', '');\n        tooltipBackground.style('top', `${arrowPos}px`);\n        tooltipBackground.style('left', '');\n    } else {\n        position === TOOLTIP_BOTTOM ? tooltipArrow.style('top', '100%') : tooltipArrow.style('top',\n            `-${arrowConf.size}px`);\n        tooltipArrow.style('left', `${arrowPos}px`);\n        position === TOOLTIP_BOTTOM ? tooltipBackground.style('top', '100%') : tooltipBackground.style('top',\n            `-${arrowConf.size + 3}px`);\n        tooltipBackground.style('left', `${arrowPos}px`);\n    }\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow`, true);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${context._arrowOrientation}`, false);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${position}`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${context._arrowOrientation}`, false);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${position}`, true);\n    return this;\n};\n\nexport const reorderContainers = (parentContainer, className) => {\n    parentContainer.selectAll(className).sort((a, b) => a - b);\n};\n","import {\n    selectElement,\n    mergeRecursive,\n    makeElement,\n    setAttrs,\n    setStyles,\n    getSymbol,\n    isSimpleObject\n} from 'muze-utils';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class is used to manage the content of tooltip.\n */\nexport default class Content {\n    /**\n     * Creates an instance of content.\n     */\n    constructor () {\n        this._model = null;\n        this._formatter = null;\n        this._config = this.constructor.defaultConfig();\n    }\n   /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        const config = defaultConfig.content;\n        config.classPrefix = defaultConfig.classPrefix;\n        return config;\n    }\n\n    config (...c) {\n        if (c.length > 0) {\n            this._config = mergeRecursive(this._config, c[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Update model. The format contains presentation strategy which determines how to show the content.\n     * If no strategy is mentioned then default is to show key value pair\n    */\n    update (item) {\n        this._model = item.model;\n        this._formatter = item.formatter;\n        return this;\n    }\n\n    context (ctx) {\n        this._context = ctx;\n        return this;\n    }\n\n    render (mount) {\n        let data;\n        const config = this._config;\n        const iconContainerSize = config.iconContainerSize;\n        const formatter = this._formatter;\n        const rowMargin = config.rowMargin;\n        const model = this._model;\n\n        this._mount = mount;\n        if (model instanceof Array) {\n            data = model;\n        } else {\n            data = formatter(this._model, this.config(), this._context);\n        }\n\n        if (data instanceof Function) {\n            mount.html(data());\n        } else {\n            let content = data;\n            let displayFormat = 'default';\n\n            if (isSimpleObject(data)) {\n                content = data.content;\n                displayFormat = data.displayFormat;\n            }\n\n            const body = makeElement(mount, 'div', [displayFormat], `${config.classPrefix}-tooltip-content`, {},\n                d => d);\n\n            if (displayFormat === 'table') {\n                const table = makeElement(body, 'table', [1], `${config.classPrefix}-tooltip-table`);\n                const tbody = makeElement(table, 'tbody', [1], `${config.classPrefix}-tooltip-table-tbody`);\n                const rows = makeElement(tbody, 'tr', content, `${config.classPrefix}-tooltip-table-row`);\n                rows.each(function (d, i) {\n                    selectElement(this).classed(`${config.classPrefix}-tooltip-table-row-${i}`, true);\n                });\n                const cells = makeElement(rows, 'td', d => d, `${config.classPrefix}-tooltip-table-cell`);\n                cells.each(function (d) {\n                    selectElement(this).html(d);\n                });\n            } else {\n                const rows = makeElement(body, 'div', content, `${config.classPrefix}-tooltip-row`);\n                const cells = makeElement(rows, 'span', d => d, `${config.classPrefix}-tooltip-content`);\n                cells.attr('class', `${config.classPrefix}-tooltip-content`);\n                setStyles(rows, {\n                    margin: rowMargin\n                });\n                setStyles(cells, {\n                    display: 'inline-block',\n                    'margin-right': `${config.spacing}px`\n                });\n\n                cells.each(function (d) {\n                    const el = selectElement(this);\n                    el.html('');\n                    if (d instanceof Object) {\n                        if (d.type === 'icon') {\n                            const svg = makeElement(el, 'svg', [1]);\n                            const path = makeElement(svg, 'path', [1]);\n                            const shape = d.shape instanceof Function ? d.shape : getSymbol(d.shape);\n\n                            setAttrs(svg, {\n                                x: 0,\n                                y: 0,\n                                width: iconContainerSize,\n                                height: iconContainerSize\n                            });\n                            setAttrs(path, {\n                                d: shape.size(d.size)(),\n                                transform: `translate(${iconContainerSize / 2}, ${iconContainerSize / 2})`\n                            });\n                            setStyles(path, {\n                                fill: d.color\n                            });\n                            setStyles(svg, {\n                                width: `${iconContainerSize}px`,\n                                height: `${iconContainerSize}px`\n                            });\n                        } else {\n                            el.html(d.value);\n                            d.className && el.classed(d.className, true);\n                            setStyles(el, d.style);\n                        }\n                    } else {\n                        el.html(d);\n                    }\n                });\n            }\n        }\n        return this;\n    }\n\n    clear () {\n        this._model = null;\n        return this;\n    }\n}\n","import {\n    mergeRecursive,\n    getQualifiedClassName,\n    getUniqueId,\n    selectElement,\n    setStyles,\n    makeElement\n} from 'muze-utils';\nimport { ARROW_BOTTOM, ARROW_LEFT, ARROW_RIGHT, TOOLTIP_LEFT, TOOLTIP_RIGHT, TOOLTIP_BOTTOM, TOOLTIP_TOP,\n    INITIAL_STYLE } from './constants';\nimport { defaultConfig } from './default-config';\nimport { getArrowPos, placeArrow, reorderContainers } from './helper';\nimport './styles.scss';\nimport Content from './content';\n\n/**\n * This component is responsible for creating a tooltip element. It appends the tooltip\n * in the body element.\n * @class Tooltip\n */\nexport default class Tooltip {\n    /**\n     * Initializes the tooltip with the container element and configuration\n     * @param {HTMLElement} container container where the tooltip will be mounted.\n     * @param {string} className Class name of the tooltip.\n     */\n    constructor (htmlContainer, svgContainer) {\n        let connectorContainer = svgContainer;\n        this._id = getUniqueId();\n        this._config = {};\n        this.config({});\n        const tooltipConf = this._config;\n        const classPrefix = tooltipConf.classPrefix;\n        const contentClass = tooltipConf.content.parentClassName;\n        const container = makeElement(htmlContainer, 'div', [1], `${classPrefix}-tooltip-container`);\n        this._container = container;\n        this._tooltipContainer = container.append('div').style('position', 'absolute');\n        this._contentContainer = this._tooltipContainer.append('div').attr('class', `${classPrefix}-${contentClass}`);\n        this._tooltipBackground = this._tooltipContainer.append('div').style('position', 'relative');\n        this._tooltipArrow = this._tooltipContainer.append('div');\n\n        if (!svgContainer) {\n            connectorContainer = htmlContainer.append('svg').style('pointer-events', 'none');\n        }\n        this._contents = {};\n        this._tooltipConnectorContainer = selectElement(connectorContainer)\n            .append('g')\n            .attr('class', `${tooltipConf.classPrefix}-${tooltipConf.connectorClassName}`);\n        const id = this._id;\n        const defClassName = tooltipConf.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, id, tooltipConf.classPrefix);\n\n        setStyles(this._tooltipArrow, INITIAL_STYLE);\n        setStyles(this._tooltipBackground, INITIAL_STYLE);\n        this.addClass(qualifiedClassName.join(' '));\n        this.addClass(tooltipConf.className);\n        this.hide();\n    }\n\n    /**\n     * Sets the configuration of tooltip.\n     * @param {Object} config Configuration of tooltip\n     * @return {Tooltip} Instance of tooltip\n     */\n    config (...config) {\n        if (config.length > 0) {\n            const defConf = mergeRecursive({}, this.constructor.defaultConfig());\n            this._config = mergeRecursive(defConf, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n    /**\n     * Sets the class name of tooltip\n     * @param {string} className tooltip class name\n     * @return {Tooltip} Instance of tooltip.\n     */\n    addClass (className) {\n        this._tooltipContainer.classed(className, true);\n        return this;\n    }\n\n    context (...ctx) {\n        if (ctx.length) {\n            this._context = ctx[0];\n            return this;\n        }\n        return this._context;\n    }\n\n    content (name, data, contentConfig = {}) {\n        const config = this.config();\n        const { classPrefix } = config;\n        const contentClass = config.content.className;\n        const formatter = config.formatter;\n        const className = contentConfig.className || `${classPrefix}-${contentClass}-${name}`;\n        const content = this._contents[name] = this._contents[name] || new Content();\n        const container = makeElement(this._contentContainer, 'div', [contentConfig.order], className);\n        container.attr('class', `${classPrefix}-${contentClass} ${className}`);\n        reorderContainers(this._contentContainer, `.${classPrefix}-${contentClass}`);\n        const contentConf = config.content;\n        contentConfig.classPrefix = this._config.classPrefix;\n        content.config(contentConf);\n\n        if (data === null) {\n            content.clear();\n            container.remove();\n            delete this._contents[name];\n        } else {\n            content.update({\n                model: data,\n                formatter: contentConfig.formatter || formatter\n            });\n            content.context(this._context);\n            content.render(container);\n        }\n\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n        }\n        return this;\n    }\n\n    getContents () {\n        return Object.values(this._contents);\n    }\n\n    /**\n     * Positions the tooltip at the given x and y position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Tooltip} Instance of tooltip.\n     */\n    position (x, y, conf = {}) {\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n            return this;\n        }\n        this.show();\n        const target = this._target;\n        const repositionArrow = conf.repositionArrow;\n\n        if (target && repositionArrow) {\n            const node = this._tooltipContainer.node();\n            const config = this._config;\n            const arrowDisabled = config.arrow.disabled;\n            const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n            const arrowOrient = this._arrowOrientation;\n            const outsidePlot = arrowOrient === ARROW_LEFT || arrowOrient === ARROW_RIGHT ?\n                (y + node.offsetHeight - arrowWidth) < target.y || y > (target.y + target.height) :\n                (x + node.offsetWidth - arrowWidth) < target.x || x > (target.x + target.width);\n\n            if (!arrowDisabled) {\n                if (outsidePlot) {\n                    let path;\n                    this._tooltipArrow.style('display', 'none');\n                    this._tooltipBackground.style('display', 'none');\n                    this._tooltipConnectorContainer.style('display', 'block');\n                    const connector = this._tooltipConnectorContainer.selectAll('path').data([1]);\n                    const enter = connector.enter().append('path');\n                    if (arrowOrient === ARROW_LEFT) {\n                        path = `M ${x} ${y + node.offsetHeight / 2} L ${target.x + target.width}`\n                            + ` ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_RIGHT) {\n                        path = `M ${x + node.offsetWidth} ${y + node.offsetHeight / 2}`\n                                + ` L ${target.x} ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_BOTTOM) {\n                        path = `M ${x + node.offsetWidth / 2} ${y + node.offsetHeight}`\n                            + ` L ${target.x + target.width / 2} ${target.y}`;\n                    }\n                    enter.merge(connector).attr('d', path).style('display', 'block');\n                } else {\n                    const arrowPos = getArrowPos(arrowOrient, target, {\n                        x,\n                        y,\n                        boxHeight: node.offsetHeight,\n                        boxWidth: node.offsetWidth\n                    }, this._config);\n\n                    placeArrow(this, this._arrowOrientation, arrowPos);\n                    this._tooltipConnectorContainer.style('display', 'none');\n                }\n            }\n        }\n\n        const offset = this._offset || {\n            x: 0,\n            y: 0\n        };\n        this._tooltipContainer.style('left', `${offset.x + x}px`).style('top',\n            `${offset.y + y}px`);\n\n        return this;\n    }\n\n    /**\n     * Positions the tooltip relative to a rectangular box. It takes care of tooltip overflowing the\n     * boundaries.\n     * @param {Object} dim Dimensions of the plot.\n     */\n    positionRelativeTo (dim, tooltipConf = {}) {\n        let obj;\n        let orientation = tooltipConf.orientation;\n        this.show();\n        if (!dim) {\n            this.hide();\n            return this;\n        }\n\n        const extent = this._extent;\n        const node = this._tooltipContainer.node();\n\n        this._tooltipContainer.style('top', '0px')\n                        .style('left', '0px');\n        const offsetWidth = node.offsetWidth + 2;\n        const offsetHeight = node.offsetHeight + 2;\n        const config = this._config;\n        const offset = this._offset;\n        const arrowDisabled = config.arrow.disabled;\n        const arrowSize = arrowDisabled ? 0 : config.arrow.size;\n        const draw = tooltipConf.draw !== undefined ? tooltipConf.draw : true;\n        const topSpace = dim.y;\n        // When there is no space in right\n        const dimX = dim.x + dim.width + offset.x;\n        const rightSpace = extent.width - dimX;\n        const leftSpace = dim.x + offset.x - extent.x;\n        const positionTop = topSpace > (offsetHeight + arrowSize);\n        const positionRight = rightSpace >= offsetWidth + arrowSize;\n        const positionLeft = leftSpace >= offsetWidth + arrowSize;\n\n        const positionHorizontal = () => {\n            let position;\n            let x = dim.x + dim.width;\n            let y = dim.y;\n\n            if (positionRight) {\n                position = TOOLTIP_LEFT;\n                x += arrowSize;\n            } else if (positionLeft) {\n                x = dim.x - offsetWidth;\n                position = TOOLTIP_RIGHT;\n                x -= arrowSize;\n            } else {\n                position = 'left';\n                x += arrowSize;\n            }\n            if (dim.height < offsetHeight) {\n                y = Math.max(0, dim.y + dim.height / 2 - offsetHeight / 2);\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        const positionVertical = () => {\n            let position;\n            let y;\n            // Position tooltip at the center of plot\n            let x = dim.x - offsetWidth / 2 + dim.width / 2;\n\n            // Overflows to the right\n            if ((extent.width - (dim.x + offset.x)) < offsetWidth) {\n                x = extent.width - offsetWidth - offset.x;\n            } else if ((x + offset.x) < extent.x) { // Overflows to the left\n                x = extent.x;\n            }\n\n            if (positionTop) {\n                y = dim.y - offsetHeight - arrowSize;\n                position = TOOLTIP_BOTTOM;\n            } else {\n                y = dim.y + dim.height + arrowSize;\n                position = TOOLTIP_TOP;\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        this._target = dim;\n        if (!orientation) {\n            if (positionTop) {\n                orientation = 'vertical';\n            } else if (positionRight || positionLeft) {\n                orientation = 'horizontal';\n            } else {\n                orientation = 'vertical';\n            }\n        }\n\n        if (orientation === 'horizontal') {\n            obj = positionHorizontal();\n        } else if (orientation === 'vertical') {\n            obj = positionVertical();\n        }\n\n        this._position = {\n            x: obj.x,\n            y: obj.y\n        };\n\n        this._arrowPos = obj.arrowPos;\n        if (!arrowDisabled) {\n            placeArrow(this, obj.position, obj.arrowPos);\n        } else {\n            this._tooltipArrow.style('display', 'none');\n            this._tooltipBackground.style('display', 'none');\n        }\n        this._arrowOrientation = obj.position;\n        draw && this.position(obj.x, obj.y);\n        return this;\n    }\n\n    /**\n     * Hides the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    hide () {\n        this._tooltipContainer.style('display', 'none');\n        this._tooltipConnectorContainer.style('display', 'none');\n        return this;\n    }\n\n    /**\n     * Shows the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    show () {\n        this._tooltipContainer.style('display', 'block');\n        return this;\n    }\n\n    extent (extent) {\n        this._extent = extent;\n        return this;\n    }\n\n    offset (offset) {\n        this._offset = offset;\n        return this;\n    }\n\n    remove () {\n        this._tooltipContainer.remove();\n        this._tooltipBackground.remove();\n        this._tooltipConnectorContainer.remove();\n        return this;\n    }\n}\n","export const SELECTION_SUMMARY = 'selectionSummary';\nexport const HIGHLIGHT_SUMMARY = 'highlightSummary';\n","import {\n    FieldType,\n    GROUP_BY_FUNCTIONS,\n    formatTemporal,\n    DimensionSubtype,\n    MeasureSubtype,\n    DataModel,\n    defaultValue,\n    retrieveFieldDisplayName\n} from 'muze-utils';\nimport { SELECTION_SUMMARY, HIGHLIGHT_SUMMARY } from '../../enums/tooltip-strategies';\n\nconst { SUM, COUNT } = GROUP_BY_FUNCTIONS;\nconst { InvalidAwareTypes } = DataModel;\n\nconst formatters = (formatter, interval, valueParser) => ({\n    [DimensionSubtype.TEMPORAL]: (value) => {\n        if (value instanceof InvalidAwareTypes) {\n            return valueParser(value);\n        }\n        return formatTemporal(value, interval);\n    },\n    [MeasureSubtype.CONTINUOUS]: value => (value instanceof InvalidAwareTypes ? valueParser(value) :\n        formatter(value.toFixed(2))),\n    [DimensionSubtype.CATEGORICAL]: value => valueParser(value)\n});\n\nconst getDefaultTooltipFormatterFn = (formatter, defaultFormatter) => defaultValue(formatter, defaultFormatter);\n\nconst getTabularData = (dataObj, context, defaultFormatter) => {\n    const rows = [];\n    const { data, schema, fieldspace } = dataObj;\n    rows.push(schema.map(d => d.name));\n    const { valueParser, timeDiffs } = context;\n    data.forEach((d) => {\n        const row = [];\n        schema.forEach((fieldObj, i) => {\n            const interval = fieldObj.subtype === DimensionSubtype.TEMPORAL ? timeDiffs[fieldObj.name] : 0;\n            const numberFormat = fieldObj.type === FieldType.MEASURE && fieldspace.fields[i].numberFormat();\n            const formatterFn = getDefaultTooltipFormatterFn(formatters(numberFormat,\n                interval, valueParser)[fieldObj.subtype], defaultFormatter);\n            const value = formatterFn(d[i]);\n            row.push(value);\n        });\n        rows.push(row);\n    });\n    return rows;\n};\n\nconst getRowContent = (fieldInf, context, dataInf, config) => {\n    let value;\n    let formattedValue;\n    let measureIndex;\n\n    const {\n        valueParser,\n        axes,\n        dimensionMeasureMap,\n        timeDiffs\n    } = context;\n    const { subtype: type, name: field } = fieldInf;\n\n    const { fieldsConfig, defFormatter, data, fieldspace } = dataInf;\n    const { separator, classPrefix } = config;\n    const dataLen = data.length;\n    const values = [];\n    const fieldObj = fieldsConfig[field];\n    const { index, def } = fieldObj;\n    const interval = def.subtype === DimensionSubtype.TEMPORAL ? timeDiffs[field] : 0;\n    const nf = def.type === FieldType.MEASURE ? fieldspace.fieldsObj()[field].numberFormat() : val => val;\n    const formatterFn = getDefaultTooltipFormatterFn(formatters(nf, interval, valueParser)[type],\n        defFormatter);\n\n    let uniqueVals = type === MeasureSubtype.CONTINUOUS ? data.map(d => d[index]) :\n        [...new Set(data.map(d => d[index]))];\n    uniqueVals = uniqueVals.filter(d => d !== '');\n    const colorAxis = axes.color[0];\n    const shapeAxis = axes.shape[0];\n    const sizeAxis = axes.size[0];\n    const isRetinalField = (colorAxis || shapeAxis || sizeAxis) && dataLen > 1 &&\n            type !== MeasureSubtype.CONTINUOUS;\n\n    uniqueVals.forEach((val, i) => {\n        let key;\n        let associatedMeasures = dimensionMeasureMap[field];\n\n        if (associatedMeasures instanceof Array && dataLen > 1) {\n            associatedMeasures = associatedMeasures.filter(d => d in fieldsConfig);\n            key = val;\n            let icon = {\n                value: ''\n            };\n\n            if (isRetinalField) {\n                icon = {\n                    type: 'icon',\n                    color: colorAxis.getColor(val),\n                    shape: shapeAxis.getShape(val),\n                    size: sizeAxis.getSize(val) * config.iconScale\n                };\n            }\n            if (associatedMeasures.length > 1) {\n                const formattedKey = type === DimensionSubtype.TEMPORAL ? formatterFn(key, interval) : key;\n                values.push([icon, `${formattedKey}`]);\n                associatedMeasures.forEach((measure) => {\n                    measureIndex = fieldsConfig[measure].index;\n                    value = data[i][measureIndex];\n                    const numberFormat = fieldspace.fields[measureIndex].numberFormat();\n                    const measureFormatter = getDefaultTooltipFormatterFn(\n                        formatters(numberFormat, interval, valueParser)[MeasureSubtype.CONTINUOUS]);\n                    formattedValue = measureFormatter(value);\n                    values.push([{\n                        value: `${retrieveFieldDisplayName(context.data, measure)}${separator}`,\n                        style: {\n                            'margin-left': `${config.margin}px}`\n                        },\n                        className: `${classPrefix}-tooltip-key`\n                    }, {\n                        value: `${formattedValue}`,\n                        className: `${classPrefix}-tooltip-value`\n                    }]);\n                });\n            } else {\n                measureIndex = fieldsConfig[associatedMeasures[0]].index;\n                value = data[i][measureIndex];\n                const numberFormat = fieldspace.fields[measureIndex].numberFormat();\n                const measureFormatter = getDefaultTooltipFormatterFn(\n                    formatters(numberFormat, interval, valueParser)[MeasureSubtype.CONTINUOUS]);\n                formattedValue = measureFormatter(value);\n                const formattedKey = type === DimensionSubtype.TEMPORAL ? formatterFn(key, interval) : key;\n                values.push([\n                    icon,\n                    {\n                        value: `${formattedKey}`,\n                        className: `${classPrefix}-tooltip-key`\n                    },\n                    {\n                        value: `${formattedValue}`,\n                        className: `${classPrefix}-tooltip-value`\n                    }\n                ]);\n            }\n        } else {\n            key = field;\n            value = val;\n            formattedValue = formatterFn(value);\n            values.push([{\n                value: `${retrieveFieldDisplayName(context.data, key)}${separator}`,\n                className: `${config.classPrefix}-tooltip-key`\n            }, {\n                value: `${formattedValue}`,\n                className: `${config.classPrefix}-tooltip-value`\n            }]);\n        }\n    });\n    return values;\n};\n\nexport const buildTooltipData = (dataModel, config = {}, context) => {\n    let fieldValues = [];\n    const dataObj = dataModel.getData();\n    const data = dataObj.data;\n    const schema = dataObj.schema;\n    const fieldspace = dataModel.getFieldspace();\n    const fieldsConfig = dataModel.getFieldsConfig();\n    const detailFields = context.detailFields || [];\n    const dimensions = schema.filter(d => d.type === FieldType.DIMENSION);\n    const measures = schema.filter(d => d.type === FieldType.MEASURE);\n    const containsDetailField = schema.find(d => detailFields.indexOf(d.name) !== -1);\n    const dataLen = data.length;\n    const {\n        valueParser,\n        dimensionMeasureMap\n    } = context;\n    const defFormatter = formatters(null, null, valueParser)[DimensionSubtype.CATEGORICAL];\n\n    if (dataLen > 1 && containsDetailField) {\n        fieldValues = getTabularData({\n            data,\n            schema,\n            fieldspace\n        }, context, defFormatter);\n    } else {\n        dimensions.forEach((item) => {\n            fieldValues = [...fieldValues, ...getRowContent(item, context, {\n                fieldsConfig,\n                data,\n                defFormatter,\n                fieldspace\n            }, config)];\n        });\n\n        const allMeasures = [...new Set(...Object.values(dimensionMeasureMap))];\n        const filteredMeasures = dataLen > 1 ? measures.filter(d => allMeasures.indexOf(d.name) === -1)\n            : measures;\n\n        filteredMeasures.forEach((item) => {\n            fieldValues = [...fieldValues, ...getRowContent(item, context, {\n                fieldsConfig,\n                data,\n                defFormatter,\n                fieldspace\n            }, config)];\n        });\n    }\n\n    return fieldValues;\n};\n\nexport const strategies = {\n    [SELECTION_SUMMARY]: (dm, config, context) => {\n        const { selectionSet } = context;\n        const aggFns = selectionSet.mergedEnter.aggFns;\n        const dataObj = dm.getData();\n        const measures = dataObj.schema.filter(d => d.type === FieldType.MEASURE);\n        const aggregatedModel = dm.groupBy([''], measures.reduce((acc, v) => {\n            acc[v.name] = aggFns[v.name] === COUNT ? SUM : aggFns[v.name];\n            return acc;\n        }, {\n            saveChild: false\n        }));\n        const fieldsConf = aggregatedModel.getFieldsConfig();\n        let values = [[{\n            value: `${dataObj.data.length}`,\n            style: {\n                'font-weight': 'bold'\n            }\n        }, 'Items Selected']];\n        const measureNames = measures.map(d => d.name);\n        measureNames.forEach((measure) => {\n            values.push([`(${aggFns[measure].toUpperCase()})`, `${retrieveFieldDisplayName(dm, measure)}`,\n                {\n                    value: `${aggregatedModel.getData().data[0][fieldsConf[measure].index].toFixed(2)}`,\n                    style: {\n                        'font-weight': 'bold'\n                    }\n                }]);\n        });\n        if (measureNames.length === 1) {\n            values = [[...values[0], ...values[1]]];\n        }\n        return values;\n    },\n    [HIGHLIGHT_SUMMARY]: (data, config, context) => {\n        const values = buildTooltipData(data, config, context);\n        return values;\n    }\n};\n","import { Tooltip as TooltipRenderer } from '@chartshq/muze-tooltip';\nimport { FieldType, mergeRecursive, defaultValue } from 'muze-utils';\nimport { spaceOutBoxes } from '../helper';\nimport { strategies } from './strategies';\nimport { FRAGMENTED } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\nimport { HIGHLIGHT_SUMMARY } from '../../enums/tooltip-strategies';\n\nconst configResolvers = {\n    [HIGHLIGHT_SUMMARY]: (specificConf, config) => defaultValue(specificConf, config),\n    default: specificConf => defaultValue(specificConf, {})\n};\n\nconst sanitizeConfig = (config, context) => {\n    const strategyObj = context._strategies;\n    const sanitizedConf = Object.assign({}, config);\n    for (const key in strategyObj) {\n        sanitizedConf[key] = defaultValue(configResolvers[key], configResolvers.default)(config[key], config);\n    }\n    return sanitizedConf;\n};\n\nexport default class Tooltip extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._tooltips = {};\n        this._strategies = mergeRecursive({}, strategies);\n        this._strategy = HIGHLIGHT_SUMMARY;\n    }\n\n    static defaultConfig () {\n        return {\n            padding: 5,\n            offset: {\n                x: 0,\n                y: 0\n            },\n            highlightSummary: {\n                dataTransform: (dt, fields) => (fields ? dt.project(fields, { saveChild: false }) : dt\n                )\n            },\n            selectionSummary: {\n                dataTransform: (dt, fields) => {\n                    const fieldspace = dt.getFieldspace();\n                    const dimensions = Object.keys(fieldspace.getDimension());\n                    const measures = Object.keys(fieldspace.getMeasure());\n                    const projectedFields = defaultValue(fields, measures.length ? [measures[0]] : []);\n                    return dt.project([...dimensions, ...projectedFields], {\n                        saveChild: false\n                    });\n                }\n            }\n        };\n    }\n\n    static formalName () {\n        return 'tooltip';\n    }\n\n    config (...params) {\n        if (params.length) {\n            const config = this._config = mergeRecursive(this._config, sanitizeConfig(params[0], this));\n            const strategyObj = this._strategies;\n            for (const key in strategyObj) {\n                const formatter = config[key].formatter;\n                this.setStrategy(key, formatter);\n            }\n            return this;\n        }\n        return this._config;\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        let totalHeight = 0;\n        let totalWidth = 0;\n        const dataModel = selectionSet.mergedEnter.model;\n        const context = this.firebolt.context;\n        const drawingInf = this.drawingContext();\n        if ((dataModel.isEmpty() || payload.criteria === null) || selectionSet.isSourceFieldPresent === false) {\n            this.hide(options, null);\n            return this;\n        }\n\n        const tooltips = this._tooltips;\n        const config = this.config();\n        const boundBox = {\n            width: drawingInf.width,\n            height: drawingInf.height\n        };\n        const showInPosition = payload.showInPosition;\n        const pad = config.padding;\n        const dataModels = [];\n        const fragmented = config.mode === FRAGMENTED;\n        const sourceInf = context.getSourceInfo();\n        const fields = sourceInf.fields;\n        const xFieldDim = fields.x[0] ? fields.x[0].type() === FieldType.DIMENSION : false;\n        const showVertically = !!xFieldDim;\n        const tooltipPos = payload.position;\n        const boxes = [];\n        const enter = {};\n        const uids = dataModel.getData().uids;\n        if (fragmented) {\n            dataModels.push(...uids.map(d => dataModel.select((fieldsArr, i) => i === d, {\n                saveChild: false\n            })));\n        } else {\n            dataModels.push(dataModel);\n        }\n\n        let target = payload.target;\n        let targetFields = [];\n        if (target) {\n            targetFields = target[0] || [];\n            const sourceFields = payload.sourceFields;\n            const indices = [];\n            for (let i = 0, len = targetFields.length; i < len; i++) {\n                if (sourceFields.indexOf(targetFields[i]) !== -1) {\n                    indices.push(i);\n                }\n            }\n            target = target.map(d => d.filter((v, i) => indices.indexOf(i) !== -1));\n        }\n\n        const plotDimensions = context.getPlotPointsFromIdentifiers(target || payload.criteria, {\n            getBBox: true\n        });\n\n        const strategy = defaultValue(options.strategy, this._strategy);\n        const strategyConf = config[strategy];\n        const { dataTransform, fields: projectFields } = strategyConf;\n        const strategyObj = this._strategies;\n        // Show tooltip for each datamodel\n        for (let i = 0; i < dataModels.length; i++) {\n            let plotDim = plotDimensions[i];\n            if (fragmented) {\n                const dimensions = dataModels[i].getData().schema.filter(d => d.type === FieldType.DIMENSION)\n                    .map(d => d.name);\n                plotDim = context.getPlotPointsFromIdentifiers(dataModels[i].project(dimensions), { getBBox: true });\n                plotDim = plotDim && plotDim[0];\n            }\n\n            const dt = dataTransform(dataModels[i], projectFields, this);\n\n            enter[i] = true;\n            const { parentContainer: layoutContainer, parentContainerDimensions } = drawingInf;\n            const layoutBoundBox = layoutContainer.getBoundingClientRect();\n            const unitBoundBox = drawingInf.htmlContainer.getBoundingClientRect();\n\n            const offsetLeft = unitBoundBox.left - layoutBoundBox.left;\n            const offsetTop = unitBoundBox.top - layoutBoundBox.top;\n            const tooltipInst = tooltips[i] = tooltips[i] || new TooltipRenderer(layoutContainer,\n                    drawingInf.svgContainer);\n\n            sourceInf.payload = payload;\n            sourceInf.firebolt = this.firebolt;\n            sourceInf.detailFields = context.detailFields();\n            sourceInf.timeDiffs = context.timeDiffsByField();\n            sourceInf.valueParser = context.valueParser();\n            sourceInf.selectionSet = selectionSet;\n            tooltipInst.context(sourceInf);\n            const strategyFn = strategyObj[strategy];\n            tooltipInst.content(strategy, dt, {\n                formatter: strategyFn,\n                order: options.order\n            })\n                            .config(this.config())\n                            .extent({\n                                x: 0,\n                                y: 0,\n                                width: parentContainerDimensions.width,\n                                height: parentContainerDimensions.height\n                            })\n                            .offset({\n                                x: offsetLeft + (config.offset.x || 0),\n                                y: offsetTop + (config.offset.y || 0)\n                            });\n\n            if (showInPosition) {\n                tooltipInst.position(tooltipPos.x + pad, tooltipPos.y + pad);\n            } else if (plotDim) {\n                tooltipInst.positionRelativeTo({\n                    x: plotDim.x,\n                    y: plotDim.y,\n                    width: plotDim.width || 0,\n                    height: plotDim.height || 0\n                }, {\n                    orientation: fragmented ?\n                        (showVertically ? 'horizontal' : 'vertical') : undefined\n                });\n            } else {\n                tooltipInst.hide();\n                break;\n            }\n\n            if (fragmented) {\n                const position = tooltipInst._position;\n                const tooltipBoundBox = tooltipInst._tooltipContainer.node().getBoundingClientRect();\n\n                totalHeight += tooltipBoundBox.height + pad;\n                totalWidth += tooltipBoundBox.width + pad;\n                if (showVertically ? totalHeight > drawingInf.height : totalWidth > drawingInf.width) {\n                    break;\n                }\n                boxes.push({\n                    x: position.x,\n                    y: position.y,\n                    width: tooltipBoundBox.width,\n                    height: tooltipBoundBox.height,\n                    tooltip: tooltipInst\n                });\n            }\n        }\n\n        for (const key in tooltips) {\n            if (!enter[key]) {\n                const tooltip = tooltips[key];\n                tooltip.content(payload.action, null);\n                if (!tooltip.getContents().length) {\n                    tooltip.remove();\n                    delete tooltips[key];\n                }\n            }\n        }\n        if (fragmented) {\n            spaceOutBoxes(boxes, boundBox, showVertically);\n            boxes.forEach(box => box.tooltip.position(box.x, box.y, {\n                repositionArrow: true\n            }));\n        }\n        return this;\n    }\n\n    hide (options) {\n        const tooltips = this._tooltips;\n        for (const key in tooltips) {\n            if ({}.hasOwnProperty.call(tooltips, key)) {\n                const strategy = options.strategy || this._strategy;\n                tooltips[key].content(strategy, null);\n                tooltips[key].hide();\n            }\n        }\n    }\n}\n","export const spaceOutBoxes = (boxes, extent, showVertically) => {\n    let y;\n    let height;\n    let x;\n    let width;\n    let i;\n    const pad = 5;\n    const len = boxes.length;\n    const spaceOutIfOverlap = (firstBox, secondBox, opposite) => {\n        x = firstBox.x;\n        width = firstBox.width;\n        y = firstBox.y;\n        height = firstBox.height;\n        const bottom = y + height;\n        const right = x + width;\n\n        if (showVertically) {\n            if (opposite ? y < (secondBox.y + secondBox.height) : bottom > secondBox.y) {\n                secondBox.y = opposite ? firstBox.y - secondBox.height - pad :\n                        bottom + pad;\n            }\n        } else if (opposite ? x < (secondBox.x + secondBox.width) : right > secondBox.x) {\n            secondBox.x = opposite ? firstBox.x - secondBox.width - pad :\n                    right + pad;\n        }\n    };\n\n    boxes.sort((a, b) => (showVertically ? a.y - b.y : a.x - b.x));\n    i = 0;\n\n    for (i = 0; i < len - 1; i++) {\n        spaceOutIfOverlap(boxes[i], boxes[i + 1]);\n    }\n\n    if ((boxes[i].y + boxes[i].height) > extent.height ||\n            (boxes[i].x + boxes[i].width) > extent.width) {\n        if (showVertically) {\n            boxes[i].y -= (boxes[i].height + boxes[i].y) - extent.height;\n        } else {\n            boxes[i].x -= (boxes[i].width + boxes[i].x) - extent.width;\n        }\n        for (i = len - 1; i > 0; i--) {\n            spaceOutIfOverlap(boxes[i], boxes[i - 1], true);\n        }\n    }\n    return boxes;\n}\n;\n","import { selectElement, FieldType } from 'muze-utils';\n\nimport './styles.scss';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nexport default class Crossline extends SpawnableSideEffect {\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-crossline-group`,\n            bandClass: `${CLASSPREFIX}-crossband`,\n            lineClass: `${CLASSPREFIX}-crossline`\n        };\n    }\n\n    static formalName () {\n        return 'crossline';\n    }\n\n    apply (selectionSet, payload) {\n        let height;\n        let bandWidth;\n        let px;\n        let width;\n        const {\n            className,\n            bandClass,\n            lineClass\n        } = this.config();\n        const dataModel = selectionSet.mergedEnter.model;\n        const drawingInf = this.drawingContext();\n        if (payload.criteria && dataModel && dataModel.isEmpty()) {\n            return this;\n        }\n        if (payload.criteria === null || !dataModel) {\n            this.hide();\n            return this;\n        }\n\n        const dataObj = dataModel.getData();\n        const sourceInf = this.firebolt.context.getSourceInfo();\n        const axes = sourceInf.axes;\n        const axisFields = sourceInf.fields;\n        const fields = selectionSet.fields;\n        const data = dataObj.data;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const svgContainer = drawingInf.sideEffectGroup;\n\n        const elemData = [];\n        fields.forEach((field) => {\n            const fieldIndex = fieldsConfig[field] && fieldsConfig[field].index;\n            const dataArr = data.map(d => d[fieldIndex]);\n            const axisIndex = [['x', 0], ['x', 1], ['y', 0], ['y', 1]].find((arr) => {\n                const fieldInst = axisFields[arr[0]][arr[1]];\n                return fieldInst && fieldInst.type() === FieldType.DIMENSION &&\n                    fieldInst.getMembers().indexOf(field) !== -1;\n            });\n            if (axisIndex !== undefined && data.length) {\n                const type = axisIndex[0];\n                const axis = axes[type][axisIndex[1]];\n                const value = dataArr[0];\n                bandWidth = axis.getUnitWidth() || 0;\n                px = axis.getScaleValue(value) + bandWidth / 2 + drawingInf.xOffset;\n                const layers = this.firebolt.context.layers();\n                const plotWidth = Math.max(...layers.map(layer => layer.getPlotSpan()[type]));\n                const pad = Math.max(...layers.map(layer => layer.getPlotPadding()[type]));\n                height = drawingInf.height;\n                width = drawingInf.width;\n                const startPx = px - plotWidth / 2 - pad / 2;\n                const endPx = px + plotWidth / 2 + pad / 2;\n                const dataPoint = {};\n                if (type === 'y') {\n                    dataPoint.d = `M 0 ${startPx} L 0 ${endPx} L ${width} ${endPx} L ${width} ${startPx} Z`;\n                } else {\n                    dataPoint.d = `M ${startPx} 0 L ${endPx} 0 L ${endPx} ${height} L ${startPx} ${height} Z`;\n                }\n                dataPoint.className = plotWidth ? bandClass : lineClass;\n                !isNaN(px) && elemData.push(dataPoint);\n            }\n        });\n        if (elemData.length) {\n            const parentGroup = this.createElement(svgContainer, 'g', [1], className);\n            const elem = this.createElement(parentGroup, 'path', elemData);\n            elem.attr('d', d => d.d).style('pointer-events', 'none')\n                            .attr('class', d => d.className);\n        }\n        return this;\n    }\n\n    hide () {\n        const className = this.config().className;\n        const drawingInf = this.drawingContext();\n        selectElement(drawingInf.sideEffectGroup).selectAll(`.${className}`).remove();\n    }\n}\n","const fadeFn = (set, context, strategy) => {\n    const {\n        mergedEnter,\n        mergedExit,\n        exitSet,\n        completeSet\n    } = set;\n\n    if (!mergedEnter.length && !mergedExit.length) {\n        context.applyInteractionStyle(completeSet, {}, strategy, false);\n    } else {\n        context.applyInteractionStyle(exitSet[1], {}, strategy, true);\n        context.applyInteractionStyle(mergedEnter, {}, strategy, false);\n    }\n};\n\nexport const strategies = {\n    fade: fadeFn,\n    focus: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'focus', false);\n        } else {\n            context.applyInteractionStyle(mergedExit, {}, 'focus', true);\n            context.applyInteractionStyle(mergedEnter, {}, 'focus', false);\n        }\n    },\n    highlight: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            entrySet,\n            exitSet,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'highlight', false);\n        } else {\n            context.applyInteractionStyle(entrySet[1], {}, 'highlight', true);\n            context.applyInteractionStyle(exitSet[1], {}, 'highlight', false);\n        }\n    }\n};\n","import SurrogateSideEffect from '../surrogate';\nimport { strategies } from './strategy';\n\nexport default class PlotHighlighter extends SurrogateSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategy = 'highlight';\n        this._strategies = strategies;\n    }\n\n    static formalName () {\n        return 'highlighter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        if (selectionSet.isSourceFieldPresent !== false) {\n            strategy(selectionSet, this, options.strategy || this._strategy);\n        }\n\n        return this;\n    }\n}\n","import SurrogateSideEffect from '../surrogate';\n\nexport default class FilterEffect extends SurrogateSideEffect {\n    static formalName () {\n        return 'filter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static mutates () {\n        return true;\n    }\n\n    apply (selectionSet, payload) {\n        const context = this.firebolt.context;\n        const entryModel = selectionSet.mergedEnter.model;\n        if (payload.criteria === null) {\n            context.clearCaching().resetData();\n        } else {\n            context.enableCaching().data(entryModel);\n        }\n        return this;\n    }\n}\n","import { DataModel, getObjProp } from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nconst addLayer = (layerRegistry, context, sideEffect) => {\n    context.addLayer((layerDefs) => {\n        const layers = [];\n\n        if (layerDefs) {\n            layerDefs.forEach((layerDef) => {\n                const mark = layerDef.mark;\n                const layerCls = layerRegistry[mark];\n\n                if (layerCls && layerCls.shouldDrawAnchors()) {\n                    const depLayerEncoding = layerDef.def.encoding;\n                    const encoding = {\n                        x: getObjProp(depLayerEncoding, 'x', 'field'),\n                        y: getObjProp(depLayerEncoding, 'y', 'field'),\n                        color: getObjProp(depLayerEncoding, 'color', 'field'),\n                        size: {\n                            field: getObjProp(depLayerEncoding, 'size', 'field'),\n                            value: sideEffect.defaultSizeValue()\n                        }\n                    };\n                    const commonName = sideEffect.constructor.formalName();\n                    const name = `${layerDef.def.name}-${commonName}`;\n\n                    layers.push({\n                        name,\n                        mark: 'point',\n                        groupId: commonName,\n                        className: sideEffect.constructor.defaultConfig().className,\n                        encoding,\n                        transform: {\n                            type: 'identity'\n                        },\n                        calculateDomain: false,\n                        transition: sideEffect.getTransitionConfig(),\n                        source: dm => dm.select(() => false, {\n                            saveChild: false\n                        }),\n                        interactive: false,\n                        owner: layerDef.def.name\n                    });\n                }\n            });\n        }\n        return layers;\n    });\n};\n\nexport default class AnchorEffect extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._layersMap = {};\n        this.addAnchorLayers();\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-anchors-group`\n        };\n    }\n\n    static formalName () {\n        return 'anchors';\n    }\n\n    addAnchorLayers () {\n        const context = this.firebolt.context;\n        const layerRegistry = context.registry().layerRegistry;\n\n        addLayer(layerRegistry, context, this);\n        return this;\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n\n    /**\n     * Returns the default area value of the anchor point.\n     * @return { number } Default area value of anchor.\n     */\n    defaultSizeValue () {\n        return 100;\n    }\n\n    apply (selectionSet) {\n        const dataModel = selectionSet.mergedEnter.model;\n        const formalName = this.constructor.formalName();\n\n        if (selectionSet.isSourceFieldPresent !== false) {\n            const context = this.firebolt.context;\n            const layers = context.layers().filter(layer => layer.config().groupId === formalName);\n\n            layers.forEach((layer) => {\n                const linkedLayer = context.getLayerByName(layer.config().owner);\n                const [transformedData, schema] = linkedLayer.getTransformedDataFromIdentifiers(dataModel);\n                const transformedDataModel = new DataModel(transformedData, schema);\n\n                layer.data(transformedDataModel);\n            });\n        }\n        return this;\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\n\nexport default class PersistentAnchors extends AnchorEffect {\n    static formalName () {\n        return 'persistent-anchors';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-persistent-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\n\nexport default class BrushAnchors extends AnchorEffect {\n    static formalName () {\n        return 'brush-anchors';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-brush-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import * as BEHAVIOURS from './enums/behaviours';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: ['selectionBox', {\n        name: 'highlighter',\n        options: {\n            strategy: 'fade'\n        }\n    }, 'brush-anchors'],\n    [`${BEHAVIOURS.BRUSH},${BEHAVIOURS.SELECT}`]: [{\n        name: 'tooltip',\n        options: {\n            strategy: 'selectionSummary',\n            order: 0,\n            filter: context => context.config().mode === 'fragmented'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'highlight'\n        }\n    }, 'crossline', {\n        name: 'tooltip',\n        options: {\n            order: 9999\n        }\n    }, 'anchors'],\n    [BEHAVIOURS.FILTER]: ['filter'],\n    [BEHAVIOURS.SELECT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'focus'\n        }\n    }, 'persistent-anchors']\n};\n","export const CLASSPREFIX = 'muze';\nexport const STACK = 'stack';\nexport const GROUP = 'group';\nexport const IDENTITY = 'identity';\nexport const ANGLE = 'angle';\nexport const RADIUS = 'radius';\nexport const SIZE = 'size';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const TEXT = 'text';\nexport const OUTER_RADIUS_VALUE = 'outerRadiusValue';\nexport const TEXT_ANCHOR_MIDDLE = 'middle';\nexport const ENCODING = {\n    X: 'x',\n    Y: 'y',\n    X0: 'x0',\n    Y0: 'y0',\n    RADIUS: 'radius',\n    RADIUS0: 'radius0',\n    ANGLE: 'angle',\n    ANGLE0: 'angle0'\n};\n\nexport const ASCENDING = 'asc';\n\nexport const AGG_FN_SUM = 'sum';\n\nexport const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { CLASSPREFIX, STACK } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-area',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: STACK\n    },\n    interaction: {\n\n    },\n    nearestPointThreshold: 10,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        y0: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * This is an interface class which any new layer class has to extend.\n *\n * @example\n * class BarLayer extends BaseLayer {\n *   update (params) {\n *       // super.update(params);\n *       // Update the bar layer\n *   }\n * }\n * @class\n */\nexport default class SimpleLayer {\n\n    formalName () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets or gets the dependencies.\n     * @param {Object} dependencies Dependencies needed by layer\n     * @return {BaseLayer} Instance of base layer.\n     */\n    dependencies () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the config of the layer\n     *\n     * @param {Object} config Configuration of layer\n     * @return {Object} configuration of layer\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Acts as a getter or setter function\n     * When setter\n     * Returns the datamodel of the layer\n     * @param { DataModel } dataModel instance of DataModel\n     * @return { DataModel } DataModel instance of the layer\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized schema of the layer\n     * @return {Object} Serialized schema\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the unique identifier of this layer\n     * @return {string} id of the layer\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n    /*\n     * This method resolves the x, y, x0 and y0 values from the transformed data.\n     * It also checks the type of transformed data for example, if it is a stacked data\n     * then it fetches the y and y0 values from the stacked data.\n     * @param {Array.<Array>} transformedData transformed data\n     * @param {Object} fieldMap field definitions\n     * @param {string} transformType type of transformed data - stack, group or identity.\n     * @return {Array.<Object>} Normalized data\n     * @private\n     */\n    normalizeTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of dataModel\n     * @param {Object} config configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     * @private\n     */\n    getTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a nominal field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @return {Array} Domain values array.\n     */\n    _calculateDomainFromData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, color, etc.\n     * @return {Object} Axis domains\n     */\n    getDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for getting nearest point\n     * @return {BaseLayer} Instance of base layer\n     */\n    getNearestPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for highlighting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    highlightPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for deselecting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    dehighlightPoint () {\n        return this;\n    }\n\n    linkLayerStore () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets the container element for the layer to be renderered.\n     * @param {SVGElement} mountPoint SVG element or group element.\n     */\n    mount () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n","import { COORD_TYPES, mergeRecursive } from 'muze-utils';\nimport * as PROPS from '../enums/props';\n\nconst { CARTESIAN } = COORD_TYPES;\nexport const props = {\n    axes: {},\n    mount: {},\n    measurement: {},\n    metaInf: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    coord: {\n        defaultValue: CARTESIAN\n    },\n    [PROPS.CONFIG]: {\n        value: null,\n        sanitization: (context, config) => {\n            context._customConfig = config;\n            const constructor = context.constructor;\n            const newConf = mergeRecursive({}, constructor.defaultConfig());\n\n            return constructor.defaultPolicy(newConf, config);\n        }\n    }\n};\n","export const DATA = 'data';\nexport const CONFIG = 'config';\nexport const MEASUREMENT = 'measurement';\nexport const DOMAIN = 'domain';\nexport const MOUNT = 'mount';\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { Symbols } from 'muze-utils';\nimport * as AxisOrientation from '../enums/axis-orientation';\n\n/**\n * @module Axis\n * This file exports constants that are used to reference axis orientations\n * in a consistent manner.\n */\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\n\n/**\n  * This object is used to associate the axis orientation with the d3 class\n  * used to represent that axis.\n  */\nexport const axisOrientationMap = {\n    [AxisOrientation.LEFT]: Symbols.axisLeft,\n    [AxisOrientation.BOTTOM]: Symbols.axisBottom,\n    [AxisOrientation.RIGHT]: Symbols.axisRight,\n    [AxisOrientation.TOP]: Symbols.axisTop\n};\n","/**\n * @module axis\n * This file exports constants used to reference scale type\n * consistently throughout the project.\n */\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\nexport const TIME = 'temporal';\nexport const COLOR = 'color';\nexport const ORDINAL = 'ordinal';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\nexport const LOG = 'log';\nexport const POW = 'pow';\nexport const IDENTITY = 'identity';\nexport const SEQUENTIAL = 'sequential';\nexport const THRESHOLD = 'threshold';\n","export const CLASSPREFIX = 'muze';\n\nexport const CONTINOUS = 'continous';\nexport const DISCRETE = 'discrete';\nexport const SEQUENTIAL = 'sequential';\nexport const ORDINAL = 'ordinal';\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\nexport const THRESHOLD = 'threshold';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\n\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\n\nexport const DOMAIN = 'domain';\nexport const HIDDEN = 'hidden';\nexport const NUMBER = 'number';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\n\nexport const RGB = 'rgb';\nexport const HEX = 'hex';\nexport const HSLA = 'hsla';\nexport const HSL = 'hsl';\n\nexport const DEFAULT_ANGLE_DOMAIN = [1];\nexport const MIN_NO_OF_TICKS = 2;\nexport const DEFAULT_NO_OF_TICKS = 10;\n\n","import { scales, colorSchemes } from 'muze-utils';\n\nimport {\n    SEQUENTIAL,\n    ORDINAL,\n    LINEAR,\n    CONTINOUS,\n    THRESHOLD,\n    QUANTIZE\n} from './enums/constants';\n\nimport * as ScaleType from './enums/scale-type';\n\nconst {\n    scaleLinear,\n    scaleThreshold,\n    scaleLog,\n    scalePow,\n    scaleIdentity,\n    scaleOrdinal,\n    scaleSequential,\n    scaleQuantize,\n    scaleQuantile,\n    schemeCategory10,\n    schemeCategory20,\n    schemeCategory20b,\n    scaleBand,\n    scaleTime\n} = scales;\nexport const scaleMap = {\n    [ScaleType.LINEAR]: scaleLinear,\n    [ScaleType.BAND]: scaleBand,\n    [ScaleType.QUANTIZE]: scaleQuantize,\n    [ScaleType.QUANTILE]: scaleQuantile,\n    [ScaleType.THRESHOLD]: scaleThreshold,\n    [ScaleType.SEQUENTIAL]: scaleSequential,\n    [ScaleType.LOG]: scaleLog,\n    [ScaleType.POW]: scalePow,\n    [ScaleType.IDENTITY]: scaleIdentity,\n    [ScaleType.TIME]: scaleTime,\n    [ScaleType.COLOR]: scaleLinear,\n    [ScaleType.ORDINAL]: scaleOrdinal\n};\nexport const SCHEMES = {\n    SCHEME1: schemeCategory10,\n    SCHEME2: schemeCategory20,\n    SCHEME3: schemeCategory20b\n};\n\n/**\n * Accepts a scheme in a string format and returns the scale from d3-scale-chromatic\n *\n * @export\n * @param {string} scheme a string representing the kind of scheme for the color axis\n * @return {Object} The corresponding scale from a scheme type from d3 chromatic scale\n */\nexport function getScheme (scheme) {\n    if (scheme[0] === 'i') {\n        return scaleSequential(colorSchemes[scheme]);\n    }\n    return scaleOrdinal(colorSchemes[scheme]);\n}\n\n/**\n *\n *\n * @export\n * @param {*} scheme\n *\n */\nexport function getSchemeType (scheme) {\n    let schemeType = '';\n    if (scheme && typeof (scheme) === 'string') {\n        schemeType = scheme[0] === 'i' ? SEQUENTIAL : ORDINAL;\n    } else {\n        schemeType = ORDINAL;\n    }\n    return schemeType;\n}\n\n/**\n * This function is used to create a scale that is assigned to\n * an instance of axis.\n *\n * @export\n * @param {Object} params the input parameters to create a Scale object\n * @param {string} params.type the type of scale\n * @param {Array} params.range the range of scale\n * @return {Object} instance of scale\n */\nexport function createScale (params) {\n    if (!params.type || !scaleMap[params.type]) {\n        throw new Error(`${params.type} is not a valid scale type`);\n    }\n    if (!Array.isArray(params.range)) {\n        throw new Error('range parameter must be an array');\n    }\n    let scaleFactory = null;\n    const range = params.range;\n    // @todo: do it using scale decorator\n    if (params.type === LINEAR && params.interpolator) {\n        scaleFactory = scaleMap[params.interpolator];\n        if (params.interpolator === ScaleType.POW) {\n            return scaleFactory().range(range).exponent(params.exponent);\n        } else if (params.interpolator === ScaleType.LOG) {\n            return scaleFactory().range(range).base([params.base]);\n        }\n    } else {\n        scaleFactory = scaleMap[params.type];\n    }\n\n    if (params.type === QUANTIZE) {\n        scaleFactory().nice();\n    }\n    return scaleFactory().range(range);\n}\n\n/**\n * This method is used to update the range of a scale\n * so that the core module can remain agnostic of the d3\n * scale api.\n *\n * @export\n * @param {Scale} scale Instance of d3 Scale.\n * @param {Array} range new range of the scale.\n * @return {Scale} Updated scale.\n */\nexport function updateScaleRange (scale, range) {\n    return scale.range(range);\n}\n\n/**\n *\n *\n * @export\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} steps\n *\n */\nexport function getScaleType (domainType, rangeType, steps) {\n    if (rangeType === CONTINOUS) {\n        return LINEAR;\n    }\n    if (domainType === CONTINOUS) {\n        if (steps instanceof Array) {\n            return THRESHOLD;\n        }\n        return QUANTIZE;\n    }\n    return ORDINAL;\n}\n","import { getUniqueId } from 'muze-utils';\nimport { CLASSPREFIX } from '../enums/constants';\n\n/**\n *\n *\n */\nexport const defaultConfig = {\n    id: getUniqueId(),\n    adjustRange: false,\n    axisName: {\n        defClassName: 'axis-name'\n    },\n    axisNamePadding: 12,\n    base: 10,\n    classPrefix: CLASSPREFIX,\n    className: `${CLASSPREFIX}-axis`,\n    exponent: 1,\n    interpolator: 'linear',\n    fixedBaseline: true,\n    labels: {\n        rotation: null,\n        smartTicks: null\n    },\n    orientation: 'left',\n    numberFormat: val => val,\n    padding: 0.3,\n    nice: true,\n    numberOfTicks: null,\n    rotate: false,\n    show: true,\n    showAxisName: true,\n    showInnerTicks: true,\n    showOuterTicks: true,\n    style: {},\n    type: 'linear',\n    tickFormat: null,\n    tickValues: null,\n    xOffset: 0,\n    yOffset: 0\n};\n\n","/**\n * This file exports functionality that is used to render axis.\n */\nimport { selectElement, makeElement, angleToRadian } from 'muze-utils';\nimport * as AxisOrientation from './enums/axis-orientation';\nimport { LINEAR, HIDDEN, BOTTOM, TOP } from './enums/constants';\n\n/**\n *\n *\n * @param {*} instance\n * @param {*} container\n * @param {*} labelManager\n * @param {*} config\n */\nconst rotateAxis = (instance, tickText, labelManager) => {\n    let rotation;\n    const axis = instance.axis();\n    const config = instance.config();\n    const renderConfig = instance.renderConfig();\n    const smartTicks = instance.smartTicks();\n    const scale = axis.scale();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n    const ticks = labelFunc();\n    const {\n        orientation,\n        fixedBaseline,\n        type\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n\n    rotation = labels.rotation;\n\n    const tickSize = instance.getTickSize();\n    tickText.each(function (d, index) {\n        let yShift;\n        let xShift;\n        let datum = smartTicks[index] ? smartTicks[index].text : d;\n\n        datum = datum.toString();\n\n        const tickLabelDim = labelManager.getOriSize(datum);\n\n        const width = tickLabelDim.width * 0.5;\n        const height = tickLabelDim.height * 0.5;\n\n        if (rotation < 0) {\n            rotation = 360 + rotation;\n        }\n\n        const quadrant = 4 - Math.floor(rotation / 90);\n        const rotationNormalizer = ((quadrant % 2 === 0) ? rotation : 180 * Math.ceil(rotation / 180) - rotation) % 180;\n\n        yShift = Math.sqrt(height ** 2 + width ** 2) * Math.sin(angleToRadian(rotationNormalizer));\n\n        if ((quadrant === 3 || quadrant === 2) && !(rotationNormalizer > 67.5 && rotationNormalizer <= 90)) {\n            yShift += height * 2;\n        }\n        xShift = width;\n\n        if (rotation === 90) {\n            xShift = height;\n        } else if (rotation === 270) {\n            xShift = -height;\n        } else {\n            xShift = 0;\n        }\n\n        if (orientation === AxisOrientation.TOP) {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift + xShift / 2 : xShift;\n            selectElement(this)\n                            .attr('transform', `translate(${-xShift + tickSize}\n                                ${-yShift - tickSize}) rotate(${rotation})`);\n        } else {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift - xShift / 2 : xShift;\n\n            selectElement(this)\n                            .attr('transform', `translate(${xShift - tickSize}\n                                ${yShift + tickSize}) rotate(${rotation})`);\n        }\n        selectElement(this).transition()\n                        .duration(1000).text(datum);\n    });\n    return tickText;\n};\n\n/**\n *\n *\n * @param {*} tickText\n * @param {*} axisInstance\n */\nconst changeTickOrientation = (selectContainer, axisInstance, tickSize) => {\n    const {\n        _smartTicks\n    } = axisInstance;\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const {\n        orientation,\n        classPrefix\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n    const {\n        rotation,\n        smartTicks: isSmartTicks\n    } = labels;\n\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.selectAll('tspan').remove();\n\n    // rotate labels if not enough space is available\n    if (rotation && (orientation === TOP || orientation === BOTTOM)) {\n        rotateAxis(axisInstance, tickText, labelManager);\n    } else if (!rotation && !isSmartTicks) {\n        tickText.attr('transform', '');\n    } else {\n        tickText.text('');\n        if (orientation === TOP || orientation === BOTTOM) {\n            tickText.attr('y', 0)\n                            .attr('x', 0)\n                            .attr('transform', '')\n                            .text('');\n            const tspan = makeElement(tickText, 'tspan', (d, i) => {\n                if (_smartTicks[i]) {\n                    return _smartTicks[i].lines;\n                } return [];\n            }, `${classPrefix}-smart-text`);\n\n            tspan.attr('dy', '0')\n                            .style('opacity', '0')\n\n                            .transition()\n                            .duration(1000)\n                            .on('end', axisInstance.registerAnimationDoneHook())\n                            .attr('dy', (d, i) => {\n                                if (orientation === BOTTOM || i !== 0) {\n                                    return _smartTicks[0].oriTextHeight;\n                                }\n                                return -_smartTicks[0].oriTextHeight * (_smartTicks[0].lines.length - 1) - tickSize;\n                            })\n                            .style('opacity', 1)\n                            .text(e => e)\n                            .attr('x', 0);\n        } else {\n            const tspan = makeElement(tickText, 'tspan', (d, i) => _smartTicks[i].lines, `${classPrefix}-smart-text`);\n            tspan.text(e => e);\n        }\n    }\n\n    return tickText;\n};\n\nconst setFixedBaseline = (axisInstance) => {\n    const {\n        fixedBaseline\n    } = axisInstance.config();\n    const {\n        showInnerTicks\n    } = axisInstance.renderConfig();\n    const domain = axisInstance.domain();\n    if (fixedBaseline && domain.length && showInnerTicks) {\n        axisInstance.setFixedBaseline();\n    }\n};\n\n/**\n *\n *\n * @param {*} textNode\n * @param {*} orientation\n * @param {*} measures\n */\nconst setAxisNamePos = (textNode, orientation, measures) => {\n    const {\n        axisNameHeight,\n        availableSpace\n    } = measures;\n\n    switch (orientation) {\n    case AxisOrientation.LEFT:\n        textNode.attr('transform',\n            `translate(${-(availableSpace.width - axisNameHeight)},${availableSpace.height / 2})rotate(-90)`);\n        break;\n    case AxisOrientation.RIGHT:\n        textNode.attr('transform',\n             `translate(${(availableSpace.width - axisNameHeight)},${availableSpace.height / 2})rotate(90)`);\n        break;\n    case AxisOrientation.TOP:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${-availableSpace.height + axisNameHeight})`);\n        break;\n    case AxisOrientation.BOTTOM:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${availableSpace.height - axisNameHeight / 2})`);\n        break;\n    default:\n    }\n    return textNode;\n};\n\n/**\n * This method is used to render the axis inside an\n * svg container.\n *\n * @export\n * @param {Object} axisInstance the nput object required to render axis\n * @param {string} axisInstance.orientation the orientation of axis\n * @param {Object} axisInstance.scale instance of d3 scale\n * @param {SVGElement} axisInstance.container the container in which to render\n */\nexport function renderAxis (axisInstance) {\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const mount = axisInstance.mount();\n    const range = axisInstance.range();\n    const axis = axisInstance.axis();\n    const scale = axisInstance.scale();\n    const {\n        _tickLabelStyle: tickLabelStyle,\n        _tickFormatter: axisTickFormatter\n     } = axisInstance;\n    const {\n        orientation,\n        axisNamePadding,\n        className,\n        id,\n        classPrefix\n     } = config;\n    const {\n        show,\n        xOffset,\n        yOffset,\n        showAxisName,\n        labels,\n        smartAxisName\n    } = renderConfig;\n\n    if (!show) {\n        return;\n    }\n\n    const tickSize = axisInstance.getTickSize();\n\n    const selectContainer = makeElement(selectElement(mount), 'g', [axisInstance], `${className}`, {},\n        key => key.config().id);\n\n    // Set style for tick labels\n    labelManager.setStyle(tickLabelStyle);\n\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    const ticks = axis.tickValues() || labelFunc();\n\n    axis.tickFormat(axisTickFormatter(ticks));\n\n    // Get range(length of range)\n    const availableSpace = Math.abs(range[0] - range[1]);\n\n    // Get width and height taken by axis labels\n    const labelProps = axisInstance.axisComponentDimensions().largestTickDimensions;\n\n    // Draw axis ticks\n    selectContainer.attr('transform', `translate(${xOffset},${yOffset})`);\n    setFixedBaseline(axisInstance);\n    if (labels.smartTicks === false || tickSize === 0) {\n        selectContainer.transition()\n                        .duration(1000)\n                        .on('end', axisInstance.registerAnimationDoneHook())\n                        .call(axis);\n    } else {\n        selectContainer.call(axis);\n    }\n    selectContainer.selectAll('.tick').classed(`${classPrefix}-ticks`, true);\n    selectContainer.selectAll('.tick line').classed(`${classPrefix}-tick-lines`, true);\n\n    // Set classes for ticks\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.classed(`${classPrefix}-ticks`, true)\n                    .classed(`${classPrefix}-ticks-${id}`, true);\n\n    changeTickOrientation(selectContainer, axisInstance, tickSize);\n\n    // Create axis name\n    const textNode = makeElement(selectContainer, 'text', [smartAxisName], `${classPrefix}-axis-name`)\n                    .attr('text-anchor', 'middle')\n                    .classed(`${classPrefix}-axis-name-${id}`, true)\n                    .text(d => d.text);\n\n    // Hide axis name if show is off\n    textNode.classed(HIDDEN, !showAxisName);\n\n    // render labels based on orientation of axis\n    const labelOffset = availableSpace / 2;\n\n    const measures = {\n        labelProps,\n        tickSize,\n        axisNamePadding,\n        axisNameHeight: smartAxisName.height,\n        yOffset,\n        xOffset,\n        labelOffset,\n        availableSpace: axisInstance.availableSpace()\n    };\n    // Set position for axis name\n    setAxisNamePos(textNode, orientation, measures);\n}\n","import {\n    timeMillisecond,\n    timeSecond,\n    timeMinute,\n    timeHour,\n    timeDay,\n    timeWeek,\n    timeMonth,\n    timeYear\n} from 'muze-utils';\n\nconst durationSecond = 1000;\nconst durationMinute = durationSecond * 60;\nconst durationHour = durationMinute * 60;\nconst durationDay = durationHour * 24;\nconst durationWeek = durationDay * 7;\nconst durationMonth = durationDay * 30;\nconst durationYear = durationDay * 365;\n\n// Longest Word for each level based on which tick skipping is decided\nconst longestWord = {\n    month: 'September',\n    quarter: 'October',\n    halfYearly: 'July',\n    year: 9999,\n    day: 'September',\n    hour: '24 AM',\n    mintues: '60:60',\n    seconds: ':60',\n    week: 'Wed 31'\n};\n\n// These are the various levels of ticks that can be shown by Muze.\n// Each level is described as how frequently the ticks appear\n// The format is as follows:\n// [Frequency, Milliseconds, Name of Seconds, Tick Generator, Level Type]\nconst tickIntervals = [\n    [1, 1, 'milliseconds', timeMillisecond.every(1), 'seconds'],\n    [1, durationSecond, 'seconds', timeSecond.every(1), 'seconds'],\n    [5, 5 * durationSecond, 'five seconds', timeSecond.every(5), 'seconds'],\n    [10, 10 * durationSecond, 'ten seconds', timeSecond.every(10), 'seconds'],\n    [15, 15 * durationSecond, 'fifteen seconds', timeSecond.every(15), 'seconds'],\n    [30, 30 * durationSecond, 'thirty seconds', timeSecond.every(30), 'seconds'],\n    [1, durationMinute, 'minute', timeMinute.every(1), 'minutes'],\n    [5, 5 * durationMinute, 'five minutes', timeMinute.every(5), 'minutes'],\n    [10, 10 * durationMinute, 'ten minutes', timeMinute.every(10), 'minutes'],\n    [15, 15 * durationMinute, 'fifteen minutes', timeMinute.every(15), 'minutes'],\n    [30, 30 * durationMinute, 'thirty minutes', timeMinute.every(30), 'minutes'],\n    [1, durationHour, 'hour', timeHour.every(1), 'hour'],\n    [3, 3 * durationHour, 'three hours', timeHour.every(3), 'hour'],\n    [6, 6 * durationHour, 'six hours', timeHour.every(6), 'hour'],\n    [12, 12 * durationHour, 'twelve hours', timeHour.every(12), 'hour'],\n    [1, durationDay, 'daily', timeDay.every(1), 'day'],\n    [1, durationWeek, 'weekly', timeWeek.every(1), 'week'],\n    [1, durationMonth, 'monthly', timeMonth.every(1), 'week'],\n    [3, 3 * durationMonth, 'quaterly', timeMonth.every(3), 'quarter'],\n    [6, 6 * durationMonth, 'half yearly', timeMonth.every(6), 'halfYearly'],\n    [1, durationYear, 'yearly', timeYear.every(1), 'year'],\n    [2, 2 * durationYear, '2 year', timeYear.every(2), 'year'],\n    [3, 3 * durationYear, '3 year', timeYear.every(3), 'year'],\n    [5, 5 * durationYear, '5 year', timeYear.every(5), 'year'],\n    [10, 10 * durationYear, 'decade', timeYear.every(10), 'year'],\n    [100, 100 * durationYear, 'century', timeYear.every(100), 'year'],\n    [1000, 1000 * durationYear, 'millenium', timeYear.every(1000), 'year']\n];\n/**\n * Get the actual tick interval based on the available width, number of ticks\n * and the distance between two ticks\n *\n * @param {Object} context Axis Context\n * @param {number} noOfTicks Number of Ticks based on which interval is calculated\n * @return {number} The width for the tick interval\n */\nconst getActualTickInterval = (context, noOfTicks) => {\n    const minTickDistance = context._minTickDistance;\n    const minWidthBetweenTicks = minTickDistance.width;\n\n    const { width } = context.availableSpace();\n    const actualTickInterval = Math.floor(((width - (noOfTicks - 1) * (minWidthBetweenTicks)) / noOfTicks));\n\n    return actualTickInterval;\n};\n\n/**\n * Get the tick interval based on the current level of ticks. Levels are decided on\n * the number of ticks that are possible to show\n *\n * @param {Object} context Axis Context\n * @param {string} type Type of level (yearly, monthly, etc)\n * @return {number} The width for the tick interval\n */\nconst getTickIntervalBasedOnCurrentLevel = (context, type) => {\n    const labelManager = context._dependencies.labelManager;\n    const longestWordType = longestWord[type];\n    const measure = labelManager.getOriSize(longestWordType);\n\n    return measure.width;\n};\n\nconst getTickIntervalFnBasedOnNumberOfTicks = (interval, count, context) => {\n    let possibleTickLevelIndex = tickIntervals.length - 1;\n    let maxPossibleTicks = 1;\n    let tickIntervalLevelInfo = null;\n\n    // Decide possible tick level based on min tick width (with ellipses)\n    for (let i = tickIntervals.length - 1; i >= 0; i--) {\n        const tickIntervalInfo = tickIntervals[i];\n        const numOfPossibleTicks = Math.floor(interval / tickIntervalInfo[1]);\n        if (numOfPossibleTicks <= count) {\n            possibleTickLevelIndex = i;\n            maxPossibleTicks = numOfPossibleTicks;\n        }\n    }\n\n    tickIntervalLevelInfo = tickIntervals[possibleTickLevelIndex];\n\n    // Get actual tick interval based on the level of ticks generated\n    const actualTickInterval = getActualTickInterval(context, maxPossibleTicks);\n\n    // Maximum Possible tick Interval for a particular level based on a pre decided set of values\n    const maxTickInterval = getTickIntervalBasedOnCurrentLevel(context, tickIntervalLevelInfo[4]);\n\n    // Display the next level involving tick skipping if current level does not meet the requirement\n    // for displaying max tick\n    if (actualTickInterval < maxTickInterval && possibleTickLevelIndex < tickIntervals.length - 1) {\n        tickIntervalLevelInfo = tickIntervals[possibleTickLevelIndex + 1];\n    }\n    return tickIntervalLevelInfo[3];\n};\n\nexport const getSkippedTicks = (context, maxPossibleTicks) => {\n    let actualNumberOfTicks = maxPossibleTicks;\n    const domain = context.domain();\n    const minDiff = context._minDiff;\n    // Get the interval in ms from the domain\n    const millisecondInterval = domain[1] - domain[0];\n    // Get number of ticks based on the minimum difference in the data\n    const numOfTicksAccordingToMinDiff = Math.floor(millisecondInterval / minDiff);\n\n    // Show ticks according to min diff if possible\n    if (maxPossibleTicks >= numOfTicksAccordingToMinDiff) {\n        actualNumberOfTicks = numOfTicksAccordingToMinDiff;\n    }\n\n    return getTickIntervalFnBasedOnNumberOfTicks(millisecondInterval, actualNumberOfTicks, context);\n};\n","import { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\nimport { getSkippedTicks } from './skip-ticks';\nimport { TIME, LINEAR, BAND } from '../enums/scale-type';\n\nexport const applyTickSkipping = (context) => {\n    const minTickDistance = context._minTickDistance;\n    const minTickSpace = context._minTickSpace;\n    const minWidthBetweenTicks = minTickDistance.width;\n    const minTickWidth = minTickSpace.width;\n\n    const { width } = context.availableSpace();\n\n    const maxTicks = Math.floor((width + minWidthBetweenTicks) / (minTickWidth + minWidthBetweenTicks));\n\n    const ticks = context.scale().ticks(getSkippedTicks(context, maxTicks));\n\n    context.renderConfig({\n        tickValues: ticks\n    });\n};\n\nconst adjustHorizontalRange = (range, diff) => {\n    range[0] += diff;\n    range[1] -= diff;\n    return range;\n};\n\nconst adjustVerticalRange = (range, diff) => {\n    range[0] -= diff;\n    range[1] += diff;\n    return range;\n};\n\nconst rangeAdjustmentMap = {\n    [TOP]: adjustHorizontalRange,\n    [BOTTOM]: adjustHorizontalRange,\n    [LEFT]: adjustVerticalRange,\n    [RIGHT]: adjustVerticalRange\n};\n\nexport const setAxisRange = (context, type, rangeBounds, offset) => {\n    context.range(rangeBounds);\n    offset && context.renderConfig({ [`${type}Offset`]: offset });\n};\n\nconst getAxisOffset = (timeDiff, range, domain) => {\n    const avWidth = Math.abs(range[1] - range[0]);\n    const pvr = avWidth / (domain[1] - domain[0]);\n    const width = (pvr * timeDiff);\n    const bars = avWidth / width;\n    const barWidth = avWidth / (bars + 1);\n    const diff = avWidth - barWidth * bars;\n\n    return diff / 2;\n};\n\nexport const getAdjustedRange = (minDiff, range, domain, config) => {\n    const {\n        orientation,\n        adjustRange\n    } = config;\n    const diff = getAxisOffset(minDiff, range, domain);\n\n    if (adjustRange) {\n        return rangeAdjustmentMap[orientation](range, diff);\n    }\n    return range;\n};\n\nexport const spaceSetter = (context, spaceConfig) => {\n    let tickInterval;\n    let heightForTicks;\n    const config = context.config();\n    const {\n        width: availWidth,\n        height: availHeight,\n        padding\n    } = context.availableSpace();\n    const {\n        top,\n        left,\n        bottom,\n        right\n    } = padding;\n    const {\n        isOffset\n    } = spaceConfig;\n    const {\n        showAxisName,\n        labels\n    } = context.renderConfig();\n    const {\n        rotation\n    } = labels;\n    const {\n        fixedBaseline,\n        axisNamePadding,\n        tickValues\n    } = config;\n    const {\n        tickDimensions,\n        allTickDimensions,\n        axisNameDimensions,\n        tickSize\n    } = context.getAxisDimensions();\n    const {\n        height: tickDimHeight,\n        width: tickDimWidth\n    } = tickDimensions;\n\n    const namePadding = showAxisName ? axisNamePadding : 0;\n    const labelConfig = { smartTicks: true, rotation: labels.rotation };\n    const minTickDistance = context._minTickDistance;\n    const minTickSpace = context._minTickSpace;\n    const minDiff = context._minDiff;\n    const domain = context.domain();\n    const axisNameHeight = axisNameDimensions.height;\n    const minWidthBetweenTicks = minTickDistance.width;\n    const minTickWidth = minTickSpace.width;\n    const minTickHeight = minTickSpace.height;\n\n    return {\n        [TIME]: {\n            x: () => {\n                !tickValues && context.applyTickSkipping();\n                const noOfTicks = context.getTickValues().length;\n\n                // Get the Tick Interval\n                tickInterval = ((availWidth - (noOfTicks - 1) * (minWidthBetweenTicks)) / noOfTicks);\n\n                // Get height for ticks\n                heightForTicks = availHeight - axisNameHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickWidth && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = rotation;\n                    // Remove ticks if not enough height\n                    if (tickInterval < minTickHeight) {\n                        heightForTicks = availHeight;\n                        tickInterval = minTickHeight;\n                        context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n\n                const tickShifter = Math.min(tickInterval, tickDimWidth);\n                // set range for axis\n                setAxisRange(context, 'y', getAdjustedRange(minDiff, [tickShifter / 2,\n                    availWidth - left - right - tickShifter / 2], domain, config),\n                        isOffset ? availHeight : null);\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n\n                return labelConfig;\n            },\n            y: () => {\n                let widthForTicks = availWidth;\n                const tickShifter = tickDimHeight / 2;\n\n                setAxisRange(context, 'x', getAdjustedRange(minDiff,\n                    [availHeight - top - bottom - tickShifter, tickShifter], domain, config),\n                        isOffset ? availWidth : null);\n\n                if ((availWidth - axisNameHeight - namePadding) <= minWidthBetweenTicks) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        [BAND]: {\n            x: () => {\n                setAxisRange(context, 'y', [0, availWidth - left - right], isOffset ? availHeight : null);\n                const range = context.range();\n\n                // Get Tick Interval\n                tickInterval = ((range[1] - range[0]) / (tickValues || domain).length) - minWidthBetweenTicks;\n\n                // Get height available for ticks\n                heightForTicks = availHeight - axisNameHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickWidth && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = rotation === null ? -90 : rotation;\n                    labelConfig.smartTicks = false;\n\n                    tickInterval = Math.max(heightForTicks, minTickWidth);\n                } else if (tickValues) {\n                    const interval = (availWidth / domain.length) - minWidthBetweenTicks;\n                    if (interval < minTickWidth) {\n                        context.range([minTickHeight / 2, availWidth - minTickHeight / 2]);\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n                return labelConfig;\n            },\n            y: () => {\n                setAxisRange(context, 'x', [availHeight - bottom, top], isOffset ? availWidth : null);\n\n                let widthForTicks = availWidth - axisNameHeight - tickSize - namePadding;\n                if (widthForTicks <= minWidthBetweenTicks) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        [LINEAR]: {\n            x: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimWidth / 2;\n\n                const baseline = fixedBaseline ? 0 : tickShifter;\n\n                setAxisRange(context, 'y', [baseline + left, availWidth - right - tickShifter],\n                    isOffset ? availHeight : null);\n\n                const range = context.range();\n\n                // Get Tick widths and available space\n                const totalTickWidth = allTickDimensions.length * (tickDimWidth + minWidthBetweenTicks);\n                const availableWidth = range[1] - range[0];\n\n                 // Rotate labels if not enough width\n                if (availableWidth < totalTickWidth && labels.rotation !== null) {\n                    if (availHeight - tickDimWidth - namePadding - tickSize > axisNameHeight) {\n                        labelConfig.rotation = null;\n                        context.renderConfig({\n                            showInnerTicks: true,\n                            showAxisName: true\n                        });\n                    } else {\n                        labelConfig.rotation = -90;\n                        context.renderConfig({\n                            showInnerTicks: true,\n                            showAxisName: false\n\n                        });\n                    }\n                }\n\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            },\n            y: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimensions.height / 2;\n                const baseline = fixedBaseline ? 1 : tickShifter;\n\n                setAxisRange(context, 'x', [availHeight - bottom - baseline, tickShifter + top],\n                    isOffset ? availWidth : null);\n\n                // Remove display of ticks if no space is left\n                if (availWidth < tickDimWidth + axisNameHeight + namePadding) {\n                    context.renderConfig({ showInnerTicks: false });\n                    if (availWidth < axisNameHeight) {\n                        context.renderConfig({ show: false });\n                    }\n                }\n                return labelConfig;\n            }\n        }\n    };\n};\n","import { defaultValue } from 'muze-utils';\nimport { TOP, LEFT, BOTTOM } from '../enums/axis-orientation';\nimport { MIN_NO_OF_TICKS, DEFAULT_NO_OF_TICKS } from '../enums/constants';\nimport { setAxisRange, getAdjustedRange } from './space-setter';\n\nexport const getRotatedSpaces = (rotation = 0, width, height) => {\n    let rotatedHeight = height;\n    let rotatedWidth = width;\n    if (rotation) {\n        const angle = ((rotation || 0) * Math.PI) / 180;\n        rotatedWidth = Math.abs(height * Math.sin(angle)) + Math.abs(width * Math.cos(angle));\n        rotatedHeight = Math.abs(width * Math.sin(angle)) + Math.abs(height * Math.cos(angle));\n    }\n    return { width: rotatedWidth, height: rotatedHeight };\n};\n\nexport const setOffset = (context) => {\n    let x = 0;\n    let y = 0;\n    const logicalSpace = context.logicalSpace();\n    const config = context.config();\n    const {\n        orientation,\n        xOffset,\n        yOffset\n    } = config;\n    if (orientation === LEFT) {\n        x = xOffset === undefined ? logicalSpace.width : xOffset;\n    }\n    if (orientation === TOP) {\n        y = yOffset === undefined ? logicalSpace.height : yOffset;\n    }\n    context.renderConfig({ xOffset: x, yOffset: y });\n};\n\nexport const getNumberOfTicks = (availableSpace, labelDim, axis, axisInstance) => {\n    let numberOfValues = 0;\n    let tickValues = [];\n    let { numberOfTicks } = axisInstance.config();\n    const ticks = axis.scale().ticks();\n    const tickLength = ticks.length;\n    const minTickDistance = axisInstance._minTickDistance.width;\n\n    numberOfValues = tickLength;\n\n    if (tickLength * (labelDim + minTickDistance) > availableSpace) {\n        numberOfValues = Math.floor(availableSpace / (labelDim + minTickDistance));\n    }\n\n    numberOfTicks = numberOfTicks || numberOfValues;\n    numberOfValues = Math.min(numberOfTicks, Math.max(MIN_NO_OF_TICKS, numberOfValues));\n\n    tickValues = axis.scale().ticks(numberOfValues);\n\n    if (tickValues.length > numberOfValues) {\n        tickValues = tickValues.filter((e, i) => i % 2 === 0);\n    }\n\n    if (numberOfValues === MIN_NO_OF_TICKS) {\n        tickValues = axis.scale().ticks(DEFAULT_NO_OF_TICKS);\n        tickValues = [tickValues[0], tickValues[tickValues.length - 1]];\n    }\n    return tickValues;\n};\n\nexport const getAxisComponentDimensions = (context) => {\n    let largestTick = '';\n    let largestTickDimensions = { width: 0, height: 0 };\n    let smartTick = {};\n    let axisTicks;\n    const allTickDimensions = [];\n    const scale = context.scale();\n    const { tickValues, showAxisName } = context.renderConfig();\n    const { name } = context.config();\n    const { labelManager } = context.dependencies();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    // set the style on the shared label manager instance\n    labelManager.setStyle(context._tickLabelStyle);\n\n    // get the values along the domain\n    axisTicks = tickValues || labelFunc();\n\n    // Get the tick labels\n    axisTicks = axisTicks.map((originalLabel, i) => {\n        const label = context.getFormattedText(originalLabel, i, axisTicks);\n\n    // convert to string for quant values\n        const tickDimensions = labelManager.getOriSize(label);\n\n    // Get spaces for all labels\n        allTickDimensions.push(tickDimensions);\n\n    // Getting largest label\n        if (tickDimensions.width > largestTickDimensions.width) {\n            largestTick = label;\n            smartTick = context.smartTicks() ? context.smartTicks()[i] : {};\n\n            largestTickDimensions = tickDimensions;\n            smartTick = smartTick || tickDimensions;\n        }\n        return label;\n    });\n\n    labelManager.setStyle(context._axisNameStyle);\n    const axisNameDimensions = showAxisName ? labelManager.getOriSize(name) : { width: 0, height: 0 };\n\n    return {\n        axisNameDimensions,\n        largestTick,\n        largestTickDimensions,\n        allTickDimensions,\n        axisTicks,\n        smartTick,\n        tickSize: context.getTickSize()\n    };\n};\n\nexport const computeAxisDimensions = (context) => {\n    let tickDimensions = {};\n    const { labels } = context.renderConfig();\n    const { smartTicks, rotation } = labels;\n    const {\n        largestTickDimensions,\n        axisTicks,\n        smartTick,\n        axisNameDimensions,\n        allTickDimensions,\n        tickSize\n    } = getAxisComponentDimensions(context);\n    const { height: labelHeight, width: labelWidth } = largestTickDimensions;\n\n    // get the domain of axis\n    const domain = context.domain();\n    // const angle = ((rotation || 0) * Math.PI) / 180;\n\n    if (domain.length === 0) {\n        return null;\n    }\n\n    if (smartTicks) {\n        tickDimensions = smartTick;\n    } else {\n        tickDimensions = { width: labelWidth, height: labelHeight };\n    }\n    tickDimensions = getRotatedSpaces(rotation, tickDimensions.width, tickDimensions.height);\n\n    if (tickSize === 0) {\n        tickDimensions = { width: 0, height: 0 };\n    }\n    return {\n        allTickDimensions,\n        tickSize,\n        tickDimensions,\n        axisNameDimensions,\n        largestTickDimensions,\n        axisTicks\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getHorizontalAxisSpace = (context, axisDimensions, range) => {\n    let width;\n    let height;\n    const domain = context.domain();\n    const minTickDistance = context._minTickDistance.width;\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    width = range && range.length ? range[1] - range[0] : ((tickDimWidth + minTickDistance) * 3);\n\n    height = 0;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        width = ((max - min) / Math.abs(minTickDiff)) * (tickDimWidth + context._minTickDistance.width);\n    }\n    if (!range || !range.length) {\n        height = Math.max(tickDimWidth, tickDimHeight);\n    } else {\n        height = tickDimHeight;\n    }\n\n    height += (showAxisName ? axisDimHeight + axisNamePadding : 0) + tickSize;\n\n    return {\n        width,\n        height\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getVerticalAxisSpace = (context, axisDimensions) => {\n    let height;\n    let width;\n    const domain = context.domain();\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    height = 0;\n    width = tickDimWidth;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        height = ((max - min) / Math.abs(minTickDiff)) * tickDimHeight;\n    }\n    width += (showAxisName ? axisDimHeight : 0) + tickSize + axisNamePadding;\n\n    return {\n        height,\n        width\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateBandSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n\n    const { orientation } = context.config();\n    const { show } = context.renderConfig();\n    const { largestTickDimensions, axisTicks, allTickDimensions } = axisDimensions;\n    const { height: largestDimHeight } = largestTickDimensions;\n    const minTickWidth = context._minTickDistance.width;\n    if (orientation === TOP || orientation === BOTTOM) {\n        let {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n\n        if (!range || !range.length) {\n            width = allTickDimensions.reduce((t, n) =>\n                t + Math.min(n.width, n.height) + minTickWidth, 0);\n        }\n\n        if (show === false) {\n            height = 0;\n            width = 0;\n        }\n        return {\n            width,\n            height\n        };\n    }\n\n    let {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    if (!height || height === 0) {\n        height = axisTicks.length * (largestDimHeight + context._minTickDistance.height);\n    }\n    if (show === false) {\n        width = 0;\n    }\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateContinousSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n    const { orientation } = context.config();\n    const { show, showAxisName } = context.renderConfig();\n    const { axisNameDimensions } = axisDimensions;\n\n    if (show === false) {\n        return {\n            width: 0,\n            height: 0\n        };\n    }\n\n    const { width: axisNameWidth } = axisNameDimensions;\n\n    if (orientation === TOP || orientation === BOTTOM) {\n        const {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n        const axisWidth = Math.max(width, axisNameWidth);\n\n        return {\n            width: axisWidth,\n            height\n        };\n    }\n    const {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    const effHeight = Math.max(height, showAxisName ? axisNameWidth : 0);\n\n    return {\n        width,\n        height: effHeight\n    };\n};\n\n/**\n * Overwrites domain with user defined domain (if present)\n * @param {Object} context reference to current axes\n * @param {Array} domain default domain\n *\n * @return {Array} domain\n */\nexport const getValidDomain = (context, domain) => {\n    const { domain: userDom } = context.config();\n\n    if (userDom) {\n        domain = userDom;\n    }\n\n    return defaultValue(domain, []);\n};\n\nexport const setContinousAxisDomain = (context, domain) => {\n    const { nice } = context.config();\n    const scale = context.scale.bind(context);\n\n    scale().domain(domain);\n    nice && scale().nice();\n    context._domain = scale().domain();\n};\n\n/**\n * Checks if any of the properties have changed between two objects\n * @param {Object} obj first object\n * @param {Object} obj1 second object\n * @param {Array} properties properties to be compared between two objects\n *\n * @return {Boolean} boolean value\n */\nexport const hasAxesConfigChanged = (obj = {}, obj1 = {}, properties) => {\n    if (!Object.keys(obj).length || !Object.keys(obj1).length) {\n        return false;\n    }\n    return properties.some(key => obj[key] !== obj1[key]);\n};\n\nexport const resetTickInterval = (context, domain) => {\n    const {\n        orientation,\n        isOffset\n    } = context.config();\n\n    const minDiff = context._minDiff;\n     // Set available space on interaction\n    if (context.range().length && (orientation === TOP || orientation === BOTTOM)) {\n        context.applyTickSkipping();\n        const {\n            largestTickDimensions\n        } = context.getAxisDimensions();\n\n        const noOfTicks = context.getTickValues().length;\n\n        const { width, height, padding } = context.availableSpace();\n        const {\n            left,\n            right\n        } = padding;\n        // Get the Tick Interval\n        const tickInterval = Math.min(largestTickDimensions.width,\n            ((width - (noOfTicks - 1) * (context._minTickDistance.width)) / noOfTicks));\n\n        context.maxTickSpaces({\n            width: tickInterval\n        });\n\n        const adjustedRange = getAdjustedRange(minDiff, [tickInterval / 2,\n            width - left - right - tickInterval / 2], domain, context.config());\n\n         // set range for axis\n        setAxisRange(context, 'y', adjustedRange, isOffset ? height : null);\n\n        context.setTickConfig();\n    }\n};\n\nexport const getSmartAxisName = (name, width, labelManager) => {\n    const oriSize = labelManager.getOriSize(name);\n\n    labelManager.useEllipsesOnOverflow(true);\n\n    return labelManager.getSmartText(name, width, oriSize.height, true);\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { hasAxesConfigChanged } from './helper';\n\nexport const PROPS = {\n    availableSpace: {},\n    axisDimensions: {},\n    axisComponentDimensions: {},\n    config: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._config || {});\n            const mockedOldConfig = mergeRecursive({}, oldConfig);\n            value = mergeRecursive(mockedOldConfig, value);\n\n            value.axisNamePadding = Math.max(value.axisNamePadding, 0);\n            const shouldAxesScaleUpdate = hasAxesConfigChanged(\n                value, oldConfig, ['interpolator', 'exponent', 'base', 'orientation']\n            );\n            const tickFormatter = context.sanitizeTickFormatter(value);\n\n            if (shouldAxesScaleUpdate) {\n                context._scale = context.createScale(value);\n                context._axis = context.createAxis(value);\n            }\n\n            context._tickFormatter = ticks => tickFormatter(ticks);\n\n            context.resetRenderConfig(value);\n            return value;\n        }\n    },\n    renderConfig: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._renderConfig || {});\n            value = mergeRecursive(oldConfig, value);\n            return value;\n        }\n    },\n    logicalSpace: {},\n    mount: {\n    },\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.logicalSpace(null);\n            return value;\n        }\n    },\n\n    smartTicks: {},\n    tickSize: {},\n    maxTickSpaces: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._maxTickSpaces || {});\n            value = mergeRecursive(oldConfig, value);\n            return value;\n        }\n    },\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import {\n    mergeRecursive,\n    getSmartComputedStyle,\n    selectElement,\n    generateGetterSetters,\n    getUniqueId\n} from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { axisOrientationMap, BOTTOM, TOP } from '../enums/axis-orientation';\nimport { defaultConfig } from './default-config';\nimport { renderAxis } from '../axis-renderer';\nimport { spaceSetter } from './space-setter';\nimport {\n    getAxisComponentDimensions,\n    computeAxisDimensions,\n    calculateContinousSpace,\n    setOffset,\n    getValidDomain,\n    getSmartAxisName\n} from './helper';\nimport { PROPS } from './props';\n\nexport default class SimpleAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @memberof SimpleAxis\n     */\n    constructor (config, dependencies) {\n        this._id = getUniqueId();\n\n        this._dependencies = dependencies;\n        this._mount = null;\n        this._range = [];\n        this._domain = [];\n        this._domainLock = false;\n        this._axisDimensions = {};\n        this._smartTicks = [];\n\n        const defCon = mergeRecursive({}, this.constructor.defaultConfig());\n        const simpleConfig = mergeRecursive(defCon, config);\n\n        const bodyElem = selectElement('body');\n        const classPrefix = simpleConfig.classPrefix;\n        this._tickLabelStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-ticks`);\n        this._axisNameStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-axis-name`);\n\n        dependencies.labelManager.setStyle(this._tickLabelStyle);\n        const dist = dependencies.labelManager.getOriSize('w');\n\n        this._minTickDistance = { width: dist.width * 3 / 4, height: dist.height / 2 };\n        this._minTickSpace = dependencies.labelManager.getOriSize('www...');\n\n        generateGetterSetters(this, PROPS);\n        this.config(simpleConfig);\n\n        this._scale = this.createScale(this._config);\n        this._axis = this.createAxis(this._config);\n        this._animationDonePromises = [];\n    }\n\n    /**\n     * Returns the default configuration of simple axis\n     *  @return {Object} default configurations\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    scale (...params) {\n        if (params.length) {\n            this._scale = params[0];\n            return this;\n        }\n        return this._scale;\n    }\n\n    resetDomain () {\n        this._domain = [];\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    axis (...params) {\n        if (params.length) {\n            this._axis = params[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainValue = getValidDomain(this, domain[0]);\n            this.scale().domain(domainValue);\n            this._domain = this.scale().domain();\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    setAxisComponentDimensions () {\n        this.axisComponentDimensions(getAxisComponentDimensions(this));\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const scale = createScale({\n            padding,\n            interpolator,\n            exponent,\n            base,\n            range,\n            type: this.constructor.type()\n        });\n\n        return scale;\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat, numberFormat } = value;\n\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(numberFormat(val), val, i, ticks);\n        }\n\n        return () => val => numberFormat(val);\n    }\n\n    resetRenderConfig (config) {\n        const {\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName,\n            xOffset,\n            yOffset,\n            tickValues,\n            smartAxisName\n        } = config;\n        this.renderConfig({\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName,\n            xOffset,\n            yOffset,\n            tickValues,\n            smartAxisName\n        });\n        return this;\n    }\n\n    resetLogicalSpace () {\n        this.logicalSpace(null);\n        this.range([]);\n\n        this.resetRenderConfig(this.config());\n    }\n\n    getFormattedText (text, index, axisTicks) {\n        const formatter = this._tickFormatter;\n\n        return formatter(axisTicks)(text, index);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createAxis (config) {\n        const { orientation } = config;\n        const axisClass = axisOrientationMap[orientation];\n\n        if (axisClass) {\n            const axis = axisClass(this.scale());\n            return axis;\n        }\n        return null;\n    }\n\n    setTickValues (tickValues) {\n        const renderConfig = this.renderConfig();\n        this.config({ ...renderConfig, tickValues });\n        this.tickValues = tickValues;\n        this.axis().tickValues(tickValues);\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n        const type = this.constructor.type();\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset })[type].x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset })[type].y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.setSmartAxisName();\n        return this;\n    }\n\n    setSmartAxisName () {\n        const { orientation, name } = this.config();\n        const dimType = (orientation === TOP || orientation === BOTTOM) ? 'width' : 'height';\n        const widthDim = this.availableSpace()[dimType];\n        const labelManager = this.dependencies().labelManager;\n        labelManager.setStyle(this._axisNameStyle);\n        this.renderConfig({\n            smartAxisName: getSmartAxisName(name, widthDim, labelManager)\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        return this;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this.scale()(domainVal);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        return this.axis().tickSize();\n    }\n\n    /**\n     * Gets the space occupied by the parts of an axis\n     *\n     * @return {Object} object with details about sizes of the axis.\n     * @memberof SimpleAxis\n     */\n    getAxisDimensions (...params) {\n        this.axisDimensions(computeAxisDimensions(this, ...params));\n        return this.axisDimensions();\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateContinousSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    /**\n     * Returns the value from the domain when given a value from the range.\n     * @param {number} value Value from the range.\n     * @return {number} Value\n     */\n    invert (value) {\n        return this.scale().invert(value);\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     *\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        return [v1, v2];\n    }\n\n    invertExtent (v1, v2) {\n        return [this.invert(v1), this.invert(v2)];\n    }\n\n    getMinTickDifference () {\n        return this.domain();\n    }\n\n    getFormattedTickValues (tickValues) {\n        return tickValues;\n    }\n\n    /**\n     * This method returns the width in pixels for one\n     * unit along the axis. It is only applicable to band scale\n     * and returns undefined for other scale type.\n     *\n     * @return {number} the width of one band along band scale axis\n     * @memberof SimpleAxis\n     */\n    getUnitWidth () {\n        return 0;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof SimpleAxis\n     */\n    serialize () {\n        return {\n            name: this.name,\n            type: this.type,\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to render the axis inside\n     * the supplied svg container.\n     *\n     * @param {SVGElement} svg the svg element in which to render the path\n     * @memberof SimpleAxis\n     */\n    /* istanbul ignore next */render () {\n        if (this.mount()) {\n            this.setTickConfig();\n            renderAxis(this);\n        }\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    remove () {\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    unsubscribe () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    isReverse () {\n        const range = this.range();\n        return range[0] > range[1];\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getPixelToValueRatio () {\n        const scale = this.scale();\n        const range = scale.range();\n        const domain = scale.domain();\n\n        return Math.abs(range[1] - range[0]) / (domain[1] - domain[0]);\n    }\n\n     /**\n     * Notifies when all animations/transitions of the axis are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n}\n\n","import { sanitizeDomainWhenEqual } from 'muze-utils';\nimport { scaleMap } from '../../scale-creator';\n\nexport default class LinearInterpolator {\n\n    createScale (config) {\n        const {\n            range\n        } = config;\n        const scaleFactory = scaleMap.linear;\n        this._scale = scaleFactory().range(range);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain.length) {\n            domain = sanitizeDomainWhenEqual(domain);\n        }\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class LogInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            base\n        } = config;\n        const scaleFactory = scaleMap.log;\n        this._scale = scaleFactory().range(range).base(base);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        const scale = this._scale;\n        if (domainVal <= 0) {\n            return scale(scale.domain()[0]);\n        }\n\n        return scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain[0] <= 0) {\n            domain[0] = Math.max(1, domain[0]);\n        }\n        if (domain[1] <= 0) {\n            domain[1] = Math.max(1, domain[1]);\n        }\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class PowInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            exponent\n        } = config;\n        const scaleFactory = scaleMap.pow;\n        this._scale = scaleFactory().range(range).exponent(exponent);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        return domain;\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\nimport { LINEAR, LOG, POW } from '../enums/scale-type';\nimport { LogInterpolator, PowInterpolator, LinearInterpolator } from './interpolators';\nimport {\n    getNumberOfTicks,\n    getValidDomain,\n    setContinousAxisDomain\n} from './helper';\n\nexport const interpolatorMap = {\n    [LOG]: LogInterpolator,\n    [POW]: PowInterpolator,\n    [LINEAR]: LinearInterpolator\n};\n\nexport default class ContinousAxis extends SimpleAxis {\n    constructor (config, dependencies) {\n        config.tickFormat = config.tickFormat || (val => val);\n        super(config, dependencies);\n    }\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const InterpolatorCls = interpolatorMap[interpolator];\n\n        this._interpolator = new InterpolatorCls();\n        let scale = this._interpolator.createScale({\n            padding,\n            exponent,\n            base,\n            range\n        });\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ContinousAxis\n     */\n    static type () {\n        return LINEAR;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this._interpolator.getScaleValue(domainVal);\n    }\n /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n\n        return axis.tickSize();\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainVal = this._interpolator.sanitizeDomain(getValidDomain(this, domain[0]));\n            setContinousAxisDomain(this, domainVal);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (...params) {\n        super.setAvailableSpace(...params);\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} tickValues\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        const {\n            tickValues,\n            showInnerTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        if (!showInnerTicks) {\n            axis.tickValues([]);\n            return this;\n        }\n\n        if (tickValues) {\n            tickValues instanceof Array && this.axis().tickValues(tickValues);\n        }\n        const newTickValues = this.getTickValues();\n\n        axis.tickValues(newTickValues);\n        const smartLabel = this.dependencies().labelManager;\n        smartLabel.setStyle(this._tickLabelStyle);\n        const formatter = this._tickFormatter(newTickValues);\n        const smartTicks = newTickValues.map((val, i) => {\n            const text = formatter(val, i);\n            const tickSpace = smartLabel.getOriSize(text);\n\n            tickSpace.text = text;\n            return tickSpace;\n        });\n\n        this.smartTicks(smartTicks);\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickValues () {\n        let labelDim = 0;\n        const {\n            orientation\n\n        } = this.config();\n        const {\n            tickValues\n        } = this.renderConfig();\n        const range = this.range();\n        const axis = this.axis();\n\n        const availableSpace = Math.abs(range[0] - range[1]);\n\n        const labelProps = this.axisComponentDimensions().largestTickDimensions;\n\n        if (tickValues) {\n            return tickValues;\n        }\n        labelDim = labelProps[orientation === BOTTOM || orientation === TOP ? 'width' : 'height'];\n\n        return getNumberOfTicks(availableSpace, labelDim, axis, this);\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.renderConfig().tickValues);\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline (tickText) {\n        const {\n            orientation\n        } = this.config();\n        const {\n            labels\n        } = this.renderConfig();\n\n        const {\n            rotation\n        } = labels;\n        const axis = this.axis();\n        const ticks = axis.tickValues();\n        const smartTicks = this.smartTicks();\n\n        if (smartTicks && smartTicks.length) {\n            const { width, height } = this.smartTicks()[0];\n\n            axis.tickTransform((d) => {\n                if (d === ticks[0]) {\n                    if ((orientation === LEFT || orientation === RIGHT)) {\n                        return `translate(0, -${(height) / 3}px)`;\n                    }\n\n                    if ((orientation === TOP || orientation === BOTTOM) && !rotation) {\n                        return `translate(${width / 2}px,  ${0}px)`;\n                    }\n                } return '';\n            });\n        }\n        return tickText;\n    }\n\n}\n","import SimpleAxis from './simple-axis';\nimport { BAND } from '../enums/scale-type';\nimport { calculateBandSpace, setOffset, getRotatedSpaces } from './helper';\n\nexport default class BandAxis extends SimpleAxis {\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BandAxis\n     */\n    static type () {\n        return BAND;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks = '';\n        let smartlabel;\n        const domain = this.domain();\n        const { labelManager } = this._dependencies;\n        const { padding } = this.config();\n        const { labels, tickValues } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        tickValues && this.axis().tickValues(tickValues);\n        smartTicks = tickValues || domain;\n\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        // Update padding between plots\n        if (typeof padding === 'number') {\n            const paddingNormalized = Math.min(1, Math.max(0, padding));\n            this.scale().padding(paddingNormalized);\n        }\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            const tickFormatter = this._tickFormatter(values);\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n        this.smartTicks(smartTicks);\n        return this;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    /**\n     *\n     *\n     * @memberof BandAxis\n     */\n    getTickValues () {\n        return this.axis().scale().domain();\n    }\n\n    formatTickValue (val) {\n        return this.valueParser()(val);\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat } = value;\n\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(this.formatTickValue(val), val, i, ticks);\n        }\n        return () => val => this.formatTickValue(val);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    getUnitWidth () {\n        return this.scale().bandwidth();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        axis.tickSizeInner(showInnerTicks ? 6 : 0);\n        axis.tickSizeOuter(showOuterTicks ? 6 : 0);\n        return axis.tickSize();\n    }\n\n    invertExtent (v1, v2) {\n        return this.scale().invertExtent(v1, v2);\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        const scale = this.scale();\n        const range = scale.range();\n        const reverse = range[0] > range[1];\n\n        const extent = this.invertExtent(v1, v2);\n        const p1 = scale(reverse ? extent[extent.length - 1] : extent[0]);\n        const p2 = scale(reverse ? extent[0] : extent[extent.length - 1]) + scale.bandwidth();\n        return [p1, p2];\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { TIME } from '../enums/scale-type';\nimport { calculateBandSpace, getRotatedSpaces, getValidDomain, setContinousAxisDomain, setOffset,\n    resetTickInterval } from './helper';\nimport { applyTickSkipping } from './space-setter';\n\n/**\n *\n *\n * @export\n * @class TimeAxis\n * @extends {SimpleAxis}\n */\nexport default class TimeAxis extends SimpleAxis {\n\n    constructor (...params) {\n        super(...params);\n        this._minDiff = Infinity;\n    }\n\n    /**\n     *\n     *\n     * @param {*} range\n     *\n     * @memberof TimeAxis\n     */\n    createScale (range) {\n        let scale = super.createScale(range);\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TimeAxis\n     */\n    static type () {\n        return TIME;\n    }\n\n    formatTickValue (val) {\n        return this.scale().tickFormat()(val);\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat } = value;\n\n        if (tickFormat) {\n            return (ticks) => {\n                const rawTicks = ticks.map(t => t.getTime());\n                return (val, i) => tickFormat(this.formatTickValue(val), val.getTime(), i, rawTicks);\n            };\n        }\n        return () => val => this.formatTickValue(val);\n    }\n\n     /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n        return super.getTickSize();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TimeAxis\n     */\n    getTickValues () {\n        return this.renderConfig().tickValues || this.scale().ticks();\n    }\n\n    /**\n     *\n     *\n     * @param {*} diff\n     *\n     * @memberof TimeAxis\n     */\n    minDiff (diff) {\n        this._minDiff = Math.min(this._minDiff, diff);\n        return this;\n    }\n\n    applyTickSkipping () {\n        applyTickSkipping(this);\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainValue = getValidDomain(this, domain[0]);\n            setContinousAxisDomain(this, domainValue);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n\n            resetTickInterval(this, domainValue);\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.config().tickValues);\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (...params) {\n        super.setAvailableSpace(...params);\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks;\n        let smartlabel;\n\n        const { labels, tickValues } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { labelManager } = this._dependencies;\n        const domain = this.getTickValues();\n\n        tickValues && this.axis().tickValues(tickValues);\n\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        smartTicks = tickValues || domain;\n\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            const tickFormatter = this._tickFormatter(values);\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n\n        this.smartTicks(smartTicks);\n        return this;\n    }\n}\n","export const x11Colors = {\n    Pink: { hex: 'ffc0cb', rgb: '255,192,203' },\n    LightPink: { hex: 'ffb6c1', rgb: '255,182,193' },\n    HotPink: { hex: 'ff69b4', rgb: '255,105,180' },\n    DeepPink: { hex: 'ff1493', rgb: '255,20,147' },\n    PaleVioletRed: { hex: 'db7093', rgb: '219,112,147' },\n    MediumVioletRed: { hex: 'c71585', rgb: '199,21,133' },\n    LightSalmon: { hex: 'ffa07a', rgb: '255,160,122' },\n    Salmon: { hex: 'fa8072', rgb: '250,128,114' },\n    DarkSalmon: { hex: 'e9967a', rgb: '233,150,122' },\n    LightCoral: { hex: 'f08080', rgb: '240,128,128' },\n    IndianRed: { hex: 'cd5c5c', rgb: '205,92,92' },\n    Crimson: { hex: 'dc143c', rgb: '220,20,60' },\n    FireBrick: { hex: 'b22222', rgb: '178,34,34' },\n    DarkRed: { hex: '8b0000', rgb: '139,0,0' },\n    Red: { hex: 'ff0000', rgb: '255,0,0' },\n    OrangeRed: { hex: 'ff4500', rgb: '255,69,0' },\n    Tomato: { hex: 'ff6347', rgb: '255,99,71' },\n    Coral: { hex: 'ff7f50', rgb: '255,127,80' },\n    DarkOrange: { hex: 'ff8c00', rgb: '255,140,0' },\n    Orange: { hex: 'ffa500', rgb: '255,165,0' },\n    Gold: { hex: 'ffd700', rgb: '255,215,0' },\n    Yellow: { hex: 'ffff00', rgb: '255,255,0' },\n    LightYellow: { hex: 'ffffe0', rgb: '255,255,224' },\n    LemonChiffon: { hex: 'fffacd', rgb: '255,250,205' },\n    LightGoldenrodYellow: { hex: 'fafad2', rgb: '250,250,210' },\n    PapayaWhip: { hex: 'ffefd5', rgb: '255,239,213' },\n    Moccasin: { hex: 'ffe4b5', rgb: '255,228,181' },\n    PeachPuff: { hex: 'ffdab9', rgb: '255,218,185' },\n    PaleGoldenrod: { hex: 'eee8aa', rgb: '238,232,170' },\n    Khaki: { hex: 'f0e68c', rgb: '240,230,140' },\n    DarkKhaki: { hex: 'bdb76b', rgb: '189,183,107' },\n    Cornsilk: { hex: 'fff8dc', rgb: '255,248,220' },\n    BlanchedAlmond: { hex: 'ffebcd', rgb: '255,235,205' },\n    Bisque: { hex: 'ffe4c4', rgb: '255,228,196' },\n    NavajoWhite: { hex: 'ffdead', rgb: '255,222,173' },\n    Wheat: { hex: 'f5deb3', rgb: '245,222,179' },\n    BurlyWood: { hex: 'deb887', rgb: '222,184,135' },\n    Tan: { hex: 'd2b48c', rgb: '210,180,140' },\n    RosyBrown: { hex: 'bc8f8f', rgb: '188,143,143' },\n    SandyBrown: { hex: 'f4a460', rgb: '244,164,96' },\n    Goldenrod: { hex: 'daa520', rgb: '218,165,32' },\n    DarkGoldenrod: { hex: 'b8860b', rgb: '184,134,11' },\n    Peru: { hex: 'cd853f', rgb: '205,133,63' },\n    Chocolate: { hex: 'd2691e', rgb: '210,105,30' },\n    SaddleBrown: { hex: '8b4513', rgb: '139,69,19' },\n    Sienna: { hex: 'a0522d', rgb: '160,82,45' },\n    Brown: { hex: 'a52a2a', rgb: '165,42,42' },\n    Maroon: { hex: '800000', rgb: '128,0,0' },\n    DarkOliveGreen: { hex: '556b2f', rgb: '85,107,47' },\n    Olive: { hex: '808000', rgb: '128,128,0' },\n    OliveDrab: { hex: '6b8e23', rgb: '107,142,35' },\n    YellowGreen: { hex: '9acd32', rgb: '154,205,50' },\n    LimeGreen: { hex: '32cd32', rgb: '50,205,50' },\n    Lime: { hex: '00ff00', rgb: '0,255,0' },\n    LawnGreen: { hex: '7cfc00', rgb: '124,252,0' },\n    Chartreuse: { hex: '7fff00', rgb: '127,255,0' },\n    GreenYellow: { hex: 'adff2f', rgb: '173,255,47' },\n    SpringGreen: { hex: '00ff7f', rgb: '0,255,127' },\n    MediumSpringGreen: { hex: '00fa9a', rgb: '0,250,154' },\n    LightGreen: { hex: '90ee90', rgb: '144,238,144' },\n    PaleGreen: { hex: '98fb98', rgb: '152,251,152' },\n    DarkSeaGreen: { hex: '8fbc8f', rgb: '143,188,143' },\n    MediumSeaGreen: { hex: '3cb371', rgb: '60,179,113' },\n    SeaGreen: { hex: '2e8b57', rgb: '46,139,87' },\n    ForestGreen: { hex: '228b22', rgb: '34,139,34' },\n    Green: { hex: '008000', rgb: '0,128,0' },\n    DarkGreen: { hex: '006400', rgb: '0,100,0' },\n    MediumAquamarine: { hex: '66cdaa', rgb: '102,205,170' },\n    Aqua: { hex: '00ffff', rgb: '0,255,255' },\n    Cyan: { hex: '00ffff', rgb: '0,255,255' },\n    LightCyan: { hex: 'e0ffff', rgb: '224,255,255' },\n    PaleTurquoise: { hex: 'afeeee', rgb: '175,238,238' },\n    Aquamarine: { hex: '7fffd4', rgb: '127,255,212' },\n    Turquoise: { hex: '40e0d0', rgb: '64,224,208' },\n    MediumTurquoise: { hex: '48d1cc', rgb: '72,209,204' },\n    DarkTurquoise: { hex: '00ced1', rgb: '0,206,209' },\n    LightSeaGreen: { hex: '20b2aa', rgb: '32,178,170' },\n    CadetBlue: { hex: '5f9ea0', rgb: '95,158,160' },\n    DarkCyan: { hex: '008b8b', rgb: '0,139,139' },\n    Teal: { hex: '008080', rgb: '0,128,128' },\n    LightSteelBlue: { hex: 'b0c4de', rgb: '176,196,222' },\n    PowderBlue: { hex: 'b0e0e6', rgb: '176,224,230' },\n    LightBlue: { hex: 'add8e6', rgb: '173,216,230' },\n    SkyBlue: { hex: '87ceeb', rgb: '135,206,235' },\n    LightSkyBlue: { hex: '87cefa', rgb: '135,206,250' },\n    DeepSkyBlue: { hex: '00bfff', rgb: '0,191,255' },\n    DodgerBlue: { hex: '1e90ff', rgb: '30,144,255' },\n    CornflowerBlue: { hex: '6495ed', rgb: '100,149,237' },\n    SteelBlue: { hex: '4682b4', rgb: '70,130,180' },\n    RoyalBlue: { hex: '4169e1', rgb: '65,105,225' },\n    Blue: { hex: '0000ff', rgb: '0,0,255' },\n    MediumBlue: { hex: '0000cd', rgb: '0,0,205' },\n    DarkBlue: { hex: '00008b', rgb: '0,0,139' },\n    Navy: { hex: '000080', rgb: '0,0,128' },\n    MidnightBlue: { hex: '191970', rgb: '25,25,112' },\n    Lavender: { hex: 'e6e6fa', rgb: '230,230,250' },\n    Thistle: { hex: 'd8bfd8', rgb: '216,191,216' },\n    Plum: { hex: 'dda0dd', rgb: '221,160,221' },\n    Violet: { hex: 'ee82ee', rgb: '238,130,238' },\n    Orchid: { hex: 'da70d6', rgb: '218,112,214' },\n    Fuchsia: { hex: 'ff00ff', rgb: '255,0,255' },\n    Magenta: { hex: 'ff00ff', rgb: '255,0,255' },\n    MediumOrchid: { hex: 'ba55d3', rgb: '186,85,211' },\n    MediumPurple: { hex: '9370db', rgb: '147,112,219' },\n    BlueViolet: { hex: '8a2be2', rgb: '138,43,226' },\n    DarkViolet: { hex: '9400d3', rgb: '148,0,211' },\n    DarkOrchid: { hex: '9932cc', rgb: '153,50,204' },\n    DarkMagenta: { hex: '8b008b', rgb: '139,0,139' },\n    Purple: { hex: '800080', rgb: '128,0,128' },\n    Indigo: { hex: '4b0082', rgb: '75,0,130' },\n    DarkSlateBlue: { hex: '483d8b', rgb: '72,61,139' },\n    SlateBlue: { hex: '6a5acd', rgb: '106,90,205' },\n    MediumSlateBlue: { hex: '7b68ee', rgb: '123,104,238' },\n    White: { hex: 'ffffff', rgb: '255,255,255' },\n    Snow: { hex: 'fffafa', rgb: '255,250,250' },\n    Honeydew: { hex: 'f0fff0', rgb: '240,255,240' },\n    MintCream: { hex: 'f5fffa', rgb: '245,255,250' },\n    Azure: { hex: 'f0ffff', rgb: '240,255,255' },\n    AliceBlue: { hex: 'f0f8ff', rgb: '240,248,255' },\n    GhostWhite: { hex: 'f8f8ff', rgb: '248,248,255' },\n    WhiteSmoke: { hex: 'f5f5f5', rgb: '245,245,245' },\n    Seashell: { hex: 'fff5ee', rgb: '255,245,238' },\n    Beige: { hex: 'f5f5dc', rgb: '245,245,220' },\n    OldLace: { hex: 'fdf5e6', rgb: '253,245,230' },\n    FloralWhite: { hex: 'fffaf0', rgb: '255,250,240' },\n    Ivory: { hex: 'fffff0', rgb: '255,255,240' },\n    AntiqueWhite: { hex: 'faebd7', rgb: '250,235,215' },\n    Linen: { hex: 'faf0e6', rgb: '250,240,230' },\n    LavenderBlush: { hex: 'fff0f5', rgb: '255,240,245' },\n    MistyRose: { hex: 'ffe4e1', rgb: '255,228,225' },\n    Gainsboro: { hex: 'dcdcdc', rgb: '220,220,220' },\n    LightGray: { hex: 'd3d3d3', rgb: '211,211,211' },\n    Silver: { hex: 'c0c0c0', rgb: '192,192,192' },\n    DarkGrey: { hex: 'a9a9a9', rgb: '169,169,169' },\n    Grey: { hex: '808080', rgb: '128,128,128' },\n    DimGrey: { hex: '696969', rgb: '105,105,105' },\n    LightSlateGrey: { hex: '778899', rgb: '119,136,153' },\n    SlateGrey: { hex: '708090', rgb: '112,128,144' },\n    DarkSlateGrey: { hex: '2f4f4f', rgb: '47,79,79' },\n    Black: { hex: '000000', rgb: '0,0,0' }\n};\n","import {\n    LINEAR\n} from '../enums/constants';\n/**\n * Set of default colors\n */\nexport const palette = [\n    '#086bb6',\n    '#f37d45',\n    '#f5ce02',\n    '#67bda0',\n    '#c54e4e',\n    '#ae70af'\n];\n\nexport const DEFAULT_GRADIENT_COLOR = '#eaeaea';\n\nexport const DEFAULT_CONFIG = {\n    range: palette,\n    value: palette[0],\n    step: false,\n    stops: 5,\n    type: LINEAR\n};\n","import { mergeRecursive, detectColor, hexToHsv, rgbToHsv } from 'muze-utils';\nimport { x11Colors } from './color-maps';\nimport { palette, DEFAULT_GRADIENT_COLOR } from './defaults';\nimport { LINEAR, RGB, HEX, HSL, HSLA } from '../enums/constants';\n\nexport const getHslString = hslArr => `hsla(${hslArr[0] * 360},${hslArr[1] * 100}%,${hslArr[2] * 100}%,\\\n${hslArr[3] || 1})`;\n\nexport const convertToXllString = baseString => (baseString.split(' ') || [])\n                .reduce((x, e) => `${x}${e.charAt(0).toUpperCase()}${e.slice(1)}`, '');\n\nexport const getActualHslColor = (e, paletteColor) => {\n    let color = '';\n    if (typeof e === 'string') {\n        e = e.replace(/ /g, '');\n        e = e.toLowerCase();\n        if (detectColor(e) === HSL || detectColor(e) === HSLA) {\n            color = e.match(/(\\d+(\\.\\d+)?)/g);\n            color = [color[0] / 360, color[1] / 100, color[2] / 100, color[3] || 1];\n        } else if (detectColor(e) === HEX) {\n            color = hexToHsv(e);\n        } else if (detectColor(e) === RGB) {\n            const col = e.substring(e.indexOf('(') + 1, e.lastIndexOf(')')).split(/,\\s*/);\n            color = rgbToHsv(...col);\n        } else if (x11Colors[convertToXllString(e)]) {\n            color = rgbToHsv(...x11Colors[convertToXllString(e)].rgb.split(','));\n        }\n    } else if (!(e instanceof Array)) {\n        color = rgbToHsv(paletteColor);\n    } else {\n        color = e;\n    }\n    return color;\n};\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, config) => {\n            const defCon = mergeRecursive({}, context.constructor.defaultConfig());\n            if (config.type === LINEAR) {\n                config.range = config.range || [defCon.range[0]];\n                config.range = config.range.length > 1 ? config.range : [DEFAULT_GRADIENT_COLOR, ...config.range];\n            }\n            const oldConfig = mergeRecursive(defCon, context.config());\n            const newConfig = mergeRecursive(oldConfig, config);\n\n            if (newConfig.range instanceof Array) {\n                newConfig.range = newConfig.range.map((e, i) => getActualHslColor(e, palette[i]));\n                newConfig.stops = config.stops || newConfig.range.length;\n            }\n            newConfig.value = getActualHslColor(newConfig.value, newConfig.value);\n            return newConfig;\n        }\n    },\n    domain: {},\n    scale: {},\n    uniqueValues: {}\n};\n","import { InvalidAwareTypes, getObjProp } from 'muze-utils';\n\nexport const treatNullMeasures = (domainVal, scaledVal, minDomainScaledVal) => {\n    if (domainVal instanceof InvalidAwareTypes) {\n        return minDomainScaledVal;\n    }\n    return scaledVal;\n};\n\nexport const resolveAxisConfig = (propVal, defaultVal, context) => {\n    const constructor = getObjProp(propVal, 'constructor');\n    switch (constructor) {\n    case Function:\n        return propVal(defaultVal, context);\n    case Array:\n        return propVal;\n    default:\n        return defaultVal;\n    }\n};\n","import { numberInterpolator, piecewiseInterpolator, hslInterpolator, sanitizeDomainWhenEqual } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, SEQUENTIAL, ORDINAL, QUANTILE } from '../enums/scale-type';\nimport { getHslString } from './props';\nimport { treatNullMeasures } from '../helper';\n\nconst getStops = (domain, stops) => {\n    let newStops = [];\n\n    if (stops instanceof Array) {\n        newStops = stops.slice().sort();\n        newStops = [...new Set([domain[0], ...stops, domain[1]])].sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i <= stops; i++) {\n            newStops[i] = interpolator(i / stops);\n        }\n    }\n\n    if (newStops[0] < domain[0]) {\n        newStops.shift();\n    }\n    return { domain, newStops };\n};\n\nconst rangeStops = (newStopsLength, range) => {\n    let newRange = [];\n    const maxRangeLength = Math.min(range.length, 18);\n\n    if (newStopsLength > maxRangeLength) {\n        const interpolator = piecewiseInterpolator()(hslInterpolator(), range.map(e => getHslString(e)));\n        for (let i = 0; i < newStopsLength; i++) {\n            newRange[i] = interpolator(i / (newStopsLength - 1));\n        }\n    } else {\n        newRange = range.slice(0, newStopsLength);\n    }\n    return { newRange };\n};\n\n/**\n*\n*\n* @param {*} domain\n*\n*/\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomainMeasure = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { domain, uniqueVals, scaleDomain: [0, 1], range };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain, nice: true, range };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} stops\n *\n */\nconst steppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(domain, stops);\n    const { newRange } = rangeStops(newStops.length - 1, range);\n\n    return { uniqueVals, domain: newStops, nice: true, range: newRange };\n};\n\nconst continousSteppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(sanitizeDomainWhenEqual(domain), range.length - 1);\n    const hslRange = range.map(e => getHslString(e));\n    return { uniqueVals, domain: newStops, nice: true, range: hslRange };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst uniqueRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    return scale(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst indexedRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n\n    return treatNullMeasures(domainValue, scale(numVal), scale(0));\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale, domain) => treatNullMeasures(domainValue, scale(domainValue),\n    scale(domain[0]));\n\n/**\n *\n *\n * @param {*} stops\n */\nconst strategies = () => ({\n    [`${CONTINOUS}-${CONTINOUS}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomain,\n        value: () => uniqueRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${ORDINAL}`]: {\n        scale: ORDINAL,\n        domainRange: () => normalDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}-${ORDINAL}`]: {\n        scale: LINEAR,\n        domainRange: () => continousSteppedDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${ORDINAL}`]: {\n        scale: QUANTILE,\n        domainRange: () => steppedDomain,\n        value: () => normalRange\n\n    }\n});\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} stops\n */\nexport const strategyGetter = (domainType, rangeType, schemeType) =>\n    strategies()[`${domainType}-${rangeType}-${schemeType || ''}`];\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters, rgbToHsv } from 'muze-utils';\nimport { createScale, getScheme, getSchemeType } from '../scale-creator';\nimport { CONTINOUS, DISCRETE, COLOR } from '../enums/constants';\nimport { strategyGetter } from './color-strategy';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { PROPS, getHslString, getActualHslColor } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ColorAxis {\n\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} config input parameters.\n    * @param {Object | undefined} params.range Type of color range.\n    * @param {string} params.name the label to show on axis.\n    * @param {string} params.type The type of scale to handle.\n    * @memberof ColorAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n        this.config(config);\n\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = (this._config.type === 'linear' && !this._config.step) ? CONTINOUS : DISCRETE;\n\n        this._schemeType = getSchemeType(this._config.range);\n\n        this._colorStrategy = this.setColorStrategy(this._domainType, this._rangeType, this._schemeType);\n        this._scale = this.createScale(this._colorStrategy);\n\n        this._id = getUniqueId();\n\n        this.updateDomain(config.domain);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return COLOR;\n    }\n\n    /**\n     *\n     *\n     * @param {*} colorStrategy\n     *\n     * @memberof ColorAxis\n     */\n    createScale (colorStrategy) {\n        const { range } = this.config();\n        if (range && typeof (range) === 'string') {\n            return getScheme(range);\n        }\n        return createScale({\n            type: colorStrategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setColorStrategy (domainType, rangeType, schemeType) {\n        return strategyGetter(domainType, rangeType, schemeType);\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getHslString (hslColorArray) {\n        return getHslString(hslColorArray);\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getColor (domainVal) {\n        return this.getHslString(this.getRawColor(domainVal));\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getRawColor (domainVal) {\n        if (this.domain() && domainVal !== undefined) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const color = this._colorStrategy.value(range)(domainVal, scale, this.domain(), this.uniqueValues());\n            if (color) {\n                if (typeof color === 'string') {\n                    const col = color.substring(color.indexOf('(') + 1, color.lastIndexOf(')')).split(/,\\s*/);\n                    return rgbToHsv(...col);\n                }\n                return [...color];\n            }\n        }\n        return [...this.config().value];\n    }\n\n    /**\n     *\n     *\n     * @param {*} [domain=[]]\n     *\n     * @memberof ColorAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const domainRangeFn = this._colorStrategy.domainRange();\n            const scaleInfo = domainRangeFn(domain, this.config().stops, range);\n\n            this.domain(scaleInfo.domain);\n            scaleInfo.range && this.scale().range(scaleInfo.range);\n            this.uniqueValues(scaleInfo.uniqueVals);\n            this.scale().domain(scaleInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            config: this.config()\n        };\n    }\n\n    transformColor (color, transformationArr) {\n        const h = color[0] * 360;\n        const s = color[1] * 100;\n        const l = color[2] * 100;\n        const a = color[3] || 1;\n        const newH = h + transformationArr[0];\n        const newS = s + transformationArr[1];\n        const newL = l + transformationArr[2];\n        const newA = a + transformationArr[3] || 0;\n\n        return { color: `hsla(${newH},${newS}%,${newL}%,${newA})`, hsla: [newH / 360, newS / 100, newL / 100, newA] };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n\n    getHslArray (color) {\n        return getActualHslColor(color);\n    }\n\n}\n","export const DEFAULT_CONFIG = {\n    value: 36,\n    range: [36, 1000]\n};\n","import { numberInterpolator, piecewiseInterpolator } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, THRESHOLD } from '../enums/scale-type';\nimport { treatNullMeasures } from '../helper';\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} intervals\n *\n */\nconst steppedDomain = (domain, intervals) => {\n    let newIntervals = [];\n    if (intervals instanceof Array) {\n        newIntervals = intervals.slice().sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i < intervals; i++) {\n            newIntervals[i] = interpolator(i / (intervals - 1));\n        }\n    }\n    if (newIntervals[0] < domain[0]) {\n        newIntervals.shift();\n    }\n    const retDomain = newIntervals;\n    return { uniqueVals: newIntervals, domain: retDomain, nice: true };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst discreteRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n    const interpolator = numberInterpolator()(...scale.range());\n    return treatNullMeasures(domainValue, interpolator(numVal), interpolator(domain[0]));\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst pieceWiseRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    const fn = piecewiseInterpolator()(numberInterpolator(), [...scale.range()]);\n    return fn(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale, domain) =>\n    treatNullMeasures(domainValue, scale(domainValue), scale(domain[0]));\n\n/**\n *\n *\n * @param {*} intervals\n */\nconst strategies = {\n    [`${DISCRETE}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: indexedDomain,\n        range: pieceWiseRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: normalDomain,\n        range: normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}`]: {\n        scale: THRESHOLD,\n        domain: steppedDomain,\n        range: discreteRange\n    }\n};\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} intervals\n */\nexport const strategyGetter = (domainType, rangeType) =>\n     strategies[`${domainType}-${rangeType}`];\n","export const PROPS = {\n    config: {},\n    domain: {\n        sanitization: (context, value) => {\n            context.scale().domain(value);\n            return value;\n        }\n    },\n    range: {},\n    scale: {},\n    uniqueValues: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SIZE, CONTINOUS, DISCRETE } from '../enums/constants';\nimport { strategyGetter } from './size-strategy';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class SizeAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @param {Object} config input parameters.\n     * @memberof SizeAxis\n     */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig(), config);\n        // @todo: Will use configuration override using scale decorator\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = CONTINOUS;\n\n        this._sizeStrategy = this.setStrategy(this._domainType, this._rangeType);\n        this._scale = this.createScale(this._sizeStrategy);\n        this._range = this._config.range;\n\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setStrategy (domainType, rangeType) {\n        return strategyGetter(domainType, rangeType);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SizeAxis\n     */\n    createScale (strategy) {\n        const {\n            range\n        } = this.config();\n        return createScale({\n            type: strategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SIZE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof SizeAxis\n     */\n    getSize (domainVal = 0) {\n        let sizeVal = 1;\n        const {\n            value\n        } = this.config();\n        const scale = this.scale();\n        const domain = this.domain() || [1, 1];\n\n        if (!scale || domain[0] === domain[1]) {\n            sizeVal = value;\n        } else {\n            return this._sizeStrategy.range(domainVal, scale, this.domain(), this.uniqueValues());\n        }\n        return sizeVal;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof SizeAxis\n     */\n    updateDomain (domain) {\n        if (domain) {\n            const domainFn = this._sizeStrategy.domain;\n\n            const domainInfo = domainFn(domain, this.config().intervals);\n\n            this.domain(domainInfo.domain);\n            this.uniqueValues(domainInfo.uniqueVals);\n\n            this.scale().domain(domainInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","export const DEFAULT_CONFIG = {\n    generator: null,\n    value: 'circle',\n    range: ['circle', 'diamond', 'star', 'cross', 'square', 'wye', 'triangle']\n};\n","export const PROPS = {\n    config: {},\n    domain: {},\n    scale: {},\n    uniqueValues: {},\n    generator: {}\n};\n\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, getSymbol, generateGetterSetters, mergeRecursive, InvalidAwareTypes } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SHAPE } from '../enums/constants';\nimport { shapeGenerator } from './helper';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ShapeAxis {\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} params input parameters.\n    * @param {Object | undefined} params.range Type of color scheme.\n    * @memberof ShapeAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(this._config, config);\n\n        this._scale = createScale({\n            type: 'ordinal',\n            range: this._config.range\n        });\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SHAPE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} value\n     *\n     * @memberof ShapeAxis\n     */\n    getShape (value) {\n        if (!this.scale() || !this.domain() || !value || value instanceof InvalidAwareTypes) {\n            return this.config().value;\n        }\n\n        if (this._generatedShapes) {\n            return this._generatedShapes[value];\n        }\n\n        const shapeType = this.scale()(value);\n        if (shapeType === 'string') {\n            return getSymbol(shapeType);\n        }\n\n        return shapeType;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof ShapeAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            this.uniqueValues(domain);\n            this.domain(domain);\n            this.scale().domain(domain);\n\n            if (this.config().generator) {\n                this._generatedShapes = shapeGenerator(domain, this.config().generator);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.config().range,\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","/**\n *\n *\n * @param {*} domain\n * @param {*} generatorFn\n *\n */\nexport const shapeGenerator = (domain, generatorFn) => {\n    const generatedShapes = {};\n    domain.forEach((value) => {\n        generatedShapes[value] = generatorFn(value);\n    });\n    return generatedShapes;\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, config) => mergeRecursive(context.config(), config),\n        preset: (context, config) => {\n            const { range, domain } = config;\n            range && context.range(range);\n            domain && context.domain(domain);\n        }\n    },\n    domain: {},\n    range: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, Symbols, mergeRecursive, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_ANGLE_DOMAIN } from '../enums/constants';\nimport { PROPS } from './props';\nimport { resolveAxisConfig } from '../helper';\n\nconst { pie } = Symbols;\n\nconst createAngleValues = (context) => {\n    const angleData = context._angleFn(context._domain);\n    angleData.forEach((v) => {\n        v.startAngle -= Math.PI / 2;\n        v.endAngle -= Math.PI / 2;\n    });\n    context._angleValues = angleData.reduce((values, d) => {\n        const key = d.data;\n        !values[key] && (values[key] = []);\n        values[key].push(d);\n        return values;\n    }, {});\n};\n\n/**\n* This class is used to instantiate a AngleAxis.\n* @class AngleAxis\n*/\nexport default class AngleAxis {\n\n    /**\n     * Creates an instance of AngleAxis.\n     * @param {Object} config input parameters.\n     * @memberof AngleAxis\n     */\n    constructor (config = {}) {\n        this._id = getUniqueId();\n        generateGetterSetters(this, PROPS);\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n        this.config(config);\n        this._range = [0, 360];\n        this._angleFn = pie()\n                .value(d => (typeof d === 'string' ? 1 : d))\n                .sortValues(null);\n        this._angleValues = {};\n    }\n\n    static defaultConfig () {\n        return {};\n    }\n\n    createScale (strategy) {\n        const {\n            range\n        } = this.config();\n        return createScale({\n            type: strategy.scale,\n            range\n        });\n    }\n\n    getScaleValue (domainVal) {\n        return this._angleValues[domainVal];\n    }\n\n    padAngle (angle) {\n        this._angleFn = this._angleFn.padAngle(angle);\n    }\n\n    domain (...domainVal) {\n        if (domainVal.length) {\n            const { domain: customDomain } = this.config();\n            const domain = domainVal[0].length ? domainVal[0] : DEFAULT_ANGLE_DOMAIN;\n            this._domain = resolveAxisConfig(customDomain, domain, this);\n            createAngleValues(this);\n            return this;\n        }\n        return this._domain;\n    }\n\n    range (...range) {\n        if (range.length) {\n            const { range: customRange } = this.config();\n            this._range = resolveAxisConfig(customRange, range[0], this);\n            const domain = this.domain();\n            const [startAngle, endAngle] = this._range;\n            this._angleFn\n                    .startAngle((startAngle / 180) * Math.PI)\n                    .endAngle(Math.PI * endAngle / 180);\n            if (domain && domain.length) {\n                createAngleValues(this);\n            }\n            return this;\n        }\n        return this._range;\n    }\n}\n","/**\n * This file exports constants that are used as enums in the\n *  crosstab group implementation.\n */\n/**\n * Width of the crosstab.\n */\nexport const X = 'x';\n/**\n * Width of the crosstab.\n */\nexport const Y = 'y';\n/**\n * Width of the crosstab.\n */\nexport const WIDTH = 'width';\n\n/**\n * Height of the crosstab.\n */\nexport const HEIGHT = 'height';\n\n/**\n * Field referring to object storing measurement configuration.\n */\nexport const MEASUREMENT = 'measurement';\n\n/**\n * Field referring to object storing configuration properties.\n */\nexport const CONFIG = 'config';\n\n/**\n * Width of visual unit in crosstab.\n */\nexport const MIN_UNIT_WIDTH = 'minUnitWidth';\n\n/**\n * Height of visual unit.\n */\nexport const MIN_UNIT_HEIGHT = 'minUnitHeight';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSIONS = 'dimensions';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURES = 'measures';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSION = 'dimension';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURE = 'measure';\n\n/**\n * Flag to specify if model should be pivoted.\n */\nexport const PIVOT = 'pivot';\n\n/**\n * Flag to specify format\n */\nexport const FORMAT = 'format';\n\n/**\n * Mount point where the variable will be hosted\n */\nexport const MOUNT = 'mount';\n\n/**\n * Data update flag\n */\nexport const HAS_DATA_UPDATED = 'hasDataUpdated';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROWS = 'rows';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMNS = 'columns';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COL = 'col';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROW = 'row';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMN = 'column';\n\n/**\n * Field referring to object storing color field\n */\nexport const COLOR = 'color';\n\n/**\n * Field referring to object storing shape field\n */\nexport const SHAPE = 'shape';\n\n/**\n * Field referring to object storing size field\n */\nexport const SIZE = 'size';\n\n/**\n * Field referring to object storing detail field\n */\nexport const DETAIL = 'detail';\n\n/**\n * Field referring to object storing set of layers\n */\nexport const LAYERS = 'layers';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const TRANSFORM = 'transform';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const ORDINAL = 'ordinal';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const LINEAR = 'linear';\n/**\n * Field referring to object storing the transforms\n */\nexport const LEFT = 'left';\n/**\n * Field referring to object storing the transforms\n */\nexport const RIGHT = 'right';\n/**\n * Field referring to object storing the transforms\n */\nexport const TOP = 'top';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTTOM = 'bottom';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const RETINAL = 'retinal';\n/**\n * Field referring to object storing the transforms\n */\nexport const CELL = 'cell';\n/**\n * Field referring to object storing the transforms\n */\nexport const X_AXES = 'xAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const Y_AXES = 'yAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const ENTRY_CELLS = 'entryCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const INITIALIZED = 'initialized';\n/**\n * Field referring to object storing the transforms\n */\nexport const EXIT_CELLS = 'exitCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const AXIS = 'axis';\n/**\n * Field referring to object storing the transforms\n */\nexport const UNIT = 'unit';\n/**\n * Field referring to object storing the transforms\n */\nexport const UPDATED = 'updated';\n/**\n * Field referring to object storing the transforms\n */\nexport const BEFORE_UPDATE = 'beforeupdate';\n/**\n * Field referring to object storing the transforms\n */\nexport const VALUE_MATRIX = 'valueMatrix';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET_HEADERS = 'facet-headers';\n/**\n * Field referring to object storing the transforms\n */\nexport const RADIUS = 'radius';\n/**\n * Field referring to object storing the transforms\n */\nexport const ANGLE = 'angle';\n\nexport const ANGLE0 = 'angle0';\n/**\n * Field referring to object storing the transforms\n */\nexport const ARC = 'arc';\n/**\n * Field referring to object storing the transforms\n */\nexport const CATEGORICAL = 'categorical';\n/**\n * Field referring to object storing the transforms\n */\nexport const TEMPORAL = 'temporal';\n/**\n * Field referring to object storing the transforms\n */\nexport const BAR = 'bar';\n/**\n * Field referring to object storing the transforms\n */\nexport const LINE = 'line';\n/**\n * Field referring to object storing the transforms\n */\nexport const POINT = 'point';\n/**\n * Field referring to object storing the transforms\n */\nexport const PRIMARY = 'Primary';\n/**\n * Field referring to object storing the transforms\n */\nexport const SECONDARY = 'Secondary';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTH = 'both';\n/**\n * Field referring to object storing the transforms\n */\nexport const INTERACTION = 'interaction';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_LINES = 'gridLines';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_BANDS = 'gridBands';\n/**\n * Field referring to object storing the transforms\n */\nexport const HEADER = 'header';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET = 'facet';\n/**\n * Ordering type\n */\nexport const ASCENDING = 'asc';\n/**\n * Ordering type\n */\nexport const DESCENDING = 'desc';\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, mergeRecursive, generateGetterSetters, sanitizeDomainWhenEqual } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { LINEAR } from '../../../visual-group/src/enums/constants';\nimport { PROPS } from './props';\nimport { resolveAxisConfig } from '../helper';\n\nconst adjustDomain = (context) => {\n    const minOuterRadius = context.config().minOuterRadius;\n    const domain = context._domain;\n    if (context._range.length) {\n        const scale = context._scale;\n        const value = scale.invert(minOuterRadius) - scale.invert(0);\n        context._domain = [domain[0] - value, domain[1]];\n        scale.domain(context._domain);\n    }\n};\n\n/**\n* This class is used to instantiate a RadiusAxis.\n* @class RadiusAxis\n*/\nexport default class RadiusAxis {\n\n    /**\n     * Creates an instance of RadiusAxis.\n     * @param {Object} config input parameters.\n     * @memberof RadiusAxis\n     */\n    constructor (config = {}) {\n        this._id = getUniqueId();\n        generateGetterSetters(this, PROPS);\n        this._range = [];\n        this._radiusFactor = 1;\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n        this.config(config);\n        this._scale = this.createScale({\n            scale: LINEAR\n        });\n    }\n\n    static defaultConfig () {\n        return {\n            padding: [0, 1],\n            minOuterRadius: 10\n        };\n    }\n\n    config (...params) {\n        if (params.length) {\n            const config = mergeRecursive(this.config(), params[0]);\n            this._config = config;\n            return this;\n        }\n        return this._config;\n    }\n\n    createScale (strategy) {\n        return createScale({\n            type: strategy.scale,\n            range: this.range()\n        });\n    }\n\n    domain (...domainVal) {\n        if (domainVal.length) {\n            const { domain: customDomain } = this.config();\n            let domain = resolveAxisConfig(customDomain, domainVal[0], this);\n            domain = sanitizeDomainWhenEqual(domain);\n            this._scale.domain(domain);\n            this._domain = domain;\n            adjustDomain(this);\n        }\n        return this._domain;\n    }\n\n    getInnerRadius (domainVal) {\n        if (domainVal === undefined) {\n            return this.range()[0];\n        }\n        return this._scale(domainVal);\n    }\n\n    getOuterRadius (domainVal) {\n        if (domainVal === undefined) {\n            return this.range()[1];\n        }\n        const radius = this._scale(domainVal) * this._radiusFactor;\n        return radius;\n    }\n\n    range (...range) {\n        if (range.length) {\n            const { padding, range: customRange } = this.config();\n            const sanitizedRange = range[0].map((v, i) => v + (i ? -padding[i] : padding[i]));\n            const rangeVal = resolveAxisConfig(customRange, sanitizedRange, this);\n            this._range = rangeVal;\n            this._scale.range(rangeVal);\n            adjustDomain(this);\n        }\n        return this._range;\n    }\n\n    setRadiusFactor (val) {\n        this._radiusFactor = val;\n        return this;\n    }\n}\n","import * as ScaleType from './enums/scale-type';\n\nconst DATA_TYPES = {\n    DIMENSION: 'dimension',\n    CATEGORICAL: 'categorical',\n    MEASURE: 'measure',\n    TEMPORAL: 'temporal'\n};\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    [DATA_TYPES.DIMENSION]: ScaleType.BAND,\n    [DATA_TYPES.MEASURE]: ScaleType.LINEAR,\n    [DATA_TYPES.TEMPORAL]: ScaleType.TIME\n};\n\n","import { nestCollection, InvalidAwareTypes } from 'muze-utils';\n\n/**\n * Create multiple datasets from a single dataset by grouping the data using\n * a dimensional field.\n * @param {Array} schema Name and type of fields are stored in schema\n * @param {Array} data Data array\n * @param {Object} config Configuration object\n * @return {Array} Grouped data array\n */\nexport default (schema, data, config) => {\n    const groupBy = config.groupBy instanceof Array ? config.groupBy : [config.groupBy];\n    const groupByIndices = groupBy.map(fieldName => schema.findIndex(d => d.name === fieldName));\n\n    if (groupByIndices.find(d => d === -1) !== undefined) {\n        throw new Error(`Groupby field ${groupBy} not found in schema`);\n    }\n\n    const groupedData = nestCollection({\n        keys: groupByIndices,\n        data\n    });\n\n    groupedData.forEach((d) => {\n        const key = d.key;\n        if (InvalidAwareTypes.isInvalid(key)) {\n            d.key = InvalidAwareTypes.getInvalidType(key);\n        }\n    });\n    return groupedData;\n};\n","/**\n * @module Transform\n * This file exports a function that is used to implement\n * the identity transform\n */\n /* eslint no-unused-vars: 0 */\n /**\n  * This function accepts data and returns the data unchanged.\n  * @param {Object} schema The schema.\n  * @param {Array} data The data array.\n  * @param {Object} config The config object.\n  * @return {Array} The unchanged data.\n  */\n function identityTransform (schema, data, config) {\n     return data;\n }\n\n export default identityTransform;\n","/**\n * @module Transform\n * This file exports the transform factory.\n */\nimport * as TransformType from '../enums/transform-type';\nimport identity from '../identity-transform';\nimport group from '../group-transform';\nimport stack from '../stack-transform';\n\n/* istanbul ignore next */\nconst transformMap = {\n    [TransformType.IDENTITY]: identity,\n    [TransformType.GROUP]: group,\n    [TransformType.STACK]: stack\n};\n\n/**\n * This function is used to retirn a transform associated\n * with the given type.\n *\n * @param {string} type The type of the transform.\n * @return {Function} The transform function.\n */\nfunction transformFactory (type) {\n    const transform = transformMap[type];\n    if (typeof transform !== 'function') {\n        throw new Error('Invalid transform type supplied.');\n    }\n    return transform;\n}\n\nexport default transformFactory;\n","/**\n * @module Transform\n * This module exports constants that are used to reference transforms in\n * a consistent manner throughout the project.\n */\n/* eslint one-var: 0 */\n export const IDENTITY = 'identity';\n export const GROUP = 'group';\n export const STACK = 'stack';\n export const FRACTURE = 'fracture';\n","import { stack } from 'muze-utils';\n\nimport group from '../group-transform';\n/*\n    Normalize the data to a form which can be given to d3 stack for stacking the data\n    ['Product', 'Sales', 'Region'],\n    0 ['A', 2000, 'North'],\n    1 ['A', 3000, 'South'],\n    2 ['B', 3000, 'South'],\n    3 ['B', 2000, 'North'],\n    4 ['C', 3000, 'South'],\n    5 ['C', 2000, 'North']\n            |\n            |\n    ['Product', 'North', 'South'],\n    ['A', 2000, 3000],\n    ['B', 2000, 3000],\n    ['C', 2000, 3000]\n*/\n// eslint-disable-next-line require-jsdoc\nconst normalizeData = (data, schema, valueField, uniqueField, groupBy) => {\n    const groupedData = group(schema, data, {\n        groupBy: uniqueField\n    });\n    const uniqueFieldIndex = schema.findIndex(d => d.name === uniqueField);\n    const valueFieldIndex = schema.findIndex(d => d.name === valueField);\n    const seriesKeyIndex = schema.findIndex(d => d.name === groupBy);\n    const seriesKeys = data.map(d => d[seriesKeyIndex]).filter((item, pos, arr) => arr.indexOf(item) === pos).sort();\n    const fieldNames = schema.reduce((acc, obj, i) => {\n        acc[i] = obj.name;\n        return acc;\n    }, {});\n    const dataArr = groupedData.map((arr) => {\n        const tuples = {};\n        const rowObj = arr.values.reduce((acc, row) => {\n            acc = row.reduce((obj, value, i) => {\n                if (i === seriesKeyIndex) {\n                    obj[value] = row[valueFieldIndex];\n                    tuples[value] = row;\n                } else if (i !== valueFieldIndex) {\n                    obj[fieldNames[i]] = value;\n                }\n                return obj;\n            }, acc);\n            return acc;\n        }, {});\n        rowObj._tuple = tuples;\n            // Set missing values field to zero value\n        seriesKeys.forEach((seriesKey) => {\n            if (rowObj[seriesKey] === undefined) {\n                rowObj[seriesKey] = 0;\n                const newArr = new Array(arr.values[0].length);\n                newArr[uniqueFieldIndex] = arr.key;\n                newArr[seriesKeyIndex] = seriesKey;\n                rowObj._tuple[seriesKey] = newArr;\n            }\n        });\n        return rowObj;\n    });\n\n    return {\n        data: dataArr,\n        keys: seriesKeys\n    };\n};\n/**\n * Generate a stacked representation of data\n * @param {Array} schema schema Array\n * @param {Array} data data array\n * @param {Object} config Configuration object\n * @return {Array} stacked data\n */\nexport default (schema, data, config) => {\n    const uniqueField = config.uniqueField;\n    const valueField = config.value;\n    const groupBy = config.groupBy;\n    const sort = config.sort || 'descending';\n    const normalizedData = normalizeData(data, schema, valueField, uniqueField, groupBy);\n    const keys = normalizedData.keys;\n    const map = {};\n    const orderBy = config.orderBy;\n    const orderIndex = schema.findIndex(d => d.name === orderBy);\n    const groupByIndex = schema.findIndex(d => d.name === groupBy);\n    if (orderIndex !== -1) {\n        keys.forEach((key) => {\n            const name = data.find(d => d[groupByIndex] === key);\n            map[key] = name[orderIndex];\n        });\n        normalizedData.keys.sort((a, b) => map[a].localeCompare(map[b]));\n    }\n\n    const stackData = stack({\n        keys: normalizedData.keys,\n        offset: config.offset || 'diverging',\n        order: sort,\n        data: normalizedData.data\n    });\n    stackData.forEach((seriesData) => {\n        seriesData.forEach((dataObj) => {\n            dataObj.data = dataObj.data._tuple[seriesData.key];\n        });\n    });\n    return stackData;\n};\n\n","import {\n    FieldType,\n    getDomainFromData,\n    setStyles,\n    easeFns,\n    selectElement,\n    DimensionSubtype,\n    retrieveNearestGroupByReducers,\n    getObjProp,\n    COORD_TYPES,\n    CommonProps\n} from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { transformFactory } from '@chartshq/transform';\nimport { IDENTITY, STACK, GROUP, COLOR, SHAPE, SIZE, ENCODING, AGG_FN_SUM, ASCENDING, TEXT } from '../enums/constants';\n\nconst BAND = ScaleType.BAND;\nconst { POLAR, CARTESIAN } = COORD_TYPES;\n\nconst transfromColor = (colorAxis, datum, styleType, intensity) => {\n    datum.meta.stateColor[styleType] = datum.meta.stateColor[styleType] || datum.meta.originalColor;\n    const fillColorInfo = colorAxis.transformColor(datum.meta.stateColor[styleType], intensity);\n    datum.meta.stateColor[styleType] = fillColorInfo.hsla;\n\n    return fillColorInfo;\n};\n\nexport const applyInteractionStyle = (context, selectionSet, interactionStyles, config) => {\n    const elements = context.getPlotElementsFromSet(selectionSet);\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const apply = config.apply;\n    const interactionType = config.interactionType;\n    interactionStyles.forEach((style) => {\n        const styleType = style.type;\n        elements.forEach((elem) => {\n            elem.style(styleType, ((d) => {\n                const { colorTransform, stateColor, originalColor } = d.meta;\n                colorTransform[interactionType] = colorTransform[interactionType] || {};\n                if (apply && !colorTransform[interactionType][styleType]) {\n                    // fade selections\n                    colorTransform[interactionType][styleType] = style.intensity;\n                    const color = transfromColor(colorAxis, d, styleType, style.intensity).color;\n                    return color;\n                }\n                if (!apply && colorTransform[interactionType][styleType]) {\n                     // unfade selections\n                    colorTransform[interactionType][styleType] = null;\n                    return transfromColor(colorAxis, d, styleType, style.intensity.map(e => -e)).color;\n                }\n                const [h, s, l, a] = stateColor[styleType] ? stateColor[styleType] : originalColor;\n                return `hsla(${h * 360},${s * 100}%,${l * 100}%, ${a || 1})`;\n            }));\n        });\n    });\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const fadeUnfadeSelection = (context, selectionSet, hasFaded, interaction) => {\n    const interactionConfig = { interaction, apply: hasFaded };\n    applyInteractionStyle(context, selectionSet, 'fade', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const focusUnfocusSelection = (context, selectionSet, isFocussed, interaction) => {\n    const interactionConfig = { interaction, apply: isFocussed };\n    applyInteractionStyle(context, selectionSet, 'focus', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} axes\n *\n */\nexport const getAxesScales = (axes) => {\n    const [xAxis, yAxis] = [ENCODING.X, ENCODING.Y].map(e => axes[e]);\n    const [xScale, yScale] = [xAxis, yAxis].map(e => e && e.scale());\n    return {\n        xAxis,\n        yAxis,\n        xScale,\n        yScale\n    };\n};\n\nexport const encodingFieldInfRetriever = {\n    [POLAR]: (encoding, fieldsConfig) => {\n        const encodingInf = {};\n        [ENCODING.RADIUS, ENCODING.RADIUS0, ENCODING.ANGLE, ENCODING.ANGLE0, COLOR, SHAPE, SIZE, TEXT]\n            .forEach((e) => {\n                const field = getObjProp(encoding, e, 'field');\n                encodingInf[`${e}Field`] = field;\n                encodingInf[`${e}FieldIndex`] = getObjProp(fieldsConfig, field, 'index');\n            });\n        return encodingInf;\n    },\n    [CARTESIAN]: (encoding, fieldsConfig) => {\n        const encodingInf = {};\n        [ENCODING.X, ENCODING.Y, ENCODING.X0, ENCODING.Y0, COLOR, SHAPE, SIZE, TEXT].forEach((e) => {\n            const field = getObjProp(encoding, e, 'field');\n            encodingInf[`${e}Field`] = field;\n            encodingInf[`${e}FieldIndex`] = getObjProp(fieldsConfig, field, 'index');\n            encodingInf[`${e}FieldType`] = getObjProp(fieldsConfig, field, 'def', 'type');\n            encodingInf[`${e}FieldSubType`] = getObjProp(fieldsConfig, field, 'def', 'subtype');\n        });\n\n        return encodingInf;\n    }\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} config\n * @param {*} transformType\n *\n */\nexport const transformData = (dataModel, config, transformType, encodingFieldInf) => {\n    const data = dataModel.getData({ withUid: true });\n    const schema = data.schema;\n    const transform = config.transform;\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = encodingFieldInf;\n    const uniqueField = xFieldType === FieldType.MEASURE ? yField : xField;\n\n    return transformFactory(transformType)(schema, data.data, {\n        groupBy: transform.groupBy,\n        uniqueField,\n        sort: transform.sort || 'none',\n        offset: transform.offset,\n        orderBy: transform.orderBy,\n        value: yFieldType === FieldType.MEASURE ? yField : xField\n    }, data.uids);\n};\n\nexport const getIndividualClassName = (d, i, data, context) => {\n    const className = context.config().individualClassName;\n    let classNameStr = '';\n    if (className instanceof Function) {\n        classNameStr = className(d, i, data, context);\n    }\n    return classNameStr;\n};\n\nconst dataNormalizers = {\n    [POLAR]: (transformedData, encodingFieldInf, fieldsConfig) => {\n        const {\n            radiusFieldIndex,\n            angleFieldIndex,\n            radius0FieldIndex,\n            angle0FieldIndex\n        } = encodingFieldInf;\n        const fieldsLen = Object.keys(fieldsConfig).length;\n\n        /**\n         * Returns normalized data from transformed data. It recursively traverses through\n         * the transformed data if there it is nested.\n         */\n        return transformedData.map(data => data.map((d) => {\n            const pointObj = {\n                radius: d[radiusFieldIndex],\n                angle: angleFieldIndex !== undefined ? d[angleFieldIndex] : 1,\n                radius0: d[radius0FieldIndex],\n                angle0: d[angle0FieldIndex]\n            };\n            [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                pointObj[enc] = d[encodingFieldInf[`${enc}FieldIndex`]];\n            });\n            pointObj.source = d;\n            pointObj.rowId = d[fieldsLen];\n            return pointObj;\n        })).filter(d => d.length);\n    },\n    [CARTESIAN]: (transformedData, encodingFieldInf, fieldsConfig, transformType) => {\n        const {\n            xFieldType,\n            xFieldIndex,\n            yFieldIndex,\n            x0FieldIndex,\n            y0FieldIndex\n        } = encodingFieldInf;\n        const fieldsLen = Object.keys(fieldsConfig).length;\n        /**\n         * Returns normalized data from transformed data. It recursively traverses through\n         * the transformed data if there it is nested.\n         */\n        return transformedData.map((data) => {\n            const values = transformType === GROUP ? data.values : data;\n            return values.map((d) => {\n                let pointObj = {};\n                let tuple;\n                if (transformType === STACK) {\n                    tuple = d.data || [];\n                    let y;\n                    let y0;\n                    let x;\n                    let x0;\n                    if (d[1] >= d[0]) {\n                        y = x0 = d[1];\n                        x = y0 = d[0];\n                    } else {\n                        y = x0 = d[0];\n                        x = y0 = d[1];\n                    }\n\n                    pointObj = xFieldType === FieldType.MEASURE ? {\n                        x,\n                        x0,\n                        y: tuple[yFieldIndex],\n                        y0: tuple[yFieldIndex]\n                    } : {\n                        x: tuple[xFieldIndex],\n                        x0: tuple[xFieldIndex],\n                        y,\n                        y0\n                    };\n                    pointObj.source = tuple;\n                    pointObj.rowId = tuple[fieldsLen];\n                    [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                        pointObj[enc] = tuple[encodingFieldInf[`${enc}FieldIndex`]];\n                    });\n                } else {\n                    pointObj = {\n                        x: d[xFieldIndex],\n                        y: d[yFieldIndex],\n                        x0: d[x0FieldIndex],\n                        y0: d[y0FieldIndex]\n                    };\n                    pointObj.source = d;\n                    pointObj.rowId = d[fieldsLen];\n                    [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                        pointObj[enc] = d[encodingFieldInf[`${enc}FieldIndex`]];\n                    });\n                }\n                return pointObj;\n            });\n        }).filter(d => d.length);\n    }\n};\n/*\n * This method resolves the x, y, x0 and y0 values from the transformed data.\n * It also checks the type of transformed data for example, if it is a stacked data\n * then it fetches the y and y0 values from the stacked data.\n * @param {Array.<Array>} transformedData transformed data\n * @param {Object} fieldsConfig field definitions\n * @param {string} transformType type of transformed data - stack, group or identity.\n * @return {Array.<Object>} Normalized data\n*/\nexport const getNormalizedData = (transformedData, context) => {\n    const transformType = context.transformType();\n    const transformedDataArr = transformType === IDENTITY ? [transformedData] : transformedData;\n    const encodingFieldInf = context.encodingFieldsInf();\n    const fieldsConfig = context.data().getFieldsConfig();\n    return dataNormalizers[context.coord()](transformedDataArr, encodingFieldInf, fieldsConfig, transformType);\n};\n\nexport const domainCalculator = {\n    [POLAR]: (data, layerInst) => {\n        const config = layerInst.config();\n        const { sort } = config;\n        let angleValues = data[0];\n        const radius0Field = getObjProp(config.encoding.radius0, 'field');\n        if (sort) {\n            angleValues = angleValues.sort((a, b) => (sort === ASCENDING ? a.radius - b.radius : b.radius - a.radius));\n        }\n        const radiusDomain = getDomainFromData(data, [ENCODING.RADIUS, radius0Field ?\n            ENCODING.RADIUS0 : ENCODING.RADIUS]);\n        return {\n            radius: radiusDomain,\n            angle: angleValues.map(d => d.angle),\n            angle0: angleValues.map(d => d.angle0)\n        };\n    },\n    [CARTESIAN]: (data, layerInst) => {\n        const transformType = layerInst.transformType();\n        const encodingFieldInf = layerInst.encodingFieldsInf();\n        const {\n            xFieldSubType,\n            yFieldSubType,\n            xField,\n            yField,\n            x0Field,\n            y0Field\n        } = encodingFieldInf;\n        const domains = {};\n        const yEnc = ENCODING.Y;\n        const xEnc = ENCODING.X;\n        if (xField) {\n            domains.x = getDomainFromData(data, x0Field || transformType === STACK ? [xEnc, ENCODING.X0] : [xEnc, xEnc],\n                xFieldSubType);\n        }\n        if (yField) {\n            domains.y = getDomainFromData(data, y0Field || transformType === STACK ? [ENCODING.Y0, ENCODING.Y] :\n                [yEnc, yEnc], yFieldSubType);\n        }\n\n        return domains;\n    }\n};\n\nexport const attachDataToVoronoi = (voronoi, points) => {\n    voronoi.data([].concat(...points).filter(d => d.rowId !== undefined).map((d) => {\n        const point = d.update;\n        return {\n            x: point.x,\n            y: point.y,\n            data: d\n        };\n    }));\n};\n\n/**\n *\n *\n * @param {*} target\n * @param {*} styles\n * @param {*} remove\n */\nexport const updateStyle = (target, styles, remove) => {\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            target.style(key, remove ? null : styles[key]);\n        }\n    }\n};\n\n/**\n *\n *\n * @param {*} mount\n * @param {*} context\n */\nexport const animateGroup = (mount, context) => {\n    let groupTransition;\n    let update;\n    const { transition, groupAnimateStyle } = context;\n    const { duration, effect, disabled } = transition;\n    if (groupAnimateStyle) {\n        setStyles(mount.node(), groupAnimateStyle.enter);\n        update = groupAnimateStyle.update;\n        if (!disabled) {\n            groupTransition = mount.transition()\n                .ease(easeFns[effect])\n                .duration(duration)\n                .on('end', function () {\n                    updateStyle(selectElement(this), update, true);\n                });\n        } else {\n            groupTransition = mount;\n        }\n        updateStyle(groupTransition, update);\n    }\n};\n\nexport const positionPoints = (context, points) => {\n    const positioner = context.encodingTransform();\n    if (positioner) {\n        return positioner(points, context, { smartLabel: context._dependencies.smartLabel });\n    }\n    return points;\n};\n\n/**\n  * Gets the width of each group. It gets the width from axis if it is available for\n  * example when the scale is nominal else it calculates the width from the\n  * range of the axis and number of data points.\n  *\n  * @param {SimpleAxis} axis instance of axis\n  * @param {number} minDiff Minimum difference between data points\n  * @return {number} width of each bar\n  * @private\n*/\nexport const getGroupSpan = (axis, minDiff) => {\n    let groupSpan;\n    const width = axis.getUnitWidth();\n    const scale = axis.scale();\n    const range = scale.range();\n    const domain = scale.domain();\n    !width ? groupSpan = (Math.abs(range[1] - range[0]) / Math.abs(domain[1] - domain[0])) * minDiff :\n        (groupSpan = width);\n\n    return groupSpan;\n};\n\nexport const getPlotMeasurement = (context, dimensionalValues) => {\n    const fieldInfo = context.encodingFieldsInf();\n    const axes = context.axes();\n    const transformType = context.transformType();\n    const config = context.config();\n    const bandScale = context._bandScale;\n\n    return ['x', 'y'].map((type) => {\n        let span = 0;\n        let groupSpan = 0;\n        let padding = 0;\n        let offsetValues = [];\n        if (fieldInfo[`${type}FieldType`] === FieldType.DIMENSION) {\n            let actualGroupWidth;\n            const isTemporal = fieldInfo[`${type}FieldSubType`] === DimensionSubtype.TEMPORAL;\n            const timeDiff = isTemporal ? context.dataProps().timeDiffs[type] : 0;\n            const axis = axes[type];\n            const pad = config[`pad${type.toUpperCase()}`];\n            const innerPadding = config.innerPadding;\n            const keys = dimensionalValues;\n            const scale = axis.scale();\n            groupSpan = getGroupSpan(axis, timeDiff);\n            const isAxisBandScale = axis.constructor.type() === BAND;\n            const axisPadding = axis.config().padding;\n            // If it is a grouped bar then the width of each bar in a grouping is retrieved from\n            // a band scale. The band scale will have range equal to width of one group of bars and\n            // the domain is set to series keys.\n            if (transformType === 'group') {\n                const groupPadding = isAxisBandScale ? 0 : axisPadding * groupSpan / 2;\n                bandScale.range([groupPadding, groupSpan - groupPadding]).domain(keys).paddingInner(innerPadding);\n                span = bandScale.bandwidth();\n                actualGroupWidth = groupSpan - (isAxisBandScale ? 0 : axisPadding * groupSpan);\n                offsetValues = keys.map(key => bandScale(key) - (isAxisBandScale ? 0 : (groupSpan / 2)));\n            } else if (pad !== undefined) {\n                let offset;\n                if (isAxisBandScale) {\n                    const step = scale.step();\n                    offset = scale.padding() * step;\n                    span = scale.bandwidth() + offset;\n                } else {\n                    span = groupSpan;\n                }\n                offsetValues = keys.map(() => (isAxisBandScale ? -(offset / 2) : -(span / 2)));\n            } else {\n                padding = isAxisBandScale ? 0 : axisPadding * groupSpan;\n                span = groupSpan - padding;\n                actualGroupWidth = span;\n                offsetValues = keys.map(() => (isAxisBandScale ? 0 : -(span / 2)));\n            }\n\n            groupSpan = actualGroupWidth;\n            padding = isAxisBandScale ? axisPadding * axis.scale().step() : axisPadding * groupSpan;\n        }\n\n        return {\n            span,\n            offsetValues,\n            groupSpan,\n            padding\n        };\n    });\n};\n\nexport const renderLayer = (context) => {\n    const mount = context.mount();\n    if (mount) {\n        context.render(mount);\n        context.dependencies().throwback.commit(CommonProps.ON_LAYER_DRAW, true, context.metaInf().parentNamespace);\n    }\n};\n\nexport const resolveInvalidTransformType = (context) => {\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = context.encodingFieldsInf();\n    const groupByField = context.config().transform.groupBy;\n    const fieldsConfig = context.data().getFieldsConfig();\n    const groupByFieldMeasure = fieldsConfig[groupByField] && fieldsConfig[groupByField].def.type === FieldType.MEASURE;\n    if (!xField || !yField || groupByFieldMeasure || !groupByField || xFieldType === FieldType.DIMENSION &&\n        yFieldType === FieldType.DIMENSION) {\n        return IDENTITY;\n    }\n    return null;\n};\n\nexport const getValidTransform = context => resolveInvalidTransformType(context) || context.config().transform.type;\n\nexport const getValidTransformForAggFn = (context) => {\n    const resolvedInvalidTransformType = resolveInvalidTransformType(context);\n    if (resolvedInvalidTransformType) {\n        return resolvedInvalidTransformType;\n    }\n\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = context.encodingFieldsInf();\n    const groupByField = context.config().transform.groupBy;\n    const isCustomTransformTypeProvided = !!getObjProp(context._customConfig, 'transform', 'type');\n    let transformType = context.config().transform.type;\n\n    if (!isCustomTransformTypeProvided && groupByField && xFieldType !== yFieldType) {\n        const measureField = xFieldType === FieldType.MEASURE ? xField : yField;\n        const { [measureField]: aggFn } = retrieveNearestGroupByReducers(context.data(), measureField);\n        transformType = aggFn === AGG_FN_SUM ? STACK : GROUP;\n    }\n\n    return transformType;\n};\n\nexport const getMarkId = (source, schema) => source.filter((val, i) => schema[i] &&\n    schema[i].type === FieldType.DIMENSION).join();\n\nexport const resolveEncodingValues = (data, i, dataArr, layerInst) => {\n    const transformedValues = {};\n    const values = data.values;\n    const encoding = layerInst.config().encoding;\n    for (const key in values) {\n        const value = getObjProp(encoding[key], 'value');\n        if (value instanceof Function) {\n            transformedValues[key] = value(values, i, dataArr, layerInst);\n        } else {\n            transformedValues[key] = values[key];\n        }\n    }\n    return transformedValues;\n};\n\nexport const getColorMetaInf = (color, colorAxis) => ({\n    originalColor: colorAxis.getHslArray(color),\n    stateColor: {},\n    colorTransform: {}\n});\n\nconst getCoordValue = (radius, trig, angle, offset) => radius * Math[trig](angle) + offset;\n\nconst coordValueGetter = (radius, angle, xOffset, yOffset) => ({\n    x: getCoordValue(radius, 'cos', angle, xOffset),\n    y: getCoordValue(radius, 'sin', angle, yOffset)\n});\n\nexport const toCartesianCoordinates = (points, measurement, rangePlot = false) => {\n    const xOffset = measurement.width / 2;\n    const yOffset = measurement.height / 2;\n    for (let i = 0, len = points.length; i < len; i++) {\n        const point = points[i];\n        const { angle, radius, radius0, angle0 } = point.update;\n        point.update = coordValueGetter(radius, angle, xOffset, yOffset);\n        if (rangePlot) {\n            const update = point.update = coordValueGetter(radius0, angle0, xOffset, yOffset);\n            const { x: x0, y: y0 } = coordValueGetter(radius, angle, xOffset, yOffset);\n            update.x0 = x0;\n            update.y0 = y0;\n        }\n    }\n    return points;\n};\n\nexport const sortData = (data, axes) => {\n    const { x: xAxis, y: yAxis } = axes;\n    const axisArr = [xAxis, yAxis];\n    for (let i = 0, len = axisArr.length; i < len; i++) {\n        const axis = axisArr[i];\n        if (axis.constructor.type() === BAND) {\n            const key = i ? 'y' : 'x';\n            const dom = axis.domain();\n            const indices = dom.reduce((acc, v, idx) => {\n                acc[v] = idx;\n                return acc;\n            }, {});\n            data.sort((a, b) => indices[a[key]] - indices[b[key]]);\n            break;\n        }\n    }\n    return data;\n};\n","import * as PROPS from '../enums/props';\n\nexport const localOptions = {\n    [PROPS.DATA]: {\n        value: null\n    }\n};\n","import { STATE_NAMESPACES } from 'muze-utils';\nimport * as PROPS from '../enums/props';\nimport { encodingFieldInfRetriever } from '../helpers';\n\nexport const listenerMap = [\n    {\n        props: [`${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${PROPS.DATA}`],\n        type: 'registerImmediateListener',\n        listener: (context, [, data]) => {\n            const config = context.config();\n            if (data && config) {\n                if (context._cacheEnabled) {\n                    context._cachedData.push(data);\n                } else {\n                    context._cachedData = [data];\n                }\n                const encodingValue = config.encoding;\n                if (encodingValue) {\n                    const fieldsConfig = data.getFieldsConfig();\n                    const encodingFieldsInf = encodingFieldInfRetriever[context.coord()](encodingValue, fieldsConfig);\n                    context.encodingFieldsInf(encodingFieldsInf);\n                    context.resolveTransformType();\n                    context._transformedData = context.getTransformedData(data, config,\n                        context.transformType(), encodingFieldsInf);\n                    context._normalizedData = context.getNormalizedData(context._transformedData, fieldsConfig);\n                    if (config.calculateDomain !== false) {\n                        const domain = context.calculateDomainFromData(context._normalizedData,\n                            context.encodingFieldsInf(), context.data().getFieldsConfig());\n                        context.domain(domain);\n                    }\n                }\n            }\n        },\n        namespace: context => context.metaInf().namespace\n    }\n];\n","import {\n    getUniqueId,\n    mergeRecursive,\n    FieldType,\n    selectElement,\n    ReservedFields,\n    DataModel,\n    clone,\n    generateGetterSetters,\n    STATE_NAMESPACES,\n    COORD_TYPES,\n    transactor,\n    defaultValue,\n    getObjProp\n} from 'muze-utils';\nimport { SimpleLayer } from '../simple-layer';\nimport * as PROPS from '../enums/props';\nimport { props } from './props';\nimport {\n    transformData,\n    getNormalizedData,\n    applyInteractionStyle,\n    getValidTransform,\n    domainCalculator,\n    renderLayer\n} from '../helpers';\nimport { localOptions } from './local-options';\nimport { listenerMap } from './listener-map';\n\nconst layerNs = [STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE, STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE];\nconst groupNs = STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE;\n\n/**\n * An abstract class which gives definition of common layer functionality like\n * - transforming data for various modes. Supported modes: identity, group and stack.\n * - calculating data domain\n * - linking dependent layers\n * - merging policy of configuration\n * - interaction sideffect helpers\n * - retrieving dom elements from data using id\n * - retrieving the physical dimensions of marks\n * - disposing layer\n *\n * Every layer has to extend base layer and give concrete definition.\n * This layer does not have any default visual. A new layer has to define the logic of `render` for rendering the\n * visuals\n *\n * @public\n * @class\n * @module BaseLayer\n */\nexport default class BaseLayer extends SimpleLayer {\n\n    /**\n     * Creates a layer using a configuration and data.\n     *\n     * @public\n     * @constructor\n     * @param {DataModel} data Instance of DataModel to be used. This DataModel instance serves as the data for a layer.\n     * @param {Object} axes Axes instances to be used for rendering the layer. Axes are used for mapping data from\n     *      value to px.\n     * @param {SimpleAxis} axes.x X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {SimpleAxis} axes.y X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {ColorAxis} axes.color Axis for coloring a layer using color interpolators\n     * @param {ShapeAxis} axes.shape Axis for providing a shape\n     * @param {SizeAxis} axes.size Axis for determining size of a mark using size interpolator\n     * @param {LayerConfig} config Configuration of the layer\n     * @param {Object} dependencies Dependencies of the layer\n     * @param {SmartLabel} dependencies.smartLabel Smartlabel singleton instance\n     */\n    constructor (data, axes, config, dependencies = {}) {\n        super();\n\n        generateGetterSetters(this, props);\n        this.axes(axes);\n        this.alias(this.constructor.formalName() + getUniqueId());\n        this.dependencies(dependencies);\n        this._points = [];\n        this._cachedData = [];\n        this._id = getUniqueId();\n        this._measurement = {};\n        this._animationDonePromises = [];\n        this._graphicElems = {};\n        this._customConfig = null;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: null\n            },\n            Object.keys(localOptions).reduce((acc, v) => {\n                acc[v] = localOptions[v].value;\n                return acc;\n            }, {})\n        ];\n    }\n\n    static getListeners () {\n        return {\n            store: [...listenerMap, {\n                type: 'registerChangeListener',\n                props: [`${layerNs[1]}.${PROPS.DATA}`,\n                    ...['x', 'y', 'radius'].map(type => `${groupNs}.domain.${type}`)],\n                listener: (context) => {\n                    renderLayer(context);\n                },\n                subNamespace: (context) => {\n                    const { unitRowIndex, unitColIndex, namespace } = context.metaInf();\n                    return {\n                        [`${layerNs[1]}.${PROPS.DATA}`]: namespace,\n                        [`${groupNs}.domain.x`]: `${unitColIndex}0`,\n                        [`${groupNs}.domain.y`]: `${unitRowIndex}0`,\n                        [`${groupNs}.domain.radius`]: `${unitRowIndex}-${unitColIndex}`\n                    };\n                }\n            }],\n            throwback: []\n        };\n    }\n\n    static getQualifiedStateProps () {\n        const layerState = BaseLayer.getState();\n        return layerState.map((state, i) => Object.keys(state).map(prop => `${layerNs[i]}.${prop}`));\n    }\n\n    store (...params) {\n        if (params.length) {\n            const store = this._store = params[0];\n            const { namespace } = this.metaInf();\n            store.addSubNamespace(namespace, BaseLayer.formalName(), this);\n\n            transactor(this, localOptions, store, {\n                subNamespace: namespace,\n                namespace: `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}`\n            });\n            return this;\n        }\n        return this._store;\n    }\n\n    domain (...dom) {\n        const prop = `${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}`;\n        const store = this.store();\n        if (dom.length) {\n            const { parentNamespace, namespace } = this.metaInf();\n            const domain = defaultValue(store.get(prop, parentNamespace), {});\n            domain[namespace] = dom[0];\n            this.store().commit(prop, domain, parentNamespace);\n            return this;\n        }\n        return this.store().get(prop, this.metaInf().namespace);\n    }\n\n    /**\n     * Creates a layer instance\n     * @return {BaseLayer} Instance of a layer\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Default configuration of the layer. This configuration gets merged to the user passed configuration using a\n     * plolicy. Base layer only returns part of configuraion, any layer overridding base layer should return its own\n     * configuration.\n     *\n     * @public\n     * @static\n     *\n     * @return {Object} Default configuration\n     */\n    static defaultConfig () {\n        return {\n            transform: {\n                type: 'identity'\n            }\n        };\n    }\n\n    /**\n     * Policy defines how user config gets merged to default config. The default policy here does a deep copy\n     * operation.\n     * Any policy which does more than deep copying should define the policy as a static member.\n     *\n     * @static\n     * @public\n     *\n     * @param {LayerConfig} conf Configuration with which the user config will be merged\n     * @param {LayerConfig} userConf Configuration given by the user\n     *\n     * @return {LayerConfig} Merged layer configuration\n     */\n    static defaultPolicy (conf, userConf) {\n        return mergeRecursive(conf, userConf);\n    }\n\n    /**\n     * Determines a name for a layer. This name of the layer is used in the input data to refer to this layer.\n     * ```\n     *  .layers([\n     *      mark: 'bar',\n     *      encoding: { ... }\n     *  ])\n     * ```\n     *\n     * @static\n     * @public\n     *\n     * @return {string} name of layer\n     */\n    static formalName () {\n        return 'base';\n    }\n\n    encodingFieldsInf (...fieldsInf) {\n        if (fieldsInf.length) {\n            this._encodingFieldsInf = fieldsInf[0];\n            return this;\n        }\n        return this._encodingFieldsInf;\n    }\n\n    encodingTransform (...encodingTransform) {\n        if (encodingTransform.length) {\n            this._encodingTransform = encodingTransform[0];\n            return this;\n        }\n        return this._encodingTransform;\n    }\n\n    /**\n     * Provides a alias for a layer. Like it's possible to have same layer (like bar) multiple times, but among multiple\n     * layers of same type if one layer has to be referred, alias is used. If no alias is given then `formalName` is set\n     * as the alias name.\n     *\n     *\n     * If used as setter\n     * @param  {string} alias Name of the alias\n     * @return {BaseLayer} Instance of current base layer\n     *\n     * If used as getter\n     * @return {string} Alias of the current layer\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            this._alias = params[0];\n            return this;\n        }\n        return this._alias || this.constructor.formalName();\n    }\n\n    dependencies (...params) {\n        if (params.length) {\n            this._dependencies = params[0];\n            return this;\n        }\n        return this._dependencies;\n    }\n\n    enableCaching () {\n        this._cacheEnabled = true;\n        return this;\n    }\n\n    clearCaching () {\n        this._cacheEnabled = false;\n        return this.data(this._cachedData[0]);\n    }\n\n    /**\n     * Serialize the schema. Merge config is used for serialization.\n     *\n     * @public\n     *\n     * @return {LayerConfig} Serialized schema\n     */\n    serialize () {\n        return this.config();\n    }\n\n    /**\n     * Returns the unique identifier of this layer. Id is auto generated during the creation proceess of a schema.\n     *\n     * @public\n     *\n     * @return {string} id of the layer\n     */\n    id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the transformed data based on given transform type.\n     * It first gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of DataModel\n     * @param {Object} config Configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     */\n    getTransformedData (dataModel, config, transformType, encodingFieldsInf) {\n        return transformData(dataModel, config, transformType, encodingFieldsInf);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a categorical field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @param {Object} fieldsConfig Configuration of fields\n     * @return {Array} Domain values array.\n     */\n    calculateDomainFromData (data) {\n        let domains = {};\n        const isEmpty = this.data().isEmpty();\n\n        if (!isEmpty) {\n            domains = domainCalculator[this.coord()](data, this);\n        }\n        return domains;\n    }\n\n    static shouldDrawAnchors () {\n        return false;\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getDataDomain (encodingType) {\n        const { parentNamespace, namespace } = this.metaInf();\n        const domains = getObjProp(this.store()\n            .get(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}`, parentNamespace), namespace);\n        return encodingType !== undefined ? domains[encodingType] || [] : domains;\n    }\n\n    /**\n     * Normalizes the transformed data and returns it.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getNormalizedData (transformedData) {\n        return getNormalizedData(transformedData, this);\n    }\n\n    /**\n     * Gets the nearest point closest to the given x and y coordinate. If no nearest point is found, then it returns\n     * null.\n     *\n     * @public\n     *\n     * @param {number} x X Coordinate.\n     * @param {number} y Y Coordinate.\n     *\n     * @return {Object} Information of the nearest point.\n     * ```\n     *      {\n     *          // id property contains the field names and their corresponding values in a 2d array. This is the data\n     *          // associated with the nearest point.\n     *          id: // Example data: [['Origin'], ['USA']],\n     *          dimensions: // Physical dimensions of the point.\n     *          layerId: // Id of the layer instance.\n     *      }\n     * ```\n     */\n    getNearestPoint () {\n        return null;\n    }\n\n    applyInteractionStyle (interactionType, selectionSet, apply, styles) {\n        const interactionConfig = this.config().interaction || {};\n\n        let interactionStyles = interactionConfig[interactionType];\n        interactionStyles = styles || interactionStyles;\n        if (interactionStyles) {\n            applyInteractionStyle(this, selectionSet, interactionStyles, {\n                apply,\n                interactionType\n            });\n        }\n    }\n\n    disableUpdate () {\n        this._updateLock = true;\n        return this;\n    }\n\n    enableUpdate () {\n        this._updateLock = false;\n        return this;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransform(this);\n    }\n\n    transformType () {\n        return this._transformType;\n    }\n\n    /**\n     * Renders the layer\n     * @return {BaseLayer} Instance of the layer.\n     */\n    render () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BaseLayer\n     */\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Disposes the entire layer.\n     *\n     * @return {BaseLayer} Instance of layer.\n     */\n    remove () {\n        const { namespace } = this.metaInf();\n        this.store().removeSubNamespace(namespace, BaseLayer.formalName());\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     * Stores point in an object with key as the categorical value or temporal value\n     *\n     * @param {string} key categorical value or temporal value\n     * @param {Object} data Information of the data point\n     * @return {BarLayer} Instance of bar layer\n     */\n    cachePoint (key, data) {\n        if (key === null) {\n            return this;\n        }\n        const pointMap = this._pointMap;\n        !pointMap[key] && (pointMap[key] = []);\n        pointMap[key].push(data);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} dataProps\n     *\n     * @memberof BaseLayer\n     */\n    dataProps (...dataProps) {\n        if (dataProps.length) {\n            this._dataProps = dataProps[0];\n            return this;\n        }\n        return this._dataProps;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} id\n     *\n     * @memberof BaseLayer\n     */\n    getIdentifiersFromData (data) {\n        const schema = this.data().getSchema();\n        const fieldsConfig = this.data().getFieldsConfig();\n        const identifiers = [[], []];\n        const {\n                xFieldType,\n                yFieldType,\n                xField,\n                yField\n            } = this.encodingFieldsInf();\n\n        const [xMeasure, yMeasure] = [xFieldType, yFieldType].map(type => type === FieldType.MEASURE);\n        schema.forEach((d, i) => {\n            const name = d.name;\n            if (fieldsConfig[name].def.type === FieldType.DIMENSION) {\n                identifiers[0].push(name);\n                identifiers[1].push(data[i]);\n            }\n        });\n\n        if (xMeasure && yMeasure) {\n            const xMeasureIndex = fieldsConfig[xField].index;\n            const yMeasureIndex = fieldsConfig[yField].index;\n            identifiers[0].push(...[xField, yField]);\n            identifiers[1].push(...[data[xMeasureIndex], data[yMeasureIndex]]);\n        }\n        return identifiers;\n    }\n\n    hasPlotSpan () {\n        return false;\n    }\n\n    getPlotSpan () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    getPlotPadding () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    /**\n     * Returns the information of the marks corresponding to the supplied identifiers. Identifiers are a set of field\n     * names and their corresponding values in an array. It can also be an instance of datamodel.\n     *\n     * For example,\n     * ```\n     *  const identifiers = [\n     *      ['Origin', 'Cylinders'],\n     *      ['USA', '8']\n     *  ];\n     *  const points = barLayer.getPointsFromIdentifiers(identifiers);\n     * ```\n     * @public\n     * @param {Array|DataModel} identifiers Identifiers of the marks.\n     * @param {Object} config Optional configuration which describes how to get the information.\n     * @param {boolean} config.getAllAttrs If true, then returns all the information of the points, else returns only\n     * the positions of the points.\n     * @param {boolean} config.getBBox If true, then returns the bounding box of all the marks.\n     *\n     * @return {Array} Array of points contains\n     */\n    getPointsFromIdentifiers (identifiers, config = {}) {\n        const getAllAttrs = config.getAllAttrs;\n        const getBBox = config.getBBox;\n        if (!this.data()) {\n            return [];\n        }\n        let fieldNames;\n        let values;\n        if (identifiers instanceof DataModel) {\n            const dataObj = identifiers.getData();\n            fieldNames = dataObj.schema.map(d => d.name);\n            values = dataObj.data;\n        } else {\n            fieldNames = identifiers[0];\n            values = identifiers.slice(1, identifiers.length);\n        }\n\n        const points = this._points;\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPoints = [].concat(...points).filter((point) => {\n            const { source, rowId } = point;\n\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === source[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === rowId) !== -1;\n                } return true;\n            });\n        });\n        return getAllAttrs ? filteredPoints : filteredPoints.map((d) => {\n            const obj = clone(d);\n            if (getBBox) {\n                const update = obj.update || obj;\n                if (obj.size !== undefined) {\n                    const sizeVal = Math.sqrt(obj.size / Math.PI) * 2;\n                    update.width = sizeVal;\n                    update.height = sizeVal;\n                    update.x -= sizeVal / 2;\n                    update.y -= sizeVal / 2;\n                } else {\n                    if (update.width === undefined) {\n                        update.width = 2;\n                    }\n                    if (update.height === undefined) {\n                        update.height = 2;\n                    }\n                }\n            }\n\n            return obj.update || obj;\n        }).sort((a, b) => a.y - b.y);\n    }\n\n    getTransformedDataFromIdentifiers (identifiers) {\n        const { data: identifierData, schema: identifierSchema } = identifiers.getData();\n        const normalizedData = this._normalizedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n            yField,\n            xField,\n            yFieldType,\n            xFieldType\n        } = this.encodingFieldsInf();\n        let measureIndex;\n        let enc;\n        if (xFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[xField].index;\n            enc = 'x';\n        } else if (yFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[yField].index;\n            enc = 'y';\n        }\n\n        const transformedData = [];\n        normalizedData.forEach((dataArr) => {\n            dataArr.forEach((dataObj) => {\n                const tupleArr = dataObj.source;\n                const exist = identifierSchema.every((obj, i) =>\n                    identifierData.findIndex(d => tupleArr[fieldsConfig[obj.name].index] === d[i]) !== -1);\n                if (exist) {\n                    const transformedVal = dataObj[enc];\n                    const row = dataObj.source;\n                    const tuple = {};\n                    for (const key in fieldsConfig) {\n                        const index = fieldsConfig[key].index;\n                        tuple[key] = row[index];\n                        if (index === measureIndex) {\n                            tuple[key] = transformedVal;\n                        }\n                    }\n                    transformedData.push(tuple);\n                }\n            });\n        });\n\n        return [transformedData, this.data().getSchema()];\n    }\n\n    /**\n     * Returns the dom elements associated with the supplied set of row ids.\n     * Each element in the layer is mapped with a row of the datamodel. When given an array of row ids, it returns all\n     * the elements which is mapped with those row ids.\n     *\n     * @public\n     * @param {Array} set Array of row ids\n     *\n     * @return {Selection} D3 Selection of dom elements.\n     */\n    getPlotElementsFromSet (set) {\n        const graphicElems = this._graphicElems;\n        const elems = [];\n        for (let i = 0, len = set.length; i < len; i++) {\n            const elem = graphicElems[set[i]];\n            if (elem) {\n                elems.push(elem);\n            }\n        }\n        return elems;\n    }\n\n    /**\n     * Notifies when all animations/transitions of the layer are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n\n    getRenderProps () {\n        if (this.coord() === COORD_TYPES.POLAR) {\n            return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.radius`];\n        }\n        const { unitRowIndex: rowIndex, unitColIndex: colIndex } = this.metaInf();\n        return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${rowIndex}0`,\n            `${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${colIndex}0`];\n    }\n}\n","import {\n    selectElement,\n    makeElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\nimport { updateStyle } from '../../helpers';\n\nconst line = Symbols.line;\n\nconst filterFn = (d) => {\n    const { update } = d;\n    return update.y !== null && update.x !== null;\n};\n\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nexport const drawLine = (context) => {\n    let filteredPoints;\n    const { layer, container, points, interpolate, connectNullData, className, style, transition } = context;\n    const mount = selectElement(container).attr('class', className);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const linepath = line()\n                .curve(curveInterpolatorFn)\n                .x(d => d.update.x)\n                .y(d => d.update.y)\n                .defined(filterFn);\n\n    filteredPoints = points;\n    if (connectNullData) {\n        filteredPoints = points.filter(filterFn);\n    }\n\n    updateStyle(mount, style);\n    let element = makeElement(mount, 'path', points.length ? [points[0].className] : []);\n    element.attr('class', d => d);\n    if (!transition.disabled) {\n        element = element.transition()\n        .duration(transition.duration)\n        .on('end', layer.registerAnimationDoneHook());\n    }\n    element.attr('d', linepath(filteredPoints))\n                    .style('fill-opacity', 0);\n    return element;\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-line',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: 'group'\n    },\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    nearestPointThreshold: 20,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n\n","import {\n    Voronoi,\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    FieldType,\n    InvalidAwareTypes,\n    getObjProp\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawLine } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    animateGroup,\n    positionPoints,\n    getIndividualClassName,\n    getColorMetaInf,\n    resolveEncodingValues,\n    sortData\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to render straight or smoothed line paths. The mark type of this layer is ```line```.\n *\n * @public\n *\n * @class\n * @module LineLayer\n * @extends BaseLayer\n */\nexport default class LineLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of LineLayer.\n     * @param {*} args\n     * @memberof LineLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n    }\n\n    static formalName () {\n        return 'line';\n    }\n\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Default configuration of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField && !transform.groupBy) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     * Returns the draw method for line\n     * @return {Function} Draw method of line layer\n     */\n    getDrawFn () {\n        return drawLine;\n    }\n\n    static shouldDrawAnchors () {\n        return true;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @param {number} seriesIndex index of series\n     * @return {Array} Array of points\n     */\n    translatePoints (data) {\n        let points = [];\n        const axes = this.axes();\n        const xAxis = axes.x;\n        const yAxis = axes.y;\n        const colorAxis = axes.color;\n        const { xFieldType, yFieldType } = this.encodingFieldsInf();\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        sortData(data, axes);\n        points = data.map((d, i) => {\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y) + yAxis.getUnitWidth() / 2;\n            const color = colorAxis.getColor(d.color);\n\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    color\n                },\n                data: d\n            }, i, data, this);\n\n            const point = {\n                enter: {},\n                update: {\n                    x: d.x instanceof InvalidAwareTypes ? null : resolvedEncodings.x,\n                    y: d.y instanceof InvalidAwareTypes ? null : resolvedEncodings.y\n                },\n                style: {\n                    stroke: resolvedEncodings.color,\n                    'fill-opacity': 0\n                },\n                rowId: d.rowId,\n                source: d.source,\n                meta: getColorMetaInf(resolvedEncodings.color, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n\n        points = points.filter((point) => {\n            const { update } = point;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n\n    /**\n     * Renders the line plot\n     * @param {SVGElement} container svg element\n     * @return {LineLayer} instance of line layer\n     */\n    render (container) {\n        let points;\n        let seriesClassName;\n        let style;\n\n        const config = this.config();\n        const {\n            encoding,\n            interpolate,\n            className,\n            defClassName,\n            transition\n        } = config;\n        const normalizedData = this._normalizedData;\n        const transformedData = this._transformedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const keys = transformedData.map(d => d.key);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const containerSelection = selectElement(container);\n        const colorField = encoding.color.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n\n        this._points = [];\n        this._pointMap = {};\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        makeElement(container, 'g', normalizedData, null, {\n            enter: (group) => {\n                animateGroup(group, {\n                    transition,\n                    groupAnimateStyle: {\n                        enter: {\n                            'stroke-opacity': 0,\n                            'fill-opacity': this.getPathStyle()['fill-opacity']\n                        },\n                        update: {\n                            'stroke-opacity': encoding.strokeOpacity.value\n                        }\n                    }\n                });\n            },\n            update: (group, dataArr, i) => {\n                points = this.translatePoints(dataArr);\n                this._points.push(points);\n                seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n\n                let color;\n                const colorValFn = encoding.color.value;\n                const colorVal = points.find(d => d.source[colorFieldIndex] !== null &&\n                        d.source[colorFieldIndex] !== undefined);\n\n                if (colorValFn) {\n                    color = colorValFn(dataArr, i, normalizedData);\n                } else {\n                    color = axes.color.getColor(colorVal && colorVal.source[colorFieldIndex]);\n                }\n\n                style = this.getPathStyle(color);\n                this.getDrawFn()({\n                    layer: this,\n                    container: group.node(),\n                    interpolate,\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: style || {},\n                    connectNullData: config.connectNullData\n                });\n            }\n        }, d => d[0].source[colorFieldIndex] || d[0].rowId);\n\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            stroke: color,\n            'fill-opacity': '0'\n        };\n    }\n\n    /**\n     * Gets the nearest point closest to the given position\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point information\n     */\n    getNearestPoint (x, y, config) {\n        let searchRadius = config.searchRadius;\n        const data = this.data();\n\n        if (!data || (data && data.isEmpty())) {\n            return null;\n        }\n\n        searchRadius = searchRadius !== undefined ? searchRadius : this.config().nearestPointThreshold;\n        const point = this._voronoi.find(x, y, searchRadius);\n        const dimensions = getObjProp(point, 'data', 'data', 'update');\n\n        if (point) {\n            const { source, rowId } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(source, rowId);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: 2,\n                    height: 2\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import {\n    easeFns,\n    selectElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\n\nconst area = Symbols.area;\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nconst /* istanbul ignore next */ drawArea = (params) => {\n    let filteredPoints;\n    const { layer, container, points, style, transition, className, connectNullData, interpolate } = params;\n\n    const { effect: easeEffect, duration } = transition;\n    const mount = selectElement(container);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const selection = mount.selectAll('path').data(points.length ? [points[0].className] : []);\n    const [enterAreaPath, updateAreaPath] = ['enter', 'update'].map(e => area().curve(curveInterpolatorFn)\n                    .x(d => d[e].x)\n                    .y1(d => d[e].y)\n                    .y0(d => d[e].y0)\n                    .defined(d => d[e].y !== null\n            ));\n\n    filteredPoints = points;\n    mount.attr('class', className);\n    if (connectNullData) {\n        filteredPoints = points.filter(d => d.update.y !== null);\n    }\n    const selectionEnter = selection.enter().append('path').attr('d', enterAreaPath(filteredPoints));\n    selection.merge(selectionEnter).transition().ease(easeFns[easeEffect])\n                    .duration(duration)\n                    .on('end', layer.registerAnimationDoneHook())\n                    .attr('d', updateAreaPath(filteredPoints))\n                    .each(function (d) {\n                        const element = selectElement(this);\n                        element.attr('class', d);\n                        Object.keys(style).forEach(key => element.style(key, style[key]));\n                    });\n};\n\nexport default drawArea;\n","import { FieldType, InvalidAwareTypes } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { LineLayer } from '../line';\nimport drawArea from './renderer';\nimport './styles.scss';\nimport { STACK, ENCODING } from '../../enums/constants';\nimport {\n    getAxesScales,\n    positionPoints,\n    getIndividualClassName,\n    getValidTransformForAggFn,\n    getColorMetaInf,\n    resolveEncodingValues,\n    sortData\n} from '../../helpers';\n\n/**\n * Area layer renders a closed path. The mark type of this layer is ```area```. This layer can be used\n * to create stacked or multi-series areas and vertical range area plots by using the encoding properties.\n *\n * To create this layer using layer configuration from canvas,\n * ```\n *      canvas.layers([{\n *          mark: 'area',\n *          transform: {\n *              type: 'stack' // Produces a stacked area.\n *          }\n *      }]);\n * ```\n *\n * @public\n *\n * @class\n * @module AreaLayer\n * @extends LineLayer\n */\nexport default class AreaLayer extends LineLayer {\n    /** oation of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof AreaLayer\n     */\n    static formalName () {\n        return 'area';\n    }\n\n    /**\n     * Calculates the domain from data. It calls its parent class's method which is line layer\n     * to get the domain and overwrites the domain according to its need.\n     * @return {Array} Domain values\n     */\n    calculateDomainFromData (data, encodingFieldsInf, fieldsConfig) {\n        const domains = super.calculateDomainFromData(data, fieldsConfig);\n        [ENCODING.X, ENCODING.Y].forEach((type) => {\n            const { [`${type}FieldType`]: fieldType } = encodingFieldsInf;\n            if (fieldType === FieldType.MEASURE && domains[type] !== undefined) {\n                domains[type][0] = Math.min(domains[type][0], 0);\n                domains[type][1] = Math.max(0, domains[type][1]);\n            }\n        });\n        return domains;\n    }\n\n    /**\n     * Returns the drawing method of this layer\n     * @return {Function} Draw method\n     */\n    getDrawFn () {\n        return drawArea;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @return {Array} Array of points\n     */\n    translatePoints (data) {\n        let points = [];\n        const transformType = this.transformType();\n        const axes = this.axes();\n        const colorAxis = axes.color;\n        const config = this.config();\n        const fieldsConfig = this.data().getFieldsConfig();\n        const { xField, yField, y0Field } = this.encodingFieldsInf();\n        const {\n            xAxis,\n            yAxis\n       } = getAxesScales(axes);\n        const classNameFn = config.individualClassName;\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n        const minYVal = yAxis.domain()[0];\n        const basePos = minYVal < 0 ? yAxis.getScaleValue(0) : yAxis.getScaleValue(minYVal);\n        sortData(data, axes);\n        points = data.map((d, i) => {\n            let color;\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y);\n            const y0Px = (y0Field || transformType === STACK) ? yAxis.getScaleValue(d.y0) : basePos;\n            color = colorAxis.getColor(d.color);\n            const invalidY = d.y instanceof InvalidAwareTypes;\n            const invalidY0 = d.y0 instanceof InvalidAwareTypes;\n            const resolvedValues = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    y0: y0Px,\n                    color\n                },\n                data: d\n            }, i, data, this);\n            color = resolvedValues.color;\n            const point = {\n                enter: {\n                    x: xPx,\n                    y: invalidY ? null : basePos,\n                    y0: invalidY0 ? null : basePos\n                },\n                update: {\n                    x: xPx,\n                    y: invalidY ? null : resolvedValues.y,\n                    y0: invalidY0 ? null : resolvedValues.y0\n                },\n                source: d.source,\n                rowId: d.rowId,\n                className: classNameFn ? classNameFn(d, i, data, this) : '',\n                style: {\n                    fill: color\n                },\n                meta: getColorMetaInf(color, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n        points = points.filter((point) => {\n            const update = point.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransformForAggFn(this);\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            fill: color\n        };\n    }\n}\n\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-arc',\n    padding: { top: 1, bottom: 1, left: 1, right: 1 },\n    className: '',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    height: 100,\n    width: 100,\n    sort: '',\n    colors: ['#F44336', 'blue', 'green', 'yellow', 'orange', 'purple'],\n    transform: {\n        type: 'identity'\n    },\n    encoding: {\n        'stroke-width': {\n            value: '2px'\n        },\n        'stroke-linejoin': {\n            value: 'round'\n        },\n        angle: {\n            value: '1'\n        },\n        radius: {\n            value: '1'\n        },\n        opacity: {\n            value: '1'\n        },\n        color: {\n            value: '1'\n        },\n        shape: {\n            value: '1'\n        },\n        size: {\n            value: '1'\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 500\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-arc-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-arc-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-arc-selected`\n        }\n    }\n};\n\n","import {\n    makeElement,\n    selectElement,\n    getQualifiedClassName,\n    isSimpleObject,\n    Symbols,\n    FieldType,\n    ReservedFields\n} from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { BaseLayer } from '../../base-layer';\nimport { getIndividualClassName, resolveEncodingValues, getColorMetaInf } from '../../helpers';\nimport { tweenPie, tweenExitPie, getPreviousPoint } from './arc-helper';\nimport './styles.scss';\n\nconst arc = Symbols.arc;\n\n/**\n * Arc Layer creates a plot with polar coordinates.\n *\n * @public\n *\n * @class\n * @module ArcLayer\n * @extends BaseLayer\n */\nexport default class ArcLayer extends BaseLayer {\n\n    constructor (data, axes, config, dependencies) {\n        super(data, axes, config, dependencies);\n        this._prevPieData = {};\n    }\n\n    /**\n     * returns the default configuration of the layer\n     *\n     * @static\n     * @return {Object} Default configuration for arc layer\n     * @memberof ArcLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'arc';\n    }\n\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     *\n     *\n     * @param {Object} x\n     * @param {Object} y\n     * @return {}\n     * @memberof ArcLayer\n     */\n    getNearestPoint (x, y, config = {}) {\n        const dataPoint = selectElement(config.event.target).data()[0];\n        if (isSimpleObject(dataPoint)) {\n            const { source, rowId } = dataPoint;\n            return {\n                id: this.getIdentifiersFromData(source, rowId),\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n\n    translatePoints (data) {\n        const { angle, color: colorAxis, radius: radiusAxis } = this.axes();\n        const pieIndex = {};\n        const prevData = this._points[0] || [];\n        const points = [];\n        const angleV = {};\n\n        this._prevPieData = {};\n        prevData.forEach((e, index) => {\n            this._prevPieData[e.rowId] = [e, index];\n            pieIndex[e.index] = e;\n        });\n        data.forEach((d, i) => {\n            const angles = angle.getScaleValue(d.angle);\n            if (angles) {\n                !angleV[d.angle] && (angleV[d.angle] = 0);\n                const { startAngle, endAngle } = angles[angleV[d.angle]++];\n                const uid = d.rowId;\n                const resolvedEncodings = resolveEncodingValues({\n                    values: {\n                        radius: radiusAxis.getOuterRadius(d.radius),\n                        radius0: radiusAxis.getInnerRadius(d.radius0),\n                        color: colorAxis.getColor(d.color),\n                        angle0: startAngle,\n                        angle: endAngle,\n                        startAngle,\n                        endAngle,\n                        startAngle0: startAngle,\n                        endAngle0: endAngle\n                    },\n                    data: d\n                }, i, data, this);\n                const color = resolvedEncodings.color;\n                points.push({\n                    source: d.source,\n                    index: i,\n                    enter: {},\n                    update: {\n                        angle0: resolvedEncodings.angle0,\n                        angle: resolvedEncodings.angle,\n                        radius0: resolvedEncodings.radius0,\n                        radius: resolvedEncodings.radius\n                    },\n                    color,\n                    meta: getColorMetaInf(color, colorAxis),\n                    rowId: uid,\n                    _previousInfo: this._prevPieData[uid] ? this._prevPieData[uid][0] :\n                        getPreviousPoint(pieIndex, i, this)\n                });\n            }\n        });\n        return points;\n    }\n\n    /**\n     *\n     *\n     * @param {Object} container\n     * @return {}\n     * @memberof ArcLayer\n     */\n    render (container) {\n        const measurement = this.measurement();\n        const {\n            classPrefix,\n            defClassName,\n            cornerRadius,\n            padAngle,\n            padRadius,\n            transition\n       } = this.config();\n        const qualClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        // This returns a function that generates the arc path based on the datum provided\n        const path = this._arcFn = arc()\n                .cornerRadius(cornerRadius)\n                .startAngle(d => d.update.angle0 + Math.PI / 2)\n                .endAngle(d => d.update.angle + Math.PI / 2)\n                .padAngle(padAngle)\n                .padRadius(padRadius)\n                .outerRadius(d => d.update.radius)\n                .innerRadius(d => d.update.radius0);\n\n        this._points = this._normalizedData.map(arr => this.translatePoints(arr));\n        const graphicElems = this._graphicElems = {};\n        // Creating the group that holds all the arcs\n        const g = makeElement(selectElement(container), 'g', this._points, `${qualClassName[0]}-group`)\n                .classed(`${qualClassName[1]}-group`, true)\n                .attr('transform', `translate(${measurement.width / 2},\n                    ${measurement.height / 2})`);\n        const tween = (elem) => {\n            makeElement(elem, 'path', d => [d], `${qualClassName[0]}-path`)\n                .style('fill', d => d.color)\n                .each(function (d) {\n                    graphicElems[d.rowId] = selectElement(this);\n                })\n                .transition()\n                .duration(transition.duration)\n                .on('end', this.registerAnimationDoneHook())\n                .attrTween('d', (...params) => tweenPie(path, params))\n                .attr('class', (d, i) => {\n                    const individualClass = getIndividualClassName(d, i, this._points, this);\n                    return `${qualClassName[0]}-path ${qualClassName[1]}-path-${d.index}\n                        ${individualClass}`;\n                });\n        };\n        const consecutiveExits = [];\n        let exitCounter = 0;\n        const tweenExit = (elem, d) => {\n            let exitArr = consecutiveExits[exitCounter];\n            const oldExitCounter = exitCounter;\n            if (!exitArr) {\n                exitArr = [{ elem, datum: d }];\n            } else if (exitArr[exitArr.length - 1].datum.index === d.index - 1) {\n                exitArr.push({ elem, datum: d });\n            } else {\n                exitCounter++;\n            }\n            consecutiveExits[oldExitCounter] = exitArr;\n        };\n        // Creating groups for all the arcs present individually\n        makeElement(g, 'g', d => d, `${qualClassName[0]}`,\n            {\n                update: tween,\n                exit: tweenExit\n            })\n                        .attr('class', (d, i) => `${qualClassName[0]} ${qualClassName[1]}-${i}`);\n        tweenExitPie(consecutiveExits, transition, path);\n        return this;\n    }\n\n    getPointsFromIdentifiers (identifiers) {\n        if (!this.data()) {\n            return [];\n        }\n        const fieldNames = identifiers[0];\n        const values = identifiers.slice(1, identifiers.length);\n        const pieSlices = selectElement(this.mount()).selectAll('path').data();\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPies = pieSlices.filter((tData) => {\n            const { source, rowId } = tData;\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === source[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === rowId) !== -1;\n                } return true;\n            });\n        });\n\n        const pieSliceInf = filteredPies[0];\n        if (pieSliceInf) {\n            const measurement = this.measurement();\n            const centroid = this._arcFn.centroid(pieSliceInf);\n            return [{\n                x: centroid[0] + measurement.width / 2,\n                y: centroid[1] + measurement.height / 2,\n                width: 2,\n                height: 2\n            }];\n        }\n        return [];\n    }\n}\n","import { getObjProp, interpolator, FieldType, selectElement } from 'muze-utils';\nimport { ANGLE, RADIUS, SIZE, COLOR } from '../../enums/constants';\n\nexport const getPreviousPoint = (prevData, currIndex, context) => {\n    const prevArc = prevData[currIndex - 1];\n    const nextArc = prevData[currIndex];\n    const [startAngle, endAngle] = context.axes().angle.range();\n    if (prevArc && nextArc) {\n        return {\n            update: {\n                angle0: getObjProp(prevArc, 'update', 'angle'),\n                angle: getObjProp(nextArc, 'update', 'angle0')\n            }\n        };\n    } else if (!nextArc) {\n        return {\n            update: {\n                angle0: (endAngle - 90) * Math.PI * 2 / 360,\n                angle: (endAngle - 90) * Math.PI * 2 / 360\n            }\n        };\n    }\n    return {\n        update: {\n            angle0: (startAngle - 90) * Math.PI * 2 / 360,\n            angle: (startAngle - 90) * Math.PI * 2 / 360\n        }\n    };\n};\n\nexport const tweenPie = (path, b) => {\n    const datum = b[0];\n    return function (t) {\n        return path(interpolator()(datum._previousInfo, datum)(t));\n    };\n};\n\nexport const tweenExitPie = (consecutiveExits, transition, path) => {\n    if (consecutiveExits.length > 0) {\n        consecutiveExits.forEach((consecutiveExitArr) => {\n            const startAngle = consecutiveExitArr[0].datum.update.angle0;\n            const endAngle = consecutiveExitArr[consecutiveExitArr.length - 1].datum.update.angle;\n            const mid = (Math.PI * 2 * startAngle) / ((Math.PI * 2) + startAngle - endAngle);\n\n            consecutiveExitArr.forEach((e) => {\n                const { elem, datum } = e;\n\n                elem.each(function () {\n                    const gElem = selectElement(this);\n                    gElem.selectAll('path')\n                                    .transition()\n                                    .duration(transition.duration)\n                                    .attrTween('d', () => function (t) {\n                                        return path(interpolator()(datum, {\n                                            update: {\n                                                angle0: mid,\n                                                angle: mid,\n                                                radius: datum.radius,\n                                                radius0: datum.radius0\n                                            }\n                                        })(t));\n                                    })\n                                    .remove();\n                    gElem.remove();\n                });\n            });\n        });\n    }\n};\n\nexport const getFieldIndices = (encoding, fieldsConfig) => {\n    const [angleField, radiusField, colorField, sizeField] = [ANGLE, RADIUS, COLOR, SIZE]\n            .map(e => encoding[e].field);\n    const [angleIndex, sizeIndex, radiusIndex] = [angleField, sizeField, radiusField]\n        .map((e) => {\n            const conf = fieldsConfig[e];\n            if (conf && conf.def.type === FieldType.MEASURE) {\n                return conf.index;\n            }\n            return null;\n        });\n    const colorIndex = getObjProp(fieldsConfig, colorField, 'index');\n    return {\n        angleIndex,\n        sizeIndex,\n        radiusIndex,\n        colorIndex\n    };\n};\n","import {\n    setAttrs,\n    setStyles,\n    selectElement,\n    makeElement,\n    getSmartComputedStyle\n} from 'muze-utils';\n\n/**\n * Draws svg text in the specified container.\n * @param {SVGElement} container Container where labels will be appended.\n * @param {Array.<Object>} data Data of the elements.\n * @return {Selection} d3 selection of the elements.\n */\nconst drawText = (container, data, config, layerInst) => {\n    const selection = selectElement(container).selectAll('g').data(data);\n    const { smartLabel } = layerInst._dependencies;\n    const graphicElems = layerInst._graphicElems;\n\n    const selectionMerge = selection.enter().append('g')\n        .each(function (dataObj) {\n            setAttrs(this, dataObj.enter);\n        })\n        .merge(selection);\n    const style = getSmartComputedStyle(selectElement(container), config.className);\n    const fontSize = parseInt(style.fontSize, 10);\n\n    smartLabel.setStyle(style);\n    selectionMerge.each(function (dataObj) {\n        const element = selectElement(this);\n        graphicElems[dataObj.rowId] = element;\n        const { update, text, color, textanchor, style: textStyle } = dataObj;\n        const background = dataObj.background;\n        let backgroundVal;\n        if (backgroundVal = background.value) {\n            const backgroundPadding = background.padding;\n            let diff;\n            const { width, height } = smartLabel.getOriSize(dataObj.text);\n            const backgroundEl = makeElement(element, 'rect', [1]);\n\n            if (textanchor === 'end') {\n                diff = width;\n            } else if (textanchor === 'start') {\n                diff = 0;\n            } else {\n                diff = width / 2;\n            }\n\n            setAttrs(backgroundEl.node(), {\n                x: update.x - diff - backgroundPadding / 2,\n                y: update.y - fontSize - backgroundPadding / 2,\n                width: width + backgroundPadding,\n                height: height + backgroundPadding\n            });\n            background && setStyles(backgroundEl, {\n                background: backgroundVal\n            });\n        }\n        const textEl = makeElement(element, 'text', d => [d]).text(text);\n        const textNode = textEl.node();\n        textStyle && setStyles(textNode, textStyle);\n        color && setStyles(textNode, {\n            fill: color\n        });\n        dataObj.className && textEl.classed(dataObj.className, true);\n        setAttrs(textNode, update);\n        textEl.attr('text-anchor', textanchor);\n        textEl.attr('alignment-baseline', dataObj['alignment-baseline']);\n        textEl.attr('transform', `rotate(${dataObj.rotation} ${update.x} ${update.y})`);\n    });\n    selection.exit().remove();\n    return selection;\n};\n\nexport default drawText;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-text',\n    classPrefix: CLASSPREFIX,\n    className: '',\n    transform: {\n        type: 'identity'\n    },\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        color: {},\n        size: {},\n        radius: {},\n        angle: {},\n        text: {\n            value: '',\n            formatter: (val, i, data, context) => {\n                const valueParser = context.valueParser();\n                return valueParser(val);\n            },\n            background: {\n                padding: 10\n            }\n        },\n        rotation: {\n            value: 0\n        },\n        'alignment-baseline': {\n            value: 'middle'\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-text-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-text-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-text-selected`\n        }\n    }\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    setStyles,\n    createElements\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawText from './renderer';\nimport { defaultConfig } from './default-config';\nimport { positionPoints, getIndividualClassName, resolveEncodingValues, getColorMetaInf, toCartesianCoordinates }\n    from '../../helpers';\nimport { TEXT_ANCHOR_MIDDLE, ENCODING } from '../../enums/constants';\n\nimport './styles.scss';\n\nconst defaultEncoding = defaultConfig.encoding;\nconst alignmentBaseLine = defaultEncoding['alignment-baseline'].value;\nconst defRotation = defaultEncoding.rotation.value;\n\nconst pointTranslators = {\n    polar: (data, config, layerInst) => {\n        let points = [];\n        const axes = layerInst.axes();\n        const encoding = layerInst.config().encoding;\n        const textEncoding = encoding.text;\n        const { radius: radiusAxis, color: colorAxis, angle: angleAxis } = axes;\n        const { formatter: textFormatter } = textEncoding;\n        const backgroundEncoding = encoding.text.background;\n        const backgroundPadding = backgroundEncoding.padding;\n        const backgroundValue = backgroundEncoding.value;\n        const angleV = {};\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const source = d.source;\n            const text = d.text;\n\n            const color = colorAxis.getColor(d.color);\n            const radius = radiusAxis.getOuterRadius(d.radius);\n            const angles = angleAxis.getScaleValue(d.angle);\n            !angleV[d.angle] && (angleV[d.angle] = 0);\n            const { startAngle, endAngle } = angles[angleV[d.angle]++];\n\n            const angle = (startAngle + endAngle) / 2;\n            const resolvedVal = resolveEncodingValues({\n                values: {\n                    angle,\n                    radius,\n                    color,\n                    text,\n                    startAngle,\n                    endAngle,\n                    rotation: defRotation,\n                    'alignment-baseline': alignmentBaseLine\n                },\n                data: d\n            }, i, data, layerInst);\n            const point = {\n                enter: {},\n                update: {\n                    angle: resolvedVal.angle,\n                    radius: resolvedVal.radius\n                },\n                text: textFormatter ? textFormatter(text, i, data, layerInst) : resolvedVal.text,\n                color: resolvedVal.color,\n                rotation: resolvedVal.rotation,\n                background: {\n                    value: backgroundValue instanceof Function ? backgroundValue(d, i, data, layerInst) : null,\n                    padding: backgroundPadding\n                },\n                'alignment-baseline': resolvedVal['alignment-baseline'],\n                meta: getColorMetaInf(resolvedVal.color, colorAxis),\n                style: {},\n                source,\n                rowId: d.rowId\n            };\n\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n\n        points = toCartesianCoordinates(positionPoints(layerInst, points), layerInst.measurement());\n\n        points = points.filter((d) => {\n            const update = d.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    },\n    cartesian: (data, config, layerInst) => {\n        let points = [];\n        const axes = layerInst.axes();\n        const colorAxis = axes.color;\n        const encoding = layerInst.config().encoding;\n        const textEncoding = encoding.text;\n        const { field: textField, value, formatter: textFormatter } = textEncoding;\n        const fieldsConfig = layerInst.data().getFieldsConfig();\n\n        const backgroundEncoding = encoding.text.background;\n        const backgroundPadding = backgroundEncoding.padding;\n        const backgroundValue = backgroundEncoding.value;\n        const textFieldIndex = textField ? fieldsConfig[textField] && fieldsConfig[textField].index : -1;\n        const xEnc = ENCODING.X;\n        const yEnc = ENCODING.Y;\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const row = d.source;\n            const textValue = textField ? row[textFieldIndex] : value;\n\n            const [xPx, yPx] = [xEnc, yEnc].map(type => (axes[type] ? axes[type].getScaleValue(d[type]) +\n                    axes[type].getUnitWidth() / 2 : 0));\n\n            const color = colorAxis.getColor(d.color, colorAxis);\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    text: textValue,\n                    color,\n                    rotation: defRotation,\n                    'alignment-baseline': alignmentBaseLine\n                },\n                data: d\n            }, i, data, layerInst);\n            const point = {\n                enter: {},\n                update: {\n                    x: resolvedEncodings.x,\n                    y: resolvedEncodings.y\n                },\n                text: textFormatter(resolvedEncodings.text, i, data, layerInst),\n                color: resolvedEncodings.color,\n                background: {\n                    value: backgroundValue instanceof Function ? backgroundValue(d, i, data, layerInst) : null,\n                    padding: backgroundPadding\n                },\n                'alignment-baseline': resolvedEncodings['alignment-baseline'],\n                rotation: resolvedEncodings.rotation,\n                meta: getColorMetaInf(resolvedEncodings.color, colorAxis),\n                style: {},\n                source: d.source,\n                rowId: d.rowId\n            };\n\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n\n        points = positionPoints(layerInst, points);\n        points = points.filter((d) => {\n            const update = d.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n};\n\n/**\n * This layer is used to create labels for each data point. It has an encoding property ```text```\n * which determines from which field's data the value of the label will be taken. The text encoding\n * property is necessary for the layer to render the text.The mark type of this layer is ```text```.\n *\n * @public\n *\n * @class\n * @module TextLayer\n * @extends BaseLayer\n */\nexport default class TextLayer extends BaseLayer {\n    /**\n     * Returns the default configuration of the text layer\n     * @return {Object} Default configuration of the text layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'text';\n    }\n\n    elemType () {\n        return 'text';\n    }\n\n    getPointTranslator (val) {\n        return pointTranslators[val];\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, config = {}) {\n        return pointTranslators[this.coord()](data, config, this);\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {textLayer} Instance of text layer\n     */\n    render (container) {\n        const config = this.config();\n        const normalizedData = this._normalizedData;\n        const className = config.className;\n        const qualifiedClassName = getQualifiedClassName(config.defClassName, this.id(), config.classPrefix);\n        const containerSelection = selectElement(container);\n\n        containerSelection.classed(`${qualifiedClassName.join(' ')} ${className}`, true);\n        this._graphicElems = {};\n\n        createElements({\n            data: normalizedData,\n            append: 'g',\n            selector: 'g',\n            container,\n            each: (dataArr, group) => {\n                const node = group.node();\n                const points = this.translatePoints(dataArr, {}, this);\n                setStyles(node, {\n                    'text-anchor': TEXT_ANCHOR_MIDDLE\n                });\n                drawText(node, points, {\n                    className: qualifiedClassName[0]\n                }, this);\n            }\n        });\n        return this;\n    }\n}\n","/* global Element, document  */\nimport {\n    makeElement,\n    selectElement,\n    easeFns,\n    objectIterator,\n    getSymbol\n} from 'muze-utils';\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, groupElement) {\n    const { shape, size, update } = d;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            createShape(d, groupElement);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        if (newShape.nodeName === 'path' || newShape.nodeName === 'image') {\n            shapeElement.attr('transform', `scale(${size / 100})`);\n        } else {\n            shapeElement.attr('height', size);\n            shapeElement.attr('width', size);\n        }\n        shapeElement.attr('x', -size / 2);\n        shapeElement.attr('y', -size / 2);\n        makeElement(groupElement, () => newShape, [1]);\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = getSymbol(shape).size(size)(update);\n        }\n        makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    } else {\n        d.shape = 'circle';\n        createShape(d, groupElement);\n    }\n};\n\n/**\n * Draws symbols using d3 symbol api\n * @param {Object} params Contains the svg container, points and other symbol related attributes.\n */\n/* istanbul ignore next */ const drawSymbols = (params) => {\n    const { layer, container, points, transition, className } = params;\n    const { duration, effect, disabled } = transition;\n    const mount = selectElement(container);\n    const graphicElems = layer._graphicElems;\n    mount.attr('class', className);\n    return makeElement(mount, 'g', points, null, {\n        enter: (group, d) => {\n            const { enter } = d;\n            group.attr('transform', `translate(${enter.x},${enter.y})`);\n        },\n        update: (group, d) => {\n            createShape(d, group);\n            graphicElems[d.rowId] = group;\n            const { update, style } = d;\n            objectIterator(style, key => group.style(key, style[key]));\n            group.attr('class', className);\n            group.classed(d.className, true);\n            if (!disabled) {\n                group = group.transition()\n                    .duration(transition.duration)\n                    .on('end', layer.registerAnimationDoneHook());\n            }\n            group.attr('transform', `translate(${update.x},${update.y})`);\n        },\n        exit: (exitGroup) => {\n            if (!disabled) {\n                exitGroup.transition().ease(easeFns[effect])\n                .duration(duration)\n                .on('end', () => exitGroup.remove())\n                .style('fill-opacity', 0)\n                .style('stroke-opacity', 0);\n            } else {\n                exitGroup.remove();\n            }\n        }\n    }, params.keyFn);\n};\n\nexport default drawSymbols;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-point',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    defColorStyle: 'stroke',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -20, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }\n        ]\n    },\n    innerPadding: 0.1,\n    nearestPointThreshold: 10,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        size: {\n            value: 30\n        },\n        color: { },\n        shape: {\n            value: 'circle'\n        },\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    shapes: ['circle', 'cross', 'diamond', 'square', 'star', 'wye', 'triangle'],\n    sizes: [20, 30, 40, 50, 60, 70]\n};\n","import {\n    Voronoi,\n    selectElement,\n    getQualifiedClassName,\n    makeElement,\n    FieldType,\n    Scales\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawSymbols from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    positionPoints,\n    getPlotMeasurement,\n    getIndividualClassName,\n    getMarkId,\n    getColorMetaInf,\n    resolveEncodingValues\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to create various symbols for each data point. This is commonly used in\n * scatterplot visualizations. The mark type of this layer is ```point```.\n *\n * @public\n *\n * @class\n * @module PointLayer\n * @extends BaseLayer\n */\nexport default class PointLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of PointLayer.\n     * @param {*} args\n     * @memberof PointLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n        this._bandScale = Scales.band();\n    }\n\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Returns the default configuration of the point layer\n     * @return {Object} Default configuration of the point layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    static formalName () {\n        return 'point';\n    }\n\n    static drawFn () {\n        return drawSymbols;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, config = {}) {\n        let points = [];\n        const encoding = this.config().encoding;\n        const axes = this.axes();\n        const {\n            x,\n            y\n        } = encoding;\n        const xField = x.field;\n        const yField = y.field;\n        const { size: sizeAxis, shape: shapeAxis } = axes;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const measurement = this.measurement();\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const size = sizeAxis.getSize(d.size);\n            const shape = shapeAxis.getShape(d.shape);\n\n            let [xPx, yPx] = [ENCODING.X, ENCODING.Y].map((type) => {\n                const value = d[type] === null ? undefined : d[type];\n                const measure = type === ENCODING.X ? measurement.width : measurement.height;\n                return !encoding[type].field ? measure / 2 : axes[type].getScaleValue(value);\n            });\n\n            xPx += offsetX;\n            yPx += offsetY;\n\n            let color = colorAxis.getColor(d.color);\n\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    color,\n                    shape,\n                    size,\n                    data: d\n                },\n                data: d\n            }, i, data, this);\n            color = resolvedEncodings.color;\n            const style = {\n                fill: color,\n                stroke: color\n            };\n            const pos = {\n                x: resolvedEncodings.x,\n                y: resolvedEncodings.y\n            };\n\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: pos,\n                    update: pos,\n                    shape: resolvedEncodings.shape,\n                    size: Math.abs(resolvedEncodings.size),\n                    meta: getColorMetaInf(color, colorAxis),\n                    style,\n                    source: d.source,\n                    rowId: d.rowId\n                };\n                point.className = getIndividualClassName(d, i, data, this);\n                points.push(point);\n                this.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    /**\n     * Renders the plot in the given container.\n     *\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {BarLayer} Instance of bar layer\n     */\n    render (container) {\n        let maxSize = 0;\n        let seriesClassName;\n        const config = this.config();\n        const keys = this._transformedData.map(d => d.key);\n        const { transition, className, defClassName, classPrefix } = config;\n        const normalizedData = this._normalizedData;\n        const containerSelection = selectElement(container);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        this._points = [];\n        this._pointMap = {};\n\n        containerSelection.classed(qualifiedClassName.join(' '), true).classed(className, true);\n\n        this._points = this.generateDataPoints(normalizedData, keys);\n        this._graphicElems = {};\n\n        const schema = this.data().getSchema();\n        makeElement(container, 'g', this._points, null, {\n            update: (group, points) => {\n                maxSize = Math.max(maxSize, ...points.map(d => d.size));\n                seriesClassName = `${qualifiedClassName[0]}`;\n                this.constructor.drawFn()({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    interpolate: config.interpolate,\n                    className: seriesClassName,\n                    transition,\n                    keyFn: v => getMarkId(v.source, schema)\n                });\n            }\n        }, data => data[0].rowId);\n        this._maxSize = Math.sqrt(maxSize / Math.PI) * 2;\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    generateDataPoints (normalizedData, keys) {\n        const [widthMetrics, heightMetrics] = getPlotMeasurement(this, keys);\n        const offsetXValues = widthMetrics.offsetValues || [];\n        const offsetYValues = heightMetrics.offsetValues || [];\n        return normalizedData.map((dataArr, i) => {\n            const measurementConf = this.getMeasurementConfig(offsetXValues[i], offsetYValues[i], widthMetrics.span,\n                heightMetrics.span);\n            return this.translatePoints(dataArr, measurementConf);\n        }).filter(d => d.length);\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0) + widthSpan / 2,\n                y: (offsetY || 0) + heightSpan / 2\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n\n    /**\n     * Gets the nearest point from a position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Point details\n     */\n    getNearestPoint (x, y) {\n        const distanceLimit = Math.max(this._maxSize, this.config().nearestPointThreshold);\n\n        if (!this.data()) {\n            return null;\n        }\n\n        const point = this._voronoi.find(x, y, distanceLimit);\n        const dimensions = point && point.data.data.update;\n        const radius = point ? Math.sqrt(point.data.data.size / Math.PI) : 0;\n\n        if (point) {\n            const { source, rowId } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(source, rowId);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: radius,\n                    height: radius\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import { makeElement, easeFns } from 'muze-utils';\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} datum\n * @param {*} index\n * @param {*} context\n */\nconst transitionBars = (layer, elem, datum, index, context) => {\n    const { transition } = context;\n    const { duration, disabled, effect } = transition;\n    const selection = elem;\n\n    const selTransition = disabled ? selection :\n        selection.transition()\n        .duration(duration)\n        .ease(easeFns[effect])\n        .on('end', layer.registerAnimationDoneHook());\n    const update = datum.update || datum;\n    const updateStyle = datum.style || {};\n    datum.className && selection.classed(datum.className, true);\n    Object.entries(update).forEach(attr => (!isNaN(attr[1]) && selTransition.attr(attr[0], attr[1])));\n    Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n};\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} d\n */\nconst barEnterFn = (elem, d) => {\n    const selection = elem;\n    const enter = d.enter || {};\n    Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n};\n\n/**\n * Draws rectangles by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Bar Selection\n */\n/* istanbul ignore next */ export const drawRects = (params) => {\n    const { layer, points, container, keyFn } = params;\n    const graphicElems = layer._graphicElems;\n    const updateFns = {\n        enter (elem, d) { barEnterFn(elem, d); },\n        update (elem, d, i) {\n            graphicElems[d.rowId] = elem;\n            transitionBars(layer, elem, d, i, params);\n        }\n    };\n    return makeElement(container, 'rect', points, null, updateFns, keyFn);\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-bar',\n    className: '',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transform: {\n        type: 'stack'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    innerPadding: 0.1,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        x0: {},\n        y0: {}\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-bar-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-bar-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-bar-selected`\n        }\n    }\n};\n\n","import { MeasureSubtype, DimensionSubtype } from 'muze-utils';\nimport { STACK } from '../../enums/constants';\nimport { positionPoints, getIndividualClassName, getColorMetaInf, resolveEncodingValues } from '../../helpers';\n\nconst positionRetriever = {\n    x: (xPx, isNegativeVal, barBasePos) => (isNegativeVal ? [xPx, barBasePos] : [barBasePos, xPx]),\n    y: (yPx, isNegativeVal, barBasePos) => (isNegativeVal ? [barBasePos, yPx] : [yPx, barBasePos])\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fieldInfo\n * @param {*} config\n * @param {*} data\n *\n */\nconst resolveDimByField = (type, axesInfo, config, data) => {\n    const spaceType = type === 'x' ? 'width' : 'height';\n    const [fieldType, axis] = [config[`${type}FieldType`], axesInfo[`${type}Axis`]];\n    const {\n        transformType,\n        sizeEncoding,\n        sizeConfig,\n        measurement\n    } = config;\n\n    const sizeValue = sizeEncoding.value;\n    let enter = 0;\n    let pos;\n    let space = 0;\n    let enterSpace = 0;\n    if (fieldType !== undefined) {\n        if (config[`${type}0Field`]) {\n            const minVal = data[type];\n            const maxVal = data[`${type}0`];\n            let min;\n            let max;\n            if (minVal === null || maxVal === null) {\n                return {\n                    enterSpace: undefined,\n                    enter: undefined,\n                    pos: undefined,\n                    space: undefined\n                };\n            } else if (fieldType === MeasureSubtype.CONTINUOUS || fieldType === DimensionSubtype.TEMPORAL) {\n                min = Math.min(minVal, maxVal);\n                max = Math.max(minVal, maxVal);\n            } else {\n                min = minVal;\n                max = maxVal;\n            }\n            const scales = type === 'x' ? [min, max] : [max, min];\n            pos = axis.getScaleValue(scales[0]) + axis.getUnitWidth() / 2;\n            space = Math.abs(axis.getScaleValue(scales[1]) - pos) + axis.getUnitWidth() / 2;\n\n            enter = pos;\n            enterSpace = 0;\n        } else if (fieldType === DimensionSubtype.CATEGORICAL || fieldType === DimensionSubtype.TEMPORAL) {\n            pos = axis.getScaleValue(data[type]) +\n                (sizeConfig[type === 'x' ? 'barWidthOffset' : 'barHeightOffset'] || 0);\n\n            space = sizeConfig[type === 'x' ? 'barWidth' : 'barHeight'];\n            if (sizeValue !== undefined) {\n                const diffPx = sizeValue * space;\n                space -= diffPx;\n                pos += diffPx / 2;\n            }\n            enter = pos;\n            enterSpace = space;\n        } else {\n            const minDomVal = axis.domain()[0];\n            const barBasePos = minDomVal < 0 ? axis.getScaleValue(0) : axis.getScaleValue(minDomVal);\n            pos = axis.getScaleValue(data[type]);\n            let endPos = axis.getScaleValue(data[`${type}0`]);\n\n            enterSpace = 0;\n            const isNegativeVal = data[type] < 0;\n            if (transformType !== STACK) {\n                [pos, endPos] = positionRetriever[type](pos, isNegativeVal, barBasePos);\n            }\n            space = Math.abs(pos - endPos);\n            enter = barBasePos;\n        }\n    } else {\n        pos = 0;\n        space = measurement[spaceType];\n    }\n\n    return {\n        enterSpace,\n        enter,\n        pos,\n        space\n    };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} config\n * @param {*} axes\n *\n */\nconst resolveDimensions = (data, config, axes) => {\n    const axesInfo = {\n        xAxis: axes.x,\n        yAxis: axes.y\n    };\n    const {\n        enterSpace: enterWidth,\n        enter: enterX,\n        pos: xPos,\n        space: width\n    } = resolveDimByField('x', axesInfo, config, data);\n\n    const {\n        enterSpace: enterHeight,\n        enter: enterY,\n        pos: yPos,\n        space: height\n    } = resolveDimByField('y', axesInfo, config, data);\n    return {\n        enter: {\n            x: enterX,\n            y: enterY,\n            width: enterWidth,\n            height: enterHeight\n        },\n        update: {\n            x: xPos,\n            y: yPos,\n            width,\n            height\n        }\n    };\n};\n\n/**\n * Generates an array of objects containing x, y, width and height of the bars from the data\n * @param  {Array.<Array>} data Data Array\n * @param  {Object} encoding  Config\n * @param  {Object} axes     Axes object\n * @param {Object} conf config object for point generation\n * @return {Array.<Object>}  Array of points\n */\nexport const getTranslatedPoints = (context, data, sizeConfig) => {\n    let points = [];\n    const encoding = context.config().encoding;\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const sizeEncoding = encoding.size || {};\n    const {\n            x0Field,\n            y0Field,\n            xFieldSubType,\n            yFieldSubType\n        } = context.encodingFieldsInf();\n    const measurement = context.measurement();\n    const isXDim = xFieldSubType === DimensionSubtype.CATEGORICAL || xFieldSubType === DimensionSubtype.TEMPORAL;\n    const isYDim = yFieldSubType === DimensionSubtype.CATEGORICAL || yFieldSubType === DimensionSubtype.TEMPORAL;\n    const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n    const transformType = context.transformType();\n\n    for (let i = 0, len = data.length; i < len; i++) {\n        const d = data[i];\n        const dimensions = resolveDimensions(d, {\n            xFieldType: xFieldSubType,\n            yFieldType: yFieldSubType,\n            x0Field,\n            y0Field,\n            transformType,\n            measurement,\n            sizeConfig,\n            sizeEncoding\n        }, axes);\n\n        let color = colorAxis.getColor(d.color);\n\n        const update = dimensions.update;\n        const resolvedEncodings = resolveEncodingValues({\n            values: {\n                x: update.x,\n                y: update.y,\n                width: update.width,\n                height: update.height,\n                color\n            },\n            data: d\n        }, i, data, context);\n        color = resolvedEncodings.color;\n        const { x, y, width, height } = resolvedEncodings;\n        if (!isNaN(x) && !isNaN(y) && d.rowId !== undefined) {\n            let point = null;\n            point = {\n                enter: dimensions.enter,\n                update: {\n                    x,\n                    y,\n                    width,\n                    height\n                },\n                source: d.source,\n                rowId: d.rowId,\n                style: {\n                    fill: color\n                },\n                meta: getColorMetaInf(color, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, context);\n            points.push(point);\n            // Store each point in a hashmap with key as the dimensional or temporal field value\n            context.cachePoint(d[key], point);\n        }\n    }\n\n    points = positionPoints(context, points);\n    return points;\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    createElements,\n    clipElement,\n    DimensionSubtype,\n    FieldType,\n    MeasureSubtype,\n    Scales,\n    getNearestValue\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawRects } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { getPlotMeasurement, getValidTransformForAggFn } from '../../helpers';\nimport './styles.scss';\nimport { getTranslatedPoints } from './bar-helper';\n\nconst MEASURE = FieldType.MEASURE;\nconst scaleBand = Scales.band;\n\n/**\n * Bar layer creates rectangle marks. The mark type of this layer is ```bar```. This layer can be used\n * to create stacked or grouped bars, range bars, heatmap plots and also reference bands by using\n * the encoding properties.\n *\n * @public\n *\n * @class\n * @module BarLayer\n * @extends BaseLayer\n */\nexport default class BarLayer extends BaseLayer {\n    /**\n     * Creates an instance of bar layer\n     */\n    constructor (...params) {\n        super(...params);\n        this._bandScale = scaleBand();\n        this._plotPadding = {\n            x: 0,\n            y: 0\n        };\n        this._plotSpan = {\n            x: 0,\n            y: 0\n        };\n        this._pointMap = {};\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BarLayer\n     */\n    elemType () {\n        return 'rect';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BarLayer\n     */\n    static formalName () {\n        return 'bar';\n    }\n\n    /**\n     * Returns the default configuration of the bar layer\n     * @return {Object} Default configuration of the bar layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @param {*} conf\n     * @param {*} userConf\n     *\n     * @memberof BarLayer\n     */\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const colorField = encoding.color.field;\n        const transform = config.transform;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} fieldsConfig\n     *\n     * @memberof BarLayer\n     */\n    calculateDomainFromData (data, encodingFieldInf, fieldsConfig) {\n        const domain = super.calculateDomainFromData(data, encodingFieldInf, fieldsConfig);\n        ['x', 'y'].forEach((d) => {\n            if (encodingFieldInf[`${d}FieldType`] === MEASURE && domain[d]) {\n                if (encodingFieldInf[`${d}0Field`]) {\n                    domain[d] = domain[d].sort((a, b) => a - b);\n                } else {\n                    domain[d][0] = Math.min(domain[d][0], 0);\n                    domain[d][1] = Math.max(0, domain[d][1]);\n                }\n            }\n        });\n        return domain;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the bars from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @param {Object} conf config object for point generation\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, sizeConfig) {\n        return getTranslatedPoints(this, data, sizeConfig);\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGGroup} container SVGGroup where plot will be rendered.\n     * @return {BarLayer} Instance of bar layer.\n     */\n    render (container) {\n        const config = this.config();\n        const transition = config.transition;\n        const normalizedDataArr = this._normalizedData;\n        const transformedData = this._transformedData;\n        const keys = transformedData.map(d => d.key);\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const height = axes.y && axes.y.scale().range()[0];\n        const width = axes.x && axes.x.scale().range()[1];\n        const defClassName = config.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const className = config.className;\n        const containerSelection = selectElement(container);\n        const dimensions = Object.values(fieldsConfig).filter(e => e.def.type === FieldType.DIMENSION)\n            .map(e => e.index);\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        clipElement(container, {\n            x: 0,\n            y: 0,\n            width,\n            height\n        }, `id-${this.id()}`);\n\n        this._points = this.generateDataPoints(normalizedDataArr, keys);\n        this._graphicElems = {};\n\n        createElements({\n            data: this._points,\n            container,\n            selector: 'g',\n            append: 'g',\n            each: (points, group, i) => {\n                const seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n                group.style('display', 'block');\n                drawRects({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: {},\n                    keyFn: d => dimensions.map(key => d.source[key]).join('-')\n                });\n            }\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} normalizedData\n     * @param {*} keys\n     *\n     * @memberof BarLayer\n     */\n    generateDataPoints (normalizedData, keys) {\n        const [barWidthMetrics, barHeightMetrics] = getPlotMeasurement(this, keys);\n        const barWidthOffsets = barWidthMetrics.offsetValues || [];\n        const barHeightOffsets = barHeightMetrics.offsetValues || [];\n        this._plotSpan = {\n            x: barWidthMetrics.groupSpan || 0,\n            y: barHeightMetrics.groupSpan || 0\n        };\n        this._plotPadding = {\n            x: barWidthMetrics.padding || 0,\n            y: barHeightMetrics.padding || 0\n        };\n\n        this._pointMap = {};\n        return normalizedData.map((data, i) => this.translatePoints(data,\n            {\n                barWidth: barWidthMetrics.span,\n                barWidthOffset: barWidthOffsets[i] || 0,\n                barHeight: barHeightMetrics.span,\n                barHeightOffset: barHeightOffsets[i] || 0\n            }));\n    }\n\n    getPlotPadding () {\n        return this._plotPadding;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransformForAggFn(this);\n    }\n\n    /**\n     * Gets the nearest point of the position passed.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point.\n     */\n    getNearestPoint (x, y) {\n        if (!this.data()) {\n            return null;\n        }\n        let axis;\n        let value;\n        let points;\n        let uniqueFieldType;\n        let uniqueFieldIndex;\n        let filterData;\n        let identifiers;\n        let pointFound = null;\n        const dataModel = this.data();\n        const dataObj = dataModel.getData();\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const axes = this.axes();\n        const data = dataObj.data;\n        const pointMap = this._pointMap;\n        const {\n                xField,\n                yField,\n                xFieldSubType,\n                yFieldSubType\n            } = this.encodingFieldsInf();\n\n        if (xFieldSubType === MeasureSubtype.CONTINUOUS) {\n            axis = axes.y;\n            value = axis.invert(y);\n            uniqueFieldIndex = fieldsConfig[yField].index;\n            uniqueFieldType = yFieldSubType;\n        } else {\n            axis = axes.x;\n            value = axis.invert(x);\n            uniqueFieldIndex = fieldsConfig[xField].index;\n            uniqueFieldType = xFieldSubType;\n        }\n\n        if (uniqueFieldType === DimensionSubtype.CATEGORICAL) {\n            points = pointMap[value];\n        }\n\n        if (uniqueFieldType === DimensionSubtype.TEMPORAL) {\n            filterData = [...new Set(data.map(d => d[uniqueFieldIndex]))];\n            value = getNearestValue(filterData, value);\n            points = pointMap[value];\n        }\n        const len = points && points.length;\n        points && points.sort((p1, p2) => p1.update.y - p2.update.y);\n        for (let i = 0; i < len; i++) {\n            const point = points[i];\n            const update = point.update;\n            if (x >= update.x && x <= (update.width + update.x) && y >= update.y && y <= (update.height + update.y)) {\n                pointFound = point;\n                break;\n            }\n            pointFound = null;\n        }\n\n        const values = pointFound && pointFound.source;\n        if (values) {\n            identifiers = this.getIdentifiersFromData(values, pointFound.rowId);\n        }\n        return pointFound ? {\n            dimensions: [pointFound.update],\n            id: identifiers,\n            layerId: this.id()\n        } : pointFound;\n    }\n\n    getPlotSpan () {\n        return this._plotSpan;\n    }\n\n    hasPlotSpan () {\n        return true;\n    }\n}\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-tick',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }]\n    },\n    innerPadding: 0.1,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    interpolate: 'linear',\n    encoding: {\n        color: { },\n        x: {},\n        y: {},\n        x0: {},\n        y0: {},\n        radius: {},\n        radius0: {},\n        angle: {},\n        angle0: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-tick-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-tick-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-tick-selected`\n        }\n    }\n};\n\n","import { selectElement, Symbols, pathInterpolators } from 'muze-utils';\n\nconst line = Symbols.line;\n\n/**\n * Draws ticks by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Ticks Selection\n */\nexport default /* istanbul ignore next */ (params) => {\n    const { points, container, keyFn, className, interpolate, layer } = params;\n    const mount = selectElement(container);\n    const ticks = mount.selectAll('path').data(points, keyFn);\n    const ticksEnter = ticks.enter().append('path');\n    const graphicElems = layer._graphicElems;\n    mount.attr('class', className || '');\n    ticksEnter.each(function (d) {\n        const selection = selectElement(this);\n        const enter = d.enter || {};\n        Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n    });\n\n    ticks.exit().remove();\n    return ticks.merge(ticksEnter)\n                    .each(function (d) {\n                        const selection = selectElement(this);\n                        graphicElems[d.rowId] = selection;\n                        const update = d.update;\n                        const updateStyle = d.style || {};\n                        const x0 = update.x0 !== undefined ? update.x0 : update.x;\n                        const y0 = update.y0 !== undefined ? update.y0 : update.y;\n                        const curveInterpolatorFn = pathInterpolators[interpolate];\n                        const linepath = line()\n                            .curve(curveInterpolatorFn)\n                            .x(e => e[0])\n                            .y(e => e[1]);\n                        d.className && selection.classed(d.className, true);\n                        selection.attr('d', linepath([[update.x, update.y], [x0, y0]]));\n                        Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n                    });\n};\n\n","import { FieldType } from 'muze-utils';\nimport { PointLayer } from '../point';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport drawTicks from './renderer';\nimport './styles.scss';\nimport { getAxesScales, positionPoints, getIndividualClassName,\n    getColorMetaInf, resolveEncodingValues, toCartesianCoordinates } from '../../helpers';\n\nconst pointTranslators = {\n    polar: (data, config = {}, layerInst) => {\n        const axes = layerInst.axes();\n        let points = [];\n        const { radius: radiusAxis, angle: angleAxis, angle0: angle0Axis } = axes;\n        const measurement = layerInst.measurement();\n\n        const colorAxis = axes.color;\n        const angleV = {};\n        const angle0V = {};\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const color = colorAxis.getColor(d.color);\n            const angles = angleAxis.getScaleValue(d.angle);\n            !angleV[d.angle] && (angleV[d.angle] = 0);\n            const { startAngle, endAngle } = angles[angleV[d.angle]++];\n            const angles0 = angle0Axis.getScaleValue(d.angle0);\n            !angle0V[d.angle0] && (angle0V[d.angle0] = 0);\n            const { startAngle: startAngle0, endAngle: endAngle0 } = angles0[angle0V[d.angle0]++];\n            const radius = radiusAxis.getOuterRadius(d.radius);\n            const angle = (startAngle + endAngle) / 2;\n            const angle0 = (startAngle0 + endAngle0) / 2;\n            const resolvedVal = resolveEncodingValues({\n                values: {\n                    radius,\n                    radius0: radiusAxis.getInnerRadius(d.radius0),\n                    color,\n                    angle,\n                    angle0,\n                    startAngle,\n                    endAngle,\n                    startAngle0,\n                    endAngle0\n                },\n                data: d\n            }, i, data, layerInst);\n            const point = {\n                enter: {},\n                update: {\n                    radius: resolvedVal.radius,\n                    radius0: resolvedVal.radius0,\n                    angle: resolvedVal.angle,\n                    angle0: resolvedVal.angle0\n                },\n                style: {\n                    stroke: resolvedVal.color\n                },\n                source: d.source,\n                rowId: d.rowId,\n                meta: getColorMetaInf(resolvedVal.color, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n        points = toCartesianCoordinates(positionPoints(layerInst, points), measurement, true);\n        return points;\n    },\n    cartesian: (data, config = {}, layerInst) => {\n        const axes = layerInst.axes();\n        let points = [];\n        const {\n                xAxis,\n                yAxis\n            } = getAxesScales(axes);\n        const {\n                xField,\n                yField,\n                x0Field,\n                y0Field,\n                xFieldType,\n                yFieldType\n            } = layerInst.encodingFieldsInf();\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const measurement = layerInst.measurement();\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n        const { x: xSpan, y: ySpan } = config.span;\n        for (let i = 0, len = data.length; i < len; i++) {\n            let xPx;\n            let x0Px;\n            let y0Px;\n            let yPx;\n            const d = data[i];\n            const row = d.source;\n            if (xField) {\n                xPx = xAxis.getScaleValue(d.x) + offsetX;\n                x0Px = xPx + xSpan;\n            }\n\n            if (yField) {\n                yPx = yAxis.getScaleValue(d.y) + offsetY;\n                y0Px = yPx !== null ? yPx + ySpan : null;\n            }\n\n            if (!xField) {\n                xPx = 0;\n                x0Px = measurement.width;\n                if (!isNaN(yPx)) {\n                    yPx += ySpan / 2;\n                    y0Px = yPx;\n                }\n            }\n\n            if (!yField) {\n                yPx = 0;\n                y0Px = measurement.height;\n                x0Px = xPx += xSpan / 2;\n            }\n\n            if (x0Field) {\n                x0Px = xAxis.getScaleValue(d.x0) + xSpan;\n                yPx += ySpan / 2;\n                y0Px -= ySpan / 2;\n            }\n\n            if (y0Field) {\n                y0Px = yAxis.getScaleValue(d.y0) + ySpan;\n                xPx += xSpan / 2;\n                x0Px -= xSpan / 2;\n            }\n            const color = colorAxis.getColor(d.color);\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    x0: x0Px,\n                    y0: y0Px,\n                    color\n                },\n                data: d\n            }, i, data, layerInst);\n\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: {},\n                    update: {\n                        x: resolvedEncodings.x,\n                        y: resolvedEncodings.y,\n                        x0: resolvedEncodings.x0,\n                        y0: resolvedEncodings.y0\n                    },\n                    style: {\n                        stroke: resolvedEncodings.color\n                    },\n                    source: row,\n                    rowId: d.rowId,\n                    meta: getColorMetaInf(resolvedEncodings.color, colorAxis)\n                };\n                point.className = getIndividualClassName(d, i, data, layerInst);\n                points.push(point);\n                layerInst.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(layerInst, points);\n        return points;\n    }\n};\n\n/**\n * This layer is used to create small lines. The orientation of the line is determined by the positional\n * encoding properties x0 and y0. The mark type of the layer is ```tick```.\n *\n * @public\n *\n * @class\n * @module TickLayer\n * @extends BaseLayer\n */\nexport default class TickLayer extends PointLayer {\n\n    /**\n     *\n     *\n     * @staticg\n     *\n     * @memberof TickLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static formalName () {\n        return 'tick';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static drawFn () {\n        return drawTicks;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TickLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, config) {\n        return pointTranslators[this.coord()](data, config, this);\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0),\n                y: (offsetY || 0)\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n}\n","export const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { isSimpleObject, mergeRecursive, getObjProp } from 'muze-utils';\n\nconst parseLayerDefinition = (sink, definition, layerDef, layerType) => {\n    for (const key in definition) {\n        if (Object.hasOwnProperty.call(definition, key)) {\n            let strs;\n            let propValue;\n            const def = definition[key];\n            if (isSimpleObject(def)) {\n                sink[key] = {};\n                parseLayerDefinition(sink[key], def, layerDef, layerType);\n            } else if (typeof def === 'string' && (strs = def.split('.')) && strs[0] === layerType) {\n                propValue = getObjProp(layerDef, ...strs.slice(1, strs.length));\n                if (propValue !== undefined) {\n                    sink[key] = propValue;\n                }\n            } else {\n                sink[key] = def;\n            }\n        }\n    }\n};\n\nconst sanitizeEncoding = (encoding) => {\n    // Create object for each encoding value if encoding value is a string\n    for (const key in encoding) {\n        if (typeof encoding[key] === 'string') {\n            encoding[key] = {\n                field: encoding[key]\n            };\n        }\n    }\n};\n\n/**\n * Layer Factory creates layers based on the layer type. All types of layers needs to register in\n * the layer factory. For getting a layer instance, getLayer method needs to invoked with the\n * layerType and other arguments. It also registers the definition of composite layers.\n *\n * @public\n *\n * @module LayerFactory\n */\nconst layerFactory = (() => {\n    const compositeLayers = {};\n    const factoryObj = {\n        setLayerRegistry: (reg) => {\n            factoryObj._layerRegistry = reg;\n        },\n        getSerializedConf: (mark, layerDef) => {\n            let serializedDefs;\n            const defs = compositeLayers[mark];\n            const newConf = mergeRecursive({}, layerDef);\n\n                // If it is a composite layer then resolve all the definitions of each unit layer\n            if (defs) {\n                serializedDefs = defs.map((unitLayerDef) => {\n                    const sDef = {};\n                    parseLayerDefinition(sDef, unitLayerDef, newConf, mark);\n                    sanitizeEncoding(sDef.encoding);\n                    return sDef;\n                });\n            } else {\n                const encoding = newConf.encoding;\n                // Create object for each encoding value if encoding value is a string\n                sanitizeEncoding(encoding);\n                serializedDefs = newConf;\n            }\n\n            return serializedDefs;\n        },\n        getLayerInstance: (layerDef, ...params) => {\n            const layerRegistry = factoryObj._layerRegistry;\n            layerDef = !(layerDef instanceof Array) ? [layerDef] : layerDef;\n            const instances = layerDef.map((layerObj) => {\n                const layerConstructor = layerRegistry[layerObj.mark];\n                return layerConstructor.create(...params);\n            });\n            return instances.length === 1 ? instances[0] : instances;\n        },\n        getLayerClass: mark => factoryObj._layerRegistry[mark],\n        /**\n         * Registers a new composite layer definition in the layer factory.\n         *\n         * @public\n         *\n         * @param {string} layerType Mark type of the new composite layer.\n         * @param {Array} layerDefs Layer definitions of the composite layer.\n         */\n        composeLayers: (layerType, layerDefs) => {\n            compositeLayers[layerType] = layerDefs;\n        },\n        sanitizeLayerConfig: (layerDef) => {\n            const newConf = mergeRecursive({}, layerDef);\n            sanitizeEncoding(newConf.encoding);\n            return newConf;\n        }\n    };\n    return factoryObj;\n})();\n\nexport default layerFactory;\n","import layerFactory from './layer-factory';\n\nexport default layerFactory;\n","import { AreaLayer } from './layers/area';\nimport { ArcLayer } from './layers/arc';\nimport { LineLayer } from './layers/line';\nimport { TextLayer } from './layers/text';\nimport { PointLayer } from './layers/point';\nimport { BarLayer } from './layers/bar';\nimport { BaseLayer } from './base-layer';\nimport * as LAYER_TYPES from './enums/layer-types';\nimport { TickLayer } from './layers/tick';\n\nexport const DEFAULT_LAYERS = {\n    [LAYER_TYPES.AREA_LAYER]: AreaLayer,\n    [LAYER_TYPES.ARC_LAYER]: ArcLayer,\n    [LAYER_TYPES.LINE_LAYER]: LineLayer,\n    [LAYER_TYPES.TEXT_LAYER]: TextLayer,\n    [LAYER_TYPES.POINT_LAYER]: PointLayer,\n    [LAYER_TYPES.TICK_LAYER]: TickLayer,\n    [LAYER_TYPES.BAR_LAYER]: BarLayer,\n    [LAYER_TYPES.BASE_LAYER]: BaseLayer\n};\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Artboard.\n * Artboard merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module\n */\n\nexport default {\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * Interfaces for VisualGroup. Any new VisualGroup has to implement this class.\n * @class  SimpleGroup\n */\nclass SimpleGroup {\n\n    /**\n     * This method is used to set or get the DataModel instance.\n     *\n     * @param {DataModel | undefined} dataModel Instance of datamodel.\n\n     * @memberof  SimpleGroup\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to set or get the group specific configuration\n     * properties\n     *\n     * @param {Object | undefined} configObj The input configuration.\n     *                                or instance of visual group.\n     * @memberof  SimpleGroup\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to return a serialized representation of the\n     * instance's properties.\n     *\n     * @memberof  SimpleGroup\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to get or set the measurement object which houses\n     * layout properties like width and height.\n     *\n     * @param {Object  | undefined} mObj The measurement properties.\n     * @memberof  SimpleGroup\n     */\n    measurement () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n\nexport default SimpleGroup;\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: false\n    },\n    [ACTIONS.HOVER]: {\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.LONGTOUCH]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: true\n    },\n    [ACTIONS.TOUCHDRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: true\n    },\n    [ACTIONS.CLICK]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: false\n    }\n};\n","import {\n    FieldType,\n    getDependencyOrder,\n    getObjProp,\n    defaultValue,\n    objectIterator,\n    unionDomain,\n    makeElement,\n    DimensionSubtype,\n    toArray,\n    MeasureSubtype,\n    getNearestValue\n} from 'muze-utils';\nimport { layerFactory, ENCODING } from '@chartshq/visual-layer';\n\nexport const getDimensionMeasureMap = (layers, fieldsConfig) => {\n    const retinalEncodingsAndMeasures = {};\n\n    layers.forEach((layer) => {\n        const {\n            colorField,\n            sizeField,\n            shapeField,\n            xField,\n            yField\n        } = layer.encodingFieldsInf();\n        const measures = [xField, yField].filter(field => fieldsConfig[field] && fieldsConfig[field].def.type ===\n            FieldType.MEASURE);\n        [colorField, sizeField, shapeField].forEach((field) => {\n            if (getObjProp(fieldsConfig, field, 'def', 'type') === FieldType.DIMENSION && measures.length) {\n                !retinalEncodingsAndMeasures[field] && (retinalEncodingsAndMeasures[field] = []);\n                retinalEncodingsAndMeasures[field].push(...measures);\n            }\n        });\n    });\n\n    for (const key in retinalEncodingsAndMeasures) {\n        if ({}.hasOwnProperty.call(retinalEncodingsAndMeasures, key)) {\n            retinalEncodingsAndMeasures[key] = [...new Set(retinalEncodingsAndMeasures[key])];\n        }\n    }\n    return retinalEncodingsAndMeasures;\n};\n\nexport const transformDataModels = (transform, dataModel) => {\n    const dataModels = {};\n    for (const key in transform) {\n        if ({}.hasOwnProperty.call(transform, key)) {\n            const transformVal = transform[key];\n            dataModels[key] = transformVal(dataModel);\n        }\n    }\n\n    return dataModels;\n};\n\nexport const getLayerFromDef = (context, definition, existingLayer, namespaces) => {\n    let instances = existingLayer;\n    const dependencies = context._dependencies;\n    const metaInf = context.metaInf();\n    if (!existingLayer) {\n        instances = layerFactory.getLayerInstance(definition);\n        toArray(instances).forEach((inst, i) => {\n            inst.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: namespaces[i],\n                parentNamespace: metaInf.namespace\n            })\n                .dependencies(dependencies)\n                .store(context.store());\n        });\n    }\n    const layers = {};\n    const instanceArr = toArray(instances);\n    definition = toArray(definition);\n    definition.reduce((acc, def, idx) => {\n        const instance = instanceArr[idx];\n        instance.coord(context.coord());\n        instance.config(def);\n        instance.valueParser(context.valueParser());\n        instance.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        if (def.name) {\n            instance.alias(def.name);\n        }\n        layers[instance.alias()] = instance;\n        return acc;\n    }, {});\n    return layers;\n};\n\nexport const resolveEncodingTransform = (layerInst, store) => {\n    const encodingTransform = layerInst.config().encodingTransform || {};\n    const resolvable = encodingTransform.resolvable;\n    let depArr = [];\n    if (resolvable) {\n        const resolved = resolvable(store);\n        depArr = resolved.depArr;\n        layerInst.encodingTransform(resolved.fn);\n    } else if (encodingTransform instanceof Function) {\n        layerInst.encodingTransform(encodingTransform);\n    }\n    return depArr;\n};\n\nexport const sanitizeLayerDef = (layerDefs) => {\n    const sanitizedDefs = [];\n    layerDefs.forEach((layerDef, i) => {\n        const def = layerDef.def;\n        const mark = layerDef.mark;\n        if (!def) {\n            const sConf = layerFactory.getSerializedConf(layerDef.mark, layerDef);\n            if (!sConf.name) {\n                sConf.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push({\n                mark: layerDef.mark,\n                def: sConf\n            });\n        } else {\n            if (!def.name) {\n                def.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push(layerDef);\n        }\n    });\n    return sanitizedDefs;\n};\n\nexport const attachDataToLayers = (layers, dm, transformedDataModels) => {\n    layers.forEach((layer) => {\n        const dataSource = layer.config().source;\n        const dataModel = dataSource instanceof Function ? dataSource(dm) :\n            (transformedDataModels[dataSource] || dm);\n        if (layer.data() !== dataModel) {\n            layer.data(dataModel);\n        }\n    });\n};\n\nexport const attachAxisToLayers = (axes, layers, layerAxisIndex) => {\n    layers.forEach((layer) => {\n        const layerId = layer.id();\n        const axesObj = {};\n\n        objectIterator(axes, (key) => {\n            const axisInf = layerAxisIndex[layerId];\n            if (axisInf) {\n                const axisArr = axes[key] || [];\n                const axisIndex = axisInf[key] >= 0 ? axisInf[key] : axisArr.length - 1;\n                axes[key] && (axesObj[key] = defaultValue(axes[key][axisIndex]));\n            }\n        });\n        Object.keys(axesObj).length && layer.axes(axesObj);\n    });\n};\n\nconst { X, Y, RADIUS, ANGLE, ANGLE0, RADIUS0 } = ENCODING;\n\nexport const getLayerAxisIndex = (layers, fields) => {\n    const layerAxisIndex = {};\n    layers.forEach((layer) => {\n        const { axis, encoding } = layer.config();\n        const id = layer.id();\n        [X, Y, ANGLE, ANGLE0, RADIUS].forEach((type) => {\n            let index;\n            const specificField = getObjProp(encoding, type, 'field');\n            const encodingField = type === RADIUS ? defaultValue(specificField, getObjProp(encoding, RADIUS0, 'field'))\n                : getObjProp(encoding, type, 'field');\n            const field = defaultValue(getObjProp(axis, type), encodingField);\n            if (fields[type] && fields[type].length) {\n                index = fields[type].findIndex(fieldInst => fieldInst.getMembers().indexOf(field) !== -1);\n            } else {\n                index = 0;\n            }\n            !layerAxisIndex[id] && (layerAxisIndex[id] = {});\n            layerAxisIndex[id][type] = index;\n        });\n    });\n    return layerAxisIndex;\n};\n\nconst getValidDomain = (domain, domain1, encodingType, fieldType) => {\n    if (encodingType === ANGLE || encodingType === ANGLE0) {\n        return domain.concat(domain1.filter(d => domain.indexOf(d) === -1));\n    }\n    return unionDomain([domain, domain1], fieldType);\n};\n\nexport const unionDomainFromLayers = (layers, axisFields, layerAxisIndex, fieldsConfig) => {\n    let domains = {};\n    layers = layers.filter(layer => layer.getDataDomain() !== null);\n    layers.forEach((layer) => {\n        let domainValues = {};\n        const config = layer.config();\n        // const encoding = config.encoding;\n        const layerDomain = layer.getDataDomain();\n        const layerId = layer.id();\n\n        if (layerDomain !== null && config.calculateDomain !== false) {\n            domainValues = Object.entries(layerDomain);\n            domains = domainValues.reduce((fieldDomain, domain) => {\n                const encodingType = domain[0];\n                const axisIndex = layerAxisIndex[layerId][encodingType];\n                const field = getObjProp(axisFields, encodingType, axisIndex);\n                !fieldDomain[encodingType] && (fieldDomain[encodingType] = {});\n                const encodingDomain = fieldDomain[encodingType];\n                if (field) {\n                    const fieldStr = `${field}`;\n                    encodingDomain[fieldStr] = encodingDomain[fieldStr] || [];\n                    encodingDomain[fieldStr] = getValidDomain(encodingDomain[fieldStr],\n                        domain[1], encodingType, fieldsConfig[field.getMembers()[0]].def.subtype);\n                }\n                return fieldDomain;\n            }, domains);\n        }\n    });\n    return domains;\n};\n\nexport const renderLayers = (context, container, layers, measurement) => {\n    context._lifeCycleManager.notify({ client: layers, action: 'beforedraw', formalName: 'layer' });\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const orderedLayers = context.layers().sort((a, b) => a.config().order - b.config().order);\n    const layerParentGroup = makeElement(container, 'g', [1], `${classPrefix}-layer-group`);\n    const layerDepOrder = getDependencyOrder(context._layerDepOrder);\n    const groups = {};\n    makeElement(layerParentGroup, 'g', orderedLayers, null, {\n        update: (group, layer) => {\n            groups[layer.alias()] = {\n                group,\n                layer\n            };\n        }\n    });\n    const layerSeq = layerDepOrder.map(name => groups[name]);\n    layerSeq.forEach((o) => {\n        const layer = o.layer;\n        const group = o.group;\n        layer.measurement(measurement);\n        layer.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        layer.config().render !== false && layer.mount(group.node());\n    });\n    return this;\n};\n\nexport const getNearestDimensionalValue = (context, position) => {\n    const fields = context.fields();\n    if (!fields.x.length || !fields.y.length) {\n        return null;\n    }\n    const data = context.data();\n    const axes = context.axes();\n    const fieldsConfig = data.getFieldsConfig();\n    const xField = getObjProp(fields, 'x', 0).getMembers()[0];\n    const yField = getObjProp(fields, 'y', 0).getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n\n    const entryVal = [['x', xFieldType, xField], ['y', yFieldType, yField]].find(entry =>\n        entry[1] === DimensionSubtype.CATEGORICAL || entry[1] === DimensionSubtype.TEMPORAL);\n\n    if (!entryVal || (xFieldType !== MeasureSubtype.CONTINUOUS && yFieldType !== MeasureSubtype.CONTINUOUS)) {\n        return null;\n    }\n    const field = entryVal[2];\n    const index = fieldsConfig[field].index;\n    let key = axes[entryVal[0]][0].invert(position[entryVal[0]]);\n    if (entryVal[1] === DimensionSubtype.TEMPORAL) {\n        const filterData = [...new Set(data.getData().data.map(d => d[index]))];\n        key = getNearestValue(filterData, key);\n    }\n\n    return key !== undefined ? [[field], [key]] : null;\n};\n\nexport const getLayersBy = (layers, searchBy, value) => layers.filter((layer) => {\n    const name = searchBy === 'type' ? layer.constructor.formalName() : layer.alias();\n    return name === value;\n});\n\nexport const removeLayersBy = (layers, searchBy, value) => {\n    layers.filter((inst) => {\n        const name = searchBy === 'type' ? inst.config().mark : inst.alias();\n        if (name === value) {\n            inst.remove();\n            return false;\n        }\n        return true;\n    });\n};\n\nexport const createSideEffectGroup = (container, className) => makeElement(container, 'g', [1], className).node();\n\nexport const createRenderPromise = (unit) => {\n    const renderedPromise = unit._renderedPromise;\n    renderedPromise.then(() => {\n        unit._renderedPromise = new Promise((resolve) => {\n            unit._renderedResolve = resolve;\n        });\n        createRenderPromise(unit);\n    });\n};\n\nexport const getRadiusRange = (width, height, config = {}) => {\n    const {\n        innerRadius,\n        outerRadius\n    } = config;\n\n    return [innerRadius || 0, outerRadius || Math.min(height,\n        width) / 2];\n};\n\nexport const setAxisRange = (context) => {\n    const axes = context.axes();\n    const { radius: radiusAxes } = axes;\n    if (radiusAxes) {\n        radiusAxes.forEach((axis) => {\n            axis.range(getRadiusRange(context.width(), context.height()));\n        });\n    }\n};\n\nexport const isXandYMeasures = (context) => {\n    const { x: xFields, y: yFields } = context.fields();\n    const [xMeasures, yMeasures] = [xFields, yFields].map(fields => fields\n        .every(field => field.type() === FieldType.MEASURE));\n    return xMeasures && yMeasures;\n};\n\nconst getKey = (arr, row) => {\n    let key = row[arr[0]];\n    for (let i = 1, len = arr.length; i < len; i++) {\n        key = `${key},${row[arr[i]]}`;\n    }\n    return key;\n};\n\nexport const getValuesMap = (model, context) => {\n    const valuesMap = {};\n    const { data: dataArr, schema, uids } = model.getData();\n    const fieldsConfig = model.getFieldsConfig();\n    const fieldIndices = isXandYMeasures(context) ? schema.map((d, i) => i) :\n                            Object.keys(model.getFieldspace().getDimension()).map(d => fieldsConfig[d].index);\n    dataArr.forEach((row, i) => {\n        const key = getKey(fieldIndices, row);\n        valuesMap[key] = uids[i];\n    });\n    return valuesMap;\n};\n\nexport const getSelectionRejectionModel = (model, propModel, measures, propValuesMap) => {\n    let rejectionModel;\n    const { data, schema } = propModel.getData();\n    const entryRowIds = [];\n    const exitRowIds = [];\n\n    if (schema.length) {\n        const fieldMap = model.getFieldsConfig();\n        const rowIdsObj = {};\n        const filteredSchema = measures ? schema.map((d, idx) => idx) :\n            Object.keys(model.getFieldspace().getDimension()).map(d => fieldMap[d].index);\n        data.forEach((row) => {\n            const key = getKey(filteredSchema, row);\n            const id = propValuesMap[key];\n            if (key in propValuesMap) {\n                entryRowIds.push(id);\n                rowIdsObj[id] = 1;\n            }\n        });\n        rejectionModel = model.select((fields, i) => {\n            if (!rowIdsObj[i]) {\n                exitRowIds.push(i);\n                return true;\n            }\n            return false;\n        }, {\n            saveChild: false\n        });\n    } else {\n        rejectionModel = propModel;\n    }\n\n    return {\n        model: [propModel, rejectionModel],\n        entryRowIds,\n        exitRowIds\n    };\n};\n\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const GRID_LINE_PARENT_GROUP_CLASS = 'grid-lines';\nexport const GRID_BAND_PARENT_GROUP_CLASS = 'grid-bands';\nexport const GRID_PARENT_GROUP = 'grid-parent-group';\nexport const BAND = 'band';\nexport const TICK = 'tick';\nexport const GRID_BAND = 'gridBands';\nexport const GRID_LINE = 'gridLines';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const RETINAL_FIELDS = 'retinalFields';\nexport const PARENT_ALIAS = 'parentAlias';\nexport const LAYERS = 'layers';\nexport const CACHED_DATA = 'cachedData';\nexport const STORE = 'store';\n","import { getObjProp, defaultValue, makeElement, DimensionSubtype, DataModel, createSelection } from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { layerFactory, LAYER_TYPES } from '@chartshq/visual-layer';\nimport {\n    GRID_BAND,\n    GRID_LINE,\n    GRID_BAND_PARENT_GROUP_CLASS,\n    GRID_LINE_PARENT_GROUP_CLASS,\n    GRID_PARENT_GROUP\n} from '../enums/constants';\n\nconst { BAR_LAYER, TICK_LAYER } = LAYER_TYPES;\n\nconst LINEAR = ScaleType.LINEAR;\n\nconst getLayerDefinition = (context, axes, type, orientation) => {\n    let encoding;\n    const config = context.config();\n    const { classPrefix, gridLines, gridBands } = config;\n    const gridLineColor = gridLines.color;\n    const zeroLineColor = gridLines.zeroLineColor;\n    const defClassName = type === GRID_BAND ? gridBands.defClassName : gridLines.defClassName;\n    const gridBandColor = gridBands[orientation].color;\n    const axis = axes[orientation][0];\n    const isLinearScale = axis.constructor.type() === LINEAR;\n\n    if (type === GRID_BAND && isLinearScale) {\n        encoding = {\n            [orientation]: `${orientation}value`,\n            [`${orientation}0`]: `${orientation}value0`\n        };\n    } else {\n        encoding = {\n            [orientation]: isLinearScale ? `${orientation}value` : `${orientation}dim`\n        };\n    }\n    encoding.color = {\n        value: (data, i) => {\n            const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n            if (type === GRID_BAND) {\n                return gridBandColor[i % 2];\n            }\n            return isNegativeDomain && data[orientation] === 0 ? zeroLineColor : gridLineColor;\n        }\n    };\n    const { color, shape, size } = context.axes();\n    return {\n        definition: {\n            defClassName: `${defClassName}-${orientation}`,\n            className: config.className,\n            name: orientation,\n            calculateDomain: false,\n            individualClassName: (data, i) => {\n                let className;\n                const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n                if (isNegativeDomain && data.y === 0 && type !== GRID_BAND) {\n                    className = `${classPrefix}-axis-zero-line`;\n                } else {\n                    className = `${classPrefix}-grid-${type}-${orientation}-${i % 2}`;\n                }\n                return className;\n            },\n            [`pad${orientation.toUpperCase()}`]: type === GRID_BAND ? 0 : undefined,\n            encoding\n        },\n        axes: {\n            [orientation]: axis,\n            color: color[0],\n            shape: shape[0],\n            size: size[0]\n        },\n        interactive: false\n    };\n};\n\nconst getDefaultVisibilty = (show, axis) => {\n    if (axis.constructor.type() === LINEAR) {\n        return show;\n    }\n    return false;\n};\n\nexport const getGridLayerDefinitions = (context, config, type) => ['x', 'y'].map((axisType) => {\n    const axes = context.axes();\n    if (!axes[axisType]) {\n        return null;\n    }\n    const show = defaultValue(config[axisType] && config[axisType].show,\n        getDefaultVisibilty(config.show, axes[axisType][0]));\n\n    return show ? getLayerDefinition(context, axes, type, axisType) : null;\n}).filter(d => d !== null);\n\nconst dimensionSubTypes = Object.values(DimensionSubtype).reduce((acc, v) => {\n    acc[v] = 1;\n    return acc;\n}, {});\nconst getValidSubtype = subtype => (!dimensionSubTypes[subtype] ? DimensionSubtype.CATEGORICAL : subtype);\n\nexport const getGridLayerData = (axes, fields, fieldsConfig) => {\n    const gridData = {};\n\n    ['x', 'y'].forEach((type) => {\n        let ticks = axes[type][0].getTickValues();\n        const subtype = getObjProp(fieldsConfig, getObjProp(fields, type, 0).getMembers()[0], 'def', 'subtype');\n        const jsonData = [];\n        const schema = [\n            {\n                name: 'yvalue',\n                type: 'measure'\n            }, {\n                name: 'xvalue',\n                type: 'measure'\n            },\n            {\n                name: 'yvalue0',\n                type: 'measure'\n            }, {\n                name: 'xvalue0',\n                type: 'measure'\n            }, {\n                name: 'xdim',\n                type: 'dimension',\n                subtype: getValidSubtype(subtype)\n            }, {\n                name: 'ydim',\n                type: 'dimension',\n                subtype: getValidSubtype(subtype)\n            }\n        ];\n        const len = Math.max(ticks.length);\n        ticks = subtype === DimensionSubtype.TEMPORAL ? ticks.map(d => d.getTime()) : ticks;\n        for (let i = 0; i < len; i += 1) {\n            jsonData.push({\n                [`${type}value`]: ticks[i],\n                [`${type}value0`]: ticks[i + 1],\n                [`${type}dim`]: ticks[i],\n                [`${type}dim`]: ticks[i]\n            });\n        }\n        gridData[type] = new DataModel(jsonData, schema);\n    });\n    return gridData;\n};\n\nexport const createGridLineLayer = (context) => {\n    const vuConf = context.config();\n    const metaInf = context.metaInf();\n    const store = context.store();\n    const timeDiffs = context._timeDiffs;\n    [GRID_BAND, GRID_LINE].forEach((type) => {\n        let mark;\n        let config;\n        if (type === GRID_BAND) {\n            mark = BAR_LAYER;\n            config = vuConf.gridBands;\n        } else {\n            mark = TICK_LAYER;\n            config = vuConf.gridLines;\n        }\n        const definitions = getGridLayerDefinitions(context, config, type);\n\n        const sel = `_${type}Selection`;\n        context[sel] = createSelection(context[sel], (atomicDef) => {\n            const inst = layerFactory.getLayerInstance({ mark });\n            inst.dependencies(context._dependencies);\n            const name = atomicDef.definition.name;\n            inst.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: `${metaInf.namespace}${type}${name}`,\n                parentNamespace: metaInf.namespace\n            })\n                .store(store);\n            return inst;\n        }, definitions, atomicDef => atomicDef.definition.name);\n        context[sel].each((layer, atomicDef) => {\n            const definition = atomicDef.definition;\n            const sConf = layerFactory.getSerializedConf(mark, definition);\n            const axesObj = atomicDef.axes;\n            layer.config(sConf)\n                .dataProps({\n                    timeDiffs\n                })\n                .axes(axesObj);\n        });\n        context[`_${type}`] = context[sel].getObjects();\n    });\n};\n\nexport const attachDataToGridLineLayers = (context) => {\n    const axes = context.axes();\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n    if (gridLines.length || gridBands.length) {\n        const gridLayerData = getGridLayerData(axes, context.fields(), context.data().getFieldsConfig());\n        [].concat(...gridBands, ...gridLines).forEach((inst) => {\n            inst.data(inst.axes().x ? gridLayerData.x : gridLayerData.y);\n        });\n    }\n};\n\nexport const renderGridLineLayers = (context, container) => {\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n    const measurement = {\n        width: context.width(),\n        height: context.height()\n    };\n    const gridLineParentGroup = makeElement(container, 'g', [1], `${classPrefix}-${GRID_PARENT_GROUP}`);\n\n    [[gridLines, `${classPrefix}-${GRID_LINE_PARENT_GROUP_CLASS}`],\n            [gridBands, `${classPrefix}-${GRID_BAND_PARENT_GROUP_CLASS}`]].forEach((entry) => {\n                const [instances, parentGroupClass] = entry;\n                const mountPoint = makeElement(gridLineParentGroup, 'g', [1], `.${parentGroupClass}`);\n                const className = `${parentGroupClass}-group`;\n                makeElement(mountPoint, 'g', instances, `.${className}`, {\n                    update: (group, instance) => {\n                        instance.dataProps({ timeDiffs: context._timeDiffs })\n                            .measurement(measurement)\n                            .mount(group.node());\n                    }\n                });\n            });\n};\n","import { STATE_NAMESPACES, temporalFields, getObjProp, defaultValue } from 'muze-utils';\nimport * as PROPS from './enums/reactive-props';\nimport {\n    transformDataModels,\n    getDimensionMeasureMap,\n    attachDataToLayers,\n    attachAxisToLayers,\n    unionDomainFromLayers\n} from './helper';\n\nimport { createGridLineLayer } from './helper/grid-lines';\n\nconst removeExitLayers = (layerDefs, context) => {\n    const layersMap = context._layersMap;\n    const markSet = {};\n    layerDefs.forEach((layerDef, i) => {\n        const id = defaultValue(layerDef.name, `${layerDef.mark}-${i}`);\n        markSet[id] = true;\n    });\n\n    for (const key in layersMap) {\n        if (!(key in markSet)) {\n            layersMap[key].forEach(layer => layer.remove());\n            delete layersMap[key];\n        }\n    }\n};\n\nexport const calculateDomainListener = (context) => {\n    const { namespace } = context.metaInf();\n    const domain = unionDomainFromLayers(context.layers(), context.fields(), context._layerAxisIndex,\n        context.data().getFieldsConfig());\n    context.store().commit(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}`, domain, namespace);\n};\n\nexport const listenerMap = [\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.LAYERDEFS],\n        listener: (context, [, layerDefs]) => {\n            const fieldsVal = context.fields();\n            if (layerDefs && fieldsVal) {\n                removeExitLayers(layerDefs, context);\n                const queuedLayerDefs = context._queuedLayerDefs;\n                let layerDefArr = layerDefs;\n                queuedLayerDefs.forEach((defFn) => {\n                    layerDefArr = [...layerDefArr, ...defFn(layerDefs)];\n                });\n                context.addLayer(layerDefArr);\n                const adjustRange = context.layers().some(inst => inst.hasPlotSpan());\n                ['x', 'y'].forEach((type) => {\n                    const axisArr = defaultValue(getObjProp(context.axes(), type), []);\n                    axisArr.forEach((axis) => {\n                        axis.config({\n                            adjustRange\n                        });\n                    });\n                });\n                context._lifeCycleManager.notify({\n                    client: context.layers(),\n                    action: 'initialized',\n                    formalName: 'layer'\n                });\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.DATA],\n        listener: (context, [, dataModel]) => {\n            if (dataModel) {\n                const axesObj = context.axes();\n                const timeDiffs = {};\n                const timeDiffsByField = {};\n\n                Object.entries(temporalFields(dataModel)).forEach(([fieldName, fieldObj]) => {\n                    timeDiffsByField[fieldName] = fieldObj.minimumConsecutiveDifference();\n                });\n\n                Object.entries(context.fields()).forEach(([type, [field]]) => {\n                    if (field) {\n                        const timeDiff = timeDiffsByField[`${field}`];\n                        if (timeDiff) {\n                            timeDiffs[type] = timeDiff;\n                            axesObj[type].forEach(axis => axis.minDiff(timeDiff));\n                        }\n                    }\n                });\n\n                context._timeDiffsByField = timeDiffsByField;\n                context._timeDiffs = timeDiffs;\n                const firebolt = context.firebolt();\n                const originalData = context.cachedData()[0];\n                firebolt.createSelectionSet(context.data().getUids());\n                firebolt.attachPropagationListener(originalData);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.CONFIG],\n        listener: (context, [, config]) => {\n            if (config) {\n                context.firebolt().config(config.interaction);\n                createGridLineLayer(context);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.DATA, PROPS.TRANSFORM],\n        listener: (context, [, dataModel], [, transform]) => {\n            if (dataModel) {\n                const dataModels = transformDataModels(transform, dataModel);\n                const metaInf = context.metaInf();\n                context.store().commit(`${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${PROPS.TRANSFORMEDDATA}`,\n                    dataModels, metaInf.namespace);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.TRANSFORMEDDATA, PROPS.LAYERS],\n        listener: (context, [, transformedData], [, layers]) => {\n            const layerAxisIndexVal = context._layerAxisIndex;\n            const axesVal = context.axes();\n            const dataModel = context.data();\n            if (transformedData && layers && axesVal && layerAxisIndexVal) {\n                context._lifeCycleManager.notify({ client: layers, action: 'beforeupdate', formalName: 'layer' });\n                attachDataToLayers(layers, dataModel, transformedData);\n                context._dimensionMeasureMap = getDimensionMeasureMap(layers,\n                    dataModel.getFieldsConfig(), context.retinalFields());\n                attachAxisToLayers(axesVal, layers, layerAxisIndexVal);\n                context._lifeCycleManager.notify({ client: layers, action: 'updated', formalName: 'layer' });\n            }\n        }\n    }\n];\n","export const CONFIG = 'config';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const MOUNT = 'mount';\nexport const TRANSFORM = 'transform';\nexport const TRANSFORMEDDATA = 'transformedData';\nexport const DATADOMAIN = 'dataDomain';\nexport const FIELDS = 'fields';\nexport const LAYERAXISINDEX = 'layerAxisIndex';\nexport const LAYERS = 'layers';\nexport const DOMAIN = 'domain';\n\n","import { mergeRecursive } from 'muze-utils';\nimport { FACET_BY_FIELDS, RETINAL_FIELDS, PARENT_ALIAS, CACHED_DATA } from './enums/constants';\n\nexport const PROPS = {\n    [FACET_BY_FIELDS]: {},\n    [RETINAL_FIELDS]: {},\n    [PARENT_ALIAS]: {},\n    [CACHED_DATA]: {},\n    detailFields: {},\n    axes: {\n        defaultValue: {\n            x: [],\n            y: []\n        }\n    },\n    fields: {\n        defaultValue: {\n            x: [],\n            y: []\n        },\n        sanitization: (context, value) => mergeRecursive({\n            x: [],\n            y: []\n        }, value)\n    },\n    metaInf: {},\n    registry: {},\n    parentContainerInf: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    coord: {}\n};\n","import { DimensionSubtype } from 'muze-utils';\n\nconst getRangeFromData = (instance, selectionDataModel, propConfig) => {\n    let criteria;\n    const dataObj = selectionDataModel[0].getData();\n    const propCriteria = propConfig.payload.criteria;\n    const sourceIdentifiers = propConfig.sourceIdentifiers;\n    const schema = dataObj.schema;\n    const fieldMap = instance.data().getFieldsConfig();\n    const data = dataObj.data;\n    const isActionSourceSame = instance.id() === propConfig.sourceId;\n\n    if (isActionSourceSame) {\n        criteria = propCriteria;\n    } else {\n        criteria = (sourceIdentifiers !== null) ? schema.reduce((acc, obj, index) => {\n            let range;\n            const field = obj.name;\n            const fieldObj = fieldMap[field];\n            const type = fieldObj && (fieldObj.def.subtype ? fieldObj.def.subtype : fieldObj.def.type);\n            const isDimension = type === DimensionSubtype.CATEGORICAL;\n\n            if (!fieldObj) {\n                return acc;\n            }\n\n            if (!isDimension) {\n                range = [Math.min(...data.map(d => d[index])), Math.max(...data.map(d => d[index]))];\n            } else {\n                range = data.map(d => d[index]);\n            }\n            acc[field] = range;\n            return acc;\n        }, {}) : null;\n    }\n    return criteria;\n};\n\nexport const payloadGenerator = {\n    brush: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const criteria = getRangeFromData(instance, selectionDataModel, propConfig);\n        const payload = Object.assign({}, propPayload);\n        payload.criteria = criteria;\n        return payload;\n    },\n\n    __default: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const sourceIdentifiers = propConfig.sourceIdentifiers;\n        const dataObj = selectionDataModel[0].getData();\n        let schema = dataObj.schema;\n        const payload = Object.assign({}, propPayload);\n        schema = dataObj.schema;\n        const data = dataObj.data;\n        const sourceFields = schema.map(d => d.name);\n        payload.criteria = !sourceIdentifiers && selectionDataModel[0].isEmpty() ? null :\n            [sourceFields, ...data];\n        payload.sourceFields = sourceIdentifiers ? sourceIdentifiers.getSchema().map(d => d.name) : [];\n        return payload;\n    }\n};\n\n","import { isSimpleObject, FieldType, DataModel } from 'muze-utils';\n\nconst getModelWithFacetData = (dm, data) => {\n    const dataObj = dm.getData();\n    const schema1 = dataObj.schema;\n    const data1 = dataObj.data;\n    const jsonData = [];\n    const derivedSchema = data[0].map(d => ({\n        name: `${d}`,\n        type: FieldType.DIMENSION,\n        subtype: d.subtype()\n    }));\n    const dataAtFirstPos = data[1];\n\n    data1.forEach((d) => {\n        const tuple = {};\n        schema1.forEach((obj, i) => {\n            tuple[obj.name] = d[i];\n        });\n        derivedSchema.forEach((obj, i) => {\n            tuple[obj.name] = dataAtFirstPos[i];\n        });\n        jsonData.push(tuple);\n    });\n\n    return new DataModel(jsonData, [...schema1, ...derivedSchema]);\n};\n\nexport const propagateValues = (instance, action, config = {}) => {\n    let propagationData;\n    const payload = config.payload;\n    const selectionSet = config.selectionSet;\n    const propagationFieldInf = config.propagationFields[action] || {};\n    const propagationFields = propagationFieldInf.fields || [];\n    const append = propagationFieldInf.append;\n    const criteria = payload.criteria;\n    const context = instance.context;\n    const dataModel = context.cachedData()[0];\n    const sourceId = context.id();\n    const sideEfffects = instance.sideEffects();\n    const behaviourEffectMap = instance._behaviourEffectMap;\n    const mergedModel = selectionSet.mergedEnter.model;\n    const fieldsConfig = dataModel.getFieldsConfig();\n    payload.sourceUnit = sourceId;\n    payload.action = action;\n    payload.sourceCanvas = context.parentAlias();\n    const propagationBehaviourMap = instance._propagationBehaviourMap;\n    const propagationBehaviour = propagationBehaviourMap[action] || action;\n\n    let propFields = [];\n    if (criteria === null) {\n        propagationData = null;\n    } else if (isSimpleObject(criteria)) {\n        propFields = Object.keys(criteria || {});\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    } else {\n        propFields = criteria[0];\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    }\n\n    const facetByFields = context.facetByFields();\n    if (propagationData !== null && propagationFields.length) {\n        const fields = propagationData.getData().schema.map(d => d.name);\n        propagationData = getModelWithFacetData(propagationData, facetByFields);\n        propFields = append ? [...fields, ...propagationFields] : propagationFields;\n        propagationData = propagationData.project(propFields);\n    }\n\n    let propagateInterpolatedValues = false;\n    if (propFields.length && propFields.every(field => fieldsConfig[field] &&\n        fieldsConfig[field].def.type === FieldType.MEASURE)) {\n        propagateInterpolatedValues = true;\n    }\n\n    const groupId = context.parentAlias();\n    payload.action = action;\n    const behaviourInstance = instance._actions.behavioural[propagationBehaviour];\n    const isMutableAction = behaviourInstance ? behaviourInstance.constructor.mutates() : false;\n\n    const filterFn = (entry, propagationConf) => {\n        const effects = behaviourEffectMap[entry.config.action];\n        const mutates = entry.config.groupId ?\n            effects.some(d => sideEfffects[d.name || d].constructor.mutates()) : true;\n        return entry.config.groupId !== propagationConf.groupId && mutates;\n    };\n\n    const sourceBehaviour = instance._actions.behavioural[action];\n    const mutates = sourceBehaviour ? sourceBehaviour.constructor.mutates() : false;\n    let propConfig = {\n        payload,\n        action,\n        criteria: propagationData,\n        isMutableAction: mutates,\n        propagateInterpolatedValues,\n        groupId,\n        sourceId: mutates ? groupId : sourceId,\n        filterFn,\n        enabled: (propConf, firebolt) => (action !== propagationBehaviour ?\n            propConf.payload.sourceCanvas === firebolt.context.parentAlias() : true)\n    };\n\n    dataModel.propagate(propagationData, propConfig, true);\n\n    if (action !== propagationBehaviour) {\n        propConfig = {\n            payload,\n            sourceId: isMutableAction ? groupId : sourceId,\n            criteria: propagationData,\n            isMutableAction,\n            propagateInterpolatedValues,\n            action: propagationBehaviour,\n            groupId,\n            applyOnSource: action === propagationBehaviour,\n            enabled: (propConf, firebolt) => propConf.payload.sourceCanvas !== firebolt.context.parentAlias(),\n            filterFn\n        };\n\n        dataModel.propagate(propagationData, propConfig, true, {\n            filterImmutableAction: (actionInf, propInf) => actionInf.groupId !== propInf.groupId\n        });\n    }\n};\n","import { FieldType } from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\nimport { isXandYMeasures, getSelectionRejectionModel } from '../helper';\nimport { payloadGenerator } from './payload-generator';\nimport { propagateValues } from './data-propagator';\n\n/**\n * This class manages the interactions of visual unit. It associates physical actions with\n * behavioural actions. It also propagates the behavioural actions to other datamodels.\n */\nexport default class UnitFireBolt extends Firebolt {\n    propagate (behaviour, payload, selectionSet, sideEffects) {\n        propagateValues(this, behaviour, {\n            payload,\n            selectionSet,\n            sideEffects,\n            propagationFields: this._propagationFields\n        });\n    }\n\n    getApplicableSideEffects (sideEffects, payload, propagationInf) {\n        const context = this.context;\n        const unitId = context.id();\n        const aliasName = context.parentAlias();\n        const propagationSourceCanvas = propagationInf.propPayload && propagationInf.propPayload.sourceCanvas;\n        const sourceUnitId = propagationInf.propPayload && propagationInf.propPayload.sourceUnit;\n        const sourceSideEffects = this._sourceSideEffects;\n        const sideEffectInstances = this.sideEffects();\n        const actionOnSource = sourceUnitId ? sourceUnitId === unitId : true;\n\n        const applicableSideEffects = payload.sideEffects ? [{\n            effects: payload.sideEffects,\n            behaviours: [payload.action]\n        }] : sideEffects;\n        applicableSideEffects.forEach((d) => {\n            let mappedEffects = d.effects;\n            mappedEffects = mappedEffects.filter((se) => {\n                const mutates = sideEffectInstances[se.name || se].constructor.mutates();\n                if (mutates && propagationInf.isMutableAction === false) {\n                    return false;\n                }\n                if (!actionOnSource && payload.criteria !== null) {\n                    const sideEffectChecker = sourceSideEffects[se.name || se];\n                    return sideEffectChecker ? sideEffectChecker(propagationInf.propPayload, context) : true;\n                }\n                if (propagationSourceCanvas === aliasName || actionOnSource) {\n                    return se.applyOnSource !== false;\n                }\n\n                return true;\n            });\n            d.effects = mappedEffects;\n        });\n        return applicableSideEffects;\n    }\n\n    shouldApplySideEffects (propagate) {\n        return propagate === false;\n    }\n\n    onDataModelPropagation () {\n        return (data, config) => {\n            let isSourceFieldPresent = true;\n            let isMutableAction = false;\n            const context = this.context;\n            const {\n                model: propagationData,\n                entryRowIds,\n                exitRowIds\n            } = getSelectionRejectionModel(context.data(), data, isXandYMeasures(context), context._cachedValuesMap());\n            const propPayload = config.payload;\n            const sourceIdentifiers = config.sourceIdentifiers;\n            const enabledFn = config.enabled;\n            const action = config.action;\n            const payloadFn = payloadGenerator[action] || payloadGenerator.__default;\n\n            if (sourceIdentifiers) {\n                const fieldsConfig = sourceIdentifiers.getFieldsConfig();\n                const sourceIdentifierFields = Object.keys(fieldsConfig);\n                const propFields = Object.keys(propagationData[0].getFieldsConfig());\n                if (!Object.values(fieldsConfig).some(d => d.def.type === FieldType.MEASURE)) {\n                    isSourceFieldPresent = sourceIdentifierFields.some(d => propFields.indexOf(d) !== -1);\n                }\n            }\n\n            const payload = payloadFn(context, propagationData, config);\n            const sourceBehaviours = this._sourceBehaviours;\n            const filterFn = sourceBehaviours[action] || sourceBehaviours['*'];\n            let enabled = true;\n\n            if (filterFn) {\n                enabled = filterFn(propPayload || {}, context);\n            }\n\n            if (enabledFn) {\n                enabled = enabledFn(config, this) && enabled !== false;\n            }\n\n            if (enabled) {\n                const effects = this._behaviourEffectMap[action];\n                const sideEffectInstances = this.sideEffects();\n                isMutableAction = config.groupId ?\n                    effects.some(d => sideEffectInstances[d.name || d].constructor.mutates()) : config.isMutableAction;\n\n                const propagationInf = {\n                    propagate: false,\n                    data: propagationData,\n                    entryRowIds,\n                    exitRowIds,\n                    propPayload,\n                    sourceIdentifiers,\n                    persistent: false,\n                    isSourceFieldPresent,\n                    sourceId: config.propagationSourceId,\n                    isMutableAction: config.isMutableAction\n                };\n\n                this._actionHistory[action] = {\n                    payload,\n                    propagationInf,\n                    isMutableAction\n                };\n                this.dispatchBehaviour(action, payload, propagationInf);\n            }\n        };\n    }\n\n    prepareSelectionSets (behaviours) {\n        const data = this.context.data();\n        if (data) {\n            this.createSelectionSet(data.getData().uids, behaviours);\n        }\n        return this;\n    }\n\n    remove () {\n        this.context.cachedData()[0].unsubscribe('propagation');\n        return this;\n    }\n}\n","import { SpawnableSideEffect } from '@chartshq/muze-firebolt';\n\nexport const initSideEffects = (sideEffects, firebolt) => {\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            sideEffects[key] instanceof SpawnableSideEffect && sideEffects[key].drawingContext(() => {\n                const context = firebolt.context;\n                return context.getDrawingContext();\n            });\n            sideEffects[key].valueParser(firebolt.context.valueParser());\n        }\n    }\n};\n\nexport const clearActionHistory = (context) => {\n    const actionHistory = context._actionHistory;\n    for (const key in actionHistory) {\n        if (actionHistory[key].isMutableAction) {\n            delete context._actionHistory[key];\n        }\n    }\n};\n\nexport const dispatchQueuedSideEffects = (context) => {\n    const queuedSideEffects = context._queuedSideEffects;\n    Object.entries(queuedSideEffects).forEach((entry) => {\n        const sideEffect = entry[1];\n        context.dispatchSideEffect(sideEffect.name, ...sideEffect.params);\n    });\n    context._queuedSideEffects = {};\n};\n","import { CLASSPREFIX, CONSOLIDATED } from './enums/constants';\n\n/**\n * Returns the default configuration of the visual unit\n * @return {Object} Default configuration of visual unit\n */\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'visual-unit',\n    className: '',\n    trackerClassName: 'visual-unit-tracker',\n    minOuterRadius: 10,\n    gridLines: {\n        defClassName: 'axis-grid-lines',\n        className: '',\n        show: true,\n        color: '#efefef',\n        zeroLineColor: '#b6b6b6'\n    },\n    gridBands: {\n        defClassName: 'axis-grid-bands',\n        className: '',\n        show: false,\n        y: {\n            color: ['#fff', '#fbfbfb']\n        },\n        x: {\n            color: ['#fff', '#f9f9f9']\n        }\n    },\n    arcLayerClassName: 'layer-arc',\n    interaction: {\n        tooltip: {\n            mode: CONSOLIDATED\n        }\n    },\n    sideEffectClassName: 'side-effect-container'\n};\n","import { mergeRecursive, DataModel } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { CONFIG, LAYERDEFS, TRANSFORM, DATA, LAYERS, TRANSFORMEDDATA } from './enums/reactive-props';\nimport { sanitizeLayerDef, getValuesMap } from './helper';\n\nexport default {\n    [CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig) => (\n                mergeRecursive(oldConfig || mergeRecursive({}, defaultConfig), config)\n            )\n        }\n    },\n    [LAYERDEFS]: {\n        value: null,\n        meta: {\n            preset: layerDef => sanitizeLayerDef(layerDef)\n        }\n    },\n    [TRANSFORM]: {\n        value: null\n    },\n    [LAYERS]: {\n        value: null\n    },\n    [DATA]: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel,\n            preset: (data, context) => {\n                context._cachedValuesMap = ((model) => {\n                    let valuesMap = null;\n                    return () => {\n                        if (valuesMap) {\n                            return valuesMap;\n                        }\n                        valuesMap = getValuesMap(model, context);\n                        return valuesMap;\n                    };\n                })(data);\n                if (context._cache) {\n                    const cachedData = context.cachedData();\n                    context.cachedData([...cachedData, data]);\n                } else {\n                    const oldData = context.cachedData()[0];\n                    oldData && oldData.unsubscribe('propagation');\n                    context.cachedData([data]);\n                }\n            }\n        }\n    },\n    [TRANSFORMEDDATA]: {\n        value: null\n    },\n    width: {\n        value: null\n    },\n    height: {\n        value: null\n    }\n};\n","import { layerFactory } from '@chartshq/visual-layer';\nimport {\n    setAttrs,\n    getUniqueId,\n    getQualifiedClassName,\n    selectElement,\n    transactor,\n    makeElement,\n    generateGetterSetters,\n    getDataModelFromIdentifiers,\n    isSimpleObject,\n    transposeArray,\n    CommonProps,\n    toArray,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { actionBehaviourMap } from './firebolt/action-behaviour-map';\nimport {\n    renderLayers,\n    getNearestDimensionalValue,\n    removeLayersBy,\n    getLayersBy,\n    getLayerFromDef,\n    getLayerAxisIndex,\n    sanitizeLayerDef,\n    createSideEffectGroup,\n    resolveEncodingTransform,\n    createRenderPromise,\n    setAxisRange\n} from './helper';\nimport { renderGridLineLayers, attachDataToGridLineLayers } from './helper/grid-lines';\nimport { calculateDomainListener, listenerMap } from './listener-map';\nimport { PROPS } from './props';\nimport UnitFireBolt from './firebolt';\nimport { initSideEffects, dispatchQueuedSideEffects, clearActionHistory } from './firebolt/helper';\nimport './styles.scss';\nimport localOptions from './local-options';\nimport { WIDTH, HEIGHT } from './enums/reactive-props';\n\nconst FORMAL_NAME = 'unit';\nconst unitNs = [STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE, STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE];\nconst groupNs = STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE;\n\n/**\n * Visual Unit is hierarchical component created by {@link VisualGroup}. This component accepts layer definitions\n * and creates concrete layer instances from them, binds data and attaches axis to them. It also retreives the domain\n * from the layers and unions them and sets them on corresponding axis instances. This also creates the parent svg\n * groups for all the layers and delegates the rendering to all the layers.\n *\n * @public\n * @module VisualUnit\n * @class\n */\nexport default class VisualUnit {\n\n    /**\n     * Creates instance of visualization unit.\n     *\n     * @param {Object} registry  Component registry\n     * @param {Object} dependencies  Dependencies required by visual unit.\n     */\n    constructor (registry, dependencies) {\n        this._id = getUniqueId();\n        this._dependencies = dependencies;\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        createRenderPromise(this);\n        this._lifeCycleManager = dependencies.lifeCycleManager;\n        this._layersMap = {};\n        this._gridLinesSelection = null;\n        this._gridBandsSelection = null;\n        this._gridLines = [];\n        this._gridBands = [];\n        this._layerAxisIndex = {};\n        this._queuedLayerDefs = [];\n        layerFactory.setLayerRegistry(registry.layerRegistry);\n        generateGetterSetters(this, PROPS);\n        this.registry(registry);\n        this.cachedData([]);\n    }\n\n    static formalName () {\n        return FORMAL_NAME;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: null\n            },\n            Object.keys((localOptions)).reduce((acc, v) => {\n                acc[v] = localOptions[v].value;\n                return acc;\n            }, {})\n        ];\n    }\n\n    static getQualifiedStateProps () {\n        const unitState = VisualUnit.getState();\n        return unitState.map((state, i) => Object.keys(state).map(prop => `${unitNs[i]}.${prop}`));\n    }\n\n    static getListeners () {\n        return {\n            store: [...listenerMap.map((d) => {\n                const o = Object.assign({}, d);\n                const localNs = unitNs[1];\n                o.props = o.props.map(prop => `${localNs}.${prop}`);\n                return o;\n            }), {\n                type: 'registerImmediateListener',\n                props: [`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.domain`],\n                listener: calculateDomainListener\n            }, {\n                type: 'registerImmediateListener',\n                props: [`${unitNs[1]}.${WIDTH}`,\n                    `${unitNs[1]}.${HEIGHT}`,\n                    ...['x', 'y'].map(type => `${groupNs}.domain.${type}`)],\n                listener: (context, [, width], [, height]) => {\n                    if (width && height) {\n                        attachDataToGridLineLayers(context);\n                    }\n                },\n                subNamespace: (context) => {\n                    const { rowIndex, colIndex, namespace } = context.metaInf();\n                    return {\n                        [`${unitNs[1]}.${WIDTH}`]: namespace,\n                        [`${unitNs[1]}.${HEIGHT}`]: namespace,\n                        [`${groupNs}.domain.x`]: `${colIndex}0`,\n                        [`${groupNs}.domain.y`]: `${rowIndex}0`\n                    };\n                }\n            }],\n            throwback: [\n                {\n                    type: 'registerChangeListener',\n                    props: [CommonProps.ON_LAYER_DRAW],\n                    listener: (context, [, drawn]) => {\n                        if (drawn) {\n                            const firebolt = context.firebolt();\n                            dispatchQueuedSideEffects(firebolt);\n                            clearActionHistory(firebolt);\n                        }\n                        context._renderedResolve();\n                        context._lifeCycleManager.notify({\n                            client: context.layers(),\n                            action: 'drawn',\n                            formalName: 'layer'\n                        });\n                    }\n                }\n            ]\n        };\n    }\n\n    store (...params) {\n        if (params.length) {\n            const store = this._store = params[0];\n            const { throwback, fireboltDeps } = this._dependencies;\n            const { namespace } = this.metaInf();\n\n            store.addSubNamespace(namespace, FORMAL_NAME, this);\n            throwback.addSubNamespace(namespace, FORMAL_NAME, this);\n            transactor(this, localOptions, store, {\n                subNamespace: namespace,\n                namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}`\n            });\n\n            this.firebolt(new UnitFireBolt(this, {\n                physical: Object.assign({}, physicalActions, fireboltDeps.physicalActions),\n                behavioural: Object.assign({}, behaviouralActions, fireboltDeps.behaviouralActions),\n                physicalBehaviouralMap: actionBehaviourMap\n            }, Object.assign({}, sideEffects, fireboltDeps.sideEffects), behaviourEffectMap));\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Static helper for creates a unit instance\n     *\n     * @param {Object} [id] optional unique identifier for a unit; , id is calculated internally\n     * @param {DataModel} data instance of datamodel\n     * @param {Array.<Layer>} layers layer configuration\n     * @param {Object} config configurtion for the visual unit\n     * @return {VisualUnit} Instance of a unit\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this visual unit. Firebolt dispatches the behavioural actions\n     * when any physical action happens on the elements of visual unit.\n     *\n     * @public\n     *\n     * @return {Firebolt} Instance of firebolt.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Returns the unique id of this visual unit.\n     *\n     * @public\n     * @return {string} Unique identifier.\n     */\n    id () {\n        return this._id;\n    }\n\n    lockModel () {\n        this.store().lockModel();\n        return this;\n    }\n\n    unlockModel () {\n        this.store().unlockModel();\n        return this;\n    }\n\n    timeDiffsByField (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._timeDiffsByField;\n    }\n\n    /**\n     * Renders the visual unit. It creates the layout and renders the axes and layers.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    render (container) {\n        const config = this.config();\n        const { className, defClassName, sideEffectClassName, classPrefix } = config;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const width = this.width();\n        const height = this.height();\n        const containerSelection = selectElement(container).style('position', 'relative');\n\n        this._rootSvg = makeElement(containerSelection, 'svg', [null], className)\n                        .style('width', `${width}px`).style('height', `${height}px`);\n\n        const node = this._rootSvg.node();\n        setAttrs(node, {\n            width,\n            height,\n            class: qualifiedClassName.join(' ')\n        });\n\n        setAxisRange(this);\n        renderGridLineLayers(this, node);\n        renderLayers(this, node, this.layers(), {\n            width,\n            height\n        });\n        this._sideEffectGroup = createSideEffectGroup(node, `${classPrefix}-${sideEffectClassName}`);\n        const firebolt = this.firebolt();\n        initSideEffects(firebolt.sideEffects(), firebolt);\n        return this;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Caches all the datamodels in an array from the next `data()` call on visual unit until `clearCaching()` or\n     * `resetData()` is called on it.\n     *\n     * @public\n     * @return {VisualUnit} Instance of visual unit.\n     */\n\n    enableCaching () {\n        this._cache = true;\n        return this;\n    }\n\n    /**\n     * Clears all the previous cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    clearCaching () {\n        this._cache = false;\n        this.cachedData([this.cachedData()[0]]);\n        return this;\n    }\n\n    /**\n     * Returns the drawing information from visual unit.Drawing context contains the dimensions of unit and the svg\n     * container of the visual unit.\n     *\n     * @public\n     *\n     * @return {Object} Drawing information.\n     *      ```\n     *          {\n     *              htmlContainer: // Html container of svg container of the visual unit\n     *              svgContainer: // Root svg container\n     *              width: // Width of the visual unit\n     *              height: // Height of the visual unit\n     *              sideEffectGroup: // Svg group for drawing side effect elements.\n     *              parentContainer: // Parent html container of the visual unit.\n     *              xOffset: // x offset space from the starting x position of the container,\n     *              yOffset: // y offset space from the starting y position of the container\n     *          }\n     *      ```\n     */\n    getDrawingContext () {\n        const rootSvg = this._rootSvg && this._rootSvg.node();\n        const width = this.width();\n        const height = this.height();\n        const { el, dimensions } = this.parentContainerInf();\n        return {\n            htmlContainer: this.mount(),\n            svgContainer: rootSvg,\n            width,\n            height,\n            sideEffectGroup: this._sideEffectGroup,\n            parentContainer: el,\n            parentContainerDimensions: dimensions,\n            xOffset: 0,\n            yOffset: 0\n        };\n    }\n\n    /**\n     * Returns the serialized configuration of visual unit.\n     *\n     * @return {Object} serialized configuration\n     */\n    serialize () {\n        return {\n            layers: this.layers().map(layer => layer.serialize()),\n            config: this.config(),\n            axes: this.axes().map(axis => axis.serialize())\n        };\n    }\n\n    mount (...mount) {\n        if (mount.length) {\n            this._mount = mount[0];\n            this.render(mount[0]);\n            this.firebolt().mapActionsAndBehaviour();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     * Adds a new layer to the visual unit. It takes a layer definition and creates layer instances from them. It does\n     * not render the layers. It returns the layer instances in an array. If the layer definition is a composite layer,\n     * then multiple layer instances will be returned in the array.\n     *\n     * To add a layer in the unit,\n     * ```\n     *      unit.addLayer({\n     *          name: 'bullet',\n     *          mark: 'bar',\n     *          encoding: {\n     *              x: 'Year',\n     *              y: 'Acceleration',\n     *              color: 'Origin'\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} layerDef Definition of new layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    addLayer (layerDefinition) {\n        if (layerDefinition instanceof Function) {\n            this._queuedLayerDefs.push(layerDefinition);\n            return this;\n        }\n        const layerDefinitions = sanitizeLayerDef(toArray(layerDefinition));\n\n        const layersMap = this._layersMap;\n        const markSet = {};\n        const store = {\n            layers: {},\n            components: {\n                unit: this\n            }\n        };\n        let layerIndex = 0;\n        const metaInf = this.metaInf();\n        const layers = layerDefinitions.sort((a, b) => a.order - b.order).reduce((layersArr, layerDef) => {\n            const definition = layerDef.def;\n            const markId = definition.name;\n            const defArr = toArray(definition);\n            const namespaces = [];\n            defArr.forEach((def) => {\n                def.order = layerDef.order + layerIndex;\n                const namespace = `${metaInf.namespace}-${def.mark}-${getUniqueId()}`;\n                namespaces.push(namespace);\n            });\n            layerIndex += defArr.length;\n            const instances = getLayerFromDef(this, definition, layersMap[markId], namespaces);\n            store.layers = Object.assign(store.layers, instances);\n            const instanceValues = Object.values(instances);\n            layersArr = layersArr.concat(...instanceValues);\n            layersMap[markId] = instanceValues;\n            markSet[markId] = markId;\n            return layersArr;\n        }, []);\n\n        store.unit = this;\n        const layerdeps = {};\n        const layersArr = [].concat(...Object.values(this._layersMap));\n        layersArr.forEach((layer) => {\n            const alias = layer.alias();\n            store.layers[alias] = layer;\n            layerdeps[alias] = [];\n        });\n        layers.forEach((layer) => {\n            const depArr = resolveEncodingTransform(layer, store);\n            layerdeps[layer.alias()] = depArr;\n        });\n\n        this._layerDepOrder = layerdeps;\n        this._layerAxisIndex = Object.assign(this._layerAxisIndex, getLayerAxisIndex(layers, this.fields()));\n        this.layers(layersArr);\n        return layers;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    remove () {\n        const formalName = this.constructor.formalName();\n        const { lifeCycleManager, throwback } = this._dependencies;\n        const { namespace } = this.metaInf();\n        lifeCycleManager.notify({ client: this, action: 'beforeremove', formalName: 'unit' });\n        const layers = this.layers();\n        this.store().removeSubNamespace(namespace, formalName);\n        throwback.removeSubNamespace(namespace, FORMAL_NAME);\n        selectElement(this.mount()).remove();\n        this.firebolt().remove();\n        // Remove layers\n        lifeCycleManager.notify({ client: layers, action: 'beforeremove', formalName: 'layer' });\n        [...layers, ...this._gridLines, ...this._gridBands].forEach(layer => layer.remove());\n        lifeCycleManager.notify({ client: layers, action: 'removed', formalName: 'layer' });\n        lifeCycleManager.notify({ client: this, action: 'removed', formalName: 'unit' });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} identifiers\n     *\n     * @memberof VisualUnit\n     */\n    getDataModelFromIdentifiers (identifiers, mode, parentModel) {\n        if (identifiers === null) {\n            return null;\n        }\n        const dataModel = parentModel || this.data();\n        return getDataModelFromIdentifiers(dataModel, identifiers, mode);\n    }\n\n    /**\n     * Resets the data of visual unit to original data model. It also clears the cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    resetData () {\n        this.data(this.cachedData()[0]);\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getSourceInfo () {\n        return {\n            dimensionMeasureMap: this._dimensionMeasureMap,\n            fields: this.fields(),\n            data: this.data(),\n            axes: this.axes()\n        };\n    }\n\n    getDataDomain () {\n        return this.store().get(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`, this.metaInf().namespace);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getDefaultTargetContainer () {\n        const { classPrefix, defClassName } = this.config();\n        return [`.${classPrefix}-${defClassName}`];\n    }\n\n    /**\n     * Returns an array of layer instances which matches the supplied mark type.\n     *\n     * @public\n     *\n     * @param {string} type Mark type of layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    getLayersByType (type) {\n        const layers = getLayersBy(this.layers(), 'type', type);\n        return layers;\n    }\n\n    /**\n     * Returns the layer instance which matches the supplied layer name. If no layer is found, then it returns\n     * undefined.\n     *\n     * @public\n     * @param {string} name Name of layer.\n     *\n     * @return {VisualUnit} Layer instance.\n     */\n    getLayerByName (name) {\n        const layers = getLayersBy(this.layers(), 'name', name);\n        return layers[0];\n    }\n\n    /**\n     * Returns the point located nearest to the supplied x and y position. It returns the unique identifiers of the\n     * point. This function also accepts an additional configuration `getAllPoints` inside `config` object in the third\n     * argument which if set to true, then it returns the identifiers of all the points which falls on the nearest\n     * x value or y value if any one of the field is a dimension. Additionally, a target property is also returned\n     * which contains the identifier of the nearest point. If no nearest point is found, then it returns identifier\n     * as null.\n     *\n     * @public\n     *\n     * @param {number} x X Position of the point from where nearest point is to be found.\n     * @param {number} y Y Position of the point from where nearest point is to be found.\n     * @param {Object} config Additional configuration options.\n     * @param {boolean} config.getAllPoints If true, then returns all the points nearest to the x value or y value if\n     * it is dimension.\n     * @param {Object} config.data Data associated with the nearest point.\n     * @return {Object} Nearest point information\n     * ```\n     *      {\n     *          id: [['Origin'], ['USA'], ['Japan']], // Identifiers of all the points closest to the x value.\n     *          target: [['Origin'], ['Japan']] // Identifier of the nearest point.\n     *      }\n     * ```\n     */\n    getNearestPoint (x, y, config) {\n        let pointObj = {\n            id: null\n        };\n        const dimValue = getNearestDimensionalValue(this, {\n            x,\n            y\n        });\n\n        if (dimValue !== null && config.getAllPoints) {\n            pointObj.id = dimValue;\n            const pointInf = this.getMarkInfFromLayers(x, y, config);\n            pointObj.target = pointInf && pointInf.id ? pointInf.id : pointObj.id;\n            return pointObj;\n        }\n\n        const markInf = this.getMarkInfFromLayers(x, y, config) || { id: null };\n        pointObj = Object.assign({}, markInf);\n\n        pointObj.target = markInf.id;\n        return pointObj;\n    }\n\n    getMarkInfFromLayers (x, y, args) {\n        const layers = this.layers();\n        const len = layers.length;\n        let point = null;\n        // Iterate through the layers array and fetch the nearest point from each layer. If a valid\n        // nearest point is found from any layer, then return that point.\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            const config = layer.config();\n            if (config.interactive !== false) {\n                point = layer.getNearestPoint(x, y, args);\n            }\n            if (point) {\n                return point;\n            }\n        }\n        return point;\n    }\n\n    /**\n     * Get the information of all the marks such as x, y position and size from supplied identifiers. It\n     * returns an array of points whose data matches the given identifiers.\n     *\n     * @public\n     *\n     * @param {Array|Object} identifiers Field names and their corresponding values.\n     * ```\n     * identifiers can be given in an array of array,\n     *      ['Origin', 'Name'], // Names of the fields supplied in first array\n     *      ['USA', 'ford'], // Data values of each field supplied in rest of the arrays.\n     *      ['Japan', 'ford']\n     * or in an object,\n     *      {\n     *          Origin: ['USA']\n     *      }\n     * ```\n     * @param {Object} config Optional configurations which decides which information of the mark will\n     * be retrieved.\n     * @param {boolean} [config.getAllAttrs = false] If true, then returns all the information of each mark.\n     * @param {boolean} [config.getBBox = false] If true, then returns the bounding box of each mark.\n     *\n     * @return {Array} Array of objects containing the information of each point.\n     * ```\n     * By default, the method returns the array of points in this structure,\n     *      [\n     *          {\n     *              x: 20,\n     *              y: 100,\n     *              width: 200,\n     *              height: 100\n     *          }\n     *      ]\n     * If 'config.getAllAttrs' is true, then it returns all the information of each mark,\n     *      [\n     *      // Positions of mark on initial state of transition.\n     *          enter: {\n     *              x: 0,\n     *              y: 0\n     *          },\n     *          // Final positions of the mark\n     *          update: {\n     *              x: 20,\n     *              y: 10\n     *          },\n     *          style: // css styles of each mark\n     *          source: [200, 'USA'] // Row information of each mark\n     *          id: 20 // Row id of each mark\n     *      ]\n     * ```\n     */\n    getPlotPointsFromIdentifiers (identifiers, config = {}) {\n        let points = [];\n        let parsedIdentifiers = identifiers;\n        if (identifiers === null) {\n            return [];\n        }\n        const layers = this.layers();\n        const len = layers.length;\n        if (isSimpleObject(identifiers)) {\n            parsedIdentifiers = [Object.keys(identifiers)];\n            parsedIdentifiers = [...parsedIdentifiers, ...transposeArray(Object.values(identifiers))];\n        }\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            if (layer.config().interactive !== false) {\n                points = [...points, ...layer.getPointsFromIdentifiers(parsedIdentifiers, config)];\n            }\n        }\n        return points;\n    }\n\n    /**\n     * Removes the layer instance which matches the supplied layer name.\n     *\n     * @public\n     * @param {string} name Name of layer\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayerByName (name) {\n        removeLayersBy('name', name);\n        return this;\n    }\n\n    /**\n     * Removes all the layer instances which matches the supplied mark type.\n     *\n     * @public\n     * @param {string} type Mark type of layer.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayersByType (type) {\n        removeLayersBy('type', type);\n        return this;\n    }\n}\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n *\n *\n * @export\n * @class Variable\n */\nexport default class Variable {\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    type () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    toString () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n}\n","import Variable from './variable';\n\n/**\n * This is a wrapper on top of multiple variables which are of same type but they are shown in the same axis.This is\n * required in case of range plots or ohlc plots where one plot is mapped to multiple measure fields. At that time,\n * we need to create a composed variable from multiple variables. This class just wraps them into one variable instance\n * and provides methods to get the type and other common functionalities which can be performed on a simple variable\n * instance.\n *\n * @public\n * @class ComposeVars\n */\nclass ComposedVars extends Variable {\n\n    /**\n     * Creates an instance of ComposeVars.\n     *\n     * @param {Array} vars Array of SimpleVars.\n     */\n    constructor (...vars) {\n        super();\n        this.vars(vars);\n    }\n\n    vars (...params) {\n        if (params.length) {\n            this._vars = params[0];\n            return this;\n        }\n        return this._vars;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this.vars().forEach(d => d.data(dm[0]));\n            this._data = dm[0];\n            return this;\n        }\n        return this._data;\n    }\n\n    /**\n     * Get all the field names from composed variable instance.\n     *\n     * @public\n     * @return {Array} Array of field names.\n     */\n    getMembers () {\n        const vars = this.vars();\n        return vars.map(member => member.getMembers()[0]);\n    }\n\n    /**\n     * Type of field associated with this composed variable.\n     *\n     * @return {string} Type of variable (Measure/Dimension).\n     */\n    type () {\n        return this.vars()[0].type();\n    }\n\n    toString () {\n        return this.vars().map(d => d.toString()).join(',');\n    }\n\n    /**\n     * Returns the number formatter function of the variable.\n     *\n     * @return {Function} Number formatter function of the variable.\n     */\n    numberFormat () {\n        return this.vars()[0].numberFormat();\n    }\n\n    format (values) {\n        return this.vars()[0].format(values);\n    }\n\n    /**\n     * Returns the subtype of the fields associated with this variable instance.\n     *\n     * @public\n     * @return {string} Subtype of the variable.\n     */\n    subtype () {\n        return this.vars()[0].subtype();\n    }\n\n    /**\n     * Returns the consecutive minimum difference of the field values.\n     *\n     * @public\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        return this.vars()[0].getMinDiff();\n    }\n\n    /**\n     * Returns the display name of the fields.\n     *\n     * @return {string} returns the display name.\n     */\n    displayName () {\n        return this.vars().map(d => d.displayName()).join(',');\n    }\n}\n\nexport default ComposedVars;\n","import { DateTimeFormatter, retrieveFieldDisplayName, DimensionSubtype } from 'muze-utils';\nimport Variable from './variable';\n\n/**\n * This is a wrapper on top of fields passed in rows or columns in canvas. This is used to get the type of field or\n * get min difference from the field values.\n *\n * @public\n * @class SimpleVariable\n */\nexport default class SimpleVariable extends Variable {\n\n    /**\n     * Creates an instance of simple variable instance.\n     *\n     * @param {string} name Field name.\n     */\n    constructor (name) {\n        super();\n        this.oneVar(name);\n    }\n\n    /**\n     * Gets the field name associated with this variable instance.\n     *\n     * @public\n     * @return {string} Name of the field.\n     */\n    oneVar (...oneV) {\n        if (oneV.length) {\n            this._oneVar = oneV[0];\n            return this;\n        }\n        return this._oneVar;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this._data = dm[0];\n            return this;\n        }\n        return this._data;\n    }\n\n    toString () {\n        return this.oneVar();\n    }\n\n    /**\n     * Gets the number formatter function of this variable.\n     *\n     * @public\n     * @return {Function} Number formatter function.\n     */\n    numberFormat () {\n        if (this.type() === 'measure') {\n            const formatter = this.data().getFieldspace().getMeasure()[this.oneVar()];\n            return formatter.numberFormat();\n        } return val => val;\n    }\n\n    format (values) {\n        if (values && this.subtype() === 'temporal') {\n            const formatter = this.data().getFieldspace().getDimension()[this.oneVar()].schema().format;\n            const dtFormat = new DateTimeFormatter(formatter);\n            values = values.map(e => dtFormat.getNativeDate(e));\n        }\n        return values;\n    }\n\n    /**\n     * Returns a formatter function which transforms the input value to its original form.\n     *\n     * @public\n     * @return {Function} Returns raw formatter function.\n     */\n    rawFormat () {\n        if (this.subtype() === DimensionSubtype.TEMPORAL) {\n            const dateFormat = this.data().getFieldspace().getDimension()[this.oneVar()].schema().format;\n            return val => DateTimeFormatter.formatAs(val, dateFormat);\n        }\n        return val => val;\n    }\n\n    /**\n     * Return the field names associated with this variable instance.\n     *\n     * @public\n     * @return {Array} Array of fields.\n     */\n    getMembers () {\n        return [this.oneVar()];\n    }\n\n    /**\n     * Returns the type of the variable. Whether it is measure or dimension.\n     *\n     * @public\n     * @return {string} Type of variable.\n     */\n    type () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.type;\n    }\n\n    /**\n     * Returns the subtype of the variable. Subtype can be categorical or temporal. If no subtype is found, then it\n     * returns the type of the variable.\n     *\n     * @public\n     * @return {string} Subtype of variable.\n     */\n    subtype () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.subtype || fieldDef.type;\n    }\n\n    /**\n     * Returns the minimum consecutive difference between the data values of this variable.\n     *\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        const fieldSpace = this.data().getFieldspace();\n        return fieldSpace.fieldsObj()[this.oneVar()].minimumConsecutiveDifference();\n    }\n\n    /**\n     * Returns true if two variable instances are same.If both variable has the same field names, they are equal.\n     *\n     * @return {Boolean} Whether two variable instances are same.\n     */\n    equals (varInst) {\n        return this.oneVar() === varInst.oneVar();\n    }\n\n    /**\n     * Returns the display name of the field.\n     *\n     * @return {string} returns the display name.\n     */\n    displayName () {\n        return retrieveFieldDisplayName(this.data(), this.oneVar());\n    }\n\n    /**\n     * Returns the schema defination of the field.\n     *\n     * @return {Object} schema def\n     */\n    getSchemaDef () {\n        return this.data().getFieldsConfig()[this.oneVar()].def;\n    }\n}\n","import { ComposedVars, SimpleVariable } from '../variable';\nimport { DIMENSION, COLUMNS, ROWS, TEMPORAL } from '../enums/constants';\n\n/**\n * Gets the list of fields in a sorted order by measurement and dimension\n *\n * @param {Array} fieldList List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields sorted by measurement and dimensions\n */\nconst orderFields = (fieldArray, type) => {\n    const dimensionArr = [[], []];\n    const measureArr = [[], []];\n    const temporalArr = [[], []];\n    const categoricalArr = [[], []];\n\n    fieldArray.forEach((fieldList, index) => {\n        fieldList.forEach((field) => {\n            if (field.type() === DIMENSION) {\n                dimensionArr[index].push(field);\n                field.subtype() === TEMPORAL ? temporalArr[index].push(field) : categoricalArr[index].push(field);\n            } else {\n                measureArr[index].push(field);\n            }\n        });\n    });\n\n    const numOfMeasures = measureArr[0].length + (measureArr[1] ? measureArr[1].length : 0);\n\n    // Single array of fields\n    if (!fieldArray[1]) {\n        // Push measures to bottom\n        measureArr[1] = type === COLUMNS ? measureArr[0] : [];\n        // Push measures to left\n        measureArr[0] = type !== COLUMNS ? measureArr[0] : [];\n        // Bottom and right dimensions empty\n        dimensionArr[1] = [];\n        // Left and top filled with dimensions\n        dimensionArr[0] = dimensionArr[0];\n        if (numOfMeasures === 0) {\n            const allDimensions = [...dimensionArr[0], ...dimensionArr[1]];\n            if (type === COLUMNS) {\n                dimensionArr[1] = allDimensions[allDimensions.length - 1] ? [allDimensions[allDimensions.length - 1]]\n                        : [];\n                allDimensions.splice(-1, 1);\n            } else {\n                dimensionArr[1] = [];\n            }\n            dimensionArr[0] = [...allDimensions];\n        }\n    }\n\n    if (dimensionArr[0].length && dimensionArr[1].length && numOfMeasures > 0) {\n        dimensionArr[0] = [...dimensionArr[0], ...dimensionArr[1]];\n        dimensionArr[1] = [];\n    }\n    return {\n        fields: dimensionArr.map((list, i) => (i === 1 ?\n            measureArr[i].concat(dimensionArr[i]) : dimensionArr[i].concat(measureArr[i]))),\n        dimensions: [...dimensionArr[0], ...dimensionArr[1]],\n        measures: [...measureArr[0], ...measureArr[1]],\n        temporal: [...temporalArr[0], ...temporalArr[1]],\n        categorical: [...categoricalArr[0], ...categoricalArr[1]]\n    };\n};\n\n/**\n * Gets the list of normalized fields\n *\n * @param {Array} fields List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields normalized by measurement and dimensions\n */\nconst normalizeFields = (config, type) => {\n    const fieldsArr = [];\n    const fields = config[type];\n\n    if (!(fields[0] instanceof Array)) {\n        fieldsArr[0] = fields;\n    } else {\n        fieldsArr[0] = fields[0] || [];\n        fieldsArr[1] = fields[1] || [];\n    }\n    return fieldsArr;\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} datamodel\n *\n */\nconst convertToVar = (datamodel, fields) => {\n    const vars = [];\n\n    fields && fields.forEach((field) => {\n        if (field instanceof ComposedVars) {\n            vars.push(field);\n            field.data(datamodel);\n        } else {\n            vars.push(new SimpleVariable(field).data(datamodel));\n        }\n    });\n    return vars;\n};\n\n/**\n *\n *\n * @param {*} rows\n * @param {*} columns\n * @param {*} datamodel\n *\n */\nexport const transformFields = (datamodel, config) => {\n    const [rowsInfo, columnsInfo] = [ROWS, COLUMNS].map((fields) => {\n        const normalizedFields = normalizeFields(config, fields);\n        const norFields = [convertToVar(datamodel, normalizedFields[0])];\n\n        if (normalizedFields[1]) {\n            norFields[1] = convertToVar(datamodel, normalizedFields[1]);\n        }\n        return orderFields(norFields, fields);\n    });\n    const {\n        fields: rows,\n        dimensions: rowDimensions,\n        measures: rowMeasures,\n        temporal: rowTemporalFields,\n        categorical: rowCategoricalFields\n    } = rowsInfo;\n    const {\n        fields: columns,\n        dimensions: columnDimensions,\n        measures: columnMeasures,\n        temporal: columnTemporalFields,\n        categorical: columnCategoricalFields\n    } = columnsInfo;\n    return {\n        rows,\n        rowDimensions,\n        rowMeasures,\n        rowTemporalFields,\n        rowCategoricalFields,\n        columns,\n        columnTemporalFields,\n        columnCategoricalFields,\n        columnDimensions,\n        columnMeasures\n    };\n};\n","import { ERROR_MSG, mergeRecursive } from 'muze-utils';\nimport { transformFields } from './field-sanitizer';\nimport { getHeaderAxisFrom } from '../group-helper/group-utils';\nimport { ROW, COLUMN } from '../enums/constants';\n\n/**\n *\n *\n * @export\n * @class VisualEncoder\n */\nexport default class VisualEncoder {\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    createAxis () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    setCommonDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    getLayerConfig () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    fieldInfo (...info) {\n        if (info.length) {\n            this._fieldInfo = mergeRecursive(this._fieldInfo || {}, info[0]);\n            return this;\n        }\n        return this._fieldInfo;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof VisualEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        this.fieldInfo(transformFields(datamodel, config));\n        return this.fieldInfo();\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    axisFrom (...params) {\n        if (params.length) {\n            this._axisFrom = params[0];\n            return this;\n        }\n        return this._axisFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    headerFrom (...params) {\n        if (params.length) {\n            this._headerFrom = params[0];\n            return this;\n        }\n        return this.__headerFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axisFrom\n     *\n     * @memberof CartesianEncoder\n     */\n    setAxisAndHeaders (axisFrom = {}, fields) {\n        const [rowHeader, rowAxis] = getHeaderAxisFrom(ROW, fields.rows, axisFrom);\n        const [colHeader, colAxis] = getHeaderAxisFrom(COLUMN, fields.columns, axisFrom);\n\n        this.axisFrom({\n            row: rowAxis,\n            column: colAxis\n        });\n        this.headerFrom({\n            row: rowHeader,\n            column: colHeader\n        });\n        return this;\n    }\n}\n","import { ContinousAxis, BandAxis, TimeAxis, ColorAxis, SizeAxis, ShapeAxis } from '@chartshq/muze-axis';\n\nexport const scaleMaps = {\n    linear: ContinousAxis,\n    band: BandAxis,\n    temporal: TimeAxis,\n    size: SizeAxis,\n    color: ColorAxis,\n    shape: ShapeAxis\n};\n","import { ScaleType } from '@chartshq/muze-axis';\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    dimension: ScaleType.BAND,\n    categorical: ScaleType.BAND,\n    temporal: ScaleType.TIME,\n    measure: ScaleType.LINEAR,\n    continuous: ScaleType.LINEAR\n};\n","import { mergeRecursive, getObjProp } from 'muze-utils';\nimport { AxisOrientation } from '@chartshq/muze-axis';\nimport { ENCODING } from '@chartshq/visual-layer';\nimport { scaleMaps } from '../enums/scale-maps';\nimport { getAxisType, getAxisKey } from '../group-helper';\nimport { dataTypeScaleMap } from '../data-type-scale-map';\nimport { CATEGORICAL, TEMPORAL, BAR, LINE, POINT, BOTH, Y, COLOR, SHAPE, SIZE, ANGLE0 } from '../enums/constants';\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst getAxisConfig = (axisInfo, field, axesCreators, indices, facetFields) => {\n    let axisOrientation;\n    const { index, axisIndex, axisType } = axisInfo;\n    const { config, position } = axesCreators;\n    const { rowIndex, columnIndex } = indices;\n    const rawUserAxisConfig = config.axes ? (config.axes[axisType] || {}) : {};\n\n    // Change config object to a function if not already one\n    const userAxisConfigFn = typeof rawUserAxisConfig !== 'function' ?\n    () => rawUserAxisConfig : rawUserAxisConfig;\n    const userAxisConfig = userAxisConfigFn(rowIndex, columnIndex, {\n        axisFields: field.getMembers(),\n        facetFields\n    });\n\n    // If current config does not specifes config for an axis, retain old config\n    if (!userAxisConfig) {\n        return {};\n    }\n\n    const {\n        LEFT,\n        RIGHT,\n        TOP,\n        BOTTOM\n    } = AxisOrientation;\n    const allOrientations = axisType === Y ? [LEFT, RIGHT] : [TOP, BOTTOM];\n\n    if (position === BOTH) {\n        axisOrientation = allOrientations[axisIndex];\n    } else {\n        axisOrientation = position;\n    }\n    const axisConfig = {\n        id: `${axisType}-${index}-${axisIndex}`,\n        name: field.displayName(),\n        field: field.toString(),\n        numberFormat: field.numberFormat(),\n        orientation: axisOrientation,\n        showAxisName: true,\n        show: true,\n        type: dataTypeScaleMap[field.subtype()]\n    };\n    userAxisConfig.tickValues = field.format(userAxisConfig.tickValues);\n    userAxisConfig.domain = field.format(userAxisConfig.domain);\n\n    return mergeRecursive(axisConfig, userAxisConfig);\n};\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst createSimpleAxis = (axisConfig, field, axesCreators) => {\n    const { labelManager } = axesCreators;\n    const Cls = scaleMaps[dataTypeScaleMap[field.subtype()]];\n    const simpleAxis = new Cls(axisConfig, { labelManager });\n    return simpleAxis;\n};\n\nexport const getAdjustedDomain = (max, min) => {\n    const y1ratio = max[0] / (max[0] - min[0]);\n    const y2ratio = max[1] / (max[1] - min[1]);\n\n    // adjust min/max values for positive negative values zero line etc\n    let allSameSign = false;\n\n    // if all numbers are positive set floor to zero\n    if (min[0] > 0 && min[1] > 0 && min[1] > 0 && max[1] > 0) {\n        allSameSign = true;\n        min[0] = 0;\n        min[1] = 0;\n    }\n\n    // if all numbers are negative set ceiling to zero\n    if (min[0] < 0 && min[1] < 0 && min[1] < 0 && max[1] < 0) {\n        allSameSign = true;\n        max[0] = 0;\n        max[1] = 0;\n    }\n\n    // align zero line if necessary\n    if (!allSameSign && y1ratio !== y2ratio) {\n        if (y1ratio < y2ratio) {\n                    // adjust min[1]\n            min[1] = min[0] / max[0] * max[1];\n        } else {\n                    // adjust min[0]\n            min[0] = min[1] / max[1] * max[0];\n        }\n    }\n    return [\n        [min[0], max[0]],\n        [min[1], max[1]]\n    ];\n};\n\n/**\n *\n *\n * @param {*} axisType\n * @param {*} fieldInfo\n * @param {*} axesCreators\n * @param {*} groupAxes\n *\n */\nexport const generateAxisFromMap = (axisType, fieldInfo, axesCreators, axesInfo, indices, facetFields) => {\n    let axisKey;\n    const { groupAxes, valueParser } = axesInfo;\n    const currentAxes = [];\n    const { fields, index } = fieldInfo;\n    const { cacheMaps } = axesCreators;\n    const map = cacheMaps[`${axisType}AxesMap`];\n\n    const commonAxisKey = getAxisKey(axisType, index);\n    fields.forEach((field, axisIndex) => {\n        axisKey = getAxisKey(axisType, index, axisIndex, dataTypeScaleMap[field.subtype()]);\n        const axisConfig = getAxisConfig({ index, axisIndex, axisType }, field, axesCreators, indices, facetFields);\n\n        let axis;\n        if (!map.has(axisKey)) {\n            axis = createSimpleAxis(axisConfig, field, axesCreators);\n        } else {\n            axis = map.get(axisKey);\n            axis._rotationLock = false;\n            axis.config(axisConfig);\n        }\n        axis.valueParser(valueParser);\n        currentAxes.push(axis);\n        map.set(axisKey, axis);\n    });\n\n    if (currentAxes.length) {\n        map.set(commonAxisKey, currentAxes);\n        groupAxes.add(commonAxisKey);\n    }\n\n    return currentAxes;\n};\n\nexport const sanitizeIndividualLayerConfig = (encodingConfigs, def) => {\n    [COLOR, SHAPE, SIZE].forEach((axis) => {\n        if (encodingConfigs[axis] && encodingConfigs[axis].field) {\n            def.forEach((conf) => {\n                conf.encoding = conf.encoding || {};\n                !conf.encoding[axis] && (conf.encoding[axis] = {});\n                conf.encoding[axis].field = encodingConfigs[axis].field;\n            });\n        }\n    });\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n    const xAxes = [];\n    const yAxes = [];\n\n    xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes.push(xAxis);\n    });\n    yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes.push(yAxis);\n    });\n    return {\n        xAxes, yAxes\n    };\n};\n\n/**\n * return a default mark based on predefined set of rules of type and subtype of the fields\n *\n * @param {string} colFieldType dimension/measure - temporal/ordinal/nominal\n * @param {string} rowFieldType dimension/measure - temporal/ordinal/nominal\n * @return {Object} return mark type\n */\nexport const getDefaultMark = (colFieldType, rowFieldType) => {\n    let mark;\n\n    if (colFieldType === CATEGORICAL || rowFieldType === CATEGORICAL) {\n        mark = BAR;\n    } else if (colFieldType === TEMPORAL || rowFieldType === TEMPORAL) {\n        mark = LINE;\n    } else {\n        mark = POINT;\n    }\n\n    return mark;\n};\n\n/**\n *\n *\n * @param {*} axesCreators\n * @param {*} [fieldInfo=[]]\n *\n */\nexport const createRetinalAxis = (axesCreators, fieldProps = {}) => {\n    const { axisType, fieldsConfig } = axesCreators;\n    const field = fieldProps.field;\n    const axis = [];\n    const Cls = scaleMaps[axisType];\n\n    fieldProps.type = fieldProps.type ? fieldProps.type : getAxisType(fieldsConfig, field || null);\n    axis.push(new Cls(fieldProps));\n    return axis;\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} val\n *\n */\nexport const getIndex = (arr, val) => {\n    let i = 0;\n    let arrIndex = -1;\n\n    while (arrIndex === -1 && i < arr.length) {\n        if (arr[i].toString() === val.toString()) {\n            arrIndex = i;\n        }\n        i++;\n    }\n    return arrIndex;\n};\n\n/**\n *\n *\n * @param {*} colFields\n * @param {*} rowFields\n * @param {*} userLayerConfig\n *\n * @memberof CartesianEncoder\n */\nexport const getLayerConfFromFields = (colFields, rowFields, userLayerConfig) => userLayerConfig.filter((conf) => {\n    const userConf = conf instanceof Array ? conf : [conf];\n    const encodingArr = [].concat(...userConf.map(d => d.encoding).filter(d => d !== undefined));\n\n    if (!encodingArr.length) {\n        return true;\n    }\n\n    const xFields = [].concat(...encodingArr.map(d => [d.x && d.x.field, d.x0 && d.x0.field]))\n                .filter(d => d !== undefined && d !== null);\n    const yFields = [].concat(...encodingArr.map(d => [d.y && d.y.field, d.y0 && d.y0.field]))\n                .filter(d => d !== undefined && d !== null);\n\n    if (!xFields.length && !yFields.length) {\n        return true;\n    }\n\n    const colFieldExist = xFields.length ? xFields.every(d => colFields.indexOf(d) !== -1) : false;\n    const rowFieldExist = yFields.length ? yFields.every(d => rowFields.indexOf(d) !== -1) : false;\n    if (xFields.length && yFields.length) {\n        return colFieldExist && rowFieldExist;\n    }\n    return colFieldExist || rowFieldExist;\n});\n\nexport const resolveAxisConfig = (context, fieldInf, axisInfo) => {\n    const { rowIndex, columnIndex, axesObj } = axisInfo;\n    const { config, facetFields, resolver } = context;\n    const resolverAxes = resolver.axes();\n    const { RADIUS, ANGLE } = ENCODING;\n    [RADIUS, ANGLE, ANGLE0].forEach((enc) => {\n        const axesArr = resolverAxes[enc];\n        if (!axesArr[rowIndex]) {\n            axesArr[rowIndex] = [];\n        }\n        axesArr[rowIndex][columnIndex] = axesObj[enc];\n        const axisConfig = getObjProp(config.axes, enc) || {};\n\n        axesObj[enc].forEach((axis, i) => {\n            let userConfig = axisConfig;\n            if (axisConfig instanceof Function) {\n                userConfig = axisConfig(rowIndex, columnIndex, {\n                    axisFields: [fieldInf[enc][i]],\n                    facetFields\n                });\n            }\n            axis.config(userConfig);\n        });\n    });\n};\n","import { layerFactory } from '@chartshq/visual-layer';\nimport {\n    mergeRecursive,\n    STATE_NAMESPACES,\n    unionDomain,\n    COORD_TYPES,\n    toArray,\n    sortCategoricalField\n} from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport {\n    generateAxisFromMap,\n    getDefaultMark,\n    getIndex,\n    getLayerConfFromFields,\n    getAdjustedDomain,\n    sanitizeIndividualLayerConfig\n} from './encoder-helper';\nimport { retriveDomainFromData } from '../group-helper';\n\nimport { ROW, COLUMN, COL, LEFT, TOP, MEASURE, BOTH, X, Y } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\nconst CARTESIAN = COORD_TYPES.CARTESIAN;\n\n/**\n *\n *\n * @export\n * @class CartesianEncoder\n * @extends {VisualEncoder}\n */\nexport default class CartesianEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     *\n     * @memberof CartesianEncoder\n     */\n    static type () {\n        return CARTESIAN;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof CartesianEncoder\n     */\n    createAxis (axesCreators, fieldInfo, context) {\n        const geomCellAxes = {};\n        const {\n            axes\n        } = axesCreators;\n        const {\n            projections,\n            indices\n        } = fieldInfo;\n        const {\n            rowFields,\n            columnFields\n        } = projections;\n        const {\n             rowIndex,\n             columnIndex\n        } = indices;\n        const axisFields = [{\n            fields: rowFields,\n            index: rowIndex\n        }, {\n            fields: columnFields,\n            index: columnIndex\n        }];\n        const { resolver, facetFields, geomCell } = context;\n        const xAxes = axes.x || [];\n        const yAxes = axes.y || [];\n\n        [rowFields, columnFields].forEach((fields, i) => {\n            const type = i === 0 ? ROW : COLUMN;\n            const axis = i === 0 ? Y : X;\n\n            if (fields.length > 1) {\n                axesCreators.position = BOTH;\n            } else {\n                axesCreators.position = this.axisFrom()[type];\n            }\n            geomCellAxes[axis] = generateAxisFromMap(axis, axisFields[i], axesCreators, {\n                groupAxes: axis === X ? xAxes : yAxes,\n                valueParser: resolver.valueParser()\n            }, indices, facetFields);\n        });\n        geomCell.axes(geomCellAxes);\n        return geomCellAxes;\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        const resolver = context.resolver();\n        const units = resolver.units();\n        const domains = {\n            0: {},\n            1: {}\n        };\n        // const sortingDetails = nearestSortingDetails(context.getGroupByData());\n        const config = context.config();\n        const fieldsObj = {\n            0: {},\n            1: {}\n        };\n\n        for (let rIdx = 0, len = units.length; rIdx < len; rIdx++) {\n            const unitsArr = units[rIdx];\n            for (let cIdx = 0, len2 = unitsArr.length; cIdx < len2; cIdx++) {\n                const unit = unitsArr[cIdx];\n                const axisFields = unit.fields();\n                const encodingDomains = unit.getDataDomain();\n                ['x', 'y'].forEach((axisType, axisTypeIndex) => {\n                    const fieldArr = axisFields[axisType];\n                    fieldArr.forEach((field, axisIndex) => {\n                        const key = !axisTypeIndex ? `0${cIdx}${axisIndex}` : `${rIdx}0${axisIndex}`;\n                        const dom = encodingDomains[axisType];\n                        const typeOfField = field.subtype();\n                        fieldsObj[axisTypeIndex][key] = field;\n\n                        if (dom && Object.keys(dom).length !== 0) {\n                            domains[axisTypeIndex][key] = unionDomain([(domains[axisTypeIndex] &&\n                                domains[axisTypeIndex][key]) || [], dom[`${field}`]], typeOfField);\n                        }\n                    });\n                });\n            }\n        }\n\n        const { x: xAxes, y: yAxes } = resolver.axes();\n        store.lockModel();\n        [xAxes, yAxes].forEach((axesArr, axisType) => {\n            axesArr.forEach((axes, idx) => {\n                let key;\n                let domain = [];\n                let adjustedDomain = [];\n                const min = [];\n                const max = [];\n                const typeOfAxis = axes[0].constructor.type();\n\n                if (axes.length > 1 && typeOfAxis === ScaleType.LINEAR && axes[0].config().alignZeroLine) {\n                    axes.forEach((axis, i) => {\n                        key = !axisType ? `0${idx}${i}` : `${idx}0${i}`;\n                        domain = domains[axisType][key];\n                        min[i] = domain[0];\n                        max[i] = domain[1];\n                    });\n                    adjustedDomain = getAdjustedDomain(max, min);\n                } else if (typeOfAxis === ScaleType.BAND) {\n                    /* Sort categorical fields to ensure consistency across all rows\n                    only if sorted by user */\n                    key = !axisType ? `0${idx}0` : `${idx}00`;\n                    const currentFieldName = fieldsObj[axisType][key].oneVar();\n                    const sortingOrder = config.sort && config.sort[currentFieldName];\n\n                    if (sortingOrder) {\n                        domains[axisType][key].sort((a, b) => sortCategoricalField(sortingOrder, a, b));\n                    }\n                }\n\n                axes.forEach((axis, index) => {\n                    key = !axisType ? `0${idx}${index}` : `${idx}0${index}`;\n                    domain = adjustedDomain[index] || domains[axisType][key];\n\n                    domain && axis.domain(domain);\n                    const type = !axisType ? 'x' : 'y';\n                    store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${type}`, domain, `${idx}${index}`);\n                });\n            });\n        });\n        store.unlockModel();\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields, type) {\n        let facets = [];\n        let projections = [];\n        let counter = 0;\n        const primaryFacets = [];\n        const secondaryFacets = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n        const axisFrom = this.axisFrom();\n\n        for (let i = 0; i < primaryLen; i++) {\n            let projArr = [primaryFields[i]];\n            const primaryField = primaryFields[i];\n\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter];\n                if (secondaryField && secondaryField.type() === MEASURE) {\n                    counter++;\n                    projArr = [primaryField, secondaryField];\n                }\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n                primaryFacets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                    secondaryFacets.push(secondaryField);\n                }\n            }\n        }\n        if ((primaryFacets.length || secondaryFacets.length) && !projections.length) {\n            type = type === COL ? COLUMN : type;\n            if ((axisFrom[type] === LEFT || axisFrom[type] === TOP) && primaryFacets.length) {\n                const axisFromIndex = primaryFacets.length - 1;\n                const facet = primaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(secondaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    secondaryFacets.splice(existIndex, 1);\n                }\n                primaryFacets.splice(axisFromIndex, 1);\n            } else {\n                const axisFromIndex = 0;\n                const facet = secondaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(primaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    primaryFacets.splice(existIndex, 1);\n                }\n                secondaryFacets.splice(axisFromIndex, 1);\n            }\n        }\n\n        facets = [...primaryFacets, ...secondaryFacets];\n        facets = facets.filter((el, index, self) => index === self.findIndex(t => (t.toString() === el.toString())));\n        return {\n            facets,\n            projections\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof CartesianEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        return super.fieldSanitizer(datamodel, config);\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     *\n     * @memberof CartesianEncoder\n     */\n    getRetinalFieldsDomain (dataModels, encoding) {\n        const groupedModel = dataModels.groupedModel;\n        const domains = {};\n        for (const key in encoding) {\n            if ({}.hasOwnProperty.call(encoding, key)) {\n                const encodingObj = encoding[key];\n                const field = encodingObj.field;\n                if (!encodingObj.domain && field) {\n                    const domain = retriveDomainFromData(groupedModel, field);\n                    domains[field] = domain;\n                }\n            }\n        }\n        return domains;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     * @memberof CartesianEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n        // let currentLayerIndex = 0;\n        layerArray.length && layerArray.forEach((layer, i) => {\n            const def = layerFactory.sanitizeLayerConfig(layer);\n            def.order = i;\n            serializedLayers.push(def);\n        });\n        return serializedLayers;\n    }\n\n    sanitizeLayerConfig (encodingConfigs, userLayerConfig) {\n        const layerConfig = [];\n        userLayerConfig.forEach((config) => {\n            const def = toArray(config.def);\n            sanitizeIndividualLayerConfig(encodingConfigs, def);\n            layerConfig.push(config);\n        });\n        return layerConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof CartesianEncoder\n     */\n    getLayerConfig (fields, userLayerConfig, retinalConfig) {\n        const layerConfig = [];\n        const {\n            columnFields,\n            rowFields\n        } = fields;\n\n        // let currentLayerIndex = 0;\n        columnFields.forEach((colField) => {\n            const colFieldName = colField.toString();\n            rowFields.forEach((rowField) => {\n                let configs = [];\n                const rowFieldName = rowField.toString();\n                const encoding = {\n                    x: {\n                        field: colFieldName\n                    },\n                    y: {\n                        field: rowFieldName\n                    }\n                };\n                const rowFieldType = rowField.subtype();\n                const colFieldType = colField.subtype();\n                const mark = getDefaultMark(colFieldType, rowFieldType);\n\n                const defConfigs = [{\n                    mark,\n                    def: {\n                        mark,\n                        encoding\n                    }\n                }];\n\n                const layerConfigs = getLayerConfFromFields(colField.getMembers(),\n                    rowField.getMembers(), userLayerConfig || []);\n                if (layerConfigs.length) {\n                    configs = layerConfigs.map((layerConf) => {\n                        const mergedLayerConf = mergeRecursive(mergeRecursive({}, defConfigs[0].def), layerConf);\n                        const serializedLayerConfig = layerFactory.getSerializedConf(mergedLayerConf.mark,\n                            mergedLayerConf);\n                        return {\n                            mark: mergedLayerConf.mark,\n                            order: mergedLayerConf.order,\n                            def: serializedLayerConfig\n                        };\n                    });\n                } else {\n                    configs = defConfigs;\n                }\n\n                layerConfig.push(...configs);\n            });\n        });\n        return this.sanitizeLayerConfig(retinalConfig, layerConfig);\n    }\n}\n","import { AngleAxis, RadiusAxis } from '@chartshq/muze-axis';\nimport { layerFactory, ENCODING } from '@chartshq/visual-layer';\nimport {\n    mergeRecursive,\n    STATE_NAMESPACES,\n    GROUP_BY_FUNCTIONS,\n    COORD_TYPES,\n    toArray,\n    getObjProp,\n    defaultValue\n} from 'muze-utils';\nimport VisualEncoder from './visual-encoder';\nimport { SIZE, MEASURE, ARC, COLOR } from '../enums/constants';\nimport { sanitizeIndividualLayerConfig, resolveAxisConfig } from './encoder-helper';\nimport { SimpleVariable } from '../variable';\n\nconst POLAR = COORD_TYPES.POLAR;\nconst { RADIUS, ANGLE, ANGLE0 } = ENCODING;\n\nconst axesCls = {\n    [RADIUS]: RadiusAxis,\n    [ANGLE]: AngleAxis,\n    [ANGLE0]: AngleAxis\n};\n\nconst getSizeMultiplier = (sizeVal, sizeAxis) => {\n    const sizeAxisDomain = sizeAxis.domain();\n    const sizeMultiplier = sizeAxis.getSize(sizeVal) / (sizeAxisDomain ? sizeAxis.range()[1] : sizeAxis.config().value);\n    return sizeMultiplier;\n};\n\nconst setRadiusFactor = (context) => {\n    const data = context.data();\n    const sizeField = context.retinalFields().size.field;\n    const { radius, size } = context.axes();\n\n    if (sizeField && radius && radius.length) {\n        const sizeFieldIndex = data.getFieldsConfig()[sizeField].index;\n        const sizeVal = data.getData().data.reduce((acc, val) => acc + val[sizeFieldIndex], 1);\n        const sizeMultiplier = getSizeMultiplier(sizeVal, size[0]);\n        radius.forEach(axis => axis.setRadiusFactor(sizeMultiplier));\n    }\n};\n\n/**\n *\n *\n * @export\n * @class PolarEncoder\n * @extends {VisualEncoder}\n */\nexport default class PolarEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof PolarEncoder\n     */\n    createAxis (axesCreators, fieldInfo, context) {\n        const {\n            axes\n        } = axesCreators;\n        const geomCellAxes = axes;\n        const {\n            indices\n        } = fieldInfo;\n        const {\n            rowIndex,\n            columnIndex\n        } = indices;\n        // Dummy axes for polar, to create blank cells\n        const pieAxes = geomCellAxes.pie || [];\n\n        pieAxes[rowIndex] = pieAxes[rowIndex] || [];\n        pieAxes[rowIndex][columnIndex] = [];\n\n        const axesObj = {};\n        const { geomCell, resolver } = context;\n        const layers = resolver.matrixLayers();\n        const resolverAxes = resolver.axes();\n        const cellLayers = layers[rowIndex][columnIndex];\n        const fields = {\n            radius: {},\n            angle: {},\n            angle0: {}\n        };\n\n        cellLayers.forEach((layerConf) => {\n            const def = layerConf.def;\n            [ANGLE, ANGLE0, RADIUS].forEach((enc) => {\n                const field = getObjProp(def.encoding, enc, 'field');\n                field && (fields[enc][field] = 0);\n            });\n        });\n        const fieldInf = {};\n        const varInstances = {};\n\n        for (const encType in fields) {\n            fieldInf[encType] = Object.keys(fields[encType]);\n            axesObj[encType] = [];\n            varInstances[encType] = [];\n            fieldInf[encType].forEach((field, i) => {\n                varInstances[encType][i] = new SimpleVariable(field);\n                axesObj[encType][i] = new axesCls[encType]();\n            });\n            axesObj[encType][axesObj[encType].length] = new axesCls[encType]();\n        }\n        resolveAxisConfig(context, fieldInf, {\n            axesObj,\n            rowIndex,\n            columnIndex\n        });\n        geomCell.axes(axesObj)\n            .fields(Object.assign({}, varInstances, geomCell.fields()));\n        resolverAxes.pie = pieAxes;\n        return geomCellAxes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields) {\n        let counter = 0;\n        const facets = [];\n        const projections = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n\n        for (let i = 0; i < primaryLen; i++) {\n            const primaryField = primaryFields[i];\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter++];\n                const projArr = secondaryField ? [primaryField, secondaryField] : [primaryField];\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                }\n            }\n        }\n        return {\n            facets,\n            projections\n        };\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        store.lockModel();\n        const domainProps = {\n            radius: [],\n            angle: [],\n            angle0: []\n        };\n        const axes = context.resolver().axes();\n        context.matrixInstance().value.each((cell, rIdx, cIdx) => {\n            const unit = cell.valueOf();\n            const unitDomains = unit.getDataDomain();\n            const fields = unit.fields();\n            setRadiusFactor(unit);\n            [RADIUS, ANGLE, ANGLE0].forEach((encType) => {\n                const encodingFields = fields[encType];\n                const domains = unitDomains[encType] || {};\n                encodingFields.forEach((field, i) => {\n                    !domainProps[encType][rIdx] && (domainProps[encType][rIdx] = []);\n                    !domainProps[encType][rIdx][cIdx] && (domainProps[encType][rIdx][cIdx] = []);\n                    domainProps[encType][rIdx][cIdx][i] = domains[`${field}`] || [];\n                });\n            });\n        });\n\n        for (const key in domainProps) {\n            const specificAxes = axes[key];\n            specificAxes.forEach((axesArr, rIdx) => {\n                axesArr.forEach((axisArr, cIdx) => {\n                    axisArr.forEach((axis, i) => {\n                        axis.domain(defaultValue(getObjProp(domainProps[key], rIdx, cIdx, i), []));\n\n                        store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${key}`, domainProps[key],\n                            `${rIdx}-${cIdx}`);\n                    });\n                });\n            });\n        }\n        store.unlockModel();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    setCommonDomain () {\n        // No domain to be set\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    static type () {\n        return POLAR;\n    }\n\n    layers (...layers) {\n        if (layers.length) {\n            this._layers = layers[0];\n            return this;\n        }\n        return this._layers;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof PolarEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        let sanitizedRows = [[], []];\n        let sanitizedColumns = [[], []];\n        const fields = super.fieldSanitizer(datamodel, config);\n        const {\n            layers\n        } = config;\n        const {\n            rows,\n            columns\n        } = fields;\n        const layer = layers[0];\n        const encoding = layer.encoding;\n        const radius = encoding && encoding.radius ? encoding.radius.field : null;\n        const angle = encoding && encoding.angle ? encoding.angle.field : null;\n        const sanitizedFields = [sanitizedRows, sanitizedColumns];\n\n        [rows, columns].forEach((fieldType, typeIndex) => {\n            fieldType.forEach((fieldSet, i) => fieldSet.forEach((field) => {\n                if (field.toString() !== radius && field.toString() !== angle && field.type() !== MEASURE) {\n                    sanitizedFields[typeIndex][i].push(field);\n                }\n            }));\n        });\n        sanitizedColumns = [...new Set(sanitizedColumns)];\n        sanitizedRows = [...new Set(sanitizedRows)];\n        this.fieldInfo({ rows: sanitizedRows, columns: sanitizedColumns });\n        return this.fieldInfo();\n    }\n\n    getRetinalFieldsDomain (dataModels, encoding, facetFields, groupBy) {\n        let sizeField;\n        let colorField;\n        const fields = [];\n        const layers = this.layers();\n        const dataModel = dataModels.groupedModel;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const domains = {};\n        if (layers && layers[0]) {\n            const layer = layers[0];\n            const layerEncoding = layer.def.encoding || {};\n\n            [RADIUS, ANGLE, SIZE, COLOR].forEach((encType) => {\n                const field = layerEncoding[encType] ? layerEncoding[encType].field : '';\n                const measureField = fieldsConfig[field] && fieldsConfig[field].def.type === MEASURE;\n                if (encType === SIZE && measureField) {\n                    sizeField = field;\n                }\n                if (encType === COLOR) {\n                    colorField = field;\n                }\n                fieldsConfig[field] && !measureField && fields.push(field);\n            });\n        }\n\n        if (sizeField) {\n            domains[sizeField] = dataModel.groupBy(facetFields, {\n                [sizeField]: GROUP_BY_FUNCTIONS.SUM\n            }).getFieldspace().fieldsObj()[sizeField].domain();\n        }\n\n        if (colorField) {\n            const dm = dataModel.groupBy([...facetFields, ...fields], groupBy.measures);\n            domains[colorField] = dm.getFieldspace().fieldsObj()[colorField].domain();\n        }\n        return domains;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof PolarEncoder\n     */\n    getLayerConfig (fields, userLayerConfig, retinalConfig) {\n        let layerConfig = [];\n        const {\n                columnFields,\n                rowFields\n            } = fields;\n        const allFields = [...columnFields, ...rowFields];\n\n        allFields.forEach(() => {\n            const encoding = {};\n            let config = {\n                mark: ARC,\n                def: {\n                    encoding\n                }\n            };\n            if (userLayerConfig && userLayerConfig.length > 0) {\n                config = mergeRecursive(config, userLayerConfig[0]);\n            }\n            layerConfig.push(config);\n        });\n        if (layerConfig.length === 0) {\n            layerConfig = userLayerConfig;\n        }\n        const sanitizedConfig = this.sanitizeLayerConfig(retinalConfig, layerConfig);\n        this.layers(sanitizedConfig);\n        return sanitizedConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     *\n     * @memberof PolarEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n\n        layerArray.length && layerArray.forEach((layer) => {\n            const def = layerFactory.getSerializedConf(layer.mark, layer);\n            serializedLayers.push({\n                mark: layer.mark,\n                def\n            });\n        });\n        return serializedLayers;\n    }\n\n    sanitizeLayerConfig (encodingConfigs, userLayerConfig) {\n        const layerConfig = [];\n\n        userLayerConfig.forEach((config) => {\n            const def = toArray(config.def);\n            sanitizeIndividualLayerConfig(encodingConfigs, def);\n            def.forEach((conf) => {\n                const encoding = conf.encoding || (conf.encoding = {});\n                !encoding.angle && (encoding.angle = {});\n                const angleField = getObjProp(encoding.angle, 'field');\n                const angle0Field = getObjProp(encoding.angle0, 'field');\n                if (!angleField) {\n                    Object.assign(encoding.angle, {\n                        field: encodingConfigs.color && encodingConfigs.color.field\n                    });\n                }\n                if (!angle0Field) {\n                    !encoding.angle0 && (encoding.angle0 = {});\n                    Object.assign(encoding.angle0, {\n                        field: encoding.angle.field\n                    });\n                }\n            });\n\n            layerConfig.push(config);\n        });\n        return layerConfig;\n    }\n}\n","import { createRetinalAxis } from './encoder-helper';\nimport { COLOR, SHAPE, SIZE } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\n/**\n *\n *\n * @export\n * @class RetinalEncoder\n * @extends {VisualEncoder}\n */\nexport default class RetinalEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     *\n     * @memberof RetinalEncoder\n     */\n    createAxis (axesCreators) {\n        const { fieldsConfig, config } = axesCreators;\n        const newAxes = {};\n\n        [COLOR, SHAPE, SIZE].forEach((axisType) => {\n            newAxes[`${axisType}`] = createRetinalAxis({ axisType, fieldsConfig }, config[axisType]);\n        });\n        return newAxes;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof RetinalEncoder\n     */\n    static type () {\n        return 'retinal';\n    }\n\n    /**\n     *\n     *\n     * @param {*} context\n     *\n     * @memberof RetinalEncoder\n     */\n    setCommonDomain (context) {\n        const { domains, axes, encoding } = context;\n\n        Object.entries(encoding).forEach((enc) => {\n            if (enc[1] && enc[1].field) {\n                const encType = enc[0];\n                const field = enc[1].field;\n\n                if (field) {\n                    axes[encType].forEach((axis) => {\n                        const domain = domains[field];\n                        !enc[1].domain && axis.updateDomain(domain);\n                    });\n                }\n            }\n        });\n        return axes;\n    }\n}\n","import { Store, FieldType, COORD_TYPES, getObjProp, DataModel } from 'muze-utils';\nimport { VisualUnit } from '@chartshq/visual-unit';\nimport { BaseLayer } from '@chartshq/visual-layer';\nimport { DATA_UPDATE_COUNTER } from '../enums/defaults';\nimport { Variable } from '../variable';\nimport { PolarEncoder, CartesianEncoder } from '../encoder';\nimport {\n    DIMENSION,\n    MEASURE,\n    ORDINAL,\n    LINEAR,\n    ROW,\n    COLUMN,\n    COL,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    COLOR,\n    SIZE,\n    TEMPORAL,\n    SHAPE,\n    INTERACTION,\n    GRID_LINES,\n    GRID_BANDS,\n    HEADER,\n    FACET,\n    X,\n    Y,\n    ARC,\n    RADIUS,\n    ANGLE\n} from '../enums/constants';\n\nconst POLAR = COORD_TYPES.POLAR;\n\n/**\n * Creates an instance of a store which contains the arguments to make the class reactive\n *\n * @return {Object} instance of store\n * @memberof VisualGroup\n */\nexport const initStore = () => new Store({\n    [DATA_UPDATE_COUNTER]: DATA_UPDATE_COUNTER\n});\n\n/**\n *\n *\n * @param {*} arr\n */\nexport const isDistributionEqual = arr => [...arr[0], ...arr[1]].reduce((isEqual, row) => {\n    const rowType = row.type();\n\n    if (rowType === MEASURE || rowType === TEMPORAL) {\n        isEqual = true;\n    }\n    return isEqual;\n}, false);\n\n/**\n *\n *\n */\nexport const initializeCacheMaps = () => ({\n    cellMap: new Map(),\n    xAxesMap: new Map(),\n    yAxesMap: new Map(),\n    entryCellMap: new Map(),\n    exitCellMap: new Map()\n});\n\n/**\n *\n *\n * @param {*} axisName\n * @param {*} id\n */\nexport const getAxisKey = (axisName, ...params) => `${axisName}-axis-${params.join('-')}`;\n\n/**\n *\n *\n * @param {*} rowId\n * @param {*} columnId\n */\nexport const getCellKey = (rowId, columnId) => `cell-${rowId}-${columnId}`;\n\n/**\n *\n *\n * @param {*} config\n *\n */\nexport const extractUnitConfig = (config) => {\n    const unitConfig = {};\n    const attrNames = [INTERACTION, GRID_LINES, GRID_BANDS];\n\n    attrNames.forEach((attr) => {\n        if (config[attr] !== undefined) {\n            unitConfig[attr] = config[attr];\n        }\n    });\n    return unitConfig;\n};\n\n/**\n *\n *\n * @param {*} headers\n * @param {*} index\n * @param {*} rowLength\n *\n * @memberof MatrixResolver\n */\nexport const getHeaderText = (headers, index, rowLength) => {\n    let header = '';\n\n    if (index === rowLength - 1 && headers.length > rowLength) {\n        for (let i = index; i < headers.length - 1; i++) {\n            header += `${headers[i].toString()} / `;\n        }\n        header += headers[headers.length - 1].toString();\n        return header;\n    } else if (headers[index]) {\n        return headers[index].toString();\n    }\n    return '';\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} fieldHeaders\n * @param {*} TextCell\n * @param {*} labelManager\n *\n */\nexport const headerCreator = (fields, fieldHeaders, TextCell, { classPrefix, labelManager }) => {\n    const headers = fields.length > 0 ? fields[0].map((cell, i) => new TextCell({\n        type: HEADER,\n        className: `${classPrefix}-grid-headers`\n    }, {\n        labelManager\n    }).source(getHeaderText(fieldHeaders, i, fields[0].length))\n                    .config({ show: cell.config().show })) : [];\n    return headers;\n};\n\n/**\n *\n *\n * @param {*} variable\n * @param {*} allFields\n *\n */\nexport const findInGroup = (variable, allFields) => {\n    let channel = null;\n\n    [COLOR, SIZE, SHAPE].forEach((e) => {\n        if (this.store.get(e) && variable === this.store.get(e)[0]) {\n            channel = e;\n        }\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    [ROW, COL].forEach((facetType) => {\n        allFields[`${facetType}Facets`].forEach((e) => {\n            if (e.toString() === variable) {\n                channel = { channel: FACET, type: facetType === COL ? COLUMN : ROW };\n            }\n        });\n    });\n\n    if (channel) {\n        return channel;\n    }\n\n    [ROW, COL].forEach((projType) => {\n        allFields[`${projType}Projections`].forEach((e) => {\n            e.forEach((m) => {\n                if (m.toString() === variable) {\n                    channel = projType === COL ? X : Y;\n                }\n            });\n        });\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    return null;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} field\n */\nexport const getAxisType = (fieldsConfig, field) => {\n    let fieldType = ORDINAL;\n\n    if (field && fieldsConfig[field].def.type !== DIMENSION) {\n        fieldType = LINEAR;\n    }\n    return fieldType;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} fieldName\n *\n */\nexport const retriveDomainFromData = (datamodel, fieldName) => {\n    const field = datamodel.getFieldspace().fields.find(d => d.name() === fieldName.toString());\n    return field.domain();\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    let xAxes = null;\n    let yAxes = null;\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n\n    xAxisSet && xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes = xAxes || [];\n        xAxes.push(xAxis);\n    });\n\n    yAxisSet && yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes = yAxes || [];\n        yAxes.push(yAxis);\n    });\n\n    return {\n        xAxes, yAxes\n    };\n};\n\nconst hasPolarEncodings = layerConf => layerConf.mark === ARC || [RADIUS, ANGLE].some(field =>\n        getObjProp(layerConf.encoding, field));\n\n/**\n *\n *\n * @param {*} layers\n *\n */\nexport const getEncoder = (layers) => {\n    let encoder = new CartesianEncoder();\n\n    if (layers.length) {\n        // Figuring out the kind of layers the group will have\n        encoder = layers.some(layerConf => hasPolarEncodings(layerConf)) ? new PolarEncoder() : encoder;\n    }\n    return encoder;\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} userAxisFromConfig\n *\n */\nexport const getHeaderAxisFrom = (type, fields, userAxisFromConfig) => {\n    let axisFrom = userAxisFromConfig[type];\n    let headerFrom = '';\n    const options = type === ROW ? [LEFT, RIGHT] : [BOTTOM, TOP];\n    const [firstField, secondField] = fields;\n    const firstFieldType = i => (firstField.length ? firstField[i].type() : null);\n    const secondFieldType = i => (secondField.length ? secondField[i].type() : null);\n\n    if (firstFieldType(firstField.length - 1) === DIMENSION && secondFieldType(0) === DIMENSION) {\n        headerFrom = axisFrom ? options[1 - options.indexOf(axisFrom)] : options[1];\n\n        if (type === COLUMN && (firstField[firstField.length - 1].toString() === secondField[0].toString())) {\n            axisFrom = TOP;\n        } else {\n            axisFrom = axisFrom || options[0];\n        }\n    } else if (secondFieldType(secondField.length - 1) === DIMENSION) {\n        headerFrom = type === ROW ? RIGHT : BOTTOM;\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else {\n        headerFrom = type === ROW ? LEFT : TOP;\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    if (firstFieldType(firstField.length - 1) === MEASURE && secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    } else if (secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else if (firstFieldType(firstField.length - 1) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    return [headerFrom, axisFrom];\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} layers\n *\n * @memberof MatrixResolver\n */\nexport const setFacetsAndProjections = (context, fieldInfo, encoder) => {\n    const {\n        fields,\n        type\n    } = fieldInfo;\n    const { facets, projections } = encoder.simpleEncoder.getFacetsAndProjections(fields, type);\n\n    context.facets({ [`${type}Facets`]: facets });\n    context.projections({ [`${type}Projections`]: projections });\n\n    return { facets, projections, fields };\n};\n\nconst getRowBorders = (left, right) => {\n    const borders = {};\n    borders.top = false;\n    borders.bottom = false;\n    if (left.length > 1 || right.length > 1) {\n        borders.top = true;\n        borders.bottom = true;\n    }\n    return borders;\n};\n\nconst getColumnsBorders = (top, bottom) => {\n    const borders = {};\n    borders.left = false;\n    borders.right = false;\n    if (top.length || bottom.length) {\n        if ((top[0] && top[0].length > 1) || (bottom[0] && bottom[0].length > 1)) {\n            borders.left = true;\n            borders.right = true;\n        }\n    }\n    return borders;\n};\n\nconst getValueBorders = (rows, columns) => {\n    const borders = { top: true, left: true, bottom: true, right: true };\n    const borderTypeRow = [LEFT, RIGHT];\n    const borderTypeCol = [TOP, BOTTOM];\n    rows.forEach((e, i) => {\n        if (e[0] && e[0].length) {\n            borders[borderTypeRow[i]] = true;\n        } else {\n            borders[borderTypeRow[i]] = false;\n        }\n    });\n    columns.forEach((e, i) => {\n        if (e.length) {\n            borders[borderTypeCol[i]] = true;\n        } else {\n            borders[borderTypeCol[i]] = false;\n        }\n    });\n\n    return borders;\n};\n\nexport const getBorders = (matrices, encoder) => {\n    let showRowBorders = { top: false, bottom: false };\n    let showColBorders = { left: false, right: false };\n    let showValueBorders = { top: false, bottom: false, left: false, right: false };\n    const {\n        rows,\n        columns,\n        values: valueMatrix\n    } = matrices;\n    const [leftRows, rightRows] = rows;\n    const [topColumns, bottomColumns] = columns;\n    const {\n        rowDimensions,\n        columnDimensions,\n        rowTemporalFields,\n        columnTemporalFields,\n        columnMeasures,\n        rowMeasures\n    } = encoder.fieldInfo();\n    const allDimensionLength = rowDimensions.length + columnDimensions.length;\n    const allMeasuresLength = rowMeasures.length + columnMeasures.length;\n    const allTemporalFieldsLength = rowTemporalFields.length + columnTemporalFields.length;\n\n    if (encoder.constructor.type() === POLAR) {\n        if (!allDimensionLength) {\n            return { showRowBorders, showColBorders, showValueBorders };\n        }\n    } else if (!allMeasuresLength && !allTemporalFieldsLength && allDimensionLength <= 2) {\n        return { showRowBorders, showColBorders, showValueBorders };\n    }\n\n    showRowBorders = getRowBorders(leftRows, rightRows);\n    showColBorders = getColumnsBorders(topColumns, bottomColumns);\n    showValueBorders = getValueBorders([leftRows, rightRows], [topColumns, bottomColumns]);\n\n    if (valueMatrix.length > 1) {\n        showValueBorders.top = true;\n        showValueBorders.bottom = true;\n    }\n    if (valueMatrix.length && valueMatrix[0].length > 1) {\n        showValueBorders.left = true;\n        showValueBorders.right = true;\n    }\n    return { showRowBorders, showColBorders, showValueBorders };\n};\n\nexport const getFieldsFromSuppliedLayers = (suppliedLayerConfig, fieldsConfig) => {\n    let fields = [];\n    const encodingArr = suppliedLayerConfig.map(conf => (conf.encoding || {}));\n    fields = [...fields, [].concat(...encodingArr.map(enc => Object.values(enc).map(d => d.field)))];\n    fields = fields.filter(field => fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION);\n    return fields;\n};\n\nexport const extractFields = (facetsAndProjections, layerFields) => {\n    const fields = Object.values(facetsAndProjections).map((arr) => {\n        const flattenArray = [].concat(...arr);\n        return [].concat(...flattenArray.map((field) => {\n            if (field instanceof Variable) {\n                return field.getMembers();\n            }\n            return field;\n        }));\n    });\n    return [].concat(...fields, ...layerFields);\n};\n\n/**\n * This method sorts the facets fields inplace if field is of categorical type\n * @param {Object} facets Array of facets\n * @param {Array} keys Array of the facet field values\n * @param {Object} config configuration object\n * @return {Array} Returns sorted facets\n */\nexport const sortFacetFields = (facets, keys, config) => {\n    const schema = [];\n    const facetNames = [];\n    const sortInfo = [];\n    const sortConfig = config.sort;\n\n    facets.forEach((facet) => {\n        const name = `${facet}`;\n        if (sortConfig[name]) {\n            sortInfo.push([name, sortConfig[name]]);\n        }\n        schema.push(facet.getSchemaDef());\n        facetNames.push(name);\n    });\n\n    return new DataModel([facetNames, ...keys], schema).sort(sortInfo).getData().data;\n};\n\nexport const removeExitCells = (resolver) => {\n    const exitCells = resolver.cacheMaps().exitCellMap;\n    const store = resolver.store();\n    const qualifiedStateProps = [].concat(...VisualUnit.getQualifiedStateProps(),\n        ...BaseLayer.getQualifiedStateProps());\n    store.lockCommits(qualifiedStateProps);\n    exitCells.forEach((placeholder) => {\n        placeholder.remove();\n    });\n    store.unlockCommits(qualifiedStateProps);\n};\n","import { DataModel } from 'muze-utils';\nimport { retriveDomainFromData, sortFacetFields } from './group-utils';\n\n/**\n * Gets name of fields form the variables\n *\n * @param {*} fields1\n * @param {*} [fields2=[]]\n *\n */\nconst getFieldNames = (fields1, fields2 = []) => [fields1, fields2].map(fields => fields.reduce((acc, d) => {\n    acc = [...acc, ...d.getMembers()];\n    return acc;\n}, []));\n\n/**\n * Creates a selected datamodel from a parent datamodel and a set of field names\n *\n * @param {Object} datamodel provided as input\n * @param {Array} fieldNames schema  names\n * @param {Array} fieldValues values of those schema names to be selected\n * @return {Object} creates a new selected datamodel\n */\nconst createSelectedDataModel = (datamodel, fieldNames, fieldValues) =>\n    datamodel.select(fields => fieldNames.every((field, k) => fields[field].value === fieldValues[k]));\n\n/**\n *\n *\n * @param {*} facets\n * @param {*} keyArray\n *\n */\nconst uniqueKeyGenerator = (keyArray, context, depth = 0, val = []) => {\n    const {\n        facets,\n        dataModel,\n        uniqueValues\n    } = context;\n\n    // Get unique keys for the next depth recursively if required\n    if (facets[depth + 1]) {\n        const field = facets[depth];\n        uniqueValues.forEach((value) => {\n            const newDm = dataModel.select(fields => fields[field].value === value);\n            const nextDepthUniqueValues = retriveDomainFromData(newDm, facets[depth + 1]);\n            const newContext = {\n                facets,\n                dataModel: newDm,\n                uniqueValues: nextDepthUniqueValues\n            };\n\n            uniqueKeyGenerator(keyArray, newContext, depth + 1, [...val, value]);\n        });\n    } else {\n        uniqueValues.forEach((value) => {\n            keyArray.push([...val, value]);\n        });\n    }\n};\n\n/**\n * projects row model based on the set of row and/or column and other projection fields\n *\n * @param {Object} datamodel provided as input\n * @return {Object} Projected datamodel\n */\nconst projectRows = (datamodel, projections) => {\n    const {\n        allColumnProjections,\n        rowProjections,\n        optionalProjections\n    } = projections;\n\n    if (rowProjections.length > 0) {\n        return rowProjections.map((projectFields) => {\n            const [projFieldNames, colProjFieldNames] = getFieldNames(projectFields, allColumnProjections);\n            return datamodel.project([...projFieldNames, ...colProjFieldNames, ...optionalProjections]);\n        });\n    }\n    return [datamodel];\n};\n\n/**\n * Adds the datamodels to current row index based on column fields\n *\n * @param {Array} context current context\n * @param {Array} valueCellCreator List of facets applied to the current datamodel\n */\nconst pushToMatrix = (context, valueCellCreator) => {\n    let cells = [];\n    const {\n        matrix,\n        datamodel,\n        facetInfo,\n        fieldInfo\n    } = context;\n    // Get projected fields for current row\n    const {\n        rowProjections,\n        colProjections,\n        optionalProjections\n    } = fieldInfo;\n    const {\n        rowIndex,\n        columnIndex\n    } = facetInfo;\n    const rowProj = rowProjections[(rowIndex) % rowProjections.length] || [];\n\n    // Get the cells for the matrix from the return function of the callback on the datamodel.\n    // callback function -> (datamodel, {projections, indices}, facets)\n    if (colProjections.length > 0) {\n        cells = colProjections.map((projectFields, projIdx) => {\n            const [colProjFieldNames, rowProjFieldNames] = getFieldNames(projectFields, rowProj);\n            const projectedDm = datamodel.project([...colProjFieldNames, ...rowProjFieldNames, ...optionalProjections]);\n            const projections = { rowFields: rowProj, columnFields: projectFields };\n            const indices = { rowIndex, columnIndex: columnIndex * colProjections.length + projIdx };\n\n            return valueCellCreator(projectedDm, { projections, indices }, facetInfo);\n        });\n    } else {\n        const projections = { rowFields: rowProj, columnFields: [] };\n        const indices = { rowIndex, columnIndex };\n\n        cells = [valueCellCreator(datamodel, { projections, indices }, facetInfo)];\n    }\n\n    matrix[rowIndex] = matrix[rowIndex] || [];\n    matrix[rowIndex].push(...cells);\n};\n\n/**\n * Formats row or columns keys with the provided formatter.\n *\n * @param {Array} keys - The collection of row or column keys.\n * @param {Array} formatterList - The list of corresponding formatter.\n */\nconst formatKeys = (keys, formatterList) => {\n    const formattedKeys = [];\n    keys.forEach((rKeys, rIdx) => {\n        formattedKeys[rIdx] = [];\n        rKeys.forEach((key, idx) => {\n            formattedKeys[rIdx][idx] = formatterList[idx](key);\n        });\n    });\n    return formattedKeys;\n};\n\n/**\n * Gets Matrixes for corresponding datamodel, facets and projections\n *\n * @param {Object} dataModel input datamodel\n * @param {Array} facetsAndProjections contains the set of facets and projections for the matrices\n * @param {Function} valueCellCreator Callback executed after datamodels are prepared after sel/proj\n * @param {Object} globalConfig global config\n *\n * @return {Object} set of matrices with the corresponding row and column keys\n */\nexport const getMatrixModel = (dataModel, facetsAndProjections, valueCellCreator, globalConfig) => {\n    let rowDataModels = [];\n    let rowKeys = [];\n    let columnKeys = [];\n    const allColumnProjections = [];\n    const matrix = [];\n    const facetInfo = [];\n\n    const fieldInfo = Object.assign({}, facetsAndProjections);\n    const {\n        rowFacets,\n        colFacets,\n        colProjections\n    } = fieldInfo;\n\n    colProjections.forEach((colProj) => {\n        allColumnProjections.push(...colProj);\n    });\n    fieldInfo.allColumnProjections = allColumnProjections;\n\n    // Performing row selection and projection\n    if (rowFacets.length > 0) {\n        // Get unique values for the root level of facet\n        const field = rowFacets[0].toString();\n        const firstLevelRowKeys = retriveDomainFromData(dataModel, field);\n\n        // Get unique keys in the form of an array of arrays for each row\n        uniqueKeyGenerator(rowKeys, { facets: rowFacets, dataModel, uniqueValues: firstLevelRowKeys });\n\n        rowKeys = sortFacetFields(rowFacets, rowKeys, globalConfig);\n\n        // Apply selection -> projection -> row datamodels\n        rowKeys.forEach((val) => {\n            // Create faceted datamodel\n            const [rowFacetFieldNames] = getFieldNames(rowFacets);\n            const selectedDataModel = createSelectedDataModel(dataModel, rowFacetFieldNames, val);\n\n            // Project the datamodel based on the number of projections (based on last levels)\n            const newProjectedDataModels = projectRows(selectedDataModel, fieldInfo);\n            rowDataModels.push(...newProjectedDataModels);\n\n            newProjectedDataModels.forEach(() => {\n                facetInfo.push([rowFacets, val]);\n            });\n        });\n    } else {\n        // No row facets, hence only row projection\n        rowDataModels.push(...projectRows(dataModel, fieldInfo));\n    }\n\n    // Maintaining set of row datamodels for column resolution\n    rowDataModels = rowDataModels.length > 0 ? rowDataModels : [[]];\n\n    // Performing column selection and projection\n    if (colFacets.length > 0) {\n        const colFacetNames = colFacets.map(d => `${d}`);\n        // Get unique values for the root level of facet\n        const field = colFacetNames[0];\n        const firstLevelColumnKeys = retriveDomainFromData(dataModel, field);\n\n        // Get unique keys to create faceted datamodels: this time for columns\n        uniqueKeyGenerator(columnKeys, {\n            facets: colFacetNames,\n            dataModel,\n            uniqueValues: firstLevelColumnKeys\n        });\n\n        columnKeys = sortFacetFields(colFacets, columnKeys, globalConfig);\n\n        // For each row in the datamodel, apply selection -> projection -> push the projection to matri\n        rowDataModels.forEach((dme, rIndex) => {\n            facetInfo[rIndex] = facetInfo[rIndex] || [[], []];\n            columnKeys.forEach((val, cIndex) => {\n                matrix[rIndex] = matrix[rIndex] || [];\n\n                // If datamodel is not present in current row, choose parent datamodel\n                const datamodel = dme instanceof DataModel ? dme : dataModel;\n\n                // Selection is made on the datamodel for the current row\n                const selectedDataModel = createSelectedDataModel(datamodel, colFacetNames, val);\n                const context = {\n                    matrix,\n                    datamodel: selectedDataModel,\n                    facetInfo: {\n                        rowFacets: facetInfo[rIndex],\n                        colFacets: [colFacets, val],\n                        rowIndex: rIndex,\n                        columnIndex: cIndex\n                    },\n                    fieldInfo\n                };\n                pushToMatrix(context, valueCellCreator);\n            });\n        });\n    } else {\n        // No column facets, hence only row projection\n        rowDataModels.forEach((dme, rIndex) => {\n            facetInfo[rIndex] = facetInfo[rIndex] || [[], []];\n            const context = {\n                matrix,\n                datamodel: dme || dataModel,\n                facetInfo: {\n                    rowFacets: facetInfo[rIndex],\n                    colFacets: [[], []],\n                    rowIndex: rIndex,\n                    columnIndex: 0\n                },\n                fieldInfo\n            };\n\n            pushToMatrix(context, valueCellCreator);\n        });\n    }\n\n    const formattedColKeys = formatKeys(columnKeys, colFacets.map(facetField => facetField.rawFormat()));\n    const formattedRowKeys = formatKeys(rowKeys, rowFacets.map(facetField => facetField.rawFormat()));\n\n    // Getting column keys\n    const transposedColKeys = formattedColKeys.length > 0 ? formattedColKeys[0].map((col, i) =>\n                    formattedColKeys.map(row => row[i])) : formattedColKeys;\n\n    return { matrix, rowKeys: formattedRowKeys, columnKeys: transposedColKeys };\n};\n","import { AxisOrientation } from '@chartshq/muze-axis';\nimport {\n    getObjProp,\n    FieldType,\n    retrieveNearestGroupByReducers,\n    mergeRecursive,\n    createSelection,\n    DataModel\n} from 'muze-utils';\nimport { getMatrixModel } from './matrix-model';\nimport {\n    getCellKey,\n    isDistributionEqual,\n    mutateAxesFromMap,\n    getFieldsFromSuppliedLayers,\n    extractFields,\n    removeExitCells\n} from './group-utils';\nimport { ROW, ROWS, COLUMNS, COL, LEFT, RIGHT, TOP,\n    BOTTOM, PRIMARY, SECONDARY, X, Y, TEMPORAL } from '../enums/constants';\nimport { SimpleVariable } from '../variable';\n\n/**\n * Updates row and column cells with the geom cell corresponding to the facet keys\n *\n * @param {*} resolver\n * @param {*} facets\n */\nconst updateCells = (resolver, facets, geomCell) => {\n    [ROW, COL].forEach((field) => {\n        const cells = resolver[`${field}Cells`]();\n        const facetKey = facets[`${field}Facets`][1].join();\n\n        !cells[facetKey] && (cells[facetKey] = []);\n        cells[facetKey].push(geomCell);\n        resolver[`${field}Cells`](cells);\n    });\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} datamodel\n * @param {*} fieldInfo\n * @param {*} facets\n *\n */\nexport const createValueCells = (context, datamodel, fieldInfo, facets) => {\n    const {\n        projections,\n        indices\n    } = fieldInfo;\n    const {\n        rowFields,\n        columnFields\n    } = projections;\n    const {\n         rowIndex,\n         columnIndex\n    } = indices;\n    const {\n        suppliedLayers,\n        cell: GeomCell,\n        resolver,\n        config,\n        encoder,\n        detailFields\n    } = context;\n    const axes = resolver.axes();\n    const cacheMaps = resolver.cacheMaps();\n    const matrixLayers = resolver.matrixLayers();\n    const labelManager = resolver.dependencies().smartlabel;\n    const horizontalAxis = resolver.horizontalAxis();\n    const verticalAxis = resolver.verticalAxis();\n    const datamodelTransform = resolver.datamodelTransform();\n    const {\n        entryCellMap,\n        exitCellMap\n    } = cacheMaps;\n    const layerConfigArr = encoder.getLayerConfig({ columnFields, rowFields }, suppliedLayers || [],\n        context.retinalConfig);\n    const axesCreators = { config, labelManager, axes, cacheMaps };\n\n    fieldInfo.normalizedColumns = verticalAxis.fields;\n    fieldInfo.normalizedRows = horizontalAxis.fields;\n\n    const allFacets = [\n        [...facets.rowFacets[0], ...facets.colFacets[0]],\n        [...facets.rowFacets[1], ...facets.colFacets[1]]\n    ];\n    const facetFields = allFacets.slice();\n    facetFields[0] = facetFields[0].map(facetField => facetField.oneVar());\n\n    matrixLayers[rowIndex] = matrixLayers[rowIndex] ? matrixLayers[rowIndex] : [];\n    matrixLayers[rowIndex][columnIndex] = layerConfigArr;\n\n    // return from map if already there otherwise create and put in map\n    const geomCellKey = getCellKey(rowIndex, columnIndex);\n    const fields = {\n        y: rowFields,\n        x: columnFields\n    };\n\n    const geomCell = !exitCellMap.has(geomCellKey) ? new GeomCell() : exitCellMap.get(geomCellKey);\n\n    geomCell.data(datamodel)\n                    .fields(fields)\n                    .transform(datamodelTransform)\n                    .detailFields(detailFields)\n                    .facetByFields(allFacets);\n\n    encoder.createAxis(axesCreators, fieldInfo, Object.assign({}, context, { geomCell, facetFields }));\n    entryCellMap.set(geomCellKey, geomCell);\n    exitCellMap.delete(geomCellKey);\n\n    updateCells(resolver, facets, geomCell);\n\n    return entryCellMap.get(geomCellKey);\n};\n\nconst extractAxisIndex = id => getObjProp(id.match(/^[0-9]*?(?=-)/g), 0);\n\n/**\n * Creates axis cells based on the set of axes\n *\n * @param {Selection} selection Contains a selection of the axis units\n * @param {Array} axes Actual axis units\n * @param {number} axisIndex 0-> primary axis, 1-> secondary axis(when dual axis is made)\n * @param {Object} cells Contains a collection of the cells\n * @return {Object} return either set of axis/blank cells depending on the config\n */\nconst createAxisCells = (selection, axes, axisIndex, cells) =>\n    createSelection(selection, axis => axis, axes, (item, i) => i + item.reduce((e, n) => {\n        const id = n.id + axisIndex;\n        return `${e}-${id}`;\n    }, '')).map((currObj, axis) => {\n        if (axis && axis[axisIndex]) {\n            const axisInst = axis[axisIndex];\n            const { orientation, show } = axisInst.config();\n\n            return new cells.AxisCell().source(axisInst).config({\n                isOffset: orientation === AxisOrientation.LEFT || orientation === AxisOrientation.TOP,\n                show\n            });\n        }\n        return new cells.BlankCell().config({ show: false });\n    }).sort((a, b) => extractAxisIndex(a[0]) - extractAxisIndex(b[0]));\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @retur\n */\nconst axisPlaceholderGn = (context, selObj, cells) => {\n    const {\n        matrices\n    } = context;\n    const {\n        axesMatrix\n    } = matrices;\n\n    return (type, axisFrom) => {\n        const axes = axesMatrix[`${type}`];\n\n        if (axes && axes.length) {\n            if (type === X || type === Y) {\n                const fieldNames = type === Y ? ROWS : COLUMNS;\n\n                [PRIMARY, SECONDARY].forEach((fieldType, index) => {\n                    const selObjProp = `${fieldNames}${fieldType}`;\n                    let axisIndex = index;\n                    let axesForDraw = axes;\n                    if (axisFrom === RIGHT || axisFrom === BOTTOM) {\n                        axisIndex = 1 - axisIndex;\n                    }\n                    if (!getObjProp(axes, 0, axisIndex)) {\n                        axesForDraw = [];\n                    }\n                    selObj[selObjProp] = createAxisCells(selObj[selObjProp], axesForDraw, axisIndex, cells);\n                });\n            } else {\n                selObj.rowsPrimary = createAxisCells(selObj.rowPrime, axes.map(() => []), 0, cells);\n                selObj.rowsSecondary = createAxisCells(selObj.rowSec, axes.map(() => []), 0, cells);\n                selObj.columnsPrimary = createAxisCells(selObj.colPrime, axes[0], 0, cells);\n                selObj.columnsSecondary = createAxisCells(selObj.colSec, axes[0], 0, cells);\n            }\n        }\n        return selObj;\n    };\n};\n\n/**\n * Creates header cells based on the set of headers\n *\n * @param {Object} selection Contains a selection of the header units\n * @param {string} headers Contains a list of the headers\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} return either set of header cells depending on the config\n */\nconst createTextCells = (selection, headers, cells, labelManager) => createSelection(selection,\n        (label) => {\n            const textCell = new cells.TextCell({}, { labelManager });\n            textCell.source(label);\n            return textCell;\n        }, headers, (key, i) => key + i);\n\nconst extractFacetIndex = id => id.split('-').pop();\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @param {*} labelManager\n *\n */\nconst headerPlaceholderGn = (context, selectionObj, cells, labelManager) => {\n    const {\n        axis,\n        keys,\n        type,\n        facet\n    } = context;\n    const counter = axis.length / keys.length;\n    const selectionKeys = keys.length ? axis.map((d, i) => keys[Math.floor(i / counter)]) : [];\n\n    const selObjUpdater = createSelection(selectionObj[`${type}Headers`], keySet => keySet, selectionKeys,\n    (keySet, i) => `${keySet.join(',')}-${i}`)\n        .sort((a, b) => extractFacetIndex(a[0]) - extractFacetIndex(b[0]));\n\n    return selObjUpdater.map((keySet, data) => {\n        let textCells = createTextCells(null, data, cells, labelManager);\n        textCells = textCells.map((cell, k) => cell.source(k).config(facet));\n        return textCells;\n    });\n};\n\n/**\n * Creates a set of placeholders as a part of selection object\n *\n * @param {Array} normalizedOptions contains normalized rows and columns\n * @param {Array} matrices contains axis and value matrices\n * @param {aArrayny} projections contains set of row and column projections\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} Creates a set of placeholders as a part of selections\n */\nconst generatePlaceholders = (context, cells, labelManager) => {\n    let selectionObj;\n    const {\n        matrices,\n        fields,\n        facetsAndProjections,\n        selection,\n        facet,\n        encoders,\n        resolver\n    } = context;\n    const {\n        rows,\n        columns\n    } = fields;\n    const {\n        valuesMatrix\n    } = matrices;\n    const {\n        rowProjections,\n        colProjections\n    } = facetsAndProjections;\n    const {\n        rowKeys,\n        columnKeys\n    } = valuesMatrix;\n    const takeAxisFrom = encoders.simpleEncoder._axisFrom;\n    const takeHeaderFrom = encoders.simpleEncoder._headerFrom;\n\n    selectionObj = selection || {};\n\n    ['pie', X, Y].forEach((axis) => {\n        const axisFrom = axis === X ? takeAxisFrom.column : takeAxisFrom.row;\n        selectionObj = axisPlaceholderGn(context, selectionObj, cells)(axis, axisFrom);\n    });\n\n    const {\n        rowsPrimary,\n        rowsSecondary,\n        columnsPrimary,\n        columnsSecondary\n    } = selectionObj;\n\n    const rowAxis = rowsPrimary && rowsPrimary.getObjects().length ? rowsPrimary.getObjects() :\n        (rowsSecondary && rowsSecondary.getObjects().length ? rowsSecondary.getObjects() : []);\n    const colAxis = columnsPrimary && columnsPrimary.getObjects().length ? columnsPrimary.getObjects() :\n        (columnsSecondary && columnsSecondary.getObjects().length ? columnsSecondary.getObjects() : []);\n\n    const headerConfig = [\n        { type: LEFT, section: rows[0], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: RIGHT, section: rows[1], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: TOP, section: columns[0], axis: colAxis, headerFrom: takeHeaderFrom.column },\n        { type: BOTTOM, section: columns[1], axis: colAxis, headerFrom: takeHeaderFrom.column }\n    ];\n\n    headerConfig.forEach((config, index) => {\n        let keys;\n        let length;\n        const {\n            type,\n            section,\n            axis,\n            headerFrom\n        } = config;\n\n        if (index < 2) {\n            keys = rowKeys;\n            length = rowProjections.length > 0 ? rowProjections.length : 1;\n        } else {\n            keys = columnKeys;\n            length = colProjections.length > 0 ? colProjections.length : 1;\n        }\n        keys = keys.map(arr => arr.map(val => resolver.valueParser()(val)));\n        if (section.length && headerFrom === type && axis && keys.length) {\n            const hContext = { axis, length, type };\n            let headers = [];\n            if (index < 2) {\n                hContext.keys = keys;\n                hContext.facet = facet.rows;\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            } else {\n                hContext.facet = facet.columns;\n                hContext.keys = keys[0].map((key, i) => keys.map(e => e[i]));\n\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            }\n            selectionObj[`${type}Headers`] = headers;\n        } else {\n            selectionObj[`${type}Headers`] = null;\n        }\n    });\n    return selectionObj;\n};\n\n/**\n * Generates matrices\n *\n * @param {Object} config Configuration to generate matrices\n * @param {Array} matrices Matrices containing the set of visual units and axes units\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} contains a collection of matrices\n */\nexport const generateMatrices = (context, matrices, cells, labelManager) => {\n    const {\n        unitHeight,\n        unitWidth,\n        facetsAndProjections,\n        normalizedRows,\n        normalizedColumns,\n        selection,\n        axisFrom,\n        facet,\n        encoders,\n        resolver\n     } = context;\n    const placeholderContext = {\n        fields: {\n            rows: normalizedRows,\n            columns: normalizedColumns\n        },\n        matrices,\n        facetsAndProjections,\n        selection,\n        axisFrom,\n        facet,\n        encoders,\n        resolver\n    };\n    // Generate placeholders for all matrices\n    const selectionObj = generatePlaceholders(placeholderContext, cells, labelManager);\n    const {\n        columnsPrimary,\n        columnsSecondary,\n        rowsPrimary,\n        rowsSecondary,\n        leftHeaders,\n        topHeaders,\n        bottomHeaders,\n        rightHeaders\n    } = selectionObj;\n    const [rowPrime, rowSec, colPrime, colSec] = [rowsPrimary, rowsSecondary, columnsPrimary, columnsSecondary]\n        .map(d => (d ? d.getObjects() : []));\n    const [leftFacets, rightFacets] = [leftHeaders, rightHeaders]\n        .map(e => (e ? e.getObjects()\n                        .map(f => f.getObjects()) : []));\n    let rowPriority = rowSec.length ? 1 : -1;\n    rowPrime.length && rowPriority++;\n    let colPriority = colSec.length ? 1 : -1;\n    colPrime.length && colPriority++;\n\n    // Compute left matrix using left headers and the axes on the rows\n    let leftMatrix = leftFacets.length ? leftFacets.map((d, i) => {\n        rowPrime[i] = rowPrime[i] ? [rowPrime[i]] : [];\n        return [...d, ...rowPrime[i]];\n    }) : (rowPrime ? rowPrime.map(d => [d]) : []);\n\n    // Compute right matrix using right headers and the axes on the rows\n    const rightMatrix = rowSec.length ? rowSec.map((d, i) => [d, ...(rightFacets[i] || [])]) : (rightFacets.length ?\n        rightFacets.map(d => [...d]) : []);\n\n    const topMatrix = [];\n    if (topHeaders) {\n        const headers = topHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                topMatrix[i] = topMatrix[i] || [];\n                topMatrix[i].push(x);\n            });\n        });\n    }\n    // Compute top matrix using the top headers and axes on the columns\n    if (colPrime.length) {\n        topMatrix.push(colPrime);\n    }\n\n    // Bottom and right matrices are prepared using the user config.\n    let bottomMatrix = [];\n    if (colSec.length) {\n        bottomMatrix.push(colSec);\n    }\n    const currentBottomLength = bottomMatrix.length;\n    if (bottomHeaders) {\n        const headers = bottomHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                bottomMatrix[i + currentBottomLength] = bottomMatrix[i + currentBottomLength] || [];\n                bottomMatrix[i + currentBottomLength].push(x);\n            });\n        });\n    }\n\n    if (!leftMatrix.length && !rightMatrix.length) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        leftMatrix = [[cell]];\n    }\n\n    if (!topMatrix.length && (!bottomMatrix.length || !bottomMatrix[0].length)) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        bottomMatrix = [[cell]];\n    }\n\n    return {\n        rows: [leftMatrix, rightMatrix],\n        columns: [topMatrix, bottomMatrix],\n        selectionObj,\n        colPriority,\n        rowPriority\n    };\n};\n\nconst getAxisFields = (projections, fieldHolder = []) =>\n                            projections.reduce((acc, item) =>\n                                [...acc, ...item.reduce((ac, field) =>\n                                   (field instanceof SimpleVariable ? [...ac, field.oneVar()] : ac), [])], fieldHolder);\n\nconst sortDmTemporalFields = (resolver, datamodel) => {\n    let axisFields = [];\n    const projections = resolver.projections();\n    axisFields = getAxisFields(projections.rowProjections, getAxisFields(projections.colProjections));\n\n    const fieldConfig = datamodel.getFieldsConfig();\n    const temporalFields = axisFields.reduce((acc, field) =>\n        ((fieldConfig[field].def.subtype === TEMPORAL) ? [...acc, [field]] : acc), []);\n    return temporalFields.length ? datamodel.sort(temporalFields, { saveChild: true }) : datamodel;\n};\n\nconst transformDataModel = (dataModel, config, resolver) => {\n    let groupedModel;\n\n    const fieldsConfig = dataModel.getFieldsConfig();\n    const resolvedData = resolver.data();\n    const { groupBy, suppliedLayers, facetsAndProjections } = config;\n\n    if (resolvedData instanceof DataModel) {\n        resolvedData.dispose();\n    }\n    groupedModel = dataModel.project(dataModel.getSchema().map(d => d.name));\n    resolver.data(groupedModel);\n    if (!groupBy.disabled) {\n        const fields = getFieldsFromSuppliedLayers(suppliedLayers, groupedModel.getFieldsConfig());\n        const allFields = extractFields(facetsAndProjections, fields);\n        const dimensions = allFields.filter(field =>\n            getObjProp(fieldsConfig, field, 'def', 'type') === FieldType.DIMENSION);\n        const aggregationFns = groupBy.measures;\n        const measureNames = Object.keys(groupedModel.getFieldspace().getMeasure());\n        const nearestAggFns = retrieveNearestGroupByReducers(groupedModel, ...measureNames);\n        const resolvedAggFns = mergeRecursive(nearestAggFns, aggregationFns);\n\n        groupedModel = groupedModel.groupBy(dimensions.length ? dimensions : [''], resolvedAggFns)\n                                            .project(allFields);\n    }\n    // sort temporal fields if any in the given rows and columns\n    groupedModel = sortDmTemporalFields(resolver, groupedModel);\n    return groupedModel;\n};\n\n/**\n * Computes matrices for a group\n *\n * @param {Object} datamodel on which the matrices are to be computed\n * @param {Object} config configuration of the matrices\n * @param {Object} layerRegistry contains the registered layers\n * @return {Object} conputed matrices\n * @memberof MatrixResolver\n */\nexport const computeMatrices = (context, config) => {\n    const {\n        resolver,\n        datamodel,\n        componentRegistry,\n        encoders\n    } = context;\n    const {\n            globalConfig,\n            selection,\n            transform\n        } = config;\n    const groupBy = globalConfig.autoGroupBy;\n    const { smartlabel: labelManager } = resolver.dependencies();\n    const fieldMap = datamodel.getFieldsConfig();\n    const layerConfig = resolver.layerConfig();\n    const registry = resolver.registry();\n    const { fields: normalizedRows } = resolver.horizontalAxis();\n    const { fields: normalizedColumns } = resolver.verticalAxis();\n    const otherEncodings = resolver.optionalProjections(config, layerConfig);\n    const facetsAndProjections = resolver.getAllFields();\n    const matrixGnContext = {\n        // Configuration to be passed to generate the  different matrices.\n        // A common config is used for both value matrices and other matrices\n        normalizedColumns,\n        normalizedRows,\n        facetsAndProjections,\n        layers: layerConfig,\n        fieldMap,\n        otherEncodings,\n        encoders,\n        facet: globalConfig.facet || {},\n        axisFrom: globalConfig.axisFrom || {},\n        selection,\n        resolver\n    };\n    const cells = {\n        GeomCell: resolver.getCellDef(registry.GeomCell),\n        AxisCell: resolver.getCellDef(registry.AxisCell),\n        BlankCell: resolver.getCellDef(registry.BlankCell),\n        TextCell: resolver.getCellDef(registry.TextCell)\n    };\n    const isRowSizeEqual = isDistributionEqual(normalizedRows);\n    const isColumnSizeEqual = isDistributionEqual(normalizedColumns);\n\n    resolver.colCells({});\n    resolver.rowCells({});\n    resolver.datamodelTransform(transform || {});\n\n    // Cell creation begins here\n    resolver.resetSimpleAxes();\n\n    const {\n        entryCellMap\n    } = resolver.cacheMaps();\n    const newCacheMap = {\n        exitCellMap: entryCellMap,\n        entryCellMap: new Map()\n    };\n\n    resolver.cacheMaps(newCacheMap);\n\n    const valueCellContext = {\n        config: globalConfig,\n        suppliedLayers: encoders.simpleEncoder.serializeLayerConfig(resolver.layerConfig()),\n        resolver,\n        cell: cells.GeomCell,\n        encoder: encoders.simpleEncoder,\n        newCacheMap,\n        detailFields: config.detail,\n        retinalConfig: {\n            color: config.color,\n            size: config.size,\n            shape: config.shape\n        }\n    };\n\n    const groupedModel = transformDataModel(datamodel, {\n        facetsAndProjections,\n        suppliedLayers: valueCellContext.suppliedLayers,\n        groupBy\n    }, resolver);\n\n    // return a callback function to create the cells from the matrix\n    const cellCreator = resolver.valueCellsCreator(valueCellContext);\n    // Creates value matrices from the datamodel and configs\n    const valueMatrixInfo = getMatrixModel(groupedModel, facetsAndProjections, cellCreator, globalConfig);\n\n    removeExitCells(resolver);\n    resolver.cacheMaps().exitCellMap.clear();\n    resolver.valueMatrix(valueMatrixInfo.matrix);\n\n    const { xAxes, yAxes } = mutateAxesFromMap(resolver.cacheMaps(), resolver.axes());\n\n    resolver.axes({\n        x: xAxes,\n        y: yAxes\n    });\n\n    resolver.createUnits(componentRegistry, config);\n\n    const matrices = {\n        valuesMatrix: valueMatrixInfo,\n        axesMatrix: resolver.axes()\n    };\n    // Create all matrices\n    const {\n        rows,\n        columns,\n        selectionObj,\n        rowPriority,\n        colPriority\n    } = generateMatrices(matrixGnContext, matrices, cells, labelManager);\n\n    resolver.rowMatrix(rows);\n    resolver.columnMatrix(columns);\n\n    return {\n        rows: resolver.rowMatrix(),\n        columns: resolver.columnMatrix(),\n        values: resolver.valueMatrix(),\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority: {\n            row: rowPriority,\n            col: colPriority\n        },\n        selection: selectionObj,\n        dataModels: {\n            groupedModel,\n            parentModel: datamodel\n        }\n    };\n};\n","export const RESOLVER_PROPS = {\n    dependencies: {},\n    units: {},\n    datamodelTransform: {},\n    layerConfig: {},\n    matrixLayers: {},\n    colCells: {},\n    rowCells: {},\n    rowMatrix: {},\n    columnMatrix: {},\n    valueMatrix: {},\n    encoder: {},\n    valueParser: {},\n    data: {}\n};\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { generateGetterSetters, STATE_NAMESPACES, getUniqueId } from 'muze-utils';\nimport {\n     initializeCacheMaps,\n     headerCreator,\n     extractUnitConfig,\n     setFacetsAndProjections\n} from './group-utils';\nimport {\n     ROW, COL, LEFT, RIGHT, COLOR, SIZE, SHAPE, DETAIL, CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS, INITIALIZED,\n     AXIS, UNIT, BEFORE_UPDATE, UPDATED, VALUE_MATRIX, FACET_HEADERS\n} from '../enums/constants';\nimport { createValueCells, computeMatrices } from './cell-creator';\nimport { RESOLVER_PROPS } from './resolver-props';\n\n/**\n * Resolves the matrices from configuration provided\n *\n * @export\n * @class MatrixResolver\n */\nexport default class MatrixResolver {\n\n    /**\n     * Creates an instance of MatrixResolver.\n     * @param {Object} dependencies needed to run the resolver\n     * @memberof MatrixResolver\n     */\n    constructor (dependencies) {\n        this._registry = {};\n        this._layerConfig = [];\n        this._matrixLayers = [];\n        this._dependencies = dependencies;\n        this._rowMatrix = [];\n        this._columnMatrix = [];\n        this._valueMatrix = [];\n        this._facets = { rowFacets: [], colFacets: [] };\n        this._projections = { rowProjections: [], colProjections: [] };\n        this._datamodelTransform = {};\n        this._units = [];\n        this._cacheMaps = {};\n        this._fireboltDeps = {};\n        this._axes = {\n            x: {},\n            y: {},\n            color: [],\n            size: [],\n            shape: [],\n            radius: [],\n            angle: [],\n            angle0: []\n        };\n        generateGetterSetters(this, RESOLVER_PROPS);\n        this.cacheMaps(initializeCacheMaps());\n    }\n\n    /**\n     * Set:  Registers placeholders, Get: return {Object} those placeholders\n     *\n     * @param {Object} placeholders cells that will construct the group\n     * @return {Object} Either current instance or the set of placeholders\n     * @memberof MatrixResolver\n     */\n    registry (...placeholders) {\n        if (placeholders.length) {\n            Object.entries(placeholders[0]).forEach((val) => {\n                this._registry[val[0]] = val[1];\n            });\n            return this;\n        }\n        return this._registry;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    cacheMaps (...maps) {\n        if (maps.length) {\n            [CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS].forEach((e) => {\n                this._cacheMaps[`${e}Map`] = maps[0][`${e}Map`] || this._cacheMaps[`${e}Map`];\n            });\n            return this;\n        }\n        return this._cacheMaps;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    axes (...axes) {\n        if (axes.length) {\n            this._axes = Object.assign({}, this._axes, axes[0]);\n            return this;\n        }\n        return this._axes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} facets\n     *\n     * @memberof MatrixResolver\n     */\n    facets (...facets) {\n        if (facets.length) {\n            Object.entries(facets[0]).forEach((e) => {\n                this._facets[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._facets;\n    }\n\n    /**\n     *\n     *\n     * @param {*} projections\n     *\n     * @memberof MatrixResolver\n     */\n    projections (...projections) {\n        if (projections.length) {\n            Object.entries(projections[0]).forEach((e) => {\n                this._projections[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._projections;\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @param {*} layerConfig\n     *\n     * @memberof MatrixResolver\n     */\n    optionalProjections (config, layerConfig) {\n        const otherEncodings = {};\n        const optionalProjections = [];\n        const otherEncodingTypes = [SIZE, COLOR, SHAPE];\n\n        otherEncodingTypes.forEach((type) => {\n            if (config[type] && config[type].field) {\n                const enc = config[type];\n                otherEncodings[type] = enc.field;\n                optionalProjections.push(enc.field);\n            }\n        });\n\n        if (config[DETAIL]) {\n            optionalProjections.push(...config.detail);\n        }\n\n        if (layerConfig.length) {\n            layerConfig.forEach((layer) => {\n                if (layer.encoding) {\n                    Object.values(layer.encoding).forEach((enc) => {\n                        if (enc && optionalProjections.indexOf(enc.field) === -1) {\n                            optionalProjections.push(enc.field ? enc.field : enc);\n                        }\n                    });\n                }\n            });\n        }\n        this.projections({ optionalProjections });\n        return otherEncodings;\n    }\n\n    /**\n     * return the normalized set of rows and facets and projections\n     *\n     * @param {Object} rows parameters needed to set horizontal axis consisiting of rows\n     * @return {Object} facets, projections and normalized rows\n     * @memberof MatrixResolver\n     */\n    horizontalAxis (rows, encoder) {\n        if (rows) {\n            this._horizontalAxis = setFacetsAndProjections(this, { type: ROW, fields: rows }, encoder);\n            return this;\n        }\n        return this._horizontalAxis;\n    }\n\n    /**\n     * return the normalized set of columns and facets and projections\n     *\n     * @param {Object} columns parameters needed to set vertical axis consisiting of columns\n     * @return {Object} facets, projections and normalized columns\n     * @memberof MatrixResolver\n     */\n    verticalAxis (columns, encoder) {\n        if (columns) {\n            this._verticalAxis = setFacetsAndProjections(this, { type: COL, fields: columns }, encoder);\n            return this;\n        }\n        return this._verticalAxis;\n    }\n\n    /**\n     * Gets the class definition of a particular cell type(if the particular type has been extended, that particular\n     * definition is returned)\n     *\n     * @param {Object} cell cell whose class definition is to be retrieved\n     * @return {Object} cell definition\n     * @memberof MatrixResolver\n     */\n    getCellDef (cell) {\n        const registry = this.registry();\n\n        Object.values(registry).forEach((e) => {\n            if (e.prototype instanceof cell) {\n                cell = e;\n            }\n        });\n        return cell;\n    }\n\n    /**\n     * return a visual cell creator along with its axis information to be injected to the datamodel creation\n     * function\n     *\n     * @param {Object} GeomCell Type of cell to be created\n     * @return {Object} Created cell\n     * @memberof MatrixResolver\n     */\n    valueCellsCreator (context) {\n        // reset matrix layers\n        this.matrixLayers([]);\n\n        return (datamodel, fieldInfo, facets) => createValueCells(context, datamodel, fieldInfo, facets);\n    }\n\n    /**\n     * Callback to be applied on each cell of a matrix of a particular type\n     *\n     * @param {string} matrixType type of matrix on which callback is to be applied\n     * @param {Function} callback function to be applied to each cell\n     * @memberof MatrixResolver\n     */\n    forEach (matrixType, callback) {\n        this[matrixType]().forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                callback(rIndex, cIndex, col);\n            });\n        });\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getAllFields () {\n        const retObj = this.projections();\n\n        Object.entries(this.facets()).forEach((e) => {\n            retObj[e[0]] = e[1];\n        });\n        return retObj;\n    }\n\n    /**\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    resetSimpleAxes () {\n        return this.axes({\n            x: new Set(),\n            y: new Set()\n        });\n    }\n\n    setFireboltDependencies (prop, deps) {\n        Object.assign(this._fireboltDeps, {\n            [prop]: deps\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} componentRegistry\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createUnits (componentRegistry, config) {\n        const {\n            globalConfig,\n            alias,\n            coord\n        } = config;\n        const {\n            layerRegistry,\n            sideEffectRegistry\n        } = componentRegistry;\n        const {\n            smartlabel: smartLabel,\n            lifeCycleManager,\n            throwback\n        } = this.dependencies();\n        const fireboltDeps = this._fireboltDeps;\n\n        // Provide the source for the matrix\n        const units = [[]];\n        // Setting unit configuration\n        const unitConfig = extractUnitConfig(globalConfig || {});\n        const store = this.store();\n        store.lockModel();\n\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            let unit = el.source();\n            if (!unit) {\n                const namespace = `unit${i}-${j}-${getUniqueId()}`;\n\n                unit = VisualUnit.create({\n                    layerRegistry,\n                    sideEffectRegistry\n                }, {\n                    smartLabel,\n                    lifeCycleManager,\n                    throwback,\n                    fireboltDeps\n                });\n                unit.metaInf({\n                    rowIndex: i,\n                    colIndex: j,\n                    namespace\n                });\n                unit.store(store);\n                unit.coord(coord);\n                el.source(unit);\n            }\n            !units[i] && (units[i] = []);\n            units[i][j] = unit;\n            unit.parentAlias(alias)\n                .valueParser(this.valueParser())\n                .coord(coord);\n            el.config(unitConfig);\n        });\n        store.unlockModel();\n        lifeCycleManager.notify({ client: units, action: INITIALIZED, formalName: UNIT });\n        return this.units(units);\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    setDomains (config, datamodel, encoders) {\n        const {\n            color,\n            shape,\n            size,\n            globalConfig\n        } = config;\n        const groupBy = globalConfig.autoGroupBy;\n        const {\n            rowFacets,\n            colFacets\n        } = this.getAllFields();\n        const encoding = {\n            color,\n            shape,\n            size\n        };\n        const facetFields = [...rowFacets.map(e => e.toString()), ...colFacets.map(e => e.toString())];\n        const retContext = {\n            domains: encoders.simpleEncoder.getRetinalFieldsDomain(datamodel, encoding, facetFields, groupBy),\n            axes: this.axes(),\n            encoding\n        };\n        encoders.retinalEncoder.setCommonDomain(retContext);\n        return this;\n    }\n\n    resetFacetsAndProjections () {\n        this._facets = {};\n        this._projections = {};\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getRetinalAxes () {\n        const {\n            color,\n            shape,\n            size\n        } = this.axes();\n\n        return {\n            color: [...color],\n            shape: [...shape],\n            size: [...size]\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} type\n     *\n     * @memberof MatrixResolver\n     */\n    getSimpleAxes (type) {\n        return this.axes()[`${type}`];\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createRetinalAxes (fieldsConfig, config, encoders) {\n        const layerConfig = this.layerConfig();\n        this.optionalProjections(config, layerConfig);\n        const retinalAxes = encoders.retinalEncoder.createAxis({\n            fieldsConfig,\n            config,\n            axes: this.axes()\n        });\n        const {\n            lifeCycleManager\n        } = this.dependencies();\n\n        [COLOR, SHAPE, SIZE].forEach((e) => {\n            this.axes()[e] = retinalAxes[e];\n        });\n\n        lifeCycleManager.notify({ client: this.axes(), action: INITIALIZED, formalName: AXIS });\n        lifeCycleManager.notify({ client: this.units(), action: BEFORE_UPDATE, formalName: UNIT });\n\n        const units = [];\n        const matrixLayers = this.matrixLayers();\n        const props = [`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.domain`,\n            `${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`];\n        const store = this.store();\n        store.lockCommits(props);\n        store.lockModel();\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            el.axes(Object.assign(el.axes(), retinalAxes));\n            el.source() && el.source().retinalFields(config);\n            el.layerDef(matrixLayers[i][j]);\n            el.updateModel();\n\n            units.push(el.source());\n        });\n        store.unlockModel()\n            .unlockCommits([props[0]])\n            .unlockCommits([props[1]]);\n        lifeCycleManager.notify({ client: units, action: UPDATED, formalName: UNIT });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} placeholders\n     * @param {*} fieldNames\n     *\n     * @memberof MatrixResolver\n     */\n    createHeaders (placeholders, fieldNames, config) {\n        let bottomLeft = [];\n        let bottomRight = [];\n        const {\n            rows,\n            columns\n        } = placeholders;\n        const {\n            smartlabel: labelManager,\n            lifeCycleManager\n        } = this.dependencies();\n        const {\n            showHeaders,\n            classPrefix\n        } = config;\n        const TextCell = this.getCellDef(this.registry().TextCell);\n        const BlankCell = this.getCellDef(this.registry().BlankCell);\n        const [leftRows, rightRows] = rows;\n        const [topCols, bottomCols] = columns;\n        const rowHeaders = fieldNames.rows;\n        const blankCellCreator = cell => new BlankCell().config({ show: cell.config().show });\n\n        // Headers and footers are created based on the rows. Thereafter, using the column information\n        // they are tabularized into the current structure\n        const headers = {\n            left: headerCreator(leftRows, rowHeaders[0], showHeaders ? TextCell : BlankCell,\n                { classPrefix, labelManager }),\n            right: headerCreator(rightRows, rowHeaders[1], showHeaders ? TextCell : BlankCell,\n                { classPrefix, labelManager })\n        };\n        const footers = {\n            left: leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : [],\n            right: rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []\n        };\n        const [topLeft, topRight] = [LEFT, RIGHT].map(type => topCols.map((col, i) => {\n            if (i === topCols.length - 1) {\n                return headers[type];\n            }\n            return footers[type];\n        }));\n\n        // Creating only bottom matrices if there is no information on the top\n        if (topCols.length === 0) {\n            [bottomLeft, bottomRight] = [LEFT, RIGHT].map(type => bottomCols.map((col, i) => {\n                if (i === 0) {\n                    return headers[type];\n                }\n                return footers[type];\n            }));\n        } else {\n            bottomLeft = bottomCols.map(() => (leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : []));\n            bottomRight = bottomCols.map(() => (rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []));\n        }\n\n        lifeCycleManager.notify({\n            client: [topLeft, topRight, bottomLeft, bottomRight],\n            action: INITIALIZED,\n            formalName: FACET_HEADERS\n        });\n\n        return { topLeft, topRight, bottomLeft, bottomRight };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @param {*} componentRegistry\n     * @param {*} encoders\n     *\n     * @memberof MatrixResolver\n     */\n    getMatrices (datamodel, config, componentRegistry, encoders) {\n        const context = {\n            datamodel,\n            componentRegistry,\n            encoders,\n            resolver: this\n        };\n\n        return computeMatrices(context, config);\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            return this;\n        }\n        return this._store;\n    }\n\n    clear () {\n        const cacheMaps = this._cacheMaps;\n        for (const key in cacheMaps) {\n            cacheMaps[key].clear();\n        }\n    }\n\n}\n","/**\n * This is a wrapper class over the matrix of cells which gets created in visual group. Visual Group creates left,\n * right, bottom and top and center matrices and wraps them using this class.\n *\n * @public\n * @class ValueMatrix\n */\nclass ValueMatrix {\n\n    /**\n     * Creates an instance of ValueMatrix.\n     *\n     * @param {Array} matrixArr Matrix array.\n     */\n    constructor (matrixArr) {\n        const instancesById = {};\n\n        this.matrix(matrixArr || []);\n        this.filter(() => true);\n\n        this.each((el, rIdx, cIdx) => {\n            const cellValue = el.valueOf();\n            if (cellValue && cellValue.id) {\n                const id = cellValue.id();\n                instancesById[id] = {\n                    instance: cellValue,\n                    rowIndex: rIdx,\n                    colIndex: cIdx\n                };\n            }\n        });\n\n        this.instancesById(instancesById);\n    }\n\n    instancesById (...id) {\n        if (id.length) {\n            this._instancesById = id[0];\n            return this;\n        }\n        return this._instancesById;\n    }\n\n    /**\n     * Returns the array of matrices contained in this instance.\n     *\n     * @public\n     * @return {Array} Array of matrices.\n     */\n    matrix (...matrix) {\n        if (matrix.length) {\n            this._matrix = matrix[0];\n            return this;\n        }\n        return this._matrix;\n    }\n\n    /**\n     * Sets a filter criteria. This filter criteria gets applied when each function is called.\n     *\n     * @public\n     * @param {Function} fn Filter function.\n     *\n     * @return {ValueMatrix} Instance of value matrix.\n     */\n    filter (...fn) {\n        if (fn.length) {\n            this._filterFn = fn[0];\n            return this;\n        }\n        return this._filterFn;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    width () {\n        let rowWidth = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowWidth = 0;\n            row.forEach((cell) => {\n                currentRowWidth += cell.getLogicalSpace().width;\n            });\n            rowWidth = Math.max(rowWidth, currentRowWidth);\n        });\n        return rowWidth;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    height () {\n        let rowHeight = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowHeight = 0;\n            row.forEach((cell) => {\n                currentRowHeight = Math.max(currentRowHeight, cell.getLogicalSpace().height);\n            });\n            rowHeight += currentRowHeight;\n        });\n        return rowHeight;\n    }\n\n    /**\n     * Iterates through the two dimensional matrix array and calls the given callback function with the cell instance,\n     * row index, column index and the matrix array.\n     *\n     * @param {Function} fn Callback function which will get called for every cell.\n     * @return {ValueMatrix} Instance of the value matrix.\n     */\n    each (fn) {\n        const matrix = this.matrix();\n        const filterFn = this.filter();\n\n        matrix.forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                if (filterFn(col)) {\n                    fn(col, rIndex, cIndex, matrix);\n                }\n            });\n        });\n        return this;\n    }\n\n    findPlaceHolderById (id) {\n        return this.instancesById()[id];\n    }\n\n    clear () {\n        this.each(cell => cell.remove());\n        this.matrix([]);\n    }\n}\n\nexport default ValueMatrix;\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { BaseLayer } from '@chartshq/visual-layer';\nimport { getEncoder, getBorders } from '../group-helper';\nimport { RetinalEncoder } from '../encoder';\nimport { registerDomainChangeListener, unsubscribeChangeListeners } from './change-listener';\nimport ValueMatrix from './value-matrix';\n\nexport const createUnitState = (context) => {\n    const [globalState, localState] = VisualUnit.getState();\n    const store = context.store();\n    store.append(STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE, globalState)\n        .append(STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE, localState);\n};\n\nexport const initializeGlobalState = (context) => {\n    const globalState = context.constructor.getState()[0];\n    const store = context.store();\n    store.append(STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE, globalState);\n};\n\nexport const createLayerState = (context) => {\n    const [globalState, localState] = BaseLayer.getState();\n    context.store().append(STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE, globalState)\n        .append(STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE, localState);\n};\n\nconst sanitizeRetinalConfig = (retinalConf) => {\n    const conf = {};\n    for (const key in retinalConf) {\n        const confValue = retinalConf[key];\n        if (typeof confValue === 'string' || !confValue) {\n            conf[key] = {\n                field: retinalConf[key]\n            };\n        } else {\n            conf[key] = confValue;\n        }\n    }\n    return conf;\n};\n\nexport const setMatrixInstances = (context, placeholder) => {\n    let {\n        values,\n        rows,\n        columns\n    } = placeholder;\n    values = values || [];\n    rows = rows || [];\n    columns = columns || [];\n    context._composition.matrices = {\n        value: new ValueMatrix(values),\n        left: new ValueMatrix(rows[0]),\n        right: new ValueMatrix(rows[1]),\n        top: new ValueMatrix(columns[0]),\n        bottom: new ValueMatrix(columns[1])\n    };\n\n    context._dependencies.throwback.commit(CommonProps.MATRIX_CREATED, true);\n    return context;\n};\n\nexport const createMatrices = (context) => {\n    const rows = context.rows();\n    const columns = context.columns();\n    const color = context.color();\n    const datamodel = context.data();\n    const size = context.size();\n    const detail = context.detail();\n    const layers = context.layers();\n    const transform = context.transform();\n    const config = context.config();\n    const shape = context.shape();\n\n    // Get the resolver for the matrices\n    const resolver = context.resolver();\n    resolver.store(context.store());\n    resolver.valueParser(context.valueParser());\n    // Prepare configuration for matrix preparation\n    let matrixConfig = {\n        selection: context.selection(),\n        alias: context.alias(),\n        globalConfig: config || {},\n        rows,\n        columns,\n        detail,\n        layers,\n        transform\n    };\n\n    unsubscribeChangeListeners(context);\n\n    const retinalConfig = sanitizeRetinalConfig({\n        color,\n        shape,\n        size\n    });\n\n    matrixConfig = Object.assign(matrixConfig, retinalConfig);\n    // Create the encoders for the group\n    const encoders = {};\n    encoders.retinalEncoder = new RetinalEncoder();\n    encoders.simpleEncoder = getEncoder(layers);\n    matrixConfig.coord = encoders.simpleEncoder.constructor.type();\n    resolver.encoder(encoders.simpleEncoder);\n\n    // Set the group type\n    context.groupType(encoders.simpleEncoder.constructor.type());\n\n    // Get sanitized fields as instances of the Vars Class\n    const fields = encoders.simpleEncoder.fieldSanitizer(datamodel, matrixConfig);\n    encoders.simpleEncoder.setAxisAndHeaders(config ? config.axisFrom : {}, fields);\n    // Setting layers for the code\n    layers && resolver.layerConfig(layers);\n    // Set the row and column axes\n    resolver.horizontalAxis(fields.rows, encoders).verticalAxis(fields.columns, encoders);\n    // Getting the placeholders\n    const placeholderInfo = resolver.getMatrices(datamodel, matrixConfig, context.registry(), encoders);\n    context._groupedDataModel = placeholderInfo.dataModels.groupedModel;\n    // Set the selection object\n    context.selection(placeholderInfo.selection);\n\n    // Create retinal axes\n    resolver.createRetinalAxes(placeholderInfo.dataModels.parentModel.getFieldsConfig(), retinalConfig,\n            encoders);\n\n    // Domains are evaluated for each of the axes for commonality\n    resolver.setDomains(matrixConfig, placeholderInfo.dataModels, encoders);\n\n    // Create matrix instances\n    setMatrixInstances(context, placeholderInfo);\n\n    // Prepare corner matrices\n    context.cornerMatrices(resolver.createHeaders(placeholderInfo, fields, config));\n\n    // Set placeholder information\n    context.placeholderInfo(placeholderInfo);\n\n    context._composition.axes = resolver.axes();\n    context.metaData({\n        border: getBorders(placeholderInfo, encoders.simpleEncoder)\n    });\n\n    resolver.encoder().unionUnitDomains(context);\n\n    registerDomainChangeListener(context);\n    return context;\n};\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { BaseLayer } from '@chartshq/visual-layer';\n\nimport { STATE_NAMESPACES } from 'muze-utils';\n\nexport const setupChangeListeners = (context) => {\n    const store = context.store();\n    const stores = {\n        throwback: context._dependencies.throwback,\n        store\n    };\n\n    ['x', 'y'].forEach((axisType) => {\n        store.registerChangeListener([`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${axisType}`], () => {\n            const groupAxes = context.resolver().axes();\n            groupAxes[axisType].forEach(axes => axes.forEach((axis) => {\n                axis.render();\n            }));\n        });\n    });\n\n    [VisualUnit, BaseLayer].forEach((comp) => {\n        const formalName = comp.formalName();\n        ['store', 'throwback'].forEach((type) => {\n            const listeners = comp.getListeners()[type];\n            const storeInst = stores[type];\n            listeners.forEach((listenerInf) => {\n                storeInst[listenerInf.type](listenerInf.props, listenerInf.listener, false, {\n                    namespace: formalName,\n                    subNamespace: listenerInf.subNamespace\n                });\n            });\n        });\n    });\n};\n\nexport const registerDomainChangeListener = (context) => {\n    const store = context.store();\n    store.registerChangeListener([`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`], () => {\n        context.resolver().encoder().unionUnitDomains(context);\n    }, false, {\n        key: 'unionDomain'\n    });\n};\n\nexport const unsubscribeChangeListeners = (context) => {\n    context.store().unsubscribe({\n        key: 'unionDomain'\n    });\n};\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\nexport const PROPS = {\n    alias: {},\n    data: {},\n    cornerMatrices: {\n        defaultValue: {\n            topLeft: [],\n            topRight: [],\n            bottomLeft: [],\n            bottomRight: []\n        }\n    },\n    groupType: {},\n\n    metaData: {\n        defaultValue: {\n            border: {}\n        }\n    },\n    placeholderInfo: {\n        defaultValue: {}\n    },\n    resolver: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    registry: {\n        sanitization: (context, value) => {\n            if (context.resolver) {\n                context.resolver().registry(value.cellRegistry);\n            }\n            return value;\n        }\n    },\n    selection: {},\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { generateGetterSetters } from 'muze-utils';\nimport localOptions from './local-options';\nimport { SimpleGroup } from '../simple-group';\nimport {\n    MatrixResolver,\n    findInGroup\n} from '../group-helper';\nimport { createUnitState, initializeGlobalState, setMatrixInstances, createMatrices, createLayerState } from './helper';\nimport { setupChangeListeners } from './change-listener';\nimport { PROPS } from './props';\nimport {\n    CONFIG,\n    MOUNT,\n    RETINAL,\n    Y\n} from '../enums/constants';\n\n/**\n * VisualGroup is instantiated by canvas for creating {@link VisualUnit} and axes instances.It creates the\n * the matrix of visual units and axes. It also creates the layout instance which manages the allocation\n * of space of matrices.\n *\n * To get instance of visual group,\n * ```\n *      const visualGroup = canvas.composition().visualGroup;\n * ```\n * @public\n *\n * @class VisualGroup\n */\nclass VisualGroup extends SimpleGroup {\n\n    /**\n     * Creates an instance of VisualGroup. Requires dependencies and other registry options for placeholders\n     * and layers that create individual units.\n     *\n     * @param {Object} registry Key value pair of compostions for the group\n     * @param {Object} dependencies Dependencies needed to run the group\n     * @memberof VisualGroup\n     */\n    constructor (registry, dependencies) {\n        super();\n\n        const {\n            componentSubRegistry\n        } = registry;\n\n        this._dependencies = dependencies;\n        // Generate getter/setter methods for all properties of the class\n        // One can get each property by calling the method and can set it\n        // by passing paramaters for the same. Thus, one can chain setter\n        // getter methods.\n        generateGetterSetters(this, PROPS);\n        generateGetterSetters(this, localOptions);\n        // Populate the store with default values\n        // initialize group compositions\n        this._composition = {};\n        // store reference to data\n        this._data = [];\n        // store reference to mountpoint\n        this._mount = null;\n        // selection object that takes care of updating of components\n        this._selection = {};\n        // Create instance of matrix resolver\n        this.resolver(new MatrixResolver(this._dependencies));\n        // matrix instance store each of the matrices\n        setMatrixInstances(this, {});\n         // Getting indiviual registered items\n        this.registry({\n            layerRegistry: componentSubRegistry.layerRegistry.get(),\n            cellRegistry: componentSubRegistry.cellRegistry.get()\n        });\n    }\n\n    static getState () {\n        return [{\n            domain: {\n                x: null,\n                y: null,\n                radius: null,\n                angle: null,\n                angle0: null\n            }\n        }, {}];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            initializeGlobalState(this);\n            createUnitState(this);\n            createLayerState(this);\n            // Register listeners\n            setupChangeListeners(this);\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Return the instances of matrices created by the visual group.\n     *\n     * @return {Object} Instance of matrices.\n     */\n    matrixInstance (...matrices) {\n        if (matrices.length) {\n            return this;\n        }\n        return this.composition().matrices;\n    }\n\n    /**\n     * Returns the composition of visual group.\n     *\n     * @public\n     *\n     * @return {Object} Composition of visual group. It contains instance of matrices {@link ValueMatrix}\n     * and instances of axis.\n     * ```\n     *          {\n     *              matrices: {\n     *                  value: // Instance of center value matrix.\n     *                  left: // Instance of left value matrix\n     *                  right: // Instance of right value matrix\n     *                  bottom: // Instance of bottom value matrix\n     *                  top: // Instance of top value matrix.\n     *              },\n     *              axes: {\n     *                  x: // Array of x axis.\n     *                  y: // Array of y axis\n     *                  color: // Array of color axis\n     *                  shape: // Array of shape axis\n     *                  size: // Array of size axis.\n     *              }\n     *          }\n     * ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    /**\n     * Locks the model to prevent change listeners to be triggered until unlocked\n     *\n     * @return {Object} Instance of class VisualGroup\n     * @memberof VisualGroup\n     */\n    lockModel () {\n        this.store().model.lock();\n        return this;\n    }\n\n    /**\n     * Unlocks the model so that all change listeners can be triggered\n     *\n     * @return {Object} Instance of class VisualGroup\n     */\n    unlockModel () {\n        this.store().model.unlock();\n        return this;\n    }\n\n    /**\n     * Returns the channel name of the variable. Channels are rows, columns, color, shape and size.\n     *\n     * @public\n     * @param {string} variable Name of the variable.\n     *\n     * @return {string} Name of the channel.\n     */\n    where (variable) {\n        return findInGroup(variable, this.resolver().getAllFields());\n    }\n\n    /**\n     * Gets the axis instances of the visual group based on the given axis type.\n     *\n     * @public\n     * @param {string} type Type of axis. X,Y or retinal axes.\n     *\n     * @return {Array} Array of axis instances.\n     */\n    getAxes (type) {\n        if (type === RETINAL) {\n            return this.resolver().getRetinalAxes();\n        }\n        return this.resolver().getSimpleAxes(type);\n    }\n\n    /**\n     * Returns the instances of cells based on the given type. Type can be given as `row' or `col`.\n     *\n     * @public\n     * @return {Array} Two dimensional array of cells.\n     */\n    getCells (type) {\n        return this.resolver()[`${type}Cells`]();\n    }\n\n    getFieldsFromChannel (channel) {\n        const {\n            rowProjections,\n            colProjections\n        } = this.resolver().getAllFields();\n        return channel === Y ? rowProjections : colProjections;\n    }\n\n    getCellsByFacetKey (facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey] || [];\n        return cells;\n    }\n\n    getAxesByFacetKey (axisType, facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey];\n        const axes = cells[0].valueOf().axes()[axisType] || [];\n\n        return axes;\n    }\n\n    /**\n     * This method is used to return a serialized representation of the instance's properties.\n     *\n     * @return {Object} Object with config proprties.\n     * @memberof VisualGroup\n     */\n    serialize () {\n        const store = this.store();\n\n        return {\n            [CONFIG]: store.get(CONFIG),\n            [MOUNT]: store.get(MOUNT)\n        };\n    }\n\n    /**\n     * Returns the grouped datamodel prepared by visual group. If there is no group by performed, then it returns the\n     * original data model passed to visual group.\n     *\n     * @return {DataModel} Grouped data model.\n     */\n    getGroupByData () {\n        return this._groupedDataModel;\n    }\n\n    createMatrices () {\n        createMatrices(this);\n    }\n\n    remove () {\n        this.matrixInstance().value.clear();\n        this.resolver().clear();\n        const info = this.placeholderInfo();\n        info.rows = null;\n        info.columns = null;\n        info.values = null;\n    }\n}\n\nexport default VisualGroup;\n","import { PersistentBehaviour, SELECTION } from '@chartshq/muze-firebolt';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return 'select';\n    }\n\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            // new add set\n            const existingRemoveSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_OLD_EXIT\n                || selectionSet._set[d] === SELECTION.SELECTION_NEW_EXIT);\n                // existing add set\n            if (existingRemoveSet.length) {\n                selectionSet.updateEntry();\n                selectionSet.add(existingRemoveSet);\n            } else {\n                selectionSet.updateExit();\n                selectionSet.remove(addSet);\n            }\n            const { exitSet } = selectionSet.getSets();\n            const mergedExitSet = [...new Set(exitSet[1]), ...new Set(exitSet[0])];\n            const completeSetCount = selectionSet.getCompleteSet().length;\n            if (exitSet[1].length !== completeSetCount && mergedExitSet.length === completeSetCount) {\n                selectionSet.reset();\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n        return this;\n    }\n}\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nconst CLASSPREFIX = 'muze';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        target: `.${CLASSPREFIX}-gradient-rect`,\n        behaviours: [BEHAVIOURS.BRUSH]\n    },\n    [ACTIONS.HOVER]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.CLICK]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.SELECT]\n    }\n};\n\nexport const propagationBehaviourMap = {\n    [BEHAVIOURS.SELECT]: BEHAVIOURS.FILTER,\n    [BEHAVIOURS.BRUSH]: BEHAVIOURS.HIGHLIGHT\n};\n","import * as BEHAVIOURS from '../enums/behaviours';\nimport * as sideEffects from '../enums/side-effects';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: [sideEffects.SELECTIONBOX, {\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [sideEffects.Highlighter],\n    select: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }]\n};\n\nexport const propagationSideEffects = {\n    [BEHAVIOURS.BRUSH]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.SELECT]: ['filter']\n};\n\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n\n","export const SELECTIONBOX = 'selectionBox';\nexport const Highlighter = 'highlighter';\n\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const CONFIG = 'config';\nexport const DATAMODEL = 'dataModel';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const MAXWIDTH = 'max-width';\nexport const HEIGHT = 'height';\nexport const MOUNTPOINT = 'mountPoint';\nexport const GRIDLINEPARENTGROUPCLASS = 'grid-lines';\nexport const TRANSFORM = 'transform';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const DEFAULTCOLOR = '#F44336';\nexport const DEFAULTSIZE = 50;\nexport const DEFAULTSHAPE = 'circle';\nexport const STEP = 'step';\nexport const GRADIENT = 'gradient';\nexport const ORDINAL = 'ordinal';\nexport const SCALE_FUNCTIONS = {\n    size: 'getSize',\n    shape: 'getShape',\n    color: 'getColor'\n};\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const HORIZONTAL = 'horizontal';\nexport const VERTICAL = 'vertical';\nexport const CENTER = 'center';\nexport const VALUE = 'value';\nexport const PATH = 'path';\nexport const SHAPE = 'shape';\nexport const ICON = 'icon';\nexport const RECT = 'rect';\nexport const START = 'start';\nexport const UPPER = 'upper';\nexport const LOWER = 'lower';\nexport const END = 'end';\nexport const SIZE = 'size';\nexport const DISCRETE = 'discrete';\nexport const MEASURE = 'measure';\n\n","import { assembleModelFromIdentifiers, getDataModelFromRange } from 'muze-utils';\nimport { propagationBehaviourMap } from './action-behaviour-map';\nimport { propagationSideEffects } from './behaviour-effect-map';\nimport { STEP, GRADIENT, DISCRETE, MEASURE } from '../enums/constants';\n\nexport const propagate = (firebolt, action, selectionSet, config = {}) => {\n    let propagationData;\n    const type = firebolt.context.constructor.type();\n    const payload = config.payload;\n    const data = firebolt.context.data();\n    const metaData = firebolt.context.metaData();\n    const fieldType = metaData.getData().schema[0].type;\n\n    const propPayload = {};\n    const sourceId = firebolt.context._id;\n    propPayload.action = propagationBehaviourMap[action] || action;\n    propPayload.sideEffects = propagationSideEffects[action];\n    propPayload.sourceCanvas = firebolt.context.canvasAlias();\n    const isMutableAction = firebolt._actions.behavioural[propPayload.action].constructor.mutates();\n    if (payload.criteria === null) {\n        propagationData = null;\n    } else {\n        const entrySet = selectionSet.mergedEnter;\n        let values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.rawVal);\n        if (type === STEP || (type === DISCRETE && fieldType === MEASURE)) {\n            const field = Object.keys(payload.criteria || {})[0];\n            values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.range);\n            propagationData = values.length ? metaData.select((fields) => {\n                let check = false;\n                for (let i = 0; i < values.length; i++) {\n                    check = fields[field].value >= values[i][0] && fields[field].value <= values[i][1];\n                    if (check === true) {\n                        break;\n                    }\n                }\n                return check;\n            }, {\n                saveChild: false\n            }) : null;\n        } else if (type === GRADIENT) {\n            propagationData = getDataModelFromRange(metaData, payload.criteria);\n        } else if (values.length) {\n            propagationData = assembleModelFromIdentifiers(metaData, [payload.criteria[0], ...values.map(d => [d])]);\n        } else {\n            propPayload.criteria = null;\n            propagationData = metaData.select(() => true, {\n                saveChild: false\n            });\n        }\n    }\n\n    let propagateInterpolatedValues = false;\n\n    if (propagationData) {\n        const schema = propagationData.getSchema();\n        propagateInterpolatedValues = schema.every(d => d.type === MEASURE);\n    }\n\n    const propConfig = {\n        sourceId: `legend-${sourceId}`,\n        payload: propPayload,\n        criteria: propPayload.criteria === null ? null : propagationData,\n        isMutableAction,\n        propagateInterpolatedValues,\n        action: propPayload.action\n    };\n\n    metaData.propagate(propagationData, propConfig, true);\n};\n","import { Firebolt } from '@chartshq/muze-firebolt';\nimport { propagate } from './helper';\nimport { STEP, GRADIENT } from '../enums/constants';\n\n/**\n * This class manages the interactions of legend.\n * @export\n * @class LegendFireBolt\n * @extends {Firebolt}\n */\nexport class LegendFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this.initializeSideEffects();\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet[0];\n    }\n\n    propagate (behaviourName, payload, selectionSet) {\n        propagate(this, behaviourName, selectionSet, {\n            payload\n        });\n    }\n\n    getAddSetFromCriteria (criteria) {\n        let values;\n        let uniqueIds;\n        const type = this.context.constructor.type();\n\n        if (criteria === null) {\n            uniqueIds = null;\n        } else if (type === STEP) {\n            values = Object.values(criteria);\n            uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n        } else if (type === GRADIENT) {\n            uniqueIds = [];\n        } else {\n            values = criteria[1];\n            if (values) {\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.rawVal) !== -1).map(d => d.id);\n            } else {\n                values = Object.values(criteria);\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n            }\n        }\n        return {\n            uids: uniqueIds,\n            model: null\n        };\n    }\n\n    getFullData () {\n        return null;\n    }\n}\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\n/**\n * Adds dragging action to the target element.\n * @param {firebolt} firebolt firebolt\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let endPos = {};\n    let payload;\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const boundingBox = context.measurement().gradientDimensions;\n    const axisType = context.config().align === 'horizontal' ? 'x' : 'y';\n    const axisScale = context.axis().source().scale();\n    const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n    }).on('drag', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                    axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n            }\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }).on('end', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n        if (startPos[axisType] === endPos[axisType]) {\n            payload = {\n                criteria: {}\n            };\n        } else {\n            payload = {\n                criteria: {\n                    [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                        axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n                }\n            };\n        }\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }));\n};\n\nexport default drag;\n","import { getEvent } from 'muze-utils';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} Firebolt instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        const event = getEvent();\n                        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, {\n                            criteria: null\n                        }));\n                        event.stopPropagation();\n                    });\n};\n\nexport default hover;\n","/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nconst click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\n\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport click from './click';\nimport * as ACTIONNAMES from '../../enums/actions';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click\n};\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\n","import {\n    getMousePos,\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\nimport { HEIGHT, WIDTH, HORIZONTAL } from '../../enums/constants';\n\nconst getSelectionCriteria = (subject, axis, measures) => {\n    let criteria = [];\n    const {\n        axisScale,\n        axisType\n    } = axis;\n    const {\n        startPos,\n        endPos,\n        selectionBoxMeasure,\n        drawingInfMeasure,\n        offset\n    } = measures;\n    const subjectStartPoint = subject[axisType];\n\n    if (startPos[axisType] === endPos[axisType]) {\n        criteria = [];\n    } else if (subjectStartPoint + selectionBoxMeasure >= drawingInfMeasure + offset) {\n        criteria = [axisScale.invert(drawingInfMeasure + offset - selectionBoxMeasure),\n            axisScale.invert(drawingInfMeasure + offset)];\n    } else if (subjectStartPoint - offset < offset) {\n        criteria = [axisScale.invert(offset * 2), axisScale.invert(selectionBoxMeasure + offset * 2)];\n    } else {\n        criteria = [axisScale.invert(subjectStartPoint), axisScale.invert(subjectStartPoint + selectionBoxMeasure)];\n    }\n    axisType === 'x' ? criteria : criteria.reverse();\n    return criteria;\n};\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let payload;\n    const endPos = {};\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const axisScale = context.axis().source().scale();\n    const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n    const drawingInfMeasure = context.measurement().gradientDimensions[axisType === 'x' ?\n        WIDTH : HEIGHT];\n    const offset = axisScale.range()[axisType === 'x' ? 0 : 1];\n    const measures = {\n        drawingInfMeasure,\n        offset\n    };\n    let subject = {};\n\n    targetEl.call(d3Drag().on('start', function () {\n        const event = getEvent();\n        startPos = getMousePos(this, event.sourceEvent);\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n\n        subject.x += event.dx;\n        subject.y += event.dy;\n\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(subject, { axisScale, axisType }, measures);\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }).on('end', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(event, { axisScale, axisType }, measures);\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true,\n            config: {\n                transition: {\n                    duration: 200\n                }\n            }\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }));\n};\n\n","import { makeElement } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { CLASSPREFIX, HEIGHT, WIDTH, HORIZONTAL, RECT } from '../../../enums/constants';\nimport { SELECTIONBOX } from '../../../enums/side-effects';\nimport { selectionBoxDrag } from '../../physical/selection-box-drag';\nimport './styles.scss';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\n/* istanbul ignore next */ class SelectionBox extends SpawnableSideEffect {\n    static formalName () {\n        return SELECTIONBOX;\n    }\n\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            className: 'legend-selection-box',\n            classPrefix: CLASSPREFIX\n        };\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     */\n    /* istanbul ignore next */ apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const firebolt = this.firebolt;\n        const context = firebolt.context;\n        const config = this.config();\n        const axis = context.axis().source();\n        const className = `${config.classPrefix}-${config.className}`;\n\n        const domain = payload.criteria[firebolt.context.fieldName()];\n        const axisScale = axis.scale();\n        const range = domain ? [axis.getScaleValue(domain[0]), axis.getScaleValue(domain[1])] : [];\n\n        const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n\n        const gradientDimension = firebolt.context.measurement().gradientDimensions[axisType === 'x' ?\n            HEIGHT : WIDTH];\n\n        const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n        const legendGradContainer = context.getDrawingContext().svgContainer;\n        const legendSelGroup = makeElement(legendGradContainer, 'g', [1], `${config.classPrefix}-selection-box-group`);\n\n        if (firebolt.context.config().align === HORIZONTAL) {\n            x = range[0] - rangeShifter || 0;\n            y = 0;\n            width = range[1] - range[0] || 0;\n            height = gradientDimension;\n        } else {\n            x = 0;\n            y = range[1] - rangeShifter || 0;\n            height = range[0] - range[1] || 0;\n            width = gradientDimension;\n        }\n        const enterFn = function (el) {\n            selectionBoxDrag(firebolt)(el, ['brush']);\n        };\n        const selBox = makeElement(legendSelGroup, RECT, [{ domain, x, y, width, height }], className,\n            { enter: enterFn });\n        selBox.attr('y', y)\n                        .attr('x', x)\n                        .attr(WIDTH, width)\n                        .attr(HEIGHT, height);\n    }\n}\n\nexport default SelectionBox;\n\n","import { selectElement } from 'muze-utils';\n\nexport const strategies = (firebolt) => {\n    const context = firebolt.context;\n    const classed = (set, className, change) => {\n        const classPrefix = context.config().classPrefix;\n        selectElement(context.mount())\n                        .selectAll(`.${classPrefix}-legend-columns`)\n                        .filter(d => set.uids.indexOf(d.id) !== -1)\n                        .selectAll('div')\n                        .classed(className, change);\n    };\n\n    return {\n        fade: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-fadeout`, false);\n            } else {\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-fadeout`, true);\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-fadeout`, false);\n            }\n        },\n        brighten: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-brighten`, false);\n            } else {\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-brighten`, true);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n            }\n        }\n    };\n};\n","import { GenericSideEffect } from '@chartshq/muze-firebolt';\nimport { strategies } from './strategies';\nimport { Highlighter } from '../../../enums/side-effects';\n\nexport default class LegendHighlighter extends GenericSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategies = strategies(this.firebolt);\n        this._strategy = 'brighten';\n    }\n\n    static formalName () {\n        return Highlighter;\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        strategy(selectionSet, this);\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    data: {},\n    fieldName: {},\n    legendContainer: {},\n    measurement: {\n        sanitization: (context, value) => {\n            const measurement = mergeRecursive(context._measurement, value);\n            ['padding', 'border', 'margin'].forEach((space) => {\n                measurement[space] = Math.min(measurement[space] > 0 ? measurement[space] : 0,\n                     measurement.maxWidth * 0.1, measurement.maxHeight * 0.1);\n            });\n            return measurement;\n        }\n    },\n    logicalSpace: {},\n    metaData: {},\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.resetLogicalSpace();\n            context.store().commit('range', value);\n            return value;\n        }\n    },\n    scale: {},\n    smartTicks: {},\n    store: {},\n    title: {\n        sanitization: (context, value) => mergeRecursive(context._title || {}, value)\n    },\n    labelManager: {},\n    minTickDistance: {},\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import { getSymbol } from 'muze-utils';\nimport {\n    CENTER,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\nexport const ALIGN = {\n    HORIZONTAL: 'horizontal',\n    VERTICAL: 'vertical'\n};\n\nexport const DEFAULT_MEASUREMENT = {\n    height: 30,\n    width: 30,\n    maxWidth: Infinity,\n    maxHeight: Infinity,\n    padding: 2,\n    margin: 2,\n    border: 1\n};\n\nexport const LEGEND_TITLE = {\n    text: '',\n    orientation: (pos) => {\n        if (pos === LEFT || pos === RIGHT) {\n            return LEFT;\n        } return CENTER;\n    }\n};\n\nexport const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    borderStyle: 'solid',\n    borderColor: 'rgba(0,0,0,0)',\n    formatter: {\n        bounds: {\n            lower: 'less than',\n            upper: 'more than'\n        }\n    },\n    item: {\n        text: {\n            orientation: 'right',\n            width: 10,\n            formatter: (val, i, data, context) => context.valueParser()(val)\n        },\n        icon: {\n            className: 'legend-icon',\n            height: 20,\n            width: 20,\n            color: 'rgba(0,0,0,.5)',\n            type: 'square'\n        }\n    }\n};\n\n/**\n * Creates a map of pre defined icons\n *\n * @param {string} icon Accepts a icon name like 'square', 'cross', 'diamond' etc\n * @return {Object} icon object which can be used to draw the icons\n */\nexport const ICON_MAP = (icon) => {\n    if (icon && typeof (icon) === 'string') {\n        return getSymbol(icon);\n    } return icon;\n};\n","import { makeElement, numberInterpolator } from 'muze-utils';\n\nimport {\n    SCALE_FUNCTIONS,\n    WIDTH,\n    HEIGHT,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    MAXWIDTH\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} scale\n *\n */\nexport const getScaleInfo = (scale) => {\n    const scaleType = scale.constructor.type();\n    const domain = scale.uniqueValues();\n    const steps = scale.config().stops || 1;\n    const scaleFn = SCALE_FUNCTIONS[scaleType];\n\n    return { scaleType, domain, steps, scaleFn };\n};\n\n/**\n * Function to recompute the stops in array in case to left and right alignment of legend.\n *\n * @param  {string} param - parameter to measure\n * @param  {Object} requiredMeasure - required measure parameters\n * @param  {Object} availableMeasure - available meassure parameters\n * @param  {Array} domainForLegend - array\n * @param  {Object} smartLabelCalc - smartLabel Manager\n * @return {Array} - Array\n */\nconst getcomputedArray = (computationhelper, requiredMeasure, availableMeasure, domainForLegend) => {\n    // declaring Current and Next Tick Value variable\n    let currentTickValue;\n    let nextTickValue;\n    const upperBound = domainForLegend[domainForLegend.length - 1];\n    const param = computationhelper.measureParam;\n    const smartLabelCalc = computationhelper.smartLabelCalc;\n\n    // calculating pixel required per Tick Values\n    const pixelPerTick = (availableMeasure[param] / upperBound);\n\n    // checking if available max width is smaller than required width for legend.\n    if (availableMeasure[param] >= requiredMeasure[param]) {\n        return domainForLegend;\n    }\n\n    currentTickValue = (smartLabelCalc.getOriSize((domainForLegend[0]))[param]);\n    for (let i = 1; i < domainForLegend.length - 1; i++) {\n        nextTickValue = Math.floor((currentTickValue / pixelPerTick) + domainForLegend[i - 1]);\n        if (domainForLegend[i] < nextTickValue) {\n            domainForLegend.splice(i, 1);\n            i -= 1;\n        }\n        currentTickValue = (smartLabelCalc.getOriSize((domainForLegend[i]))[param]);\n    }\n    return domainForLegend;\n};\n\n/**\n * function to recompute the Stops Array provided to prevent the Overlapping of values\n * @param  {Array} domainForLegend - Stops Array\n * @param  {Object} scaleParams - Scale Parameters\n * @return {Array} - modified Stops Array\n */\nexport const getInterpolatedArrayData = (domainForLegend, scaleParams) => {\n    // defining param for height/width selector\n    let measureParam;\n\n    // declaring variable for required Width\n    let requiredWidth;\n\n    // declaring variable for required height\n    let requiredHeight;\n\n    // declaring the variable for upperbound\n    let upperBound = domainForLegend[domainForLegend.length - 1];\n\n    // Initializing Minimum Tick Difference Variable and checking if it's less than 1 or not\n    let minTickDiff = Math.ceil(domainForLegend[1] - domainForLegend[0]);\n\n    // calculating max tick difference\n    const maxTickDiff = Math.ceil(upperBound - domainForLegend[0]);\n\n    // gradient Alignment\n    const { alignment } = scaleParams;\n\n    // getting SmartLabel Manager to calculate tick Params\n    const smartLabelCalc = scaleParams.smartLabel;\n\n    // scale Measurements (i.e MaxWidth and MaxHeight available)\n    const availableSpace = scaleParams.measures;\n\n    // getting minimum Tick size (i.e height and width)\n    const minimumTickSize = scaleParams.minTickDistance;\n\n    // getting domain upperbound dimensions\n    const { height: tickDimHeight, width: tickDimWidth } = smartLabelCalc.getOriSize((upperBound));\n\n    /* Checking if UpperBound of Domain is Floating or Not.\n    In case of floating constricting it to 2 decimals after point. */\n    if (!Number.isInteger(upperBound)) {\n        upperBound = ((upperBound).toFixed(2));\n    }\n\n    // Calculating minimum tick difference\n    minTickDiff = minTickDiff < 1 ? 1 : minTickDiff;\n\n    // required width to render legend\n    requiredWidth = (Math.abs(maxTickDiff) / Math.abs(minTickDiff)) * (tickDimWidth + (minimumTickSize.width));\n\n    requiredWidth -= Math.abs(maxTickDiff);\n\n    // require height to render legend\n    requiredHeight = (Math.abs(maxTickDiff) / Math.abs(minTickDiff)) * tickDimHeight;\n\n    requiredHeight -= Math.abs(maxTickDiff);\n\n    // checking the alignment of legend\n    if (alignment === TOP || alignment === BOTTOM) {\n        measureParam = WIDTH;\n    } else {\n        measureParam = HEIGHT;\n    }\n\n    // calculating computed array\n    domainForLegend = getcomputedArray({\n        smartLabelCalc,\n        measureParam\n    }, {\n        height: requiredHeight,\n        width: requiredWidth\n    }, {\n        height: availableSpace.maxHeight,\n        width: availableSpace.maxWidth\n    }, domainForLegend);\n\n    return domainForLegend;\n};\n\n/**\n * function to recalculate steps on providing more number of stops than canvas can accomodate.\n * @param  {Array} domain - Array\n * @param  {Array} steps - Array\n * @param  {Object} scaleParams - Scale Parameters\n * @return {Array} - recalculated Step Array\n */\nexport const getInterpolatedData = (domain, steps, scaleParams) => {\n    // declaring recomputeSteps Variable\n    let recomputeSteps = 0;\n\n    const getTickMeasure = scaleParams.smartLabel;\n    const { maxWidth, maxHeight } = scaleParams.measures;\n    const { alignment } = scaleParams;\n    const domainForLegend = [];\n    const interpolatedFn = numberInterpolator()(domain[0], domain[1]);\n\n    // getting tick measure(i.e height and width)\n    const tickValue = getTickMeasure.getOriSize(domain[1].toFixed(2));\n\n    // To round the floating values to Integer and checking if value is 1.\n    steps = Math.round(steps);\n    steps = steps < 1 ? (steps + 1) : steps;\n\n    // checking alignment of the Axis\n    if (alignment === TOP || alignment === BOTTOM) {\n        recomputeSteps = Math.floor(maxWidth / (tickValue.width));\n    } else {\n        recomputeSteps = Math.floor(maxHeight / (tickValue.height));\n    }\n    steps = Math.min(steps, recomputeSteps);\n\n    // scaling the axis based on steps provided\n    for (let i = 0; i <= steps; i++) {\n        domainForLegend[i] = interpolatedFn(i / steps);\n    }\n    return domainForLegend;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} text\n * @param {*} measurement\n * @param {*} classPrefix\n */\nexport const titleCreator = (container, title, measurement, config) => {\n    const titleWidth = Math.min(measurement.maxWidth, measurement.width);\n\n    const titleContainer = makeElement(container, 'table', [1], `${config.classPrefix}-legend-title`)\n            .style(WIDTH, `${titleWidth}px`)\n            .style(HEIGHT, `${measurement.height}px`)\n            .style('border-bottom', `${measurement.border}px ${config.borderStyle} ${config.borderColor}`)\n            .style('text-align', title.orientation instanceof Function ?\n            title.orientation(config.position) : title.orientation);\n    return makeElement(titleContainer, 'td', [1], `${config.classPrefix}-legend-title-text`)\n                    .style(WIDTH, `${titleWidth}px`)\n                    .style(MAXWIDTH, `${titleWidth}px`)\n                    .style(HEIGHT, '100%')\n                    .style('line-height', 1)\n                    .style('padding', `${measurement.padding}px`)\n                    .text(title.text)\n                    .style('overflow-x', 'scroll')\n                    .node();\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getMaxMeasures = (data, prop, labelManager) => {\n    let maxHeight = -Infinity;\n    let maxWidth = -Infinity;\n\n    data.forEach((item) => {\n        const value = prop ? item[prop] : item;\n        const space = labelManager.getOriSize(value);\n        maxHeight = Math.max(space.height + 2, maxHeight);\n        maxWidth = Math.max(space.width + 2, maxWidth);\n    });\n\n    return { height: maxHeight, width: maxWidth };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getItemMeasures = (context, prop, formatter) => {\n    const space = [];\n    const data = context.data();\n    const labelManager = context._labelManager;\n\n    data.forEach((item, index) => {\n        const value = prop ? item[prop] : item;\n        const { height, width } = labelManager.getOriSize(formatter(value, index, data, context));\n        space[index] = { height: height + 1, width: width + 1 };\n    });\n    return space;\n};\n\n/**\n *\n *\n * @param {*} textOrientation\n * @param {*} effPadding\n * @param {*} titleSpace\n *\n * @memberof Legend\n */\nexport const computeItemSpaces = (config, measures, data) => {\n    let totalHeight = 0;\n    let totalWidth = 0;\n    let maxItemSpaces = {\n        width: 0, height: 0\n    };\n    const {\n        effPadding,\n        titleWidth,\n        labelSpaces,\n        titleHeight,\n        maxWidth\n    } = measures;\n    const {\n        item,\n        align\n    } = config;\n    const {\n        icon,\n        text\n    } = item;\n    const textOrientation = text.orientation;\n    const itemSpaces = [];\n    const iconSpaces = [];\n    let maxIconWidth = 0;\n    labelSpaces.forEach((labelSpace, i) => {\n        const itemSpace = { width: 0, height: 0 };\n        const iconSpace = { width: 0, height: 0 };\n        const datum = data[i] || {};\n            // Compute each legend item height/width\n        if (textOrientation === LEFT || textOrientation === RIGHT) {\n            // Get label, icon and item widths\n            labelSpace.width += effPadding;\n            iconSpace.width = (datum.size ? 2 * Math.sqrt(datum.size / Math.PI) : icon.width) + effPadding;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n            itemSpace.width = labelSpace.width + maxIconWidth;\n\n            // Get label, icon and item heights\n            labelSpace.height = Math.max(labelSpace.height, icon.height) + effPadding;\n            iconSpace.height = labelSpace.height;\n            itemSpace.height = labelSpace.height;\n        } else {\n            // Get label, icon and item widths\n            labelSpace.width = Math.max(labelSpace.width, datum.size ? 2 * Math.sqrt(datum.size / Math.PI)\n            : icon.width) + effPadding;\n            iconSpace.width = labelSpace.width;\n            itemSpace.width = labelSpace.width;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n\n            // Get label, icon and item heights\n            labelSpace.height += effPadding;\n            iconSpace.height = icon.height + effPadding;\n            itemSpace.height = labelSpace.height + iconSpace.height;\n        }\n        // Compute height and width of legend for each alignment\n        if (align === 'horizontal') {\n            totalHeight = Math.max(totalHeight, itemSpace.height);\n        } else {\n            totalHeight += itemSpace.height;\n            totalWidth = Math.max(totalWidth, itemSpace.width, titleWidth);\n        }\n        maxItemSpaces = {\n            width: Math.max(itemSpace.width, maxItemSpaces.width),\n            height: Math.max(itemSpace.height, maxItemSpaces.height)\n        };\n        itemSpaces.push(itemSpace);\n        iconSpaces.push(iconSpace);\n    });\n    itemSpaces.forEach((itemSpace, i) => {\n        if (align === 'horizontal') {\n            itemSpace.height = totalHeight;\n            iconSpaces[i].width = maxIconWidth;\n            if (textOrientation === LEFT || textOrientation === RIGHT) {\n                labelSpaces[i].height = totalHeight;\n                iconSpaces[i].height = totalHeight;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n            } else {\n                labelSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = maxIconWidth;\n                labelSpaces[i].width = maxIconWidth;\n            }\n            totalWidth = Math.max(totalWidth + itemSpaces[i].width);\n        } else {\n            itemSpace.width = Math.max(totalWidth, maxWidth);\n            if (textOrientation === TOP || textOrientation === BOTTOM) {\n                labelSpaces[i].width = totalWidth;\n                iconSpaces[i].width = totalWidth;\n                maxIconWidth = totalWidth;\n            } else {\n                const labelWidth = labelSpaces[i].width;\n                const newLabelWidth = (maxItemSpaces.width - maxIconWidth);\n                iconSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n                labelSpaces[i].width = Math.max(labelWidth, newLabelWidth);\n                totalWidth = Math.max(totalWidth, itemSpace.width);\n            }\n        }\n    });\n    totalWidth = Math.ceil(Math.max(totalWidth, titleWidth)) + effPadding;\n    totalHeight += titleHeight + effPadding;\n    totalHeight = Math.ceil(totalHeight);\n    return { totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth };\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} scaleInfo\n * @param {*} domainInfo\n *\n */\nexport const getDomainBounds = (type, scaleInfo, domainInfo) => {\n    const {\n        scaleFn,\n        scaleType,\n        scale\n    } = scaleInfo;\n    const {\n        domain,\n        domainBounds,\n        domainLeg,\n        steps\n    } = domainInfo;\n    const ele = domain[type === 'lower' ? 0 : domain.length - 1];\n    const step = steps[type === 'lower' ? 0 : steps.length - 1];\n\n    return {\n        [scaleType]: scaleType === 'size' ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n        value: domainBounds[type],\n        id: type === 'lower' ? 0 : domainLeg.length + 2,\n        range: [ele, step]\n    };\n};\n","import {\n    makeElement,\n    selectElement,\n    getUniqueId,\n    getSmartComputedStyle,\n    generateGetterSetters,\n    mergeRecursive\n} from 'muze-utils';\nimport { behaviouralActions } from '@chartshq/muze-firebolt';\nimport * as legendBehaviours from '../firebolt/behavioural';\n\nimport { LegendFireBolt } from '../firebolt/legend-firebolt';\nimport { actionBehaviourMap } from '../firebolt/action-behaviour-map';\nimport { physicalActions } from '../firebolt/physical';\nimport * as sideEffects from '../firebolt/side-effects';\nimport { behaviourEffectMap } from '../firebolt/behaviour-effect-map';\nimport { VALUE, PATH, RIGHT, LEFT, TOP, BOTTOM } from '../enums/constants';\nimport { PROPS } from './props';\nimport { DEFAULT_MEASUREMENT, DEFAULT_CONFIG, LEGEND_TITLE } from './defaults';\nimport { getItemMeasures, titleCreator, computeItemSpaces } from './legend-helper';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class SimpleLegend\n */\nexport default class SimpleLegend {\n\n    /**\n     * Creates an instance of Legend.\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @memberof Legend\n     */\n    constructor (dependencies) {\n        this._data = [];\n        this._metaData = [];\n        this._mount = null;\n        this._fieldName = null;\n        this._title = Object.assign({}, LEGEND_TITLE);\n        this._metaData = null;\n        this._labelManager = dependencies.labelManager;\n        this._cells = dependencies.cells;\n        this._id = getUniqueId();\n        this._measurement = Object.assign({}, this.constructor.defaultMeasurement());\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n\n        const dist = dependencies.labelManager.getOriSize('w');\n        this._minTickDistance = { width: dist.width * 3 / 4, height: dist.height / 2 };\n\n        generateGetterSetters(this, PROPS);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'),\n            `${this.config().classPrefix}-legend-item-info`);\n\n        this._firebolt = new LegendFireBolt(this, {\n            behavioural: Object.assign({}, behaviouralActions, legendBehaviours),\n            physical: physicalActions,\n            physicalBehaviouralMap: actionBehaviourMap\n        }, sideEffects, behaviourEffectMap);\n    }\n\n    id () {\n        return this._id;\n    }\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new SimpleLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENT;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleLegend\n     */\n    firebolt (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return PATH;\n    }\n\n    canvasAlias (...alias) {\n        if (alias.length) {\n            this._canvasAlias = alias[0];\n            return this;\n        }\n        return this._canvasAlias;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    mount (...params) {\n        if (params.length) {\n            this._mount = params[0];\n            this.render();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces () {\n        const {\n            item,\n            classPrefix\n        } = this.config();\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n            `${classPrefix}-legend-item-info`));\n        return getItemMeasures(this, VALUE, item.text.formatter);\n    }\n\n    /**\n     * Sets the height and width of a legend based on provided max\n     * height and width and based on its contents\n     *\n     * @return {Instance} Current instance\n     * @memberof Legend\n     */\n    setLegendMeasures () {\n        const {\n            width,\n            height,\n            maxWidth,\n            maxHeight,\n            padding,\n            margin,\n            border\n        } = this.measurement();\n        const {\n            align\n        } = this.config();\n\n        // Effective padding, margin and padding\n        const effPadding = padding * 2;\n        const effBorder = border * 2;\n        const effMargin = margin * 2;\n\n        this.data(this.dataFromScale());\n        // Get space occupied by title\n        const titleSpace = this.getTitleSpace();\n        const titleHeight = titleSpace.height > 0 ? titleSpace.height + effPadding : 0;\n        const titleWidth = titleSpace.width + effPadding;\n\n        // Get space occupied by labels\n        const labelSpaces = this.getLabelSpaces(effPadding, align);\n        const {\n            totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth\n        } = computeItemSpaces(this.config(),\n        { effPadding, titleWidth, labelSpaces, titleHeight, maxWidth, maxHeight }, this.data());\n\n        this.measurement({\n            width: Math.max(totalWidth, width) + effMargin + effBorder,\n            height: Math.max(totalHeight, height) + effMargin + effBorder,\n            labelSpaces,\n            iconSpaces,\n            itemSpaces,\n            maxItemSpaces,\n            maxIconWidth,\n            titleSpaces: {\n                width: Math.min(maxWidth, this.measurement().width) - effMargin - effBorder,\n                height: titleHeight\n            }\n        });\n        return this;\n    }\n\n    /**\n     * Returns the space occupied by the legend title\n     *\n     * @return {Object} Space occupied by title\n     * @memberof Legend\n     */\n    getTitleSpace () {\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n                                                `${this.config().classPrefix}-legend-title`));\n        return this._labelManager.getOriSize(this.title().text ? this.title().text : '');\n    }\n\n    /**\n     * Creates the title for the legend\n     *\n     * @param {DOM} container Container made for the title\n     * @return {Selection} Title and it's node\n     * @memberof Legend\n     */\n    renderTitle (container) {\n        const { titleSpaces, border, padding, width, maxWidth } = this.measurement();\n        const { borderStyle, borderColor } = this.config();\n        return titleCreator(container, this.title(), {\n            height: titleSpaces.height,\n            width,\n            maxWidth,\n            border,\n            padding,\n            borderStyle,\n            borderColor\n        }, this.config());\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const {\n            classPrefix,\n            borderStyle,\n            borderColor,\n            position\n        } = this.config();\n        const {\n            maxWidth,\n            maxHeight,\n            width,\n            height,\n            margin,\n            border\n        } = this.measurement();\n        const legendContainer = makeElement(selectElement(this.mount()), 'div', [1], `${classPrefix}-legend-box`);\n        let marginPosition;\n        switch (position) {\n        case TOP:\n            marginPosition = `margin-${BOTTOM}`;\n            break;\n        case LEFT:\n            marginPosition = `margin-${RIGHT}`;\n            break;\n        case BOTTOM:\n            marginPosition = `margin-${TOP}`;\n            break;\n        default:\n            marginPosition = `margin-${LEFT}`;\n        }\n        legendContainer.classed(`${classPrefix}-legend-box-${this._id}`, true);\n        legendContainer.style('float', 'left');\n        // set height and width\n        legendContainer.style('width', `${Math.min(maxWidth, width) - margin * 2}px`)\n                        .style('height', `${Math.min(maxHeight, height) - margin * 2}px`)\n                        .style(`${marginPosition}`, `${margin}px`)\n                        .style('border', `${border}px ${borderStyle} ${borderColor}`);\n        this.legendContainer(legendContainer.node());\n\n        // create title\n        this.renderTitle(legendContainer);\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n  /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        const type = this.metaData().getData().schema[0].type;\n        if (type === 'measure') {\n            return {\n                [fieldName]: data.range\n            };\n        }\n        return [[fieldName], [data.rawVal]];\n    }\n}\n","import {\n    LEFT,\n    RIGHT,\n    START,\n    END,\n    TOP,\n    BOTTOM,\n    HORIZONTAL,\n    VERTICAL,\n    CENTER,\n    SHAPE,\n    VALUE\n} from '../enums/constants';\n\nconst legendOrientation = {\n    [HORIZONTAL]: {\n        datasets: data => ({\n            row: [1],\n            column: data\n        }),\n        itemContainerMeasures: (measurement) => {\n            const {\n                itemSpaces,\n                width\n            } = measurement;\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                },\n                column: {\n                    width: (d, i) => `${itemSpaces[i].width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, height } = measurement;\n            return {\n                iconHeight: height,\n                iconWidth: maxItemSpaces.width,\n                stepPadding: {\n                    horizontal: true,\n                    vertical: false\n                }\n            };\n        }\n    },\n    [VERTICAL]: {\n        datasets: data => ({\n            row: data,\n            column: d => [d]\n        }),\n        itemContainerMeasures: (measurement, config) => {\n            const {\n                width\n            } = measurement;\n            const { padding } = config;\n\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${padding}px`\n                },\n                column: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, width } = measurement;\n            return {\n                iconHeight: maxItemSpaces.height,\n                iconWidth: width,\n                stepPadding: {\n                    horizontal: false,\n                    vertical: true\n                }\n            };\n        }\n    }\n};\n\nexport const positionConfig = {\n    [LEFT]: legendOrientation[VERTICAL],\n    [RIGHT]: legendOrientation[VERTICAL],\n    [TOP]: legendOrientation[HORIZONTAL],\n    [BOTTOM]: legendOrientation[HORIZONTAL]\n};\n\nexport const alignmentMap = {\n    [LEFT]: END,\n    [RIGHT]: START,\n    [TOP]: CENTER,\n    [BOTTOM]: CENTER\n};\n\n// Reverses data for step legend\nexport const stepData = data => ({\n    [LEFT]: data.reverse(),\n    [RIGHT]: data.reverse(),\n    [TOP]: data,\n    [BOTTOM]: data\n});\n\n// Changes the item layout based on the position of the text\nexport const itemStack = {\n    [LEFT]: [VALUE, SHAPE],\n    [RIGHT]: [SHAPE, VALUE],\n    [TOP]: [VALUE, SHAPE],\n    [BOTTOM]: [SHAPE, VALUE]\n};\n","import { makeElement, selectElement, applyStyle } from 'muze-utils';\nimport { ICON_MAP } from './defaults';\nimport { positionConfig, alignmentMap, itemStack } from './position-config';\nimport {\n    WIDTH,\n    HEIGHT,\n    CENTER,\n    VALUE,\n    RECT,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} legendInstance\n * @param {*} align\n *\n */\nexport const getItemContainers = (container, data, legendInstance) => {\n    const measurement = legendInstance.measurement();\n    const config = legendInstance.config();\n    const {\n        itemSpaces\n    } = measurement;\n    const {\n        classPrefix,\n        position\n    } = config;\n    const positionObj = positionConfig[position];\n    const datasets = positionObj.datasets(data);\n    const measures = positionObj.itemContainerMeasures(measurement, config);\n\n    const rows = makeElement(container, 'div', datasets.row, `${classPrefix}-legend-row`);\n    rows.style(HEIGHT, (d, i) => `${itemSpaces[i].height}px`);\n    rows.style(WIDTH, measures.row.width);\n    rows.style('padding', measures.row.padding);\n\n    const columns = makeElement(rows, 'div', datasets.column, `${classPrefix}-legend-columns`);\n    columns.style(WIDTH, measures.column.width);\n    columns.style('padding', measures.column.padding);\n\n    return columns;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} classPrefix\n * @param {*} data\n *\n * @memberof DiscreteLegend\n */\nexport const createLegendSkeleton = (context, container, classPrefix, data) => {\n    let gradWidth = 0;\n    let gradHeight = 0;\n    let maxGradHeight = 0;\n    let maxGradWidth = 0;\n    const measurement = context.measurement();\n    const {\n            margin,\n            border,\n            titleSpaces,\n            width,\n            height,\n            maxWidth,\n            maxHeight\n        } = measurement;\n\n    gradHeight = height - (titleSpaces.height + 2 * margin + 2 * border);\n    gradWidth = width - (margin * 2 + border * 2);\n\n    maxGradHeight = maxHeight - (titleSpaces.height + margin * 2 + border * 2);\n    maxGradWidth = maxWidth - (margin * 2 + border * 2);\n\n    let legendBody = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    legendBody.select(`.${classPrefix}-legend-overflow`).remove();\n        // Create a div with scroll when overflow\n    if (maxGradWidth && maxGradWidth < gradWidth) {\n        legendBody = legendBody.style(WIDTH, `${maxGradWidth}px`).style('overflow-x', 'scroll');\n    }\n        // Create a div with scroll when overflow\n    if (maxGradHeight && maxGradHeight < gradHeight) {\n        legendBody.style(HEIGHT, `${maxGradHeight}px`).style('overflow-y', 'scroll');\n    }\n\n    legendBody = makeElement(legendBody, 'div', [1], `${classPrefix}-legend-overflow`);\n\n    legendBody.style(WIDTH, `${gradWidth}px`);\n    legendBody.style(HEIGHT, `${gradHeight}px`);\n\n    const legendItem = getItemContainers(legendBody, data, context);\n    return { legendItem };\n};\n\n/**\n * Creates legend item based on alignment and text orientation\n *\n * @param {Selection} container Point where items are to be mounted\n * @return {Instance} Current instance\n * @memberof Legend\n */\nexport const createItemSkeleton = (context, container) => {\n    const {\n        classPrefix,\n        item\n    } = context.config();\n    const textOrientation = item.text.orientation;\n\n    const stack = itemStack[textOrientation];\n    const itemSkeleton = makeElement(container, 'div', (d, i) => stack.map(e => [e, d[e], d.color, d.size,\n        d.value, context.fieldName(), i]), `${classPrefix}-legend-item-info`);\n\n    const alignClass = alignmentMap[textOrientation];\n\n    itemSkeleton.classed(alignClass, true);\n    return { itemSkeleton };\n};\n\n/**\n *\n *\n * @param {*} measureType\n * @param {*} stepColorCheck\n */\nexport const applyItemStyle = (item, measureType, stepColorCheck, context) => {\n    const {\n        padding,\n        labelSpaces,\n        iconSpaces,\n        maxIconWidth\n    } = context.measurement();\n    const diff = stepColorCheck ? -padding * 2 : 0;\n\n    if (item[0] === VALUE) {\n        return `${labelSpaces[item[6]][measureType]}px`;\n    }\n    return `${measureType === 'width' && !stepColorCheck ? maxIconWidth : iconSpaces[item[6]][measureType] - diff}px`;\n};\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, elem, defaultIcon, width, height) {\n    const groupElement = elem;\n    // const { shape, size, update } = d;\n    const size = d[3] || Math.min(width, height) * Math.PI;\n    const shape = d[1] || defaultIcon;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            return createShape(d, elem);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        shapeElement.attr('transform', `scale(${size / 100})`);\n        return selectElement(groupElement.node().appendChild(newShape));\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = ICON_MAP(shape).size(size)();\n        }\n        return makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    }\n    d[1] = 'circle';\n    return createShape(d, elem, 'circle');\n};\n\n/**\n * Returns the icon of the legend item\n *\n * @param {Object} datum Data property attached to the item\n * @param {number} width width of the item\n * @param {number} height height of the item\n * @return {Object|string} returns the path string or the string name of the icon\n * @memberof Legend\n */\nexport const getLegendIcon = (datum, width, height, defaultIcon) => {\n    const icon = ICON_MAP(datum[1]);\n\n    if (icon) {\n        return icon.size(datum[3] || Math.min(width, height) * Math.PI);\n    }\n    return ICON_MAP(datum[3] ? 'circle' : defaultIcon).size(datum[3] || Math.min(width, height) * Math.PI);\n};\n\n/**\n *\n *\n */\nexport const renderIcon = (icon, container, datum, context) => {\n    const {\n        classPrefix,\n        iconHeight,\n        iconWidth,\n        maxIconWidth,\n        padding,\n        color\n    } = context;\n    const svg = makeElement(container, 'svg', f => [f], `${classPrefix}-legend-icon-svg`)\n    .attr(WIDTH, maxIconWidth)\n    .attr(HEIGHT, iconHeight)\n    .style(WIDTH, `${maxIconWidth}px`)\n    .style(HEIGHT, `${iconHeight}px`);\n\n    if (icon !== RECT) {\n        const group = makeElement(svg, 'g', [datum[1]], `${classPrefix}-legend-icon`);\n        createShape(datum, group, datum[3] ? 'circle' : 'square', iconWidth, iconHeight)\n                        .attr('transform', `translate(${maxIconWidth / 2 - padding} ${iconHeight / 2})`)\n                        .attr('fill', datum[2] || color);\n    } else {\n        makeElement(svg, RECT, [datum[1]], `${classPrefix}-legend-icon`)\n                        .attr('x', 0)\n                        .attr('y', 0)\n                        .attr(WIDTH, maxIconWidth)\n                        .attr(HEIGHT, iconHeight)\n                        .attr('fill', datum[2] || color);\n    }\n};\n\n/**\n * Renders the items in the legend i.e, icon and text\n *\n * @param {DOM} container Point where item is to be mounted\n * @memberof Legend\n */\nexport const renderDiscreteItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n           item,\n           classPrefix\n    } = context.config();\n    const {\n        maxIconWidth,\n        padding\n    } = context.measurement();\n    const {\n            width: iconWidth,\n            height: iconHeight,\n            color,\n            className\n        } = item.icon;\n\n    const textOrientation = item.text.orientation;\n    const formatter = item.text.formatter;\n\n    labelManager.useEllipsesOnOverflow(true);\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, false, context),\n        height: d => applyItemStyle(d, HEIGHT, false, context),\n        'text-align': CENTER,\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    const dataArr = container.data();\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1], i, dataArr, context))\n                            .style(`padding-${textOrientation === RIGHT ? LEFT : RIGHT}`, '0px');\n        } else {\n            // const icon = getLegendIcon(d, iconWidth, iconHeight, type);\n            selectElement(this).classed(`${classPrefix}-${className}`, true);\n            selectElement(this).classed(`${classPrefix}-${className}-${i}`, true);\n            renderIcon('circle', selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                // iconWidth: 2 * Math.sqrt(d[3] / Math.PI) || iconWidth,\n                iconHeight,\n                maxIconWidth,\n                padding,\n                color\n            });\n        }\n    });\n};\n\n/**\n* Renders the items in the legend i.e, icon and text\n*\n* @param {DOM} container Point where item is to be mounted\n* @memberof Legend\n*/\nexport const renderStepItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n      item,\n      position,\n      classPrefix\n   } = context.config();\n    const {\n      maxItemSpaces,\n      maxIconWidth,\n      padding\n   } = context.measurement();\n    const {\n       width,\n       height,\n       color\n   } = item.icon;\n    const {\n        formatter\n   } = item.text;\n\n    labelManager.useEllipsesOnOverflow(true);\n    const { iconHeight, iconWidth, stepPadding } = positionConfig[position].getStepSpacesInfo({\n        maxItemSpaces, height, width\n    });\n\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, stepPadding.horizontal, context),\n        height: d => applyItemStyle(d, HEIGHT, stepPadding.vertical, context),\n        'text-align': 'center',\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    const dataArr = container.data();\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1], i, dataArr, context));\n        } else {\n            renderIcon(RECT, selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                iconHeight,\n                maxIconWidth,\n                color\n            });\n        }\n    });\n};\n","import {\n    FieldType,\n    DimensionSubtype,\n    formatTemporal\n} from 'muze-utils';\nimport SimpleLegend from './simple-legend';\nimport { DISCRETE, LEFT, SIZE } from '../enums/constants';\nimport { getScaleInfo } from './legend-helper';\nimport { createLegendSkeleton, createItemSkeleton, renderDiscreteItem } from './renderer';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class DiscreteLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new DiscreteLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof DiscreteLegend\n     */\n    static type () {\n        return DISCRETE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof DiscreteLegend\n     */\n    dataFromScale () {\n        const scale = this.scale();\n        const { scaleType, domain, scaleFn } = getScaleInfo(scale);\n        let domainForLegend = [...new Set(domain)];\n        const field = this.metaData().getFieldspace().fields[0];\n        const { type, subtype } = field.schema();\n\n        domainForLegend = domainForLegend.map((ele, i) => {\n            let value = 0;\n            let range = 0;\n            const rawVal = domainForLegend[i];\n            if (type === FieldType.MEASURE) {\n                value = (+domainForLegend[i]).toFixed(0);\n                const nextVal = domainForLegend[i + 1] ? +domainForLegend[i + 1] : +value;\n                range = [value, nextVal.toFixed(0)];\n            } else {\n                let domainVal = rawVal;\n                if (subtype === DimensionSubtype.TEMPORAL) {\n                    domainVal = formatTemporal(domainForLegend[i], field.minimumConsecutiveDifference());\n                }\n                value = domainVal;\n                range = [domainVal];\n            }\n            return {\n                [scaleType]: scale[scaleFn](ele),\n                value,\n                id: i,\n                range,\n                rawVal\n            };\n        }).filter(d => d.value !== null);\n\n        domainForLegend = scaleType === SIZE ? domainForLegend.sort((a, b) => a[scaleType] - b[scaleType])\n            : domainForLegend;\n        return domainForLegend;\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const data = this.data();\n        const { classPrefix } = this.config();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n        renderDiscreteItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n}\n","import { makeElement, applyStyle } from 'muze-utils';\nimport { ContinousAxis } from '@chartshq/muze-axis';\nimport { BOTTOM, RIGHT } from '../enums/constants';\nimport { ALIGN } from './defaults';\nimport '../styles.scss';\n\n/**\n *\n *\n * @param {*} data\n *\n */\nexport const getGradientDomain = (data) => {\n    if (typeof data[0].value === 'number') {\n        return data.reduce((accumulator, currentValue) =>\n            [Math.min(currentValue.value, accumulator[0]), Math.max(currentValue.value, accumulator[1])],\n                [Number.MAX_VALUE, Number.MIN_VALUE]);\n    }\n    return data.map(e => e.value);\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} domain\n *\n */\nexport const makeLinearGradient = (container, data, domain) => {\n    const defs = makeElement(container, 'defs', [1]);\n    const linearGradient = makeElement(defs, 'linearGradient', [1])\n                .attr('id', 'linear-gradient')\n                .attr('x1', '0%')\n                .attr('y2', '0%');\n\n    makeElement(linearGradient, 'stop', data, 'stop-gradient')\n                    .attr('offset', d => `${(d.value - domain[0]) * 100 / (domain[1] - domain[0]) || 1}%`)\n                    .attr('stop-color', d => d.color);\n    return linearGradient;\n};\n\n/**\n * Creates an axis cell with a linear axis for computing space and\n * creating gradient legend\n *\n * @return {AxisCell} Instance of Axis Cell for the gradient axis\n * @memberof Legend\n */\nexport const createAxis = (context) => {\n    const data = context.data();\n    const { align } = context.config();\n    const AxisCell = context._cells.AxisCell;\n    const newAxis = new ContinousAxis({\n        id: `legend-${context._id}`,\n        orientation: align === ALIGN.VERTICAL ? RIGHT : BOTTOM,\n        style: context._computedStyle,\n        nice: false,\n        showAxisName: false,\n        tickValues: data.map(d => d.value),\n        fixedBaseline: false,\n        labels: {\n            rotation: null\n        }\n    }, { labelManager: context._labelManager });\n\n    newAxis.domain(getGradientDomain(data));\n    newAxis.range([1, 1]);\n    return new AxisCell().source(newAxis).config({\n        margin: { left: 0, bottom: 0, top: 0, right: 0 }\n    });\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} classPrefix\n *\n * @memberof GradientLegend\n */\nconst createLegendSkeleton = (container, classPrefix, data) => {\n    const domain = getGradientDomain(data);\n    const legendContainer = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    const legendGradSvg = makeElement(legendContainer, 'svg', [1], `${classPrefix}-gradient`);\n    const legendGradCont = makeElement(legendGradSvg, 'g', [1], `${classPrefix}-gradient-group`);\n    const linearGradient = makeLinearGradient(legendGradSvg, data, domain);\n    const legendRect = makeElement(legendGradCont, 'rect', [1], `${classPrefix}-gradient-rect`);\n\n    return {\n        legendContainer,\n        legendGradCont,\n        legendGradSvg,\n        linearGradient,\n        legendRect\n    };\n};\n\n/**\n * Renders the axis for the gradient\n *\n * @param {Selection} container Point where axis is to be mounted\n * @param {number} height Height for axis\n * @param {number} width Width for axis\n * @memberof Legend\n */\nexport const renderAxis = (context, container, height, width) => {\n    const axis = context.axis();\n\n    axis.setAvailableSpace(width, height);\n    axis.render(container.node());\n    axis.source().render();\n};\n\n/**\n * Renders gradient legends\n *\n * @param {Selection} container Point where the legend is to be appended\n * @memberof GradientLegend\n */\nexport const renderGradient = (context, container) => {\n    let gradHeight = 0;\n    let gradWidth = 0;\n    const {\n        align,\n        classPrefix,\n        item\n    } = context.config();\n    const data = context.data();\n    // Create the skeleton for the legend\n    const {\n        legendContainer,\n        legendGradSvg,\n        legendGradCont,\n        linearGradient,\n        legendRect\n    } = createLegendSkeleton(container, classPrefix, data);\n    const labelDim = context.axis().source().getAxisDimensions().tickDimensions;\n    const {\n        padding,\n        margin,\n        border,\n        titleSpaces,\n        maxItemSpaces,\n        maxHeight,\n        maxWidth,\n        height,\n        width\n    } = context.measurement();\n    const gradientDimensions = {};\n\n    gradHeight = Math.floor(Math.min(height, maxHeight) - (titleSpaces.height + 2 * margin + 2 * border));\n    gradWidth = Math.floor(Math.min(width, maxWidth) - (margin * 2 + border * 2));\n\n    if (align === ALIGN.HORIZONTAL) {\n        gradientDimensions.height = item.icon.height;\n        gradientDimensions.width = gradWidth - 2 * padding - labelDim.width / 2;\n        linearGradient.attr('x2', '100%').attr('y1', '0%');\n        legendGradCont.attr('transform', `translate( ${labelDim.width / 2} 0)`);\n        renderAxis(context, legendContainer, gradHeight - item.icon.height - padding, gradWidth - 2 * padding - 1);\n\n        applyStyle(legendContainer, {\n            height: `${maxItemSpaces.height + border + padding}px`,\n            width: `${Math.min(width, maxWidth)}px`,\n            padding: `${padding}px`\n        });\n\n        legendRect.attr('height', gradientDimensions.height);\n        legendRect.attr('width', gradientDimensions.width - labelDim.width / 2);\n    } else {\n        gradientDimensions.height = gradHeight - 2 * padding - labelDim.height / 2;\n        gradientDimensions.width = item.icon.width;\n        linearGradient.attr('x2', '0%').attr('y1', '100%');\n        legendGradCont.attr('transform', `translate(0 ${labelDim.height / 2})`);\n        renderAxis(context, legendContainer, gradHeight - 2 * padding - 1, gradWidth - item.icon.width - padding * 2);\n\n        applyStyle(legendContainer, {\n            height: `${Math.min(height, maxHeight)}px`,\n            width: `${maxWidth}px`,\n            padding: `${padding}px`\n        });\n        legendRect.attr('height', gradientDimensions.height - labelDim.height / 2);\n        legendRect.attr('width', gradientDimensions.width);\n    }\n\n    // Apply Styles to the legend plot area\n    applyStyle(legendGradSvg, {\n        height: `${gradientDimensions.height}px`,\n        width: `${gradientDimensions.width}px`\n    });\n\n        // Apply styles to the legend rect\n    applyStyle(legendRect, {\n        fill: 'url(#linear-gradient)'\n    });\n    legendGradSvg.attr('height', gradientDimensions.height);\n    legendGradSvg.attr('width', gradientDimensions.width);\n\n    context.measurement({\n        gradientDimensions\n    });\n    context._legendGradientSvg = legendGradSvg;\n    return context;\n};\n","import SimpleLegend from './simple-legend';\nimport { getScaleInfo, getInterpolatedData, getInterpolatedArrayData } from './legend-helper';\nimport { GRADIENT, LEFT, SIZE } from '../enums/constants';\nimport { renderGradient, createAxis } from './gradient-helper';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class GradientLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new GradientLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof GradientLegend\n     */\n    static type () {\n        return GRADIENT;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axis\n     *\n     * @memberof GradientLegend\n     */\n    axis (...axis) {\n        if (axis.length) {\n            this._axis = axis[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof GradientLegend\n     */\n    dataFromScale () {\n        let domainForLegend = [];\n        const scale = this.scale();\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        // defining scaleParams\n        const scaleParams = {\n            smartLabel: this.labelManager(),\n            measures: this.measurement(),\n            alignment: this.config().position,\n            minTickDistance: this.minTickDistance()\n        };\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainForLegend[0] = domain[0];\n            }\n            domainForLegend = [...domainForLegend, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainForLegend.push(domain[1]);\n            }\n            // Sorting the domain Array\n            domainForLegend = [...new Set(domainForLegend)].sort((a, b) => a - b);\n\n            domainForLegend = getInterpolatedArrayData(domainForLegend, scaleParams);\n        } else {\n            domainForLegend = getInterpolatedData(domain, steps - 1, scaleParams);\n        }\n        domainForLegend = [...new Set(domainForLegend)].sort((a, b) => a - b);\n\n        return domainForLegend.map((ele, i) => {\n            const value = domainForLegend[i];\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor()\n                    : scale[scaleFn](Math.floor(ele)),\n                value: +value.toFixed(2),\n                id: i\n            };\n        }).filter(d => d.value !== null);\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        const axis = createAxis(this);\n        const axisSpace = axis.getLogicalSpace();\n        const space = { width: axisSpace.width - effPadding, height: axisSpace.height - effPadding };\n        const axisDomainLength = axis.source().domain().length;\n        const labelSpaces = new Array(axisDomainLength).fill(space);\n\n        this.axis(axis);\n        return labelSpaces;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof GradientLegend\n     */\n    getDrawingContext () {\n        return {\n            svgContainer: this._legendGradientSvg\n        };\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        renderGradient(this, legendContainer);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof SimpleLegend\n     */\n    getCriteriaFromData (data) {\n        return [[this.fieldName()], [data.value]];\n    }\n}\n","import SimpleLegend from './simple-legend';\nimport {\n    getScaleInfo,\n    getInterpolatedData,\n    getDomainBounds\n} from './legend-helper';\nimport {\n    createLegendSkeleton,\n    createItemSkeleton,\n    renderStepItem\n} from './renderer';\nimport { STEP, RECT, LEFT, SIZE, UPPER, LOWER } from '../enums/constants';\nimport { stepData } from './position-config';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class StepLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new StepLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof StepLegend\n     */\n    static type () {\n        return STEP;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof StepLegend\n     */\n    dataFromScale () {\n        let domainLeg = [];\n        const scale = this.scale();\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        const { formatter } = this.config();\n        const domainBounds = {\n            lower: null, upper: null\n        };\n\n        // defining scaleParams\n        const scaleParams = {\n            smartLabel: this.labelManager(),\n            measures: this.measurement(),\n            alignment: this.config().position,\n            minTickDistance: this.minTickDistance()\n        };\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainBounds.lower = [`${formatter.bounds.lower} ${steps[0]}`];\n            }\n            domainLeg = [...domainLeg, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainBounds.upper = [`${formatter.bounds.upper} ${steps[steps.length - 1]}`];\n            }\n        } else {\n            domainLeg = getInterpolatedData(domain, steps, scaleParams);\n        }\n\n        domainLeg = [...new Set(domainLeg)].sort((a, b) => a - b);\n        domainLeg = domainLeg.map((ele, i) => {\n            let value = null;\n            if (i < domainLeg.length - 1) {\n                value = `${(ele.toFixed(1))} - ${(+domainLeg[i + 1].toFixed(1))}`;\n            } else if (domainLeg.length === 1) {\n                value = ele.toFixed(1);\n            }\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n                value,\n                id: i + 1,\n                range: [ele, domainLeg[i + 1]]\n            };\n        }).filter(d => d.value !== null);\n\n        if (domainBounds.lower) {\n            const lowerBounds = getDomainBounds(LOWER, { scale, scaleFn, scaleType },\n                { domain, steps, domainBounds });\n            domainLeg = [lowerBounds, ...domainLeg];\n        }\n        if (domainBounds.upper) {\n            const upperBounds = getDomainBounds(UPPER, { scale, scaleFn, scaleType },\n            { domain, steps, domainBounds, domainLeg });\n            domainLeg = [...domainLeg, upperBounds];\n        }\n\n        return domainLeg;\n    }\n\n     /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding, align) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        return super.getLabelSpaces(effPadding, align);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return RECT;\n    }\n\n     /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const { classPrefix, position } = this.config();\n        const data = stepData(this.data())[position];\n\n        const legendContainer = super.render(this.mount());\n\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n\n        renderStepItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        return {\n            [fieldName]: data.range\n        };\n    }\n}\n","import { GradientLegend, DiscreteLegend, StepLegend } from '@chartshq/muze-legend';\n\n/**\n * Contants to be used as attr\n */\nexport const ROWS = 'rows';\nexport const COLUMNS = 'columns';\nexport const DATA = 'data';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\nexport const DETAIL = 'detail';\nexport const LAYERS = 'layers';\nexport const TRANSFORM = 'transform';\nexport const INITIALIZED = 'isInitialized';\nexport const SOURCE = 'source';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const PADDING = 'padding';\nexport const BORDER = 'border';\nexport const MARGIN = 'margin';\nexport const CONFIG = 'config';\nexport const MOUNT = 'mount';\nexport const CANVAS_UPDATED = 'canvasUpdated';\nexport const CLASSPREFIX = 'classPrefix';\nexport const POLICIES = '_policies';\nexport const LEGEND = 'legend';\nexport const TITLE = 'title';\nexport const SUB_TITLE = 'subtitle';\nexport const RESOLVE = 'resolve';\nexport const DISCRETE = 'discrete';\nexport const STEP_COLOR = 'step-color';\nexport const GRADIENT = 'gradient';\nexport const LINEAR = 'linear';\nexport const ORDINAL = 'ordinal';\nexport const MUZE_PREFIX = 'muze';\n\nexport const TITLE_TEMPLATE_NOT_ALLOWED_TAGS = [\n    'script',\n    'style'\n];\n\nexport const LEGEND_TYPE_MAP = {\n    [`${ORDINAL}-${true}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${COLOR}`]: StepLegend,\n    [`${LINEAR}-${false}-${COLOR}`]: GradientLegend\n};\n\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const GROUP = 'group';\nexport const LAYOUT = 'layout';\nexport const RETINAL = 'retinal';\nexport const DIMENSION = 'dimension';\nexport const MEASURE = 'measure';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\nexport const HORIZONTAL_CENTER = 'h-center';\nexport const VERTICAL_CENTER = 'v-center';\nexport const HIDDEN = 'hidden';\nexport const OVERFLOW = 'overflow';\nexport const OVERFLOW_X = 'overflow-x';\nexport const OVERFLOW_Y = 'overflow-y';\nexport const AUTO = 'auto';\nexport const VISIBLE = 'visible';\nexport const VERTICAL_SCROLL_BAR = 'verticalScrollBar';\nexport const HORIZONTAL_SCROLL_BAR = 'horizontalScrollBar';\nexport const GRID = 'grid';\nexport const MESSAGE = 'message';\nexport const NO_DATA_MESSAGE = 'No data to display';\n\n","import { ComposedVars, SimpleVariable } from '@chartshq/visual-group';\nimport { TITLE_TEMPLATE_NOT_ALLOWED_TAGS } from './constants';\n\n/**\n * This method creates a new composed variable instance from multiple variables. This is required when we have multiple\n * variables on a single axis and the union of domain of all the variables needs to be set on the axis.\n *\n * To create a new composed variable from multiple fields,\n * ```\n *  const sharedVar = share('open', 'high', 'low', 'close');\n *  canvas.rows([sharedVar])\n *      .columns(['date']);\n * ```\n *\n * @module Operators\n * @public\n * @function share\n * @param {Array} vars Variable names.\n *\n * @return {ComposedVars} Instance of composed variable\n */\nexport const share = (...vars) => new ComposedVars(...vars.map(variable => new SimpleVariable(variable)));\n\n/**\n *\n *\n * @param {*} node\n *\n */\nfunction treeShakeNode (node) {\n    if (node.nodeType !== Node.ELEMENT_NODE) { return; }\n\n    if (TITLE_TEMPLATE_NOT_ALLOWED_TAGS.indexOf(node.tagName.toLowerCase()) !== -1) {\n        node.parentNode.removeChild(node);\n    } else {\n        for (const childNode of node.childNodes) {\n            treeShakeNode(childNode);\n        }\n    }\n}\n\n/**\n * A string template tagged function which sanitizes input html formatted string according to the allowed html tags.\n * This is used to render html in canvas components like title and tooltip.\n *\n * To render html in canvas components,\n * ```\n *     canvas.title(html`<span style=font-size:20px;>TITLE</span>`);\n * ```\n *\n * @public\n * @module Operators\n * @function html\n * @param {Array.<string>} strings - The string parts of the template.\n * @param {Array} exps - The list of evaluated expression values.\n *\n * @return {Function} Returns a function which returns the sanitized html string.\n */\nexport function html (strings, ...exps) {\n    let htmlCode = '';\n    const expLn = exps.length;\n    let i = 0;\n\n    for (; i < expLn; ++i) {\n        htmlCode += strings[i] + exps[i];\n    }\n    htmlCode += strings[i];\n\n    const frag = document.createDocumentFragment();\n    const wrapper = document.createElement('div');\n\n    frag.appendChild(wrapper);\n    wrapper.innerHTML = htmlCode;\n\n    treeShakeNode(wrapper);\n    const { innerHTML } = wrapper;\n\n    return () => innerHTML;\n}\n","import { mergeRecursive, CommonProps } from 'muze-utils';\n\nconst defaultPolicy = (registrableComponents) => {\n    const aliases = registrableComponents.map(comp => comp.alias());\n    return {\n        behaviours: {\n            '*': (propagationPayload) => {\n                const propagationCanvas = propagationPayload.sourceCanvas;\n                return propagationCanvas ? aliases.indexOf(propagationCanvas) !== -1 : true;\n            }\n        }\n    };\n};\n\nconst listenerFn = (canvas, fn) => () => {\n    const valueMatrix = canvas.composition().visualGroup.matrixInstance().value;\n    valueMatrix.each(cell => fn(cell.valueOf().firebolt()));\n};\n\nconst canvasIterator = (canvases, iteratorFn, cFn) => {\n    canvases.forEach((canvas) => {\n        const matrix = canvas.composition().visualGroup.matrixInstance().value;\n        matrix.each(cell => iteratorFn(cell.valueOf().firebolt()));\n        cFn && cFn(canvas);\n        // Also register actions on canvas update\n        const throwback = canvas._throwback;\n\n        throwback.registerImmediateListener([CommonProps.MATRIX_CREATED],\n            listenerFn(canvas, iteratorFn));\n    });\n};\n\nconst registerActions = (context, type, fnName, deps) => {\n    const canvases = context._registrableComponents;\n\n    canvases.forEach((canvas) => {\n        const vGroup = canvas.composition().visualGroup;\n\n        vGroup.resolver().setFireboltDependencies(type, deps);\n        canvas.firebolt()[fnName](deps);\n    });\n};\n\n/**\n * This class is initiated only once in lifecycle and is reponsible for regisration of physical and behavioural\n * actions and side effects and the mapping between them.\n *\n * To get the instance of action model\n * ```\n *  const ActionModel = muze.ActionModel;\n * ```\n *\n * @public\n * @module ActionModel\n */\nclass ActionModel {\n    constructor () {\n        this._registrableComponents = [];\n    }\n\n    /**\n     * Takes an array of canvases on which the physical and behavioural actions will get registered.\n     *\n     * @public\n     * @param  {Canvas} components Array of canvases\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    for (...components) {\n        this._registrableComponents = components;\n        return this;\n    }\n\n    /**\n     * Registers physical actions on the canvases. It takes an object with key as the name of action and value having\n     * the definition of the action.\n     *\n     * To register a {@link PhysicalAction},\n     * ```\n     *  const ActionModel = muze.ActionModel;\n     *  ActionModel\n     *       // Physical actions will be registered on these canvases.\n     *      .for(canvas)\n     *      .registerPhysicalActions({\n     *          // Key is the name of physical action.\n     *          ctrlClick: (firebolt) => (targetEl, behaviours) => {\n     *              targetEl.on('click', function (data) {\n     *                  const event = utils.getEvent();\n     *                  const pos = utils.getClientPoint(event, this);\n     *                  // Get the data point nearest to the mouse position.\n     *                  const nearestPoint = firebolt.context.getNearestPoint(pos, {\n     *                      data\n     *                  });\n     *                  // Prepare the payload\n     *                  const payload = {\n     *                      criteria: nearestPoint.id\n     *                  };\n     *                  behaviours.forEach((behaviour) => firebolt.dispatchBehaviour(behaviour, payload));\n     *              });\n     *          }\n     *      });\n     * ```\n     * @public\n     *\n     * @param {Object} action Names of physical actions and their definitions.\n     *\n     * @return {ActionModel} Instance of the action model.\n     */\n    registerPhysicalActions (action) {\n        registerActions(this, 'physicalActions', 'registerPhysicalActions', action);\n        return this;\n    }\n\n    /**\n     * Registers behavioural actions on the canvases. It takes definitions of the behavioural actions and registers\n     * them on the canvases. Every behavioural action must inherit the {@link GenericBehaviour} class.\n     *\n     * To register a behavioural action\n     * ```\n     *  // Define a new behavioural action\n     *  class SingleSelectBehaviour extends GenericBehaviour {\n     *      static formalName () {\n     *          return 'singleSelect';\n     *      }\n     *\n     *      setSelectionSet (addSet, selectionSet) {\n     *          if (addSet === null) {\n     *              selectionSet.reset();\n     *          } else if (addSet.length) {\n     *              const existingAddSet = selectionSet.getExistingEntrySet(addSet);\n     *              if (existingAddSet.length){\n     *                  selectionSet.reset();\n     *              } else {\n     *               selectionSet.add(addSet);\n     *              }\n     *          } else {\n     *              selectionSet.reset();\n     *          }\n     *      }\n     * }\n     * muze.ActionModel.registerBehaviouralActions(SingleSelectBehaviour);\n     * ```\n     *\n     * @public\n     *\n     * @param {GenericBehaviour} actions Definition of behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerBehaviouralActions (...actions) {\n        registerActions(this, 'behaviouralActions', 'registerBehaviouralActions', actions);\n        return this;\n    }\n\n    /**\n     * Registers the mapping of physical and behavioural actions. This mapping is used to establish which behavioural\n     * actions should be dispatched on any triggering of physical actions.\n     *\n     * To map physical actions with behavioural actions,\n     * ```\n     *  muze.ActionModel.registerPhysicalBehaviouralMap({\n     *      ctrlClick: {\n     *          behaviours: ['select'] // This array must be the formal names of the behavioural actions.\n     *      }\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Contains the physical and behavioural action map.\n     * ```\n     *   {\n     *      // Name of the physical action\n     *      click: {\n     *          // Target element selector. This is an optional field. If not passed, then by default takes the\n     *          // container element of visual unit.\n     *          target: '.muze-layers-area path',\n     *          // Behaviours which should be dispatched on triggering of the mapped physical action.\n     *          behaviours: ['select']\n     *      }\n     *   }\n     * ```\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPhysicalBehaviouralMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPhysicalBehaviouralMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPhysicalBehaviouralMap(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers what behaviour to propagate on dispatch of a certain behavioural action. By default, when any\n     * behavioural action is dispatched, then the same behavioural action gets propagated to all the other canvases.\n     * This can be changed using this api.\n     *\n     * To register what behaviour should be propagated on dispatch of any behavioural action,\n     * ```\n     *  ActionModel.for(canvas1, canvas2).registerPropagationBehaviourMap({\n     *      select: 'filter',\n     *      brush: 'filter'\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Propagation behaviour map.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPropagationBehaviourMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPropagationBehaviourMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPropagationBehaviourMap(map);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers the mapping of side effects and behavioural actions. It takes an object which contains key as the\n     * name of behavioural action and the side effects which will be linked to it.\n     *\n     * To map side effects to select behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: ['infoBox'] // This array must be the formal names of the side effects\n     *  });\n     * ```\n     *\n     * To map side effects to select behaviour, but disable all the default side effects attached with this behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: {\n     *          effects: ['infoBox'],\n     *          preventDefaultActions: true\n     *      }\n     *  });\n     * @public\n     * @param {Object} map Mapping of behavioural actions and side effects.\n     * ```\n     *     {\n     *          select: ['infoBox']\n     *     }\n     * ```\n     * @return {ActionModel} Instance of action model.\n     */\n    mapSideEffects (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.mapSideEffects(map);\n        }, (canvas) => {\n            canvas.firebolt().mapSideEffects(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers the side effects on the registered canvases. It takes definitions of side effects and registers them\n     * on the canvases. Every side effect must inherit the base class {@link GenericSideEffect} or\n     * {@link SpawnableSideEffect} or {@link SurrogateSideEffect} class.\n     *\n     * ```\n     * // Define a custom side effect\n     *  class InfoBox extends SpawnableSideEffect {\n     *      static formalName () {\n     *          return 'infoBox';\n     *      }\n     *\n     *      apply (selectionSet) {\n     *      }\n     *  }\n     *  muze.ActionModel.registerSideEffects(InfoBox);\n     * ```\n     * @public\n     * @param  {GenericSideEffect} sideEffects Definition of side effects.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerSideEffects (...sideEffects) {\n        registerActions(this, 'sideEffects', 'registerSideEffects', sideEffects);\n        return this;\n    }\n\n    /**\n     * Breaks the link between behavioural actions and physical actions. It takes an array of behavioural action\n     * and it's physical action.\n     *\n     * To dissociate behavioural actions from physical actions\n     * ```\n     *  muze.ActionModel.dissociateBehaviour(['select', 'click'], ['highlight', 'hover']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of behavioural action and physical action.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateBehaviour (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateBehaviour(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateBehaviour(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * Breaks the link between side effects and behavioural actions. It takes an array of formal names of the side\n     * effects and it's linked behavioural action.\n     *\n     * To dissociate side effects from behavioural actions\n     * ```\n     *  muze.ActionModel.dissociateSideEffect(['crossline', 'highlight'], ['selectionBox', 'brush']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of side effects and behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateSideEffect (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateSideEffect(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateSideEffect(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * By default cross interactivity is disabled between canvases. This enables cross interaction between the canvases\n     * so that any action happening in one canvas gets dispatched on other canvases as well. An optional policy can also\n     * be passed in this method. The policy can be used to control on which canvases the behavioural actions and\n     * side effects gets dispatched.\n     *\n     * To just enable cross interactivity between two canvases,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity();\n     * ```\n     *\n     * To enable cross interactivity but enable any behavioural action only when it is triggered from canvas1.\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          behaviours: {\n     *              // Here * stands for any behavioural action name. We can also give any name of behavioural action\n     *              // in place of this.\n     *              '*': (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     *\n     * To enable cross interactivity but enable tooltip effect if the action is propagated from canvas1,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          sideEffects: {\n     *              tooltip: (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} policy Policy definition.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    enableCrossInteractivity (policy = {}) {\n        const registrableComponents = this._registrableComponents;\n        const mergedPolicy = mergeRecursive(mergeRecursive({}, defaultPolicy(registrableComponents)), policy);\n\n        registrableComponents.forEach((canvas) => {\n            canvas.firebolt().crossInteractionPolicy(mergedPolicy);\n        });\n\n        return this;\n    }\n}\n\nexport const actionModel = (() => new ActionModel())();\n","import { MUZE_PREFIX } from '../constants';\n\nexport const TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 4,\n    className: `${MUZE_PREFIX}-title-container`\n};\n\nexport const SUB_TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 16,\n    maxLines: 2,\n    className: `${MUZE_PREFIX}-subtitle-container`\n};\n\nexport const MESSAGE_CONFIG = {\n    className: `${MUZE_PREFIX}-message-container`\n};\n\nexport const CANVAS = 'canvas';\n\nexport const LAYOUT_ALIGN = {\n    TOP: 'top',\n    LEFT: 'left',\n    RIGHT: 'right',\n    BOTTOM: 'bottom'\n};\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    ROWS,\n    COLUMNS,\n    COLOR,\n    SHAPE,\n    SIZE,\n    DETAIL,\n    LAYERS,\n    TRANSFORM,\n    TITLE,\n    SUB_TITLE\n} from '../constants';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG } from './defaults';\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Canvas.\n * Canvas merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module LocalOptions\n */\n\nexport const localOptions = {\n    [ROWS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLUMNS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLOR]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SHAPE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SIZE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [DETAIL]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n\n    [LAYERS]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [TRANSFORM]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object'\n        }\n    }\n};\n\nexport const canvasOptions = {\n    [TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(title) => {\n                if (typeof title === 'string' || !title) {\n                    const t = () => title;\n                    return t;\n                }\n                return title;\n            }, (titleConfig) => {\n                const defConfig = mergeRecursive({}, TITLE_CONFIG);\n                return mergeRecursive(defConfig, titleConfig);\n            }]\n        }\n    },\n    [SUB_TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(subtitle) => {\n                if (typeof subtitle === 'string' || !subtitle) {\n                    const sub = () => subtitle;\n                    return sub;\n                }\n                return subtitle;\n            }, (subtitleConfig) => {\n                const defConfig = mergeRecursive({}, SUB_TITLE_CONFIG);\n                return mergeRecursive(defConfig, subtitleConfig);\n            }]\n        }\n    }\n};\n","export default class LayoutComponent {\n    constructor (name, dimensions, seed) {\n        this._seed = seed;\n        this._boundBox = {\n            height: dimensions.height,\n            width: dimensions.width,\n            top: null,\n            left: null\n        };\n        this._renderAt = null;\n        this._alignWith = null;\n        this._alignment = null;\n        this._target = null;\n        this._position = null;\n        this._componentName = name;\n        this._className = null;\n    }\n\n    getLogicalSpace () {\n        throw new Error('getLogicalSpace is not defined');\n    }\n\n    setSpatialConfig () {\n        throw new Error('setSpatialSpace is not defined');\n    }\n\n    name (param) {\n        if (param) {\n            this._componentName = param;\n        }\n        return this._componentName;\n    }\n\n    target (param) {\n        if (param) {\n            this._target = param;\n        }\n        return this._target;\n    }\n\n    position (param) {\n        if (param) {\n            this._position = param;\n        }\n        return this._position;\n    }\n\n    alignment (param) {\n        if (param) {\n            this._alignment = param;\n        }\n        return this._alignment;\n    }\n\n    alignWith (param) {\n        if (param) {\n            this._alignWith = param;\n        }\n        return this._alignWith;\n    }\n\n    renderAt (param) {\n        if (param) {\n            this._renderAt = param;\n        }\n        return this._renderAt;\n    }\n\n    boundBox (param) {\n        if (param) {\n            Object.assign(this._boundBox, param);\n        }\n        return this._boundBox;\n    }\n\n    className (param) {\n        if (param) {\n            this._className = param;\n        }\n        return this._className;\n    }\n\n    draw () {\n        throw new Error('draw is not defined');\n    }\n\n    attachListener () {\n        return this;\n    }\n  }\n\n","import LayoutComponent from './layoutComponent';\n\nclass DummyComponent extends LayoutComponent {\n    getLogicalSpace () {\n        return {\n            width: this.boundBox().width,\n            height: this.boundBox().height\n        };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n        return this;\n    }\n\n    draw () {\n        if (!this.component) {\n            throw new Error(`Component not set for ${this.componentName}`);\n        }\n        this.component.mount(document.getElementById(this.renderAt)); // Change the draw method to component draw\n        return this;\n    }\n}\n\nexport default DummyComponent;\n","export const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    interaction: {\n        sideEffect: 'individual'\n    },\n    pagination: 'scroll',\n    scrollBar: {\n        thickness: 10,\n        speed: 2,\n        vertical: {\n            align: 'right'\n        },\n        horizontal: {\n            align: 'bottom'\n        }\n    },\n    legend: {\n        position: 'right',\n        color: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        shape: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        size: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        }\n    },\n    showHeaders: false,\n    minWidth: 100,\n    minHeight: 100,\n    facet: {\n        rows: {\n            minCharacters: 3\n        },\n        columns: {\n            maxLines: 2,\n            verticalAlign: 'middle',\n            minCharacters: 1\n        }\n    },\n    border: {\n        style: 'solid',\n        color: '#d6d6d6',\n        width: 2,\n        collapse: true,\n        spacing: 0\n    },\n    autoGroupBy: {\n        disabled: false\n    },\n    invalidValues: {},\n    sort: {}\n};\n","import { DEFAULT_CONFIG } from '../../../../muze/src/defaults';\n\nconst DEFAULT_WIDTH = 600;\nconst DEFAULT_HEIGHT = 400;\nconst DEFAULT_CLASS_NAME = `${DEFAULT_CONFIG.classPrefix}-layout-container-component`;\nconst NODE_PREFIX = `${DEFAULT_CONFIG.classPrefix}-layout-container`;\n\nexport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT,\n  DEFAULT_CLASS_NAME,\n  NODE_PREFIX\n};\n","export default class DefinitionModel {\n    constructor (config) {\n        this._host = config.host || null;\n        this._cut = config.cut || null;\n        this._ratioWeight = config.ratioWeight === 0 ? 0 : config.ratioWeight || 1;\n        this._preferred = config.preferred || false;\n        this._lanes = config.lanes || [];\n        this._remainingHeight = 0;\n        this._remainingWidth = 0;\n    }\n\n    host (host) {\n        if (host) {\n            this._host = host;\n        }\n        return this._host;\n    }\n\n    preferred (preferred) {\n        if (preferred) {\n            this._preferred = preferred;\n        }\n        return this._preferred;\n    }\n\n    cut (cut) {\n        if (cut) {\n            this._cut = cut;\n        }\n        return this._cut;\n    }\n\n    ratioWeight (ratioWeight) {\n        if (ratioWeight) {\n            this._ratioWeight = ratioWeight;\n        }\n        return this._ratioWeight;\n    }\n\n    lanes (lanes) {\n        if (lanes) {\n            this._lanes = lanes;\n        }\n        return this._lanes;\n    }\n\n    remainingHeight (remainingHeight) {\n        if (remainingHeight) {\n            this._remainingHeight = remainingHeight;\n        }\n        return this._remainingHeight;\n    }\n\n    remainingWidth (remainingWidth) {\n        if (remainingWidth) {\n            this._remainingWidth = remainingWidth;\n        }\n        return this._remainingWidth;\n    }\n}\n","import { NODE_PREFIX } from '../../constants/defaults';\nimport DefinitionModel from '../definition-manager/definitionModel';\nimport DummyComponent from '../../layout-component/dummy-component';\n/**\n * Compares two strings in lowercase\n *\n * @export\n * @param {string} value the value to be compared\n * @param {string} compareTo whom the value would be compared\n * @return {boolean} true if values are equal\n */\nexport function isEqual (value, compareTo) {\n    if (typeof value !== 'string' || typeof compareTo !== 'string') {\n        throw new TypeError('value and compareTo must be string');\n    }\n    return value.toLowerCase() === compareTo.toLowerCase();\n}\n\nexport const getNodeId = (() => {\n    let _uid = 0;\n    return () => `${NODE_PREFIX}-${++_uid}`;\n})();\n\nexport function yExtraSpace (node) {\n    let smallestHeight = 0;\n    if (node.getCutType() === 'v') {\n        smallestHeight = smallestExtraHeightHorizontally(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'h') {\n        node.children().forEach((child) => {\n            smallestHeight += yExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerHeight = node.boundBox().height;\n        const hostHeight = node.model().host().getLogicalSpace().height;\n\n        smallestHeight = containerHeight - hostHeight;\n        if (smallestHeight < 0) {\n            smallestHeight = 0;\n        }\n    } else {\n        smallestHeight = 0;\n    }\n    return smallestHeight;\n}\n\nexport function smallestExtraHeightHorizontally (node) {\n    let smallestHeight = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const h = yExtraSpace(child);\n        if (h < smallestHeight) {\n            smallestHeight = h;\n        }\n    });\n    return smallestHeight;\n}\n\nexport function xExtraSpace (node) {\n    let smallestWidth = 0;\n    if (node.getCutType() === 'h') {\n        smallestWidth = smallestExtraWidthVertically(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'v') {\n        node.children().forEach((child) => {\n            smallestWidth += xExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerWidth = node.boundBox().width;\n        const hostWidth = node.model().host().getLogicalSpace().width;\n        smallestWidth = containerWidth - hostWidth;\n        if (smallestWidth < 0) {\n            smallestWidth = 0;\n        }\n    } else {\n        smallestWidth = 0;\n    }\n    return smallestWidth;\n}\n\nexport function smallestExtraWidthVertically (node) {\n    let smallestWidth = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const w = xExtraSpace(child);\n        if (w < smallestWidth) {\n            smallestWidth = w;\n        }\n    });\n    return smallestWidth;\n}\n\nexport function determineBoundBox (bb, i, arr, instance) {\n    if (i) {\n    // if not first sibling, take boundbox from previous sibling\n        const lastSibling = arr[i - 1];\n        const { top: _top, left: _left, height: _height, width: _width } = lastSibling.boundBox();\n        return {\n            width: bb.width,\n            height: bb.height,\n\n            top: instance.parentCut() === 'h'\n        ? _top + _height : _top,\n\n            left: instance.parentCut() === 'h'\n        ? _left : _left + _width\n        };\n    }\n  // if first sibling, take boundbox from parent\n    const { top: _top, left: _left } = instance.parent().boundBox();\n    return {\n        width: bb.width,\n        height: bb.height,\n        top: _top,\n        left: _left\n    };\n}\n\n// prepares the targetComponent Map for target Mapping ie. where a component should lie\nexport function prepareTargetComponentMap (context) {\n    context.targetComponentMap(new Map());\n    context.componentMap().forEach((value) => {\n        if (context.targetComponentMap().has(value.target())) {\n            context.targetComponentMap().get(value.target()).push(value);\n        } else {\n            const temp = [];\n            temp.push(value);\n            context.targetComponentMap().set(value.target(), temp);\n        }\n    });\n}\n\nexport function getComponent (canvasComponent, componentName) {\n    const comp = canvasComponent.find(component => component.name() === componentName);\n    return (comp && comp !== -1) ? comp : null;\n}\nexport function createPlaceHolderComponent (height, width, position) {\n    const comp = new DummyComponent(0, { height, width });\n    comp.name('placeHolder');\n    comp.position(position);\n    return comp;\n}\n\nexport function placeComponent (definitionModel, component, isPreferred = false, isGridComponent = false) {\n    let cut = '';\n    let componentRatioWidth = 1;\n    let leftOvercomponentRationWidth = 1;\n    let leftHeight = 0;\n    let leftWidth = 0;\n\n    if (!component) {\n        return { first: definitionModel, second: definitionModel };\n    }\n\n    const { height: componentHeight, width: componentWidth } = component.getLogicalSpace();\n    const position = component.position();\n    if (position === 'top' || position === 'bottom') {\n        cut = 'h';\n        componentRatioWidth = componentHeight / definitionModel.remainingHeight();\n        leftHeight = definitionModel.remainingHeight() - componentHeight;\n        leftWidth = definitionModel.remainingWidth();\n    } else {\n        cut = 'v';\n        componentRatioWidth = componentWidth / definitionModel.remainingWidth();\n        leftWidth = definitionModel.remainingWidth() - componentWidth;\n        leftHeight = definitionModel.remainingHeight();\n    }\n    leftOvercomponentRationWidth = 1 - componentRatioWidth;\n\n// update parentModel\n    definitionModel.cut(cut);\n    const firstLaneConfig = {\n        host: component.name(),\n        cut: null,\n        ratioWeight: componentRatioWidth,\n        preferred: isGridComponent ? false : isPreferred,\n        lanes: []\n    };\n    const firstLane = new DefinitionModel(firstLaneConfig);\n    firstLane.remainingHeight(componentHeight);\n    firstLane.remainingWidth(componentWidth);\n\n    const secondLaneConfig = {\n        host: null,\n        cut: null,\n        ratioWeight: leftOvercomponentRationWidth,\n        preferred: isGridComponent ? false : !isPreferred,\n        lanes: []\n    };\n    const secondLane = new DefinitionModel(secondLaneConfig);\n    secondLane.remainingHeight(leftHeight);\n    secondLane.remainingWidth(leftWidth);\n    if (isPreferred) {\n        definitionModel.lanes([firstLane]);\n    } else if (position === 'top' || position === 'left') {\n        definitionModel.lanes([firstLane, secondLane]);\n    } else {\n        definitionModel.lanes([secondLane, firstLane]);\n    }\n    return { first: firstLane, second: secondLane };\n}\n\nexport function placeGridComponent (definitionModel, gridComponents) {\n    let tempDefModel = definitionModel;\n    const rows = gridComponents.length;\n    const column = rows ? gridComponents[0].length : 0;\n    const height = gridComponents.reduce((acc, val) => (acc + val[0].getLogicalSpace().height), 0);\n\n    for (let i = 0; i < column; i++) {\n        const iscolumnPreffered = i === column - 1;\n        const columnPlaceHolderComponent = createPlaceHolderComponent(height,\n                                                    gridComponents[0][i].getLogicalSpace().width, 'left');\n        const { first, second } = placeComponent(tempDefModel, columnPlaceHolderComponent, iscolumnPreffered);\n        tempDefModel = first;\n        for (let j = 0; j < rows; j++) {\n            const rowpreffred = j === (rows - 1);\n            tempDefModel = placeComponent(tempDefModel, gridComponents[j][i], rowpreffred, true).second;\n        }\n        tempDefModel = second;\n    }\n    return tempDefModel;\n}\n\nexport function negotiateDimension (node) {\n    let preferred;\n    let cumultiveExtraSpaceAmt = 0;\n    let alteredDim;\n    let nonAlteredDim;\n\n    const childrenLength = node.children().length;\n\n    for (let index = 0; index < childrenLength; index++) {\n        let fn;\n        let extraSpaceAmt;\n        const child = node.children()[index];\n\n        if (child.parentCut() === 'h') {\n            fn = yExtraSpace;\n            alteredDim = 'height';\n            nonAlteredDim = 'width';\n        } else {\n            fn = xExtraSpace;\n            alteredDim = 'width';\n            nonAlteredDim = 'height';\n        }\n  // if vertical then get extra height from other node and push it to the preferred node.\n  // for horizontal cut the same thing is to be done with width\n        if (child.isPreferred()) {\n    // push extra space in sink. Execute it when all non preferred space are computed.\n            preferred = child;\n\n            continue; // eslint-disable-line no-continue\n        }\n  // reduce own height and save it in a var\n        cumultiveExtraSpaceAmt += (extraSpaceAmt = fn(child));\n        child.boundBox()[alteredDim] -= extraSpaceAmt;\n  // update nonaltered dim from parent for any change which happened during negotiation\n        child.boundBox()[nonAlteredDim] = child.parent().boundBox()[nonAlteredDim];\n\n        negotiateDimension(child);\n    }\n\n    if (preferred) {\n        preferred.boundBox()[alteredDim] += cumultiveExtraSpaceAmt;\n        preferred.boundBox()[nonAlteredDim] = preferred.parent().boundBox()[nonAlteredDim];\n        negotiateDimension(preferred);\n    }\n}\n\nexport function computePosition (node) {\n    node.children().forEach((child, i, children) => {\n        const boundBox = determineBoundBox(child.boundBox(), i, children, child);\n        child.boundBox(boundBox);\n        computePosition(child);\n    });\n}\n\nexport function allocateBoundingBox (node) {\n    const totalWeight = node.children()\n                            .map(child => child.model().ratioWeight())\n                            .reduce((carry, val) => carry + val, 0);\n\n    node.children().forEach((child, i, children) => {\n        const lastSibling = children[i - 1];\n        const ratio = child.model().ratioWeight() / totalWeight;\n\n        if (child.parentCut() === 'h') {\n            child.boundBox({\n                top: i ? lastSibling.boundBox().top + lastSibling.boundBox().height : 0,\n                left: child.parent().boundBox().left,\n                height: child.parent().boundBox().height * ratio,\n                width: child.parent().boundBox().width\n            });\n        } else {\n            child.boundBox({\n                top: child.parent().boundBox().top,\n                left: i ? lastSibling.boundBox().left + lastSibling.boundBox().width : 0,\n                height: child.parent().boundBox().height,\n                width: child.parent().boundBox().width * ratio\n            });\n        }\n        allocateBoundingBox(child);\n    });\n}\n\n","import { getNodeId } from '../helper';\nimport { LayoutComponent } from '../../layout-component';\n\nclass Node {\n    constructor (data) {\n        this._model = data;\n        this._parent = null;\n        this._children = [];\n        this._parentCut = null;\n        this._boundBox = {\n            top: null,\n            left: null,\n            height: null,\n            width: null\n        };\n\n        this._id = this._model.host() instanceof LayoutComponent && this._model.host().renderAt() ?\n                    this._model.host().renderAt() :\n                    getNodeId();\n    }\n\n    addChildren (entries) {\n        this._children.push(...entries);\n        entries.forEach((e) => { e.parent(this); });\n    }\n\n    isRoot () {\n        return this._parent === null;\n    }\n\n    isLeaf () {\n        return !this._children.length;\n    }\n\n    getCutType () {\n        return this._model.cut();\n    }\n\n    isPreferred () {\n        return !!this._model.preferred();\n    }\n\n    children (children) {\n        if (children) {\n            this._children = children;\n        }\n        return this._children;\n    }\n\n    parent (parent) {\n        if (parent) {\n            this._parent = parent;\n        }\n        return this._parent;\n    }\n\n    parentCut (parentCut) {\n        if (parentCut) {\n            this._parentCut = parentCut;\n        }\n        return this._parentCut;\n    }\n\n    id (id) {\n        if (id) {\n            this._id = id;\n        }\n        return this._id;\n    }\n\n    model (model) {\n        if (model) {\n            this._model = model;\n        }\n        return this._model;\n    }\n\n    boundBox (bound) {\n        if (bound) {\n            this._boundBox = {\n                top: bound.top,\n                left: bound.left,\n                height: bound.height,\n                width: bound.width\n            };\n        }\n        return this._boundBox;\n    }\n  /**\n     * function to search a node and update it with the config provided.\n     * @param  {Object} nodeconfig\n     */\n    updateNode (nodeconfig) {\n        if (this._id === nodeconfig._id) {\n            this._model.cut(nodeconfig.cut);\n            this._model.ratioWeight(nodeconfig.ratioWeight);\n        } else {\n            this._children.forEach((node) => {\n                if (node._id === nodeconfig._id) {\n                    node.model.cut(nodeconfig.cut);\n                    node.model.ratioWeight(nodeconfig.ratioWeight);\n                    return;\n                }\n                this.searchNode(node, nodeconfig);\n            });\n        }\n    }\n\n  // Recursive function to search a node\n    searchNode (node, nodeconfig) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeconfig._id) {\n                childNode.model().cut(nodeconfig.cut);\n                childNode.model().ratioWeight(nodeconfig.ratioWeight);\n            } else {\n                this.searchNode(childNode, nodeconfig);\n            }\n        });\n    }\n\n  /**\n     * function to delete a node from tree Structure.\n     * @param  {String} nodeId - node Id of the Node\n     */\n    delete (nodeId) {\n        this._children.forEach((node) => {\n            if (node.id() === nodeId) {\n                const index = this._children.indexOf(node);\n                this._model.lanes().splice(index, 1);\n            }\n            this.deleteSearchNode(node, nodeId);\n        });\n    }\n\n  // Recursive function to search a node\n    deleteSearchNode (node, nodeId) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeId) {\n                const index = node.children().indexOf(childNode);\n                node.model().lanes().splice(index, 1);\n            } else {\n                this.deleteSearchNode(childNode, nodeId);\n            }\n        });\n    }\n}\n\nexport default Node;\n","import Node from '../tree';\nimport {\n    allocateBoundingBox,\n    negotiateDimension,\n    computePosition\n} from '../helper';\n\nexport default class LayoutModel {\n    constructor (measurements, config) {\n        this._measurements = measurements;\n        this._config = config;\n        this._root = this.createTree(this._config, null);\n        this.setBoundBox();\n    }\n\n    createTree (config, parent) {\n        const node = new Node(config);\n        if (parent) {\n            node.parentCut(parent.getCutType());\n            parent.addChildren([node]);\n        } else {\n            this._root = node;\n        }\n        for (const lane of config.lanes()) {\n            this.createTree(lane, node);\n        }\n\n        return this._root;\n    }\n\n    setBoundBox () {\n        this._root.boundBox({\n            top: 0,\n            left: 0,\n            width: this._measurements.width,\n            height: this._measurements.height\n        });\n        allocateBoundingBox(this._root);\n    }\n\n    setHostPosition (node) {\n        node.children().forEach((child) => {\n            LayoutModel.setHostSpatialConfig(child);\n            this.setHostPosition(child);\n        });\n    }\n\n    static setHostSpatialConfig (node) {\n        const bb = node.boundBox();\n        const host = node.model().host();\n        if (host && host.setSpatialConfig) {\n            const conf = {\n                x: bb.left,\n                y: bb.top,\n                width: bb.width,\n                height: bb.height,\n                renderAt: node.id()\n            };\n            host.setSpatialConfig(conf);\n        }\n    }\n\n    negotiate () {\n        negotiateDimension(this._root);\n        computePosition(this._root);\n        return this;\n    }\n\n    broadcast () {\n        this.setHostPosition(this._root);\n        return this;\n    }\n\n    tree () {\n        return this._root;\n    }\n}\n","/**\n * This file exports constants that will be used to\n * create the state store of the table layout.\n */\n/**\n * The index of top, bottom and center in the matrix\n */\nexport const VIEW_INDEX = {\n    top: 0,\n    center: 1,\n    bottom: 2\n};\n\nexport const ROW_MATRIX_INDEX = {\n    0: 'top',\n    1: 'center',\n    2: 'bottom'\n};\n\nexport const COLUMN_MATRIX_INDEX = {\n    0: 'left',\n    1: 'middle',\n    2: 'right'\n};\n\n/**\n * The width of the grid suppied by the user.\n */\nexport const GRID_WIDTH = 'width';\n\n/**\n * The height of the grid supplied by the user.\n */\nexport const GRID_HEIGHT = 'height';\n\n/**\n  * The border for the grid\n  */\nexport const BORDER = 'border';\n\n /**\n  *  The index of the first visible row in view matrix.\n  */\nexport const ROW_POINTER = 'rowPointer';\n\n/**\n * The index of the first visible column in the view matrix.\n */\nexport const COLUMN_POINTER = 'columnPointer';\n\n/**\n * Flag to specify whether row sizes should be equal.\n */\nexport const ROW_SIZE_IS_EQUAL = 'isRowSizeEqual';\n\n/**\n * Flag to specify whether column sizes are equal.\n */\nexport const COLUMN_SIZE_IS_EQUAL = 'isColumnSizeEqual';\n\n/**\n * Field to store an array an of the widths of visible columns.\n * @computed\n */\nexport const COLUMN_WIDTHS = 'visibleColumnWidths';\n\n/**\n * Field to store an array of heights of visible rows.\n * @computed\n */\nexport const ROW_HEIGHTS = 'visibleRowHeights';\n\n/**\n * Field to store the width of the left matrix.\n * @computed\n */\nexport const LEFT_MATRIX_WIDTH = 'leftMatrixWidth';\n\n/**\n * Field to store the width of the right matrix.\n * @computed\n */\nexport const RIGHT_MATRIX_WIDTH = 'rightMatrixWidth';\n\n/**\n * Field to store the height of the top matrix.\n * @computed\n */\nexport const TOP_MATRIX_HEIGHT = 'topMatrixHeight';\n\n/**\n * Field to store the height of the bottom matrix.\n * @computed\n */\nexport const BOTTOM_MATRIX_HEIGHT = 'bottomMatrixHeight';\n\n/**\n * The dom element to render the layout inside.\n */\nexport const MOUNT_POINT = 'mount';\n\n/**\n * The id attribute of the left table element.\n */\nexport const LEFT_TABLE_ID = 'grid-left';\n\n/**\n * The id attribute of the right table element.\n */\nexport const RIGHT_TABLE_ID = 'grid-right';\n\n/**\n * The id attribute of the top table.\n */\nexport const TOP_TABLE_ID = 'grid-top';\n\n/**\n * The id attribute of the bottom table.\n */\nexport const BOTTOM_TABLE_ID = 'grid-bottom';\n\n/**\n * The id attribute of the center table.\n */\nexport const CENTER_TABLE_ID = 'grid-center';\n\n/**\n * The id attribute of the top div.\n */\nexport const TOP_DIV_ID = 'muze-div-top';\n\n/**\n * The id attribute of the bottom div.\n */\nexport const BOTTOM_DIV_ID = 'muze-div-bottom';\n\n/**\n * The id attribute of the center div.\n */\nexport const CENTER_DIV_ID = 'muze-div-center';\n\n/**\n * Field that indicates if the row configuration has changed\n */\nexport const HAVE_ROWS_CHANGED = 'haveRowsChanged';\n\n/**\n * Field that indicates if the column configuration has changed\n */\nexport const HAVE_COLUMNS_CHANGED = 'haveColumnsChanged';\n\n/**\n * Field that indicates if the values configuration for the center matrix has changed\n */\nexport const HAVE_VALUES_CHANGED = 'haveValuesChanged';\n\n/**\n * Field that indicates the width of row matrix\n */\nexport const ROW_MATRIX_WIDTH = 'rowMatrixWidth';\n\n/**\n * Field that indicates the height of row matrix\n */\nexport const COLUMN_MATRIX_HEIGHT = 'columnMatrixHeight';\n\n/**\n * Field that indicates the unit width of layout\n */\nexport const UNIT_WIDTH = 'unitWidth';\n\n/**\n * Field that indicates the unit height of layout\n */\nexport const UNIT_HEIGHT = 'unitHeight';\n\n/**\n * Field that indicates the style object\n */\nexport const STYLE = 'style';\n\n/**\n * Field that indicates the color configuration\n */\nexport const COLOR = 'color';\n\n/**\n * Field that indicates width\n */\nexport const WIDTH = 'width';\n\n/**\n * Field that indicates collpase property for border\n */\nexport const COLLAPSE = 'collapse';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SPACING = 'spacing';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const DISTRIBUTION = 'distribution';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const GUTTERSPACE = 'gutterSpace';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const BREAK_PAGE = 'breakPage';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_ROW_BORDERS = 'showRowBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_COL_BORDERS = 'showColBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_VALUE_BORDERS = 'showValueBorders';\n\nexport const HEIGHT = 'height';\nexport const COLUMN = 'column';\nexport const ROW = 'row';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const CENTER = 'center';\nexport const CLICK = 'click';\nexport const ROW_LEFT = 'rowLeft';\nexport const ROW_RIGHT = 'rowRight';\nexport const COLUMN_BOTTOM = 'colBottom';\nexport const COLUMN_TOP = 'colTop';\nexport const AUTO = 'auto';\nexport const ROW_SPAN = 'rowSpan';\nexport const COL_SPAN = 'colSpan';\nexport const ROW_ROOT = 'rowRoot';\nexport const COLUMN_ROOT = 'columnRoot';\nexport const PRIMARY = 'primary';\nexport const SECONDARY = 'secondary';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\nexport const GRID = 'grid';\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n\nexport const PAGINATION = 'pagination';\nexport const BUFFER = 'buffer';\nexport const HOLISTIC = 'holistic';\nexport const SCROLL = 'scroll';\nexport const MIDDLE = 'middle';\nexport const NO_BORDERS = null;\n\nexport const MAX_WIDTH_AVAIL_FOR_COL_MATRIX = 'maxWidthAvailableForColumnMatrix';\nexport const COLUMN_MATRIX = 'columnMatrix';\nexport const MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX = 'maxHeightAvailableForRowMatrix';\nexport const ROW_MATRIX = 'rowMatrix';\n","/* eslint no-undef: \"off\" */\n/* eslint default-case: \"off\" */\nexport class Utils {\n    static isDOMElement (element) {\n        return element instanceof Element;\n    }\n\n    static getID (element) {\n        return element.id;\n    }\n\n    static getElement (id) {\n        return document.getElementById(id);\n    }\n\n    static findContainer (data) {\n        return data.filter(coordinate => coordinate.parent == null)[0];\n    }\n  /**\n   * static method to remove the div\n   * @param  {} divId - div ID to be removed.\n   */\n    static removeDiv (divId) {\n        if (document.getElementById(divId) !== null) { document.getElementById(divId).remove(); }\n    }\n}\n","import { DEFAULT_CLASS_NAME } from '../constants/defaults';\nimport { LayoutComponent } from '../layout-component';\n\nexport default class DataPoint {\n    constructor (node) {\n        this._node = node;\n        this._className = node.model().host() instanceof LayoutComponent ?\n                            node.model().host().className() : DEFAULT_CLASS_NAME;\n    }\n\n    node () {\n        return this._node;\n    }\n\n    hasHost () {\n        return this._node.model().host() instanceof LayoutComponent;\n    }\n\n    className () {\n        return this._className || DEFAULT_CLASS_NAME;\n    }\n}\n","import { getnodePoints } from './helper';\n\nexport class DataParser {\n    constructor (data) {\n        this._data = data;\n    }\n\n    defaultDataPointLogic () {\n        const nodepoints = [];\n        getnodePoints(this._data, nodepoints);\n        return nodepoints;\n    }\n\n}\n","import DataPoint from './data-point';\n\nexport const getnodePoints = (node, nodepoints) => {\n    const datapoint = new DataPoint(node);\n    nodepoints.push(datapoint);\n    node.children().forEach((child) => {\n        getnodePoints(child, nodepoints);\n    });\n};\n","import { DataParser } from './data-parser';\n\nexport class HTMLDataAdapter extends DataParser {\n    getCoordinates () {\n        return super.defaultDataPointLogic();\n    }\n}\n","export class Renderer {\n\n    initRenderer (node, tree) {\n        node.__logicalTree = tree;\n    }\n}\n","import { HTMLDataAdapter } from '../data-adapters/html-data';\nimport { Utils } from '../utils';\nimport { Renderer } from './renderer';\n\nexport class HTMLRenderer extends Renderer {\n    constructor (data) {\n        super();\n        this._data = data;\n        this._coordinates = new HTMLDataAdapter(this._data).getCoordinates();\n    }\n\n    createhtml (mount, className) {\n        const mainDiv = mount;\n        super.initRenderer(mainDiv, this._data); // Initialise node with layout id\n        this.parentDiv = this.createAndCustomiseParent(className);\n        this._coordinates.forEach((node) => {\n            if (node.hasHost()) {\n                const host = node.node();\n                this.parentDiv.appendChild(this.createAndPositionDiv({ ...host.boundBox(),\n                    id: host.id(),\n                    className: node.className() }));\n            }\n        });\n        mainDiv.appendChild(this.parentDiv);\n    }\n\n    createAndPositionDiv (config) {\n        const { top, left, height, width, className, id } = config;\n        const existingDiv = document.getElementById(id);\n        const div = existingDiv || document.createElement('div');\n        div.style.position = 'absolute';\n        div.style.left = `${left}px`;\n        div.style.top = `${top}px`;\n        div.style.height = `${height}px`;\n        div.style.width = `${width}px`;\n        div.id = id;\n        div.className = className;\n        return div;\n    }\n\n    createAndCustomiseParent (className) {\n        const container = Utils.findContainer(this._coordinates);\n        const host = container.node();\n        const parentDiv = this.createAndPositionDiv({ ...host.boundBox(),\n            id: host.id(),\n            className: container.className() });\n        parentDiv.className = className;\n        parentDiv.style.position = 'relative';\n        return parentDiv;\n    }\n\n    coordinates () {\n        return this._coordinates;\n    }\n}\n","import { selectElement } from 'muze-utils';\nimport { HTMLRenderer } from '../renderers/html-renderer';\nimport { LayoutComponent } from '../layout-component';\n\nexport const getChildNode = (context, config) =>\n    context.renderer().createAndPositionDiv(config);\n\nexport const findNode = (context, nodeID) =>\n    context.renderer().coordinates().find(point => point.node().id() === nodeID);\n\nexport const renderHTML = (context) => {\n    context.renderer(new HTMLRenderer(context.data()));\n    context.renderer().createhtml(context.mount(), context.className());\n};\n\nexport const drawLayout = (context) => {\n    switch (context.renderer()) {\n        case 'html':\n            renderHTML(context);\n            break;\n        default:\n            renderHTML(context);\n    }\n};\n\nexport const drawComponent = (componentData) => {\n    componentData.children().forEach((node) => {\n        const host = node.model().host();\n        if (host instanceof LayoutComponent) {\n            host.draw();\n        }\n        drawComponent(node);\n    });\n};\n\nexport const removeElement = (elemID) => {\n    if (elemID) {\n        selectElement(`#${elemID}`).remove();\n    }\n};\n\nconst setAlignConfig = (alignment, params) => {\n    let newNodeConfig = {};\n    const { node, refNode } = params;\n    switch (alignment) {\n    case 'left':\n        newNodeConfig = {\n            top: node.top,\n            left: refNode.left,\n            height: node.height,\n            width: Math.abs(node.width - Math.abs(refNode.left - node.left))\n        };\n        break;\n\n    case 'right':\n        newNodeConfig = {\n            top: node.top,\n            left: node.left,\n            height: node.height,\n            width: Math.abs(node.width - Math.abs(node.left + node.width - (refNode.left + refNode.width)))\n        };\n        break;\n\n    case 'top':\n        newNodeConfig = {\n            top: refNode.top,\n            left: node.left,\n            height: Math.abs(node.height - Math.abs(refNode.top - node.top)),\n            width: node.width\n        };\n        break;\n\n    case 'bottom':\n        newNodeConfig = {\n            top: node.top,\n            left: node.left,\n            height: Math.abs(node.top - refNode.top + refNode.height),\n            width: node.width\n        };\n        break;\n\n    case 'h-center':\n        newNodeConfig = {\n            top: node.top,\n            left: refNode.left,\n            height: node.height,\n            width: refNode.width\n        };\n        break;\n\n    case 'v-center':\n        newNodeConfig = {\n            top: refNode.top,\n            left: node.left,\n            height: refNode.top,\n            width: node.width\n        };\n        break;\n    default:\n        break;\n    }\n    return newNodeConfig;\n};\n\nexport const resolveAligment = (context, componentData) => {\n    componentData.children().forEach((component) => {\n        const host = component.model().host();\n\n        if (host instanceof LayoutComponent && host.alignWith()) {\n            const componentToAlign = context.componentMap().get(host.alignWith());\n\n            if (componentToAlign) {\n                const point = findNode(context, component.id()).node();\n                const node = point.boundBox();\n                const refNode = findNode(context, componentToAlign.renderAt())\n                    .node()\n                    .boundBox();\n                const newNodeConfig = setAlignConfig(host.alignment(), { node, refNode });\n\n                // check if model in parent component\n                Object.assign(newNodeConfig, { id: point.id(), className: host.className() });\n                context.renderer().createAndPositionDiv(newNodeConfig);\n                context.componentMap().get(host.name()).setSpatialConfig({\n                    x: newNodeConfig.left,\n                    y: newNodeConfig.top,\n                    height: newNodeConfig.height,\n                    width: newNodeConfig.width\n\n                });\n            }\n        }\n\n        resolveAligment(context, component);\n    });\n};\n","import { Utils } from '../utils';\nimport { drawLayout, resolveAligment, drawComponent } from './helper';\n\nexport class DrawingManager {\n    constructor (data, renderer, container) {\n        this._data = data.tree;\n        this._componentMap = data.componentMap;\n        this._layoutClassName = data.layoutClassName;\n        this._renderer = renderer;\n        this._mount = Utils.isDOMElement(container) ? container : Utils.getElement(container);\n    }\n\n    draw () {\n        drawLayout(this);\n        resolveAligment(this, this._data);\n        drawComponent(this._data);\n        return this;\n    }\n\n    data (data) {\n        if (data) {\n            this._data = data;\n        }\n        return this._data;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    className (param) {\n        if (param) {\n            this._layoutClassName = param;\n        }\n        return this._layoutClassName;\n    }\n\n    renderer (param) {\n        if (param) {\n            this._renderer = param;\n        }\n        return this._renderer;\n    }\n\n    mount (param) {\n        if (param) {\n            this._mount = param;\n        }\n        return this._mount;\n    }\n}\n","import DefinitionModel from './definitionModel';\nimport { prepareTargetComponentMap, getComponent, placeComponent, placeGridComponent } from '../helper';\n\nexport default class DefinitionManager {\n    constructor (componentMap, sequence, totalHeight, totalWidth) {\n        this._componentMap = componentMap;\n        this._prioritySequence = sequence;\n        this._totalHeight = totalHeight;\n        this._totalWidth = totalWidth;\n        this._targetComponentMap = null;\n    }\n\n    // create the config model\n    generateConfigModel () {\n        prepareTargetComponentMap(this);\n        const canvasComponent = this._targetComponentMap.get('canvas');\n        const definitionModel = new DefinitionModel({});\n        let tempDefModel = definitionModel;\n        definitionModel.remainingHeight(this._totalHeight);\n        definitionModel.remainingWidth(this._totalWidth);\n\n        let componentRef = null;\n\n        this._prioritySequence.forEach((name) => {\n            componentRef = getComponent(canvasComponent, name);\n            if (name !== 'grid') {\n                tempDefModel = placeComponent(tempDefModel, componentRef).second;\n            } else {\n                tempDefModel = placeGridComponent(tempDefModel, componentRef.component);\n            }\n        });\n        return definitionModel;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    targetComponentMap (param) {\n        if (param) {\n            this._targetComponentMap = param;\n        }\n        return this._targetComponentMap;\n    }\n}\n","import { sanitizeConfig } from './helper';\n\nexport class LayoutDef {\n    constructor () {\n        this._componentMap = new Map();\n        this._layoutDefinition = null;\n    }\n\n    addComponent (component) {\n        this._componentMap.set(component.name(), component);\n    }\n\n    layoutDefinition (def) {\n        if (def) {\n            this._layoutDefinition = def;\n        }\n        return this._layoutDefinition;\n    }\n\n    addMultipleComponent (componentArray) {\n        componentArray.forEach((comp) => {\n            this.addComponent(comp);\n        });\n    }\n\n    sanitizedDefinition () {\n        sanitizeConfig(this, this._layoutDefinition);\n        return this.layoutDefinition();\n    }\n\n    componentMap () {\n        return this._componentMap;\n    }\n    resetComponentMap () {\n        this._componentMap.clear();\n    }\n}\n","import DefinitionManager from '../layout-definition/definition-manager';\n\nexport function sanitizeConfig (context, hostObj) {\n    const hostID = hostObj.host();\n    if (hostObj.lanes() && hostObj.lanes().length) {\n        hostObj.lanes().forEach(childHost => sanitizeConfig(context, childHost));\n    }\n    if (hostID != null && typeof (hostID) === 'string') {\n        if (context.componentMap().get(hostID) !== undefined) {\n            hostObj.host(context.componentMap().get(hostID));\n        }\n    }\n}\n\nexport function calLayOutDef (context) {\n    const { height, width } = context.dimension();\n    const defManager = new DefinitionManager(context.layoutDef().componentMap(),\n                                              context.prioritySequence(),\n                                              height,\n                                              width);\n    const genLayoutdef = defManager.generateConfigModel();\n    return genLayoutdef;\n}\n","import {\n  LayoutModel\n} from '../layout-definition';\n\nimport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT\n} from '../constants/defaults';\n\nimport {\n   GRID\n} from '../../enums/constants';\n\nimport { DrawingManager } from '../drawing-manager';\nimport { removeElement } from '../drawing-manager/helper';\nimport { Utils } from '../utils';\nimport { LayoutDef } from './layout-def';\nimport { calLayOutDef } from './helper';\n\nexport default class LayoutManager {\n    constructor (conf) {\n        this._renderAt = conf.renderAt;\n        this._layoutClassName = conf.className;\n        this._dimension = {\n            width: conf.width || DEFAULT_WIDTH,\n            height: conf.height || DEFAULT_HEIGHT\n        };\n\n        this._skeletonType = conf.skeletonType || 'html';\n        this._layoutDefinition = null;\n        this._layoutDef = new LayoutDef();\n        this._drawingManager = null;\n        this._prioritySequence = [];\n        this.tree = null;\n        this._rootNodeID = null;\n    }\n\n    layoutDef (param) {\n        if (param) {\n            this._layoutDef = param;\n        }\n        return this._layoutDef;\n    }\n\n    prioritySequence (param) {\n        if (param) {\n            this._prioritySequence = param;\n        }\n        return this._prioritySequence;\n    }\n\n    dimension (param) {\n        if (param) {\n            Object.assign(this._dimension, param);\n        }\n        return this._dimension;\n    }\n\n    addComponent (component) {\n        this._layoutDef.addComponent(component);\n    }\n\n    addMultipleComponent (componentArray) {\n        this._layoutDef.addMultipleComponent(componentArray);\n    }\n\n    resetNode (node) {\n        if (this.con) {\n            this.con.resetNode(node);\n        }\n    }\n\n  /**\n   * function to update the node and rerender the layout.\n   * @param  {} config - node configuration to change.\n   */\n    updateNode (config) {\n        this.tree.updateNode(config);\n        this._layoutDefinition = this.tree.model;\n        this.compute();\n    }\n\n    compute () {\n        //----\n        if (Utils.isDOMElement(this._renderAt)) {\n            this._renderAt._layout = this;\n        } else {\n            document.getElementById(this._renderAt)._layout = this;\n        }\n        //-----\n        this._layoutDefinition = calLayOutDef(this);\n        this._layoutDef.layoutDefinition(this._layoutDefinition);\n        this._layoutDefinition = this._layoutDef.sanitizedDefinition();\n        this._layout = new LayoutModel({\n            width: this._dimension.width,\n            height: this._dimension.height\n        },\n            this._layoutDefinition);\n        this.tree = this._layout.negotiate().tree();\n        this._layout.broadcast();\n        this._drawingManager = new DrawingManager({\n            tree: this.tree,\n            componentMap: this._layoutDef.componentMap(),\n            layoutClassName: this._layoutClassName\n        }, this._skeletonType, this._renderAt);\n\n        if (this._rootNodeID) {\n            this.tree.id(this._rootNodeID);\n        } else {\n            this._rootNodeID = this.tree.id();\n        }\n    // this will draw all the components by calling their draw method\n        this._drawingManager.draw();\n    }\n\n    getRootNodeId () {\n        return this._rootNodeID;\n    }\n\n  /**\n  * This function takes the LayoutComponents and Register them in component store\n  * @param {Array<LayoutComponent>} layoutComponents\n  */\n    registerComponents (layoutComponents) {\n        this._prioritySequence.length = 0;\n        this._layoutDef.resetComponentMap();\n        layoutComponents.forEach((container) => {\n            if (container) {\n                this._prioritySequence.push(container.name());\n                this.addComponent(container);\n                if (container.name() === 'grid') {\n                    container.component.forEach((componentArr) => {\n                        componentArr.forEach((compo) => {\n                            this.addComponent(compo);\n                        });\n                    });\n                }\n            }\n        });\n        return this;\n    }\n\n    getComponent (componentName) {\n        return this._layoutDef.componentMap().get(componentName);\n    }\n\n    deleteElement (component, elementName) {\n        this._layoutDef.componentMap().delete(elementName);\n        const deleteElementId = component.renderAt();\n        return removeElement(deleteElementId);\n    }\n\n    removeComponent (name) {\n        const component = this.getComponent(name);\n        if (component) {\n            if (name === GRID) {\n                return component.component.map(comp => comp.map(\n                    co => this.deleteElement(co, co.name())\n                ));\n            }\n            return this.deleteElement(component, name);\n        }\n        return this;\n    }\n\n    renderAt (mount) {\n        if (mount) {\n            this._renderAt = mount;\n        }\n        return this._renderAt;\n    }\n}\n","import { isEqual, STATE_NAMESPACES, selectElement, getValueParser } from 'muze-utils';\nimport { VisualGroup } from '@chartshq/visual-group';\nimport { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, DATA, CONFIG, GRID }\n    from '../constants';\nimport { canvasOptions } from './local-options';\nimport { LayoutManager } from '../../../layout/src/tree-layout';\n\n/**\n * Instantiate high level components. Canvas knows what all high level component it has.\n * @nice-to-have dynamic high level components.\n *  - Is it even required ?\n *  - Reactive to source (canvas) streaming ?\n * @param {*} context Canvas instance\n * @return {Object.<Array>} Arrays of Title, visualGroup, Legend\n */\nexport const initCanvas = (context) => {\n    const reg = context._registry.components;\n\n    return [new reg.VisualGroup(context._registry, Object.assign({\n        throwback: context._throwback\n    }, context.dependencies()))];\n};\n\nexport const fixScrollBarConfig = (config) => {\n    config.scrollBar.thickness = Math.min(50, Math.max(10, config.scrollBar.thickness));\n    return config;\n};\n\nexport const setLayoutInfForUnits = (context) => {\n    const layoutManager = context._layoutManager;\n    const gridLayout = layoutManager.getComponent(GRID);\n    const boundBox = gridLayout && gridLayout.getBoundBox();\n    const valueMatrix = context.composition().visualGroup.matrixInstance().value;\n    const parentContainer = selectElement(`#${layoutManager.getRootNodeId()}`).node();\n    valueMatrix.each((cell) => {\n        cell.valueOf().parentContainerInf({\n            el: parentContainer,\n            dimensions: boundBox\n        });\n    });\n};\n\n/**\n *\n *\n * @memberof Canvas\n */\nexport const dispatchProps = (context) => {\n    const lifeCycleManager = context.dependencies().lifeCycleManager;\n    lifeCycleManager.notify({ client: context, action: 'beforeupdate' });\n    const visualGroup = context.composition().visualGroup;\n\n    const allOptions = context._allOptions;\n    for (const key in allOptions) {\n        const value = context[key]();\n        if (value !== null) {\n            visualGroup[key] && visualGroup[key](value);\n        }\n    }\n    const { invalidValues } = context.config();\n\n    visualGroup.valueParser(getValueParser(invalidValues));\n    visualGroup.createMatrices();\n    context._cachedProps = {};\n    lifeCycleManager.notify({ client: context, action: 'initialized' });\n    lifeCycleManager.notify({ client: context, action: 'updated' });\n};\n\nconst equalityChecker = (props, params) => {\n    let checker = () => false;\n    return !props.every((option, i) => {\n        switch (option) {\n        case ROWS:\n        case COLUMNS:\n        case DETAIL:\n            checker = isEqual('Array');\n            break;\n\n        case SHAPE:\n        case SIZE:\n        case COLOR:\n        case DATA:\n        case CONFIG:\n            checker = isEqual('Object');\n            break;\n        default:\n            checker = () => true;\n            break;\n        }\n        const oldVal = params[i][0];\n        const newVal = params[i][1];\n\n        return checker(oldVal, newVal);\n    });\n};\n\nconst updateChecker = (props, params) => props.every((option, i) => {\n    const val = params[i][1];\n    switch (option) {\n    case ROWS:\n    case COLUMNS:\n        return val !== null;\n\n    case DATA:\n        return val && !val.isEmpty();\n\n    default:\n        return true;\n\n    }\n});\n\nexport const notifyAnimationEnd = (context) => {\n    const viewInfo = context.layout().viewInfo();\n    const centerMatrix = viewInfo && viewInfo.viewMatricesInfo.matrices.center[1] || [];\n    const promises = [];\n    centerMatrix.forEach((cellArr) => {\n        cellArr.forEach((cell) => {\n            promises.push(cell.valueOf().done());\n        });\n    });\n    const lifeCycleManager = context.lifeCycle();\n    if (promises.length) {\n        Promise.all(promises).then(() => {\n            // Update life cycle\n            lifeCycleManager.notify({ client: context, action: 'drawn' });\n            const animDonePromises = [];\n\n            centerMatrix.forEach((cellArr) => {\n                cellArr.forEach((cell) => {\n                    cell.valueOf().layers().forEach((layer) => {\n                        animDonePromises.push(layer.animationDone());\n                    });\n                });\n            });\n\n            [context.xAxes(), context.yAxes()].forEach((axisArr) => {\n                axisArr = axisArr || [];\n                axisArr.forEach((axes) => {\n                    axes.forEach((axisInst) => {\n                        animDonePromises.push(axisInst.animationDone());\n                    });\n                });\n            });\n\n            Promise.all(animDonePromises).then(() => {\n                lifeCycleManager.notify({ client: context, action: 'animationend' });\n            });\n        });\n    } else {\n        lifeCycleManager.notify({ client: context, action: 'animationend' });\n    }\n};\n\nexport const setupChangeListener = (context) => {\n    const store = context._store;\n\n    const allOptions = Object.keys(context._allOptions);\n    const props = [...allOptions, ...Object.keys(canvasOptions)];\n    const nameSpaceProps = [...allOptions, ...Object.keys(canvasOptions)].map(prop =>\n        `${STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE}.${prop}`);\n    store.registerChangeListener(nameSpaceProps, (...params) => {\n        const equalityProps = equalityChecker(props, params);\n        const updateProps = updateChecker(props, params);\n        // inform attached board to rerender\n        if (equalityProps && context.mount()) {\n            if (updateProps) {\n                dispatchProps(context);\n            } else {\n                context.composition().visualGroup.remove();\n            }\n            context.render();\n        }\n        notifyAnimationEnd(context);\n    }, true);\n};\n\nexport const applyInteractionPolicy = (firebolt) => {\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    if (visualGroup) {\n        const valueMatrix = visualGroup.matrixInstance().value;\n        const interactionPolicy = firebolt._interactionPolicy;\n        interactionPolicy(valueMatrix, firebolt);\n        const crossInteractionPolicy = firebolt._crossInteractionPolicy;\n        const behaviours = crossInteractionPolicy.behaviours;\n        const sideEffects = crossInteractionPolicy.sideEffects;\n        valueMatrix.each((cell) => {\n            const unitFireBolt = cell.valueOf().firebolt();\n            for (const key in behaviours) {\n                unitFireBolt.changeBehaviourStateOnPropagation(key, behaviours[key]);\n            }\n            for (const key in sideEffects) {\n                unitFireBolt.changeSideEffectStateOnPropagation(key, sideEffects[key]);\n            }\n        });\n    }\n};\n\n/**\n * Sets the rotation for all x axes if any axis has the rotation config set in the\n * entire view\n *\n * @param {Array} columns Column cells that contain the axes cells\n */\nexport const setLabelRotationForAxes = (context) => {\n    let rotation = 0;\n\n    const xAxes = context.xAxes() || [];\n\n    (() => {\n        for (let i = 0; i < xAxes.length; i++) {\n            for (let j = 0; j < xAxes[i].length; j++) {\n                const rotationVal = xAxes[i][j].renderConfig().labels.rotation;\n                if (rotationVal && rotationVal !== 0) {\n                    rotation = rotationVal;\n                    return;\n                }\n            }\n        }\n    })();\n\n    if (rotation) {\n        xAxes.forEach((axes) => {\n            axes.forEach((axis) => {\n                axis.renderConfig({ labels: { rotation } });\n                axis.smartTicks(axis.setTickConfig());\n            });\n        });\n    }\n};\n\nexport const createGroupState = (context) => {\n    const [globalState, localState] = VisualGroup.getState();\n    const store = context._store;\n    store.append('app.group', globalState);\n    store.append('local.group', localState);\n};\n\nexport const removeChild = (mount) => {\n    while (mount.firstChild) {\n        mount.removeChild(mount.firstChild);\n    }\n};\n\nexport const createLayoutManager = () => {\n    const layoutManager = new LayoutManager({\n        className: 'muze-group-container'\n    });\n    return layoutManager;\n};\n","/**\n * This is the global options semantics based on which setters getters are created and reactivity is initiated.\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n * @module GlobalOptions\n */\n\nimport { intSanitizer, mergeRecursive, DataModel } from 'muze-utils';\nimport { fixScrollBarConfig } from './canvas/helper';\nimport { DEFAULT_CONFIG } from './defaults';\n\nexport default {\n    data: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel\n        }\n    },\n    width: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    height: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitWidth: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitHeight: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    config: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config, oldConfig) => {\n                // Reset the configuration when null is passed\n                const oldConf = mergeRecursive({}, config === null ? {} : oldConfig);\n                const defConfig = mergeRecursive(oldConf, DEFAULT_CONFIG);\n                let newConf = mergeRecursive(defConfig, config);\n                newConf = fixScrollBarConfig(newConf);\n\n                return newConf;\n            }\n\n        }\n    }\n};\n","import { sanitizeIP, mergeRecursive } from 'muze-utils';\nimport { TOP, CENTER, BOTTOM } from '../enums/constants';\n\n/*\n * This is the abstract implementation of the root layout. This takes care of common work which all the layouts\n * has to handle. The common work includes sanitizaion of inputs, update, rerender, dispose etc. This class can't be\n * used directly (as ofcourse this is an abstract implementaiton), the class which is implementing it has to implement\n * the necessary methods and gives its on visual.\n */\n\n/**\n * This class is used to create a generic layout. It can be extended to create layouts\n * of different types\n * @class GenericLayout\n */\nexport default class GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config configuration to be given for the layout\n     * @param {Object} dependencies external dependencies.\n     *\n     * @memberof GenericLayout\n     *\n     */\n    constructor (mountPoint, measurement, config, dependencies) {\n        this._config = {};\n        this._measurement = {};\n        this._matrices = [];\n        // External dependencies to be included for the layout. This includes the ext global dependencies like\n        // smartlabel which has one single implementation of throughout the page or per isntance\n        this._dependencies = dependencies;\n\n        this.measurement(measurement);\n        this.mountPoint(mountPoint);\n        this.config(config);\n    }\n\n    /**\n     * Returns an object which is used to recreate the layout.\n     * @return {Object} the serialized components\n     */\n    serialize () {\n        return {\n            measurement: this.measurement(),\n            config: this.config(),\n            matrices: this.matrices()\n        };\n    }\n\n     /**\n     * Sets/Gets the config for the layout\n     * @param {Object} config configuration for the layout\n     * @return {Layout|Object} Gets the Config/ Returns this instance when set\n     */\n    config (config) {\n        if (config) {\n            this._config = mergeRecursive(this._config || {}, config);\n            this._config.border.width = Math.max(0, this._config.border.width);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Sets/Gets the measurement for the layout\n     * @param {Object} measurement measurement for the layout\n     * @return {Layout|Object} Gets the measurement/ Returns this instance when set\n     */\n    measurement (measurement) {\n        if (measurement) {\n            this._measurement = mergeRecursive(this._measurement || {}, measurement);\n\n            return this;\n        }\n        return this._measurement;\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     * @param {Object} matrices matrices for the layout\n     * @return {Layout|Object} Gets the matrices/ Returns this instance when set\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = sanitizeIP.typeObj([TOP, CENTER, BOTTOM], matrices);\n\n            return this;\n        }\n        return this._matrices;\n    }\n\n    /**\n     * Sets/Gets the matrix for row\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    rowMatrix (matrix) {\n        if (matrix) {\n            this._rowMatrix = matrix;\n            return this;\n        }\n        return this._rowMatrix;\n    }\n\n    /**\n     * Sets/Gets the matrix for columns\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    columnMatrix (matrix) {\n        if (matrix) {\n            this._columnMatrix = matrix;\n            return this;\n        }\n        return this._columnMatrix;\n    }\n\n   /**\n     * Sets/Gets the matrix for value\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    centerMatrix (matrix) {\n        if (matrix) {\n            this._centerMatrix = matrix;\n            return this;\n        }\n        return this._centerMatrix;\n    }\n\n    /**\n     * Sets/Gets the mountPoint for the layout\n     * @param {Object} mountPoint mountPoint for the layout\n     * @return {Layout|Object} Gets the mountPoint/ Returns this instance when set\n     */\n    mountPoint (mountPoint) {\n        if (mountPoint) {\n            this._mountPoint = mountPoint;\n\n            return this;\n        }\n        return this._mountPoint;\n    }\n}\n","import * as FieldNames from '../enums/constants';\n\n/**\n * Default configuration of the layout\n * @return {Object} returns the default configuration\n */\nexport const DEFAULT_CONFIGURATION = {\n    [FieldNames.BORDER]: {\n        [FieldNames.STYLE]: 'solid',\n        [FieldNames.COLOR]: '#d6d6d6',\n        [FieldNames.WIDTH]: 2,\n        [FieldNames.COLLAPSE]: true,\n        [FieldNames.SPACING]: 0\n    },\n    [FieldNames.PAGINATION]: 'scroll',\n    [FieldNames.BUFFER]: 20,\n    [FieldNames.GUTTERSPACE]: { rows: [], columns: [] },\n    [FieldNames.DISTRIBUTION]: { rows: [], columns: [] },\n    [FieldNames.BREAK_PAGE]: { rows: [], columns: [] },\n    [FieldNames.ROW_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_POINTER]: 0,\n    [FieldNames.ROW_POINTER]: 0\n};\n\n/**\n * Default measurements for the layout\n * @return {Object} returns the default measurements\n */\nexport const DEFAULT_MEASUREMENTS = {\n    [FieldNames.GRID_WIDTH]: 100,\n    [FieldNames.GRID_HEIGHT]: 100,\n    [FieldNames.UNIT_WIDTH]: 100,\n    [FieldNames.UNIT_HEIGHT]: 100\n};\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n","/**\n * This file exports utility functions that are used across the layout module\n */\nimport { Symbols } from 'muze-utils';\nimport { PRIMARY, SECONDARY, HEIGHT, WIDTH } from '../enums/constants';\n\nconst nest = Symbols.nest;\n/**\n *\n *\n * @param {*} isTransposed\n *\n */\nconst getMeasureInfo = (isTransposed) => {\n    if (isTransposed) {\n        return {\n            firstMeasure: HEIGHT,\n            secondMeasure: WIDTH\n        };\n    }\n    return {\n        firstMeasure: WIDTH,\n        secondMeasure: HEIGHT\n    };\n};\n\n/**\n *\n *\n * @param {*} i\n * @param {*} page\n *\n */\nconst findInPage = (i, page) => {\n    let count = 0;\n    for (const x in page) {\n        if (i < page[x]) {\n            count = x;\n            break;\n        }\n    }\n    return count;\n};\n\n/**\n * Creates a single matrix from two matrices\n *\n * @param {Array<Array>} matrix Input matrix\n * @return {Array<Array>} Joined matrix\n * @memberof VisualMatrix\n */\nexport const combineMatrices = (matrix, config) => {\n    const { isTransposed } = config;\n    let joinedMatrix = matrix[0].length > 0 ? matrix[0] : matrix[1];\n    if (isTransposed) {\n        joinedMatrix = matrix[0].length > 0 ? [...matrix[0]] : [];\n        joinedMatrix = matrix[1].length > 0 ? [...joinedMatrix, ...matrix[1]] : joinedMatrix;\n    } else {\n        joinedMatrix = joinedMatrix.map((row, rowIndex) => {\n            let rowData = [];\n            if (matrix[0].length > 0) {\n                rowData = [...matrix[0][rowIndex]];\n            }\n            if (matrix[1].length > 0) {\n                rowData = [...rowData, ...matrix[1][rowIndex]];\n            }\n            return rowData;\n        });\n    }\n    return joinedMatrix;\n};\n\n/**\n * Creates a hirachical tree from the context\n *\n * @param {Object} context context for creating tree\n * @return {Object} nested tree\n */\nexport const createTree = (context) => {\n    let matrixTree = {};\n    let lastLevelKey = 0;\n    let facet = PRIMARY;\n    const nestFn = nest();\n    const keys = [];\n    const layoutMatrix = context._layoutMatrix;\n    const primaryMatrix = context.primaryMatrix();\n    const secondaryMatrix = context.secondaryMatrix();\n    const { isTransposed, breakPage } = context.config();\n\n    if (!isTransposed) {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix[0].length - 1; i++) {\n                keys.push(i);\n            }\n            keys.push(primaryMatrix[0].length - 1);\n            if (facet === SECONDARY || secondaryMatrix.length === 0) {\n                lastLevelKey = primaryMatrix[0].length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const keyLength = primaryMatrix.length > 0 ? primaryMatrix[0].length : 0;\n            for (let i = secondaryMatrix[0].length - 1; i > 0; i--) {\n                keys.push(i + keyLength);\n            }\n            keys.push(keyLength);\n\n            if (facet === PRIMARY) {\n                lastLevelKey = keyLength;\n            }\n        } else {\n            lastLevelKey = primaryMatrix.length > 0 ? primaryMatrix[0].length - 1 : 0;\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        matrixTree = nestFn.entries(layoutMatrix);\n    } else {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix.length - 1; i++) {\n                keys.push(i);\n            }\n            // if (facet === PRIMARY) {\n            keys.push(primaryMatrix.length - 1);\n            // } else {\n            if (facet === SECONDARY) {\n                lastLevelKey = primaryMatrix.length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const primaryMatrixLength = primaryMatrix.length;\n            for (let i = secondaryMatrix.length - 1; i > 0; i--) {\n                keys.push(i + primaryMatrixLength);\n            }\n            // if (facet === SECONDARY) {\n            keys.push(primaryMatrixLength);\n            // }\n            if (facet === PRIMARY) {\n                lastLevelKey = primaryMatrixLength;\n            }\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        let newMatrix = [];\n        newMatrix = layoutMatrix[0].map((col, colIndex) => layoutMatrix.map(row => row[colIndex]));\n        matrixTree = nestFn.entries(newMatrix);\n    }\n    return { tree: matrixTree, lastLevelKey };\n};\n\n/**\n * Gives the min measues\n *\n * @param {boolean} isTransposed is column matrix\n * @param {Object} unitMeasures min measures to be given to cells\n * @return {Object} dimension min cell\n */\nexport const getMinMeasures = (isTransposed, unitMeasures) => {\n    if (!isTransposed) {\n        return {\n            height: unitMeasures.height,\n            width: 0\n        };\n    }\n    return {\n        height: 0,\n        width: unitMeasures.width\n    };\n};\n\n/**\n * Get the logical space from the tree\n *\n * @param {Node} item tree to be calculated\n * @param {number} measures width and height\n * @param {Array} minMeasures min measures for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} dimension\n */\nexport const getLogicalSpace = (item, measures, minMeasures, maxMeasure = []) => {\n    const { firstMeasure, secondMeasure } = measures;\n    let firstMeasureValue = 0;\n    let secondMeasureValue = 0;\n    item.values.forEach((valueArray) => {\n        let fMeasure = 0;\n        let sMeasure = 0;\n        valueArray.forEach((placeholder, colIndex) => {\n            placeholder.setAvailableSpace();\n            const space = placeholder.getLogicalSpace();\n            const minSecondMeasure = placeholder.getMinMeasures(minMeasures[secondMeasure]);\n\n            sMeasure = Math.max(sMeasure, +space[secondMeasure], minSecondMeasure);\n            maxMeasure[colIndex] = Math.max(maxMeasure[colIndex] || 0, space[firstMeasure]);\n            fMeasure += +maxMeasure[colIndex];\n        });\n        secondMeasureValue += sMeasure;\n        firstMeasureValue = Math.max(firstMeasureValue, fMeasure);\n        item.space = {\n            [secondMeasure]: Math.ceil(secondMeasureValue),\n            [firstMeasure]: Math.ceil(firstMeasureValue)\n        };\n    });\n    return {\n        [secondMeasure]: secondMeasureValue,\n        [firstMeasure]: firstMeasureValue\n    };\n};\n\n/**\n * Computes the logical spcae taken by the matrix tree\n *\n * @param {*} [item={}] tree to be viewed\n * @param {boolean} [isTransposed=false] is column matrix\n * @param {*} unitMeasures min measues for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} logical space taken\n */\nexport const computeLogicalSpace = (item = {}, config, maxMeasures) => {\n    const { isTransposed = false, unitMeasures } = config;\n    const { firstMeasure, secondMeasure } = getMeasureInfo(isTransposed);\n    const { values } = item;\n    const minMeasures = getMinMeasures(isTransposed, unitMeasures);\n\n    if (values[0].key) {\n        const logicalSpace = { [firstMeasure]: 0, [secondMeasure]: 0 };\n\n        values.forEach((valueItem) => {\n            // Compute logical space for lowest level\n            const space = computeLogicalSpace(valueItem, config, maxMeasures);\n            // Set logical space for first measure\n            logicalSpace[firstMeasure] = Math.max(logicalSpace[firstMeasure], space[firstMeasure],\n                minMeasures[firstMeasure]);\n\n            // Set logical space for second measure\n            logicalSpace[secondMeasure] += +space[secondMeasure];\n        });\n        item.space = logicalSpace;\n        return logicalSpace;\n    }\n\n    return getLogicalSpace(item, { firstMeasure, secondMeasure }, minMeasures, maxMeasures);\n};\n\n/**\n * Gives the space taken by a row\n *\n * @param {Array} row matrix array of rows\n * @return {Object} dimension of the row\n */\nexport const spaceTakenByRow = (row) => {\n    let height = 0;\n    let width = 0;\n    row.forEach((col) => {\n        const spaces = col.getLogicalSpace();\n        height = Math.max(height, spaces.height);\n        width += spaces.width;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Gives the space taken by a column\n *\n * @param {Array<Array>} matrix column matrix\n * @param {number} colIndex column index\n * @return {Object} dimension of the column\n */\nexport const spaceTakenByColumn = (matrix, colIndex) => {\n    let height = 0;\n    let width = 0;\n    matrix.forEach((row) => {\n        const col = row[colIndex];\n        const spaces = col.getLogicalSpace();\n        width = Math.max(width, spaces.width);\n        height += spaces.height;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Creates different level matrices\n *\n * @param {Object} item matrix tree\n * @param {boolean} isTransposed is column matrix\n * @return {Object} matrix of each level\n */\nexport const createMatrixEachLevel = (item, isTransposed) => {\n    if (item.values[0].key) {\n        const arr = [];\n        item.values.forEach((child) => {\n            if (!isTransposed) {\n                arr.push(...createMatrixEachLevel(child, isTransposed));\n            } else {\n                const eachLevel = createMatrixEachLevel(child, isTransposed);\n                eachLevel.forEach((e, i) => {\n                    arr[i] = arr[i] || [];\n                    arr[i].push(...e);\n                });\n            }\n        });\n        item.matrix = arr;\n        return arr;\n    }\n    if (!isTransposed) {\n        item.matrix = item.values;\n    } else {\n        item.matrix = item.values[0].map((col, colIndex) => item.values.map(row => row[colIndex]));\n    }\n    return item.matrix;\n};\n\n/**\n * Breaks the matrix into two part\n *\n * @param {Array<Array>} matrix input matrix\n * @param {boolean} isTransposed is column matrix\n * @param {number} breakPointer point in matrix where it is to be broken\n * @return {Array} two broken matrix\n */\nexport const breakMatrix = (matrix, isTransposed, breakPointer) => {\n    const primaryMatrix = [];\n    const secondaryMatrix = [];\n    if (isTransposed) {\n        matrix.forEach((row, rowIndex) => {\n            if (rowIndex >= breakPointer) {\n                secondaryMatrix.push(row);\n            } else {\n                primaryMatrix.push(row);\n            }\n        });\n    } else {\n        matrix.forEach((row, rowIndex) => {\n            row.forEach((column, columnIndex) => {\n                if (columnIndex >= breakPointer) {\n                    secondaryMatrix[rowIndex] = secondaryMatrix[rowIndex] || [];\n                    secondaryMatrix[rowIndex].push(column);\n                } else {\n                    primaryMatrix[rowIndex] = primaryMatrix[rowIndex] || [];\n                    primaryMatrix[rowIndex].push(column);\n                }\n            });\n        });\n    }\n    return [primaryMatrix, secondaryMatrix];\n};\n\n/**\n * Distributed width returned\n *\n * @param {Object} context context for the width distibution\n * @return {number} distributed widths\n */\nexport const getDistributedWidth = (context, layoutConfig) => {\n    const {\n        availableWidth,\n        width,\n        row\n    } = context;\n    const {\n        isDistributionEqual,\n        isTransposed,\n        distribution\n    } = layoutConfig;\n    let distSum = 0;\n    if (distribution && distribution[0]) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    return row.map((col, colIndex) => {\n        const space = col.getLogicalSpace().width;\n        let distWidth = (space + (availableWidth - width) * (space / width));\n        if (isTransposed) {\n            if (distribution.length > 0) {\n                distWidth = (availableWidth * distribution[colIndex] / distSum);\n            } else if (isDistributionEqual || width === 0) {\n                const rowLen = row.length;\n                distWidth = (availableWidth / rowLen);\n            }\n        }\n        return Math.floor(distWidth);\n    });\n};\n\n/**\n * Distributeed heights returned\n *\n * @param {Object} context input for the height distribution\n * @return {Object} distribured heights\n */\nexport const getDistributedHeight = (context) => {\n    let distSum = 0;\n    let gutterSum = 0;\n    let heightWithoutGutter = 0;\n    const {\n        isTransposed,\n        distribution,\n        availableHeight,\n        height,\n        isDistributionEqual,\n        gutter,\n        matrix,\n        cIdx\n    } = context;\n\n    if (distribution && distribution[0] !== undefined) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    if (gutter && gutter[0] !== undefined) {\n        gutterSum = gutter.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    heightWithoutGutter = availableHeight - Math.floor(availableHeight * gutterSum);\n\n    const colLen = matrix.length;\n    return matrix.map((row, rIdx) => {\n        const col = row[cIdx];\n        const space = col.getLogicalSpace().height;\n        let distHeight = (space + (heightWithoutGutter - height) * (space / height));\n\n        if (!isTransposed) {\n            if (distribution.length > 0 && colLen === distribution.length) {\n                distHeight = (heightWithoutGutter * distribution[rIdx] / distSum);\n            } else if (isDistributionEqual || context.height === 0) {\n                distHeight = (heightWithoutGutter / colLen);\n            }\n        }\n        return Math.floor(distHeight);\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} beg\n * @param {*} end\n */\nexport const extraCellsRemover = (arr, beg, end) => arr.slice(beg, -end);\n\n/**\n * Creates matrix instancess\n *\n * @param {Array} [arr=[]] mutated arry\n * @param {number} depth depth of the tree\n * @param {Array} matrixInfo Details about the matrix(tree, etc) to be inserted\n * @param {boolean} layout Instance of layout\n */\nexport const createMatrixInstances = (arr = [], depth, matrixInfo, layout) => {\n    const breakPointer = layout._breakPointer;\n    const config = layout.config();\n    const {\n        isTransposed\n    } = config;\n    const {\n        tree,\n        layoutMatrix\n    } = matrixInfo;\n\n    if (depth === 0) {\n        const brokenMatrix = breakMatrix(tree.matrix, isTransposed, breakPointer);\n        arr.push({\n            matrix: tree.matrix,\n            primaryMatrix: brokenMatrix[0],\n            secondaryMatrix: brokenMatrix[1],\n            space: tree.space\n        });\n        return arr;\n    }\n    const nextLevel = depth - 1;\n    tree.values.forEach((e) => {\n        createMatrixInstances(arr, nextLevel, {\n            tree: e,\n            layoutMatrix\n        }, layout);\n    });\n    return arr;\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    maxMeasures: {},\n    availableSpace: {},\n    logicalSpace: {}\n};\n","import { PRIMARY } from '../enums/constants';\n/**\n *\n *\n */\nexport const defaultConfig = {\n    distribution: [],\n    classPrefix: 'muze',\n    isDistributionEqual: true,\n    unitMeasures: {\n        height: 100,\n        width: 100,\n        border: 1\n    },\n    isTransposed: false,\n    facet: PRIMARY,\n    extraCellLengths: []\n};\n","import { mergeRecursive, generateGetterSetters, ERROR_MSG } from 'muze-utils';\nimport {\n    createTree,\n    combineMatrices,\n    createMatrixInstances\n  } from '../utils';\nimport { PROPS } from './props';\nimport { HEIGHT, WIDTH } from '../enums/constants';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        // Prepare matrices\n        this._lastLevelKey = 0;\n        this._primaryMatrix = matrix[0] || [];\n        this._secondaryMatrix = matrix[1] || [];\n        this._maxMeasures = [];\n        this._availableSpace = {};\n\n        // Store the config\n        generateGetterSetters(this, PROPS);\n        const defCon = Object.assign({}, this.constructor.defaultConfig());\n        this.config(mergeRecursive(defCon, config));\n\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n    }\n\n     /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    computeViewableSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    getPriorityDistribution () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     * @returns\n     * @memberof VisualMatrix\n     */\n    primaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._primaryMatrix;\n    }\n\n    secondaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._secondaryMatrix;\n    }\n\n    tree (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._tree;\n    }\n\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    createTree () {\n        const { tree, lastLevelKey } = createTree(this);\n        this._lastLevelKey = lastLevelKey;\n        return tree;\n    }\n\n    /**\n     * Returns the space taken by visual matrix\n     *\n     * @return {Object} space taken by the matrix\n     * @memberof VisualMatrix\n     */\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    /**\n     * Sets the provied space to the visual matrix\n     *\n     * @param {number} width width provided\n     * @param {number} height height provided\n     * @memberof VisualMatrix\n     */\n    setAvailableSpace (width, height) {\n        this.availableSpace({ width, height });\n        const tree = this.tree();\n        const heightMeasures = this.populateMaxMeasures(HEIGHT, tree);\n        const widthMeasures = this.populateMaxMeasures(WIDTH, tree);\n        const depth = this.calculateDepth(widthMeasures, heightMeasures);\n\n        this.viewableMatrix = this.createViewPortMatrix(depth);\n        this.viewableMeasures = this.redistributeSpaces(width, height);\n        return this;\n    }\n\n    /**\n     * Populate the max measures in the array\n     *\n     * @param {Array} measures array to be filled with max measures\n     * @param {Object} matrixTree matrix tree of visual matrix\n     * @param {number} measure width or height\n     * @param {number} [depth=0] depth of the tree that to be calculated\n     * @memberof VisualMatrix\n     */\n    populateMaxMeasures (type, matrixTree, depth = 0, measures = []) {\n        measures[depth] = Math.max(measures[depth] || 0, matrixTree.space[type]);\n        if (matrixTree.values) {\n            const childDepth = depth + 1;\n            matrixTree.values.forEach((child) => {\n                if (child.space) {\n                    measures = this.populateMaxMeasures(type, child, childDepth, measures);\n                }\n            });\n        }\n        return measures;\n    }\n\n    /**\n     * Gets the viewable measures for the current viewable matrix\n     *\n     * @return {Object} Set of viewable measures\n     * @memberof VisualMatrix\n     */\n    getViewableSpaces () {\n        return this.viewableMeasures;\n    }\n\n    /**\n     * Returns the matrix that can be viewed in the current viewport\n     *\n     * @return {Array} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    getViewableMatrices () {\n        return this.viewableMatrix;\n    }\n\n    /**\n     * Creates the viewport that can be viewed together\n     *\n     * @param {number} depth maxDepth that can be viewed in the viewport\n     * @return {Array<Object>} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    createViewPortMatrix (depth) {\n        const arr = [];\n        createMatrixInstances(arr, depth, this.removeExtraCells(), this);\n        return arr;\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    combineMatrices,\n    spaceTakenByColumn,\n    getDistributedHeight,\n    computeLogicalSpace,\n    createMatrixEachLevel\n  } from '../utils';\nimport { ROW_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class RowVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = (matrix[0].length > 0 ? matrix[0][0].length : 0);\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n\n        // Create Tree\n        this._tree = {\n            key: ROW_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, false);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height\n        } = measures;\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i };\n            const { widths, rowHeights, columnWidths } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = [height, height];\n            const columnMeasures = widths;\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n        tree.matrix = extraCellsRemover(tree.matrix, begCellLen, endCellLen);\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        let remainingAvailWidth;\n        let remainingWidth;\n        let cWidths = [];\n        let conditions = [];\n        let maxPrioritySpace = 0;\n        const {\n            matrix,\n            width: availableWidth,\n            maxMeasures: maxWidths,\n            maxWidth: currentWidth,\n            height\n        } = measures;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length ? this.primaryMatrix()[0].length : 0;\n\n        const dist = [];\n\n        remainingAvailWidth = availableWidth;\n        remainingWidth = currentWidth;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            // divider = Math.min(2, matrixLen);\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            // divider = Math.min(1, matrixLen);\n        }\n        conditions.forEach((i) => {\n            dist[i] = maxWidths[i];\n            maxPrioritySpace += maxWidths[i];\n            remainingAvailWidth -= dist[i];\n            remainingWidth -= dist[i];\n        });\n        matrix[0].forEach((e, i) => {\n            if (conditions.indexOf(i) === -1) {\n                dist[i] = remainingAvailWidth * (maxWidths[i] / remainingWidth);\n            }\n        });\n        matrix.forEach(row => row.forEach((col, cIdx) => {\n            if (conditions.indexOf(cIdx) === -1) {\n                col.setAvailableSpace(dist[cIdx], height);\n\n                cWidths[cIdx] = Math.max(cWidths[cIdx] || 0, Math.floor(col.getLogicalSpace().width));\n            } else {\n                cWidths[cIdx] = 0;\n            }\n        }));\n\n        const prioritySpace = availableWidth - cWidths.reduce((t, n) => t + n);\n        if (prioritySpace < 0) {\n            cWidths = cWidths.map(() => 0);\n        } else {\n            conditions.forEach((i) => {\n                cWidths[i] = Math.floor(prioritySpace * (dist[i] / maxPrioritySpace || 1));\n            });\n        }\n        return cWidths;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures, heightMeasures) {\n        let i;\n        const { height } = this.availableSpace();\n\n        for (i = 0; i < heightMeasures.length; i++) {\n            if (heightMeasures[i] <= height) break;\n        }\n\n        return Math.min(widthMeasures.length - 1, i);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n        const maxMeasures = this.maxMeasures();\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        const logicalWidths = this.getPriorityDistribution({\n            matrix: this._layoutMatrix,\n            maxWidth,\n            maxMeasures,\n            width,\n            height\n        });\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths, logicalWidths };\n            const measures = this.redistributeViewSpaces(options);\n            maxWidths = measures.maxWidths;\n            maxHeights = measures.maxHeights;\n        });\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let cWidths = [];\n        let rHeights = [];\n        let mHeight = 0;\n        const maxMeasures = this.maxMeasures();\n\n        const {\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        } = this.config();\n        const { matrix, height, maxHeights, maxWidths, logicalWidths } = measures;\n        mHeight = spaceTakenByColumn(matrix, this._lastLevelKey).height;\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        measures.maxMeasures = maxMeasures;\n        measures.maxWidth = maxWidth;\n        if (maxWidth > 0) {\n            cWidths = logicalWidths;\n        } else {\n            cWidths = maxMeasures.map(() => 0);\n        }\n        rHeights = getDistributedHeight({\n            matrix,\n            cIdx: this._lastLevelKey,\n            height: mHeight,\n            availableHeight: height,\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        });\n        if (maxWidths.length > 0) {\n            cWidths = cWidths.map((e, i) => Math.max(e, maxWidths[0][i] || 0));\n        }\n        maxWidths.push(cWidths);\n        for (let x = 0; x < maxWidths.length; x++) {\n            maxWidths[x] = cWidths;\n        }\n        maxHeights.push(rHeights);\n        return { maxWidths, maxHeights };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = maxHeights[matrixIndex][rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth, colHeight - borderWidth);\n\n                if (rIdx === 0 && cIdx < breakPointer) {\n                    columnWidths[0][cIdx] = colWidth;\n                    widths[0] = (widths[0] || 0) + colWidth;\n                } else if (rIdx === 0 && cIdx >= breakPointer) {\n                    columnWidths[1][cIdx - breakPointer] = colWidth;\n                    widths[1] = (widths[1] || 0) + colWidth;\n                }\n                if (cIdx === this._lastLevelKey) {\n                    rowHeights[0][rIdx] = colHeight;\n                    rowHeights[1][rIdx] = colHeight;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    getDistributedWidth,\n    spaceTakenByRow,\n    createMatrixEachLevel,\n    computeLogicalSpace\n  } from '../utils';\nimport { COLUMN_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class ColumnVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = matrix[0].length;\n\n        // Create Tree\n        this._tree = {\n            key: COLUMN_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, true);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height,\n            width\n        } = measures;\n\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i, height };\n            const {\n                heights,\n                rowHeights,\n                columnWidths\n            } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = heights;\n            const columnMeasures = [width, width];\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n\n        tree.matrix = tree.matrix.map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        const {\n            height,\n            maxHeights\n        } = measures;\n        let remainingHeight = height;\n        let heightDist = [];\n        let conditions = [];\n        let divider = 2;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            divider = 2;\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            divider = 1;\n        }\n        maxHeights.forEach((heights, index) => {\n            if (conditions.indexOf(index) === -1) {\n                heightDist[index] = heights;\n                remainingHeight -= heights;\n            }\n        });\n        if (remainingHeight < 0) {\n            heightDist = heightDist.map(() => 0);\n        } else {\n            conditions.forEach((condition) => {\n                heightDist[condition] = Math.min(maxHeights[condition], (remainingHeight) / divider);\n            });\n        }\n        return heightDist;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures) {\n        let j;\n        const { width } = this.availableSpace();\n\n        for (j = 0; j < widthMeasures.length; j++) {\n            if (widthMeasures[j] <= width) break;\n        }\n        return Math.min(widthMeasures.length - 1, j);\n    }\n\n     /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths };\n            const maxMeasures = this.redistributeViewSpaces(options);\n            maxWidths = maxMeasures.maxWidths;\n            maxHeights = maxMeasures.maxHeights;\n        });\n\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space column wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let rHeights = [];\n        const {\n            matrix,\n            width,\n            maxHeights,\n            maxWidths\n        } = measures;\n        const borderWidth = this.config().unitMeasures.border;\n\n        const mWidth = spaceTakenByRow(matrix[this._lastLevelKey]).width;\n        const cWidths = getDistributedWidth({\n            row: matrix[this._lastLevelKey],\n            width: mWidth,\n            availableWidth: width\n        }, this.config());\n\n        matrix.forEach((row, rIdx) => row.forEach((col, cIdx) => {\n            const oldLogicalSpace = col.getLogicalSpace();\n\n            col.setAvailableSpace(cWidths[cIdx] - borderWidth, oldLogicalSpace.height);\n\n            rHeights[rIdx] = Math.max(rHeights[rIdx] || 0, Math.floor(col.getLogicalSpace().height));\n        }));\n        if (maxHeights.length > 0) {\n            rHeights = rHeights.map((e, i) => Math.max(e, maxHeights[0][i]));\n        }\n        maxHeights.push(rHeights);\n        for (let x = 0; x < maxHeights.length; x++) {\n            maxHeights[x] = rHeights;\n        }\n        maxWidths.push(cWidths);\n        return { maxHeights, maxWidths };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, height, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        const heightDistribution = this.getPriorityDistribution({ height, maxHeights: maxHeights[0] || [] });\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = heightDistribution[rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth - borderWidth, colHeight);\n\n                if (cIdx === 0 && rIdx < breakPointer) {\n                    rowHeights[0][rIdx] = colHeight;\n                    heights[0] = (heights[0] || 0) + colHeight;\n                } else if (cIdx === 0 && rIdx >= breakPointer) {\n                    rowHeights[1][rIdx - breakPointer] = colHeight;\n                    heights[1] = (heights[1] || 0) + colHeight;\n                }\n                if (rIdx === this._lastLevelKey) {\n                    columnWidths[0][cIdx] = colWidth;\n                    columnWidths[1][cIdx] = colWidth;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import {\n    HEIGHT, WIDTH, COLUMN, ROW, HORIZONTAL, VERTICAL, HOLISTIC,\n    MAX_WIDTH_AVAIL_FOR_COL_MATRIX, COLUMN_MATRIX, MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX, ROW_MATRIX, SCROLL\n} from '../enums/constants';\n\n/**\n * Gets measurement for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @return {Object} Logical height/width of the matrix\n */\nexport function getMatrixMeasurement (matrix, type) {\n    if (matrix) {\n        return matrix.getLogicalSpace()[type];\n    }\n    return 0;\n}\n\n/**\n * Sets available space for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @param {number} value Value of measurement\n */\nexport function setMatrixMeasurement (matrix, type, value) {\n    if (matrix) {\n        const spaces = matrix.getLogicalSpace();\n        if (value && spaces[type] !== value) {\n            type === HEIGHT ? matrix.setAvailableSpace(spaces.width, value) :\n                matrix.setAvailableSpace(value, spaces.height);\n        }\n    }\n}\n\nconst setAvailableSpace = (matrix, widths, heights) => {\n    matrix.forEach((row, rIdx) => {\n        row.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(widths[cIdx], heights[rIdx]);\n        });\n    });\n};\n\nconst setViewSpaces = (layout, pointerType, viewSpaces) => {\n    let pointer = layout.config()[`${pointerType}Pointer`];\n    if (viewSpaces.length - 1 < pointer) {\n        pointer = 0;\n        layout.config({ [`${pointerType}Pointer`]: pointer });\n    }\n    return pointer;\n};\n\nconst paginationDetailsMap = {\n    column: {\n        maxMeasure: MAX_WIDTH_AVAIL_FOR_COL_MATRIX,\n        matrix: COLUMN_MATRIX,\n        measureType: WIDTH,\n        scrollType: HORIZONTAL\n    },\n    row: {\n        maxMeasure: MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX,\n        matrix: ROW_MATRIX,\n        measureType: HEIGHT,\n        scrollType: VERTICAL\n    }\n};\n\n/**\n * This method provides the required width/height in the different pagination stages.\n * If the pagination is holistic, then only the max width/height will be provided for layouting\n * If scroll is enabled, then the entire width/height shall be provided for layouting\n * Note: width is required for scrolling the columns while height is required for scrolling rows\n *\n *\n * @param {Layout} layout Layout instance required for configuration details\n * @param {Object} measureDetails different measure details for row/column\n * @param {number} maxMeasure maximum width/height present for column/row respectively\n * @return {number} Provides the width/height based on which further calculation can occur\n */\nconst getMatrixMeasureForPagination = (layout, measureDetails, maxMeasure, buffer) => {\n    const {\n        pagination\n    } = layout.config();\n    const {\n        matrix,\n        measureType,\n        scrollType\n    } = measureDetails;\n\n    switch (pagination) {\n    case HOLISTIC:\n        return maxMeasure;\n    default: {\n        const actualMeasure = getMatrixMeasurement(layout[matrix](), measureType) + buffer;\n\n        if (actualMeasure > maxMeasure) {\n            layout.scrollInfo({ [scrollType]: true });\n        }\n        return Math.max(maxMeasure, actualMeasure);\n    }\n    }\n};\n\n/**\n * This method uses the getMatrixMeasureForPagination function to calculate maximum measure\n * depending on the layouting algorithm used\n *\n *\n * @param {Layout} layout Layout instance required for configuration details\n * @param {string} matrixType row/column\n * @param {number} relatedMaxMeasure maximum width/height present for column/row respectively\n * @return {number} Provides the width/height based on which further calculation can occur\n */\nconst paginationMeasureGetter = (layout, matrixType, relatedMaxMeasure, buffer) =>\n    getMatrixMeasureForPagination(layout, paginationDetailsMap[matrixType], relatedMaxMeasure, buffer);\n\nconst getMatrixWidthDetails = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const {\n        width\n    } = layout.measurement();\n    const {\n        border,\n        buffer\n    } = layout.config();\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Get width of row matrix\n    const rowMatrixWidth = getMatrixMeasurement(rowMatrix, WIDTH);\n\n    // Get maximum width allowed for the row matrix\n    const maxRowMatrixWidth = Math.min(rowMatrixWidth + buffer, width / 2);\n\n    // Get maximum width available for the column matrix\n    const maxWidthAvailableForColumnMatrix = width - maxRowMatrixWidth - borderWidth;\n\n    // Set width for column matrix\n    const columnMatrixWidth = paginationMeasureGetter(layout, COLUMN, maxWidthAvailableForColumnMatrix, 0);\n\n    return {\n        rowMatrixWidth,\n        maxRowMatrixWidth,\n        columnMatrixWidth,\n        maxWidthAvailableForColumnMatrix\n    };\n};\n\nconst getHeightRequiredByColMatrix = (layout, columnMatrixWidth) => {\n    const {\n        height\n    } = layout.measurement();\n    const columnMatrix = layout.columnMatrix();\n\n    // Get maximum allowed height for colum matrix\n    const maxColumnMatrixHeight = Math.min(columnMatrix.getLogicalSpace().height, height / 2);\n\n    // Set the computed width and max height to column matrix to determine the actual height\n    // that will be taken by the column matrix\n    columnMatrix.setAvailableSpace(columnMatrixWidth, maxColumnMatrixHeight);\n\n    // Get the set of pages column view\n    const columnViewPages = columnMatrix.getViewableSpaces();\n\n    // Figuring out total space needed by current view space\n    const columnViewSpace = columnViewPages[layout.config().columnPointer];\n\n    // Getting height of column matrix\n    const columnMatrixHeight = columnViewSpace.height.primary + columnViewSpace.height.secondary;\n\n    return {\n        columnMatrixHeight,\n        maxColumnMatrixHeight\n    };\n};\n\nconst getMatrixHeightDetails = (layout, columnMatrixWidth) => {\n    const {\n        height\n    } = layout.measurement();\n    const {\n        buffer\n    } = layout.config();\n\n    // Get actual height required by column matrix\n    const { columnMatrixHeight, maxColumnMatrixHeight } = getHeightRequiredByColMatrix(layout, columnMatrixWidth);\n\n    // Based on column height, compute max height available for row matrix\n    const maxHeightAvailableForRowMatrix = height - Math.min(maxColumnMatrixHeight, columnMatrixHeight);\n\n    // Get height for row matrix\n    const rowMatrixHeight = paginationMeasureGetter(layout, ROW, maxHeightAvailableForRowMatrix, buffer);\n\n    return {\n        columnMatrixHeight,\n        maxColumnMatrixHeight,\n        rowMatrixHeight,\n        maxHeightAvailableForRowMatrix\n    };\n};\n\nconst setValueMatrixMeasurements = (layout, rowViewableSpaces, columnViewableSpaces) => {\n    const centerMatrix = layout.centerMatrix();\n\n    const {\n        border\n    } = layout.config();\n    const matrices = layout.matrices();\n    const {\n        top,\n        bottom\n    } = matrices;\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Get the heights for each cell in the row matrix\n    const rowHeights = [].concat(...rowViewableSpaces.map(e => e.rowHeights.primary));\n\n    // Get the widths for each of the row matrix cells(primary and secondary)\n    const rowWidthsPrimary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.primary));\n    const rowWidthsSecondary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.secondary));\n\n    // Get the widths for each cell in the column matrix\n    const columnWidths = [].concat(...columnViewableSpaces.map(e => e.columnWidths.primary));\n\n    // Get the widths for each of the column matrix cells(primary and secondary)\n    const columnHeightsPrimary = columnViewableSpaces[0].rowHeights.primary;\n    const columnHeightsSecondary = [].concat(...columnViewableSpaces.map(e => e.rowHeights.secondary));\n\n    // Setting the available space for each cell in the centre matrix computed throught the row and\n    // column matrices\n    centerMatrix.forEach((matrix, rIdx) => {\n        matrix.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(columnWidths[cIdx] - borderWidth, rowHeights[rIdx] - borderWidth);\n        });\n    });\n\n    // Set the heights and widths for the corner matrices namely:\n    // TOP_LEFT\n    setAvailableSpace(top[0], rowWidthsPrimary, columnHeightsPrimary);\n    // TOP_RIGHT\n    setAvailableSpace(top[2], rowWidthsSecondary, columnHeightsPrimary);\n    // BOTTOM_LEFT\n    setAvailableSpace(bottom[0], rowWidthsPrimary, columnHeightsSecondary);\n     // BOTTOM_RIGHT\n    setAvailableSpace(bottom[2], rowWidthsSecondary, columnHeightsSecondary);\n};\n\nconst bufferCondition = {\n    isScroll: true,\n    pagination: SCROLL\n};\n\nconst getBufferFromCondition = (layout, type) => {\n    const scrollInfo = layout.scrollInfo();\n    const {\n        pagination\n    } = layout.config();\n\n    const currentBufferType = {\n        pagination,\n        isScroll: scrollInfo[type]\n    };\n\n    return Object.keys(bufferCondition).every(e => bufferCondition[e] === currentBufferType[e]);\n};\n\nconst getActualBufferFromConfig = (layout) => {\n    const {\n        buffer\n    } = layout.config();\n    const [horizontalBuffer, verticalBuffer] = [HORIZONTAL, VERTICAL].map((type) => {\n        if (getBufferFromCondition(layout, type)) {\n            return buffer;\n        }\n        return 0;\n    });\n\n    return {\n        horizontalBuffer,\n        verticalBuffer\n    };\n};\n/**\n * Computes the measurements of space for all matrices in the\n * layout\n *\n * @param {Object} layout Instance of grid layout\n * @return {Object} set of measurements for the layout\n */\nexport const computeLayoutMeasurements = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n\n    // Compute the widths of the row and column matrices\n    const {\n        rowMatrixWidth,\n        maxRowMatrixWidth,\n        maxWidthAvailableForColumnMatrix,\n        columnMatrixWidth\n    } = getMatrixWidthDetails(layout);\n\n    // Compute the heights of the row and column matrices\n    const {\n        columnMatrixHeight,\n        rowMatrixHeight,\n        maxHeightAvailableForRowMatrix\n    } = getMatrixHeightDetails(layout, columnMatrixWidth);\n\n    const {\n        horizontalBuffer,\n        verticalBuffer\n    } = getActualBufferFromConfig(layout);\n    rowMatrix.setAvailableSpace(maxRowMatrixWidth - verticalBuffer, rowMatrixHeight - horizontalBuffer);\n\n    // Get row and columns viewable spaces\n    const rowViewableSpaces = rowMatrix.getViewableSpaces();\n    const columnViewableSpaces = columnMatrix.getViewableSpaces();\n\n    // Set view spaces for row and columns\n    setViewSpaces(layout, ROW, rowViewableSpaces);\n    setViewSpaces(layout, COLUMN, columnViewableSpaces);\n\n    // Set measures for each cell of the value matrix\n    setValueMatrixMeasurements(layout, rowViewableSpaces, columnViewableSpaces);\n\n    return {\n        rowMatrixHeight: rowMatrixHeight - horizontalBuffer,\n        rowMatrixWidth: rowMatrixWidth - verticalBuffer,\n        maxHeightAvailableForRowMatrix: maxHeightAvailableForRowMatrix - horizontalBuffer,\n\n        columnMatrixHeight,\n        columnMatrixWidth,\n        maxWidthAvailableForColumnMatrix\n    };\n};\n","/**\n * Gets view matrices based on current pointers for row and column\n *\n * @param {Object} layout instance of layout\n * @param {number} rowPointer current row pointer\n * @param {number} columnPointer current column pointer\n * @return {Object} returns the view matrix and its relevant information\n */\nexport const getViewMatrices = (layout, rowPointer, columnPointer) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const centerMatrix = layout.centerMatrix();\n    const matrices = layout.matrices();\n    const rowMatrices = rowMatrix.getViewableMatrices();\n    const columnMatrices = columnMatrix.getViewableMatrices();\n    const centralMatrixPointer = {\n        row: 0,\n        column: 0\n    };\n\n    for (let i = rowPointer - 1; i >= 0; i--) {\n        const length = Math.max(rowMatrices[i].primaryMatrix.length,\n            rowMatrices[i].secondaryMatrix.length);\n        centralMatrixPointer.row += length;\n    }\n     /* istanbul ignore next */\n    for (let i = columnPointer - 1; i >= 0; i--) {\n        const matrix = columnMatrices[i];\n        const { primaryMatrix, secondaryMatrix } = matrix;\n        const length = Math.max(primaryMatrix[0] ? primaryMatrix[0].length : 0,\n            secondaryMatrix[0] ? secondaryMatrix[0].length : 0);\n        centralMatrixPointer.column += length;\n    }\n\n    matrices.top[1] = columnMatrices[columnPointer].primaryMatrix;\n    matrices.bottom[1] = columnMatrices[columnPointer].secondaryMatrix;\n\n    matrices.center[0] = rowMatrices[rowPointer].primaryMatrix;\n    matrices.center[2] = rowMatrices[rowPointer].secondaryMatrix;\n\n    const rowMatrixLen = Math.max(matrices.center[0].length, matrices.center[2].length);\n     /* istanbul ignore next */\n    const columnMatrixLen = Math.max(matrices.top[1][0] ? matrices.top[1][0].length : 0, matrices.bottom[1][0] ?\n            matrices.bottom[1][0].length : 0);\n    matrices.center[1] = centerMatrix.slice(centralMatrixPointer.row, centralMatrixPointer.row + rowMatrixLen)\n        .map(matrix => matrix.slice(centralMatrixPointer.column, centralMatrixPointer.column + columnMatrixLen));\n\n    return {\n        matrices,\n        rowPages: rowMatrices.length,\n        columnPages: columnMatrices.length\n    };\n};\n\nconst measureSum = measureArr => measureArr.reduce((total, measure) => total + measure, 0);\n/**\n * Returns measurements of the cells of the current matrix\n *\n * @param {Object} layout instance of layout\n * @return {Object} returns the measurements for current view matrix\n */\nexport const getViewMeasurements = (layout, maxRowHeight, maxColWidth) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const {\n        columnPointer,\n        rowPointer\n    } = layout.config();\n\n    const rowSpaces = rowMatrix.getViewableSpaces()[rowPointer];\n    const colSpaces = columnMatrix.getViewableSpaces()[columnPointer];\n\n    const {\n        rowHeights,\n        width: rowMatrixWidth\n    } = rowSpaces;\n    const {\n        columnWidths,\n        height: columnMatrixHeight\n    } = colSpaces;\n\n    const { primary: leftWidth, secondary: rightWidth } = rowMatrixWidth;\n    const { primary: topHeight, secondary: bottomHeight } = columnMatrixHeight;\n\n    const centerHeight = measureSum(rowHeights.primary);\n    const centerWidth = measureSum(columnWidths.primary);\n    const viewWidth = [leftWidth, Math.min(centerWidth, maxColWidth), rightWidth];\n    const viewHeight = [topHeight, Math.min(centerHeight, maxRowHeight), bottomHeight];\n\n    return {\n        viewWidth,\n        viewHeight,\n        actualCenterMeasures: {\n            height: centerHeight,\n            width: centerWidth\n        },\n        totalMeasures: {\n            width: measureSum(viewWidth),\n            height: measureSum(viewHeight)\n        },\n        unitHeights: rowHeights,\n        unitWidths: columnWidths\n    };\n};\n","/**\n * This file declares a table that can be extended to create a Datagrid, crosstab\n * and man other visualzations that require a tabular structure.\n */\n\nimport { getUniqueId, mergeRecursive } from 'muze-utils';\nimport GenericLayout from '../generic-layout';\nimport { DEFAULT_CONFIGURATION, DEFAULT_MEASUREMENTS } from './defaults';\nimport { generateVisualMatrices } from './layout-helper';\nimport { computeLayoutMeasurements } from './computations';\nimport { getViewMeasurements, getViewMatrices } from './view-info-getter';\n/**\n * This class is used to create a tabular structure that\n * can house charts and values.\n *\n * @class GridLayout\n */\nexport default class GridLayout extends GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} matrices Set of upto 9 matrices containing the cells to be rendered\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config external configurations.\n     * @memberof GenericLayout\n     */\n    constructor (matrices, mountPoint, measurement, config) {\n        super(mountPoint, measurement, config);\n        this.matrices(matrices);\n        this.config(this.constructor.defaultConfig());\n        this._layoutId = getUniqueId();\n        this._scrollInfo = { horizontal: false, vertical: false };\n    }\n\n    static defaultViewInfo () {\n        return Object.assign({}, {\n            layoutDimensions: {\n                border: this.defaultConfig().border,\n                viewHeight: [0, 0, 0],\n                viewWidth: [0, 0, 0]\n            },\n            viewMatricesInfo: {\n                columnPages: 0,\n                rowPages: 0,\n                matrices: { top: [], center: [], bottom: [] }\n            }\n        });\n    }\n\n    /**\n     * Returns initial set of measurements for the grid layout\n     *\n     * @static\n     * @return {Object} Returns initial set of measurements\n     * @memberof GridLayout\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENTS;\n    }\n\n    /**\n     * Returns initialconfiguration for grid layout\n     *\n     * @static\n     * @return {Object} Returns initial configuration for grid layout\n     * @memberof GridLayout\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIGURATION;\n    }\n\n    /**\n     * This function is used to return an instance of GridLayout\n     *\n     * @return {GridLayout} Instance of grid layout.\n     * @static\n     * @memberof GridLayout\n     */\n    static create () {\n        return new GridLayout(null, null, this.defaultMeasurement(), this.defaultConfig());\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     *\n     * @param {Array} matrices Set of matrices\n     * @return {Object} Getter/Setter\n     * @memberof GridLayout\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = generateVisualMatrices(this, matrices);\n            return this;\n        }\n        return super.matrices(matrices);\n    }\n\n    /**\n     * Triggers the computations for the layout based on the matrices available\n     * This causes a reflow in the entire layout system.\n     *\n     * @return {Object} Layout instance\n     * @memberof GridLayout\n     */\n    triggerReflow () {\n        this.scrollInfo({ horizontal: false, vertical: false });\n        const {\n            maxHeightAvailableForRowMatrix,\n            maxWidthAvailableForColumnMatrix\n        } = computeLayoutMeasurements(this);\n\n        this.setViewInformation(maxHeightAvailableForRowMatrix, maxWidthAvailableForColumnMatrix);\n        return this;\n    }\n\n    gotoPage (type, pageNumber) {\n        const pageType = type.toLowerCase();\n        const { viewMatricesInfo } = this.viewInfo();\n        const totalPages = viewMatricesInfo[`${pageType}Pages`];\n        const pointer = Math.min(Math.max(1, pageNumber), totalPages);\n        this.config({\n            [`${pageType}Pointer`]: pointer - 1\n        });\n        this.setViewInformation();\n        this.renderGrid();\n        return this;\n    }\n\n    pages (type) {\n        const { viewMatricesInfo } = this.viewInfo();\n        const pageType = type.toLowerCase();\n        return {\n            totalPages: viewMatricesInfo[`${pageType}Pages`],\n            currentPage: this.config()[`${pageType}Pointer`] + 1\n        };\n    }\n\n    viewInfo (...viewInfo) {\n        if (viewInfo.length) {\n            this._viewInfo = viewInfo[0];\n            return this;\n        }\n        return this._viewInfo;\n    }\n\n    scrollInfo (...scrollInfo) {\n        if (scrollInfo.length) {\n            this._scrollInfo = mergeRecursive(this._scrollInfo, scrollInfo[0]);\n            return this;\n        }\n        return this._scrollInfo;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof GridLayout\n     */\n    setViewInformation (maxRowHeight, maxColWidth) {\n        const {\n            rowPointer,\n            columnPointer,\n            border\n        } = this.config();\n        const viewMatricesInfo = getViewMatrices(this, rowPointer, columnPointer);\n        const layoutDimensions = getViewMeasurements(this, maxRowHeight, maxColWidth);\n        layoutDimensions.border = border;\n        this.viewInfo({\n            viewMatricesInfo,\n            layoutDimensions\n        });\n        return this;\n    }\n}\n","import RowMatrix from '../visual-matrix/row-matrix';\nimport ColumnMatrix from '../visual-matrix/column-matrix';\n\nexport const generateVisualMatrices = (context, matrices) => {\n    // Set of matrices for layout is generated starting with the left matrix\n    let leftMatrix = [];\n    let rightMatrix = [];\n    let topMatrix = [];\n    let bottomMatrix = [];\n    let begColCells;\n    let endColCells;\n    const {\n        isRowSizeEqual,\n        isColumnSizeEqual,\n        gutterSpace,\n        distribution,\n        border,\n        breakPage,\n        priority\n    } = context.config();\n    const {\n        minUnitHeight,\n        minUnitWidth\n    } = context.measurement();\n    const { top, center, bottom } = matrices;\n    const [topLeft, topColumns, topRight] = top;\n    const [leftRows, valueMatrix, rightRows] = center;\n    const [bottomLeft, bottomColumns, bottomRight] = bottom;\n\n    if (leftRows.length > 0) {\n        // If no left matrix is present, context will be empty\n        leftMatrix = [...topLeft, ...leftRows, ...bottomLeft];\n    }\n    if (rightRows.length > 0) {\n        // If no right matrix is present, context will be empty\n        rightMatrix = [...topRight, ...rightRows, ...bottomRight];\n    }\n    if (topColumns.length > 0 && topColumns[0].length > 0) {\n        // If no top matrix is present, context will be empty\n        topMatrix = topColumns.map((d, i) => [...topLeft[i], ...d, ...topRight[i]]);\n    }\n    if (bottomColumns.length > 0 && bottomColumns[0].length > 0) {\n        // If no bottom matrix is present, context will be empty\n        bottomMatrix = bottomColumns.map((d, i) => [...bottomLeft[i], ...d, ...bottomRight[i]]);\n    }\n\n    context.rowMatrix(new RowMatrix([leftMatrix, rightMatrix], {\n        isDistributionEqual: isRowSizeEqual,\n        distribution: distribution.rows,\n        gutter: gutterSpace.rows,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.row,\n        breakPage: breakPage.rows.map(e => e + Math.max(topLeft.length, topRight.length)),\n        extraCellLengths: [topLeft.length, bottomLeft.length]\n    }));\n\n    if (topLeft.length > 0) {\n        begColCells = topLeft[0].length;\n    } else {\n        begColCells = bottomLeft.length > 0 ? bottomLeft[0].length : 0;\n    }\n\n    if (topRight.length > 0) {\n        endColCells = topRight[0].length;\n    } else {\n        endColCells = bottomRight.length > 0 ? bottomRight[0].length : 0;\n    }\n\n    context.columnMatrix(new ColumnMatrix([topMatrix, bottomMatrix], {\n        isDistributionEqual: isColumnSizeEqual,\n        distribution: distribution.columns,\n        gutter: gutterSpace.columns,\n        isTransposed: true,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.col,\n        breakPage: breakPage.columns,\n        extraCellLengths: [begColCells, endColCells]\n    }));\n    context.centerMatrix(valueMatrix);\n\n    return matrices;\n};\n","import {\n    TOP, BOTTOM, LEFT, RIGHT, CENTER, BLANK_BORDERS, COLUMN, ROW,\n    VIEW_INDEX, ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX, MIDDLE, NO_BORDERS\n} from '../enums/constants';\n\nconst borderMap = {\n    [`${TOP}-${LEFT}`]: NO_BORDERS,\n    [`${TOP}-${MIDDLE}`]: COLUMN,\n    [`${TOP}-${RIGHT}`]: NO_BORDERS,\n    [`${CENTER}-${LEFT}`]: ROW,\n    [`${CENTER}-${MIDDLE}`]: CENTER,\n    [`${CENTER}-${RIGHT}`]: ROW,\n    [`${BOTTOM}-${LEFT}`]: NO_BORDERS,\n    [`${BOTTOM}-${MIDDLE}`]: COLUMN,\n    [`${BOTTOM}-${RIGHT}`]: NO_BORDERS\n};\n\nconst applySpecificBorder = (cells, color, type, style) => {\n    cells.style(`border-${type}`, `${style} ${color}`);\n};\n\nconst specificBorderApplier = (borderTypes, showBorders, cells, borderInfo) => {\n    const {\n        color,\n        width,\n        style\n    } = borderInfo;\n    const borderStyle = `${width}px ${style}`;\n\n    borderTypes.forEach((borderType) => {\n        applySpecificBorder(cells, showBorders[borderType] ? color : BLANK_BORDERS, borderType, borderStyle);\n    });\n};\n\nconst borderApplier = (cells, borderInfo) => {\n    const {\n       showRowBorders,\n      showColBorders,\n      showValueBorders\n  } = borderInfo;\n    return {\n        row: () => specificBorderApplier([TOP, BOTTOM], showRowBorders, cells, borderInfo),\n        column: () => specificBorderApplier([LEFT, RIGHT], showColBorders, cells, borderInfo),\n        center: () => specificBorderApplier([LEFT, RIGHT, TOP, BOTTOM], showValueBorders, cells, borderInfo)\n    };\n};\n\nexport const applyBorders = (cells, border, row, column) => {\n    const borderApplierFn = borderApplier(cells, border);\n    const borderMapVal = borderMap[`${ROW_MATRIX_INDEX[VIEW_INDEX[row]]}-${COLUMN_MATRIX_INDEX[column]}`];\n    if (borderMapVal) {\n        borderApplierFn[borderMapVal]();\n    }\n};\n","import { selectElement } from 'muze-utils';\nimport {\n     TOP, BOTTOM, ROW_SPAN, COL_SPAN, CENTER, ROW, COLUMN\n} from '../enums/constants';\n\nconst orderMaker = arr => Array.from(Array(arr.length).keys());\n\nconst nestByStack = (stack, updateArr, optionalParams = {}) => {\n    let {\n        order,\n        keyFn\n    } = optionalParams;\n    const arr = updateArr.slice();\n    const currStack = stack.slice();\n    const prevStack = currStack.slice();\n    // Order in which element are to be checked for nesting, default normal looping\n    // Order is always in the order of nest, i.e., left to right\n    order = order || Array.from(Array(arr.length).keys());\n\n    // Key function, if array of objects\n    keyFn = keyFn || (v => v);\n\n    // Return same array if stack is empty\n    if (currStack.length === 0) {\n        const newArr = [];\n        order.forEach((e) => {\n            newArr.push(arr[e]);\n        });\n        return { prevStack, currStack: arr, arr: newArr };\n    }\n\n    let arrVal = '';\n    let stackVal = '';\n    const newArr = [];\n\n    // Loop in order\n    for (let i = order.length - 1; i >= 0; i--) {\n        // Get current element index from the order given\n        const currElemIndex = order[i];\n\n        // Crete a hashmap for the hierarchy by joining strings of the array for both stack and input array\n        arrVal += keyFn(arr[currElemIndex]);\n        stackVal += keyFn(currStack[currElemIndex]);\n\n        // If the current value and value in stack is same, convert it to null\n        if (arrVal === stackVal) {\n            newArr[currElemIndex] = null;\n        } else {\n            stackVal = '';\n            // Loop from the current index in order to the last element in order to change the\n            // whole hierarchy\n            for (let j = i; j < order.length; j++) {\n                const newElem = order[j];\n                const arrElem = arr[newElem];\n\n                newArr[newElem] = arrElem;\n\n                // Reset stack to new stack\n                currStack[newElem] = arrElem;\n                stackVal = arrVal;\n            }\n        }\n    }\n    const returnArr = [];\n    order.forEach((e) => {\n        returnArr.push(newArr[e]);\n    });\n    return { prevStack, currStack, arr: returnArr };\n};\n\nconst spanCalculator = (colData, colIdx, matrix, rIdx) => {\n    // if data is not header cell then rowspan\n    // has to be 1\n    if (!colData) {\n        return () => null;\n    }\n\n    const conditions = {\n        row: count => matrix[rIdx + count] && matrix[rIdx + count][colIdx],\n        column: count => matrix[rIdx][colIdx + count]\n    };\n\n    return (type) => {\n        let count = 1;\n        let isNull = false;\n\n        while (!isNull) {\n            if (conditions[type](count) === null) {\n                count += 1;\n            } else {\n                isNull = true;\n            }\n        }\n        return count;\n    };\n};\n\nconst maskCreator = (matrix, order) => ({\n    row: () => {\n        let stack = [];\n        return matrix.map((e) => {\n            const {\n                    currStack,\n                    arr\n                } = nestByStack(stack, e, { keyFn: val => val.valueOf(), order });\n\n            stack = currStack;\n            return arr;\n        });\n    },\n    column: () => {\n        let stack = [];\n        const viewMatrix = [];\n        matrix.length && matrix[0].forEach((cell, colIndex) => {\n            const hierarchy = [];\n            matrix.forEach((row) => {\n                hierarchy.push(row[colIndex]);\n            });\n            const {\n                    currStack,\n                    arr\n                } = nestByStack(stack, hierarchy, { keyFn: val => val.valueOf(), order });\n            stack = currStack;\n\n            matrix.forEach((row, rowIndex) => {\n                viewMatrix[rowIndex] = viewMatrix[rowIndex] || [];\n                viewMatrix[rowIndex][colIndex] = arr[rowIndex];\n            });\n        });\n        return viewMatrix;\n    }\n});\n\nconst spanGenerator = viewMatrix => ({\n    row: () => {\n        const spans = [];\n        viewMatrix.forEach((row, ridx) => {\n            spans[ridx] = spans[ridx] || [];\n            row.forEach((col, i) => {\n                if (viewMatrix[ridx][i]) {\n                    const currSpan = spanCalculator(col, i, viewMatrix, ridx)('row');\n                    currSpan && spans[ridx].push(currSpan);\n                }\n            });\n        });\n        return spans;\n    },\n    column: () => viewMatrix.map((row, ridx) => row.map((col, i) => spanCalculator(col, i, viewMatrix, ridx)('column'))\n                    .filter(col => col !== null))\n});\n\nconst getOrder = () => ({\n    row: matrix => orderMaker(matrix[0]),\n    column: matrix => orderMaker(matrix)\n});\n\nconst matrixSpanGeneratorMap = {\n    [`${TOP}-1`]: {\n        orderGetter: getOrder()[COLUMN],\n        viewMatrixMaker: (...params) => maskCreator(...params)[COLUMN],\n        spanMaker: (...params) => spanGenerator(...params)[COLUMN]\n    },\n    [`${BOTTOM}-1`]: {\n        orderGetter: getOrder()[COLUMN],\n        viewMatrixMaker: (...params) => maskCreator(...params)[COLUMN],\n        spanMaker: (...params) => spanGenerator(...params)[COLUMN]\n    },\n    [`${CENTER}-0`]: {\n        orderGetter: getOrder()[ROW],\n        viewMatrixMaker: (...params) => maskCreator(...params)[ROW],\n        spanMaker: (...params) => spanGenerator(...params)[ROW]\n    },\n    [`${CENTER}-2`]: {\n        orderGetter: getOrder()[ROW],\n        viewMatrixMaker: (...params) => maskCreator(...params)[ROW],\n        spanMaker: (...params) => spanGenerator(...params)[ROW]\n    }\n};\n\nconst matrixSpanGenerator = (type) => {\n    const generator = matrixSpanGeneratorMap[type];\n    if (generator) {\n        return generator;\n    }\n    return {\n        orderGetter: () => null,\n        viewMatrixMaker: matrix => () => matrix,\n        spanMaker: () => () => null\n    };\n};\n\n/**\n * This function is used to set the col and row spans\n * for the matrices based on repeated/hierarchichal data\n *\n * @export\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {string} type Type of array (center, top, bottom)\n * @param {number} index Index of array in the row\n * @return {Object} containing the view matrix and their spans\n */\nexport function cellSpanMaker (matrix, type, index) {\n    let spans = null;\n    let viewMatrix = matrix;\n    const {\n        orderGetter,\n        viewMatrixMaker,\n        spanMaker\n    } = matrixSpanGenerator(`${type}-${index}`);\n\n    if (matrix.length) {\n        const order = orderGetter(matrix);\n        viewMatrix = viewMatrixMaker(matrix, order)();\n        spans = spanMaker(viewMatrix)();\n    }\n    return { viewMatrix, spans };\n}\n\nconst spaceAllocationDueToSpan = (span = 1, placeholder, config, index) => {\n    const height = placeholder.availHeight();\n    const width = placeholder.availWidth();\n    const borderWidth = config.border.width;\n    const { unitWidths } = config.dimensions;\n    const { col } = index;\n\n    return {\n        [ROW_SPAN] () {\n            placeholder.setAvailableSpace(width, height * span);\n            if (span === 1) {\n                selectElement(this).style('height', `${height * span + borderWidth}px`);\n            }\n        },\n        [COL_SPAN] () {\n            const primaryUnitWidth = unitWidths.primary[col];\n            if (span > 1) {\n                let cumulativeWidth = 0;\n                for (let i = col; i < col + span; i++) {\n                    cumulativeWidth += unitWidths.primary[i] - borderWidth;\n                }\n                placeholder.setAvailableSpace(cumulativeWidth + borderWidth, height);\n            } else if (primaryUnitWidth) {\n                placeholder.setAvailableSpace(primaryUnitWidth - borderWidth, height);\n            }\n            selectElement(this).style('height', `${height}px`);\n        }\n    };\n};\n\nconst spanApplier = (cells, spans, config, type) => {\n    let cellCounter = 0;\n    cells.attr(type, function (cell, colIndex) {\n        if (colIndex === 0) {\n            cellCounter = 0;\n        }\n        const span = spans[cell.rowIndex][colIndex];\n        const placeholder = cell.placeholder;\n        const index = {\n            row: cell.rowIndex,\n            col: cellCounter\n        };\n\n        spaceAllocationDueToSpan(span, placeholder, config, index)[type].bind(this)();\n        cellCounter += span;\n        return span;\n    });\n};\n\nconst spanApplierMap = {\n    [`${TOP}-0`]: null,\n    [`${TOP}-1`]: (...params) => spanApplier(...params, COL_SPAN),\n    [`${TOP}-2`]: null,\n    [`${CENTER}-0`]: (...params) => spanApplier(...params, ROW_SPAN),\n    [`${CENTER}-1`]: null,\n    [`${CENTER}-2`]: (...params) => spanApplier(...params, ROW_SPAN),\n    [`${BOTTOM}-0`]: null,\n    [`${BOTTOM}-1`]: (...params) => spanApplier(...params, COL_SPAN),\n    [`${BOTTOM}-2`]: null\n};\n\nexport const applySpans = (cells, spans, config, type) => {\n    const applier = spanApplierMap[type];\n    if (applier) {\n        applier(cells, spans, config);\n    }\n};\n","import { ERROR_MSG } from 'muze-utils';\n/**\n * An Interface to be implemented if the transaction support is necessary. This class ensures reactivity to\n * global properties.\n */\nexport default class TransactionSupport {\n    /**\n     * Property accessor for data member of the class. Data is passed to the system by calling this method.\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for width of the class. Width is passed as an integer.\n     */\n    width () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for height of the class. Height is passed as an integer.\n     */\n    height () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for config of the class. Config is passed as an object.\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n}\n","import { TOP, BOTTOM, LEFT, TITLE, SUB_TITLE, GROUP, LAYOUT, LEGEND } from '../constants';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const arrangeComponents = (context) => {\n    const legendConfig = context.config().legend;\n    const titleConfig = context.title()[1];\n    const subtitleConfig = context.subtitle()[1];\n    const titleLayouts = {\n        [`${TOP}-${TOP}`]: [TITLE, SUB_TITLE, GROUP],\n        [`${BOTTOM}-${BOTTOM}`]: [GROUP, SUB_TITLE, TITLE],\n        [`${TOP}-${BOTTOM}`]: [TITLE, GROUP, SUB_TITLE],\n        [`${BOTTOM}-${TOP}`]: [SUB_TITLE, GROUP, TITLE]\n    };\n    const legendLayouts = [\n        [LEGEND, LAYOUT],\n        [LAYOUT, LEGEND]\n    ];\n    const titlePosition = titleConfig.position || TOP;\n    const subtitlePosition = subtitleConfig.position || TOP;\n\n    return {\n        headers: titleLayouts[`${titlePosition}-${subtitlePosition}`],\n        legends: legendConfig.position === LEFT || legendConfig.position === TOP ?\n        legendLayouts[0] : legendLayouts[1]\n    };\n};\n","/**\n * Flag to specify whether direction is vertical.\n */\nexport const MARGIN = 'margin';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const SPACE_FIXER = 'spaceFixer';\nexport const CLASSPREFIX = 'muze';\nexport const VERTICAL_ALIGN = 'verticalAlign';\nexport const TEXT_ALIGN = 'textAlign';\nexport const IS_OFFSET = 'isOffset';\nexport const MIDDLE = 'middle';\nexport const BASELINE = 'baseline';\nexport const SHOW = 'show';\nexport const CENTER = 'center';\nexport const TEXT = 'text';\nexport const HEADER = 'header';\nexport const HEIGHT = 'height';\nexport const WIDTH = 'width';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const FIELDS = 'fields';\nexport const TRANSFORM = 'transform';\nexport const LAYER_DEF = 'layerDef';\nexport const CONFIG = 'config';\nexport const DETAIL_FIELDS = 'detailFields';\nexport const MAX_LINES = 'maxLines';\nexport const MIN_CHARS = 'minCharacters';\nexport const ROTATION = 'rotation';\n\nexport const TEXT_CELL = 'text-cell';\nexport const AXIS_CELL = 'axis-cell';\nexport const GEOM_CELL = 'geom-cell';\nexport const BLANK_CELL = 'blank-cell';\n","// eneum to refer to simple cell\nexport const SIMPLE = 'simple';\n// eneum to refer to header cell\nexport const TEXT = 'text';\n// enum to refer to axis cell\nexport const AXIS = 'axis';\n// enum to refer to visual cell\nexport const GEOM = 'geom';\n// enum to refer blank cell\nexport const BLANK = 'blank';\n","import {\n    ERROR_MSG,\n    getUniqueId,\n    mergeRecursive\n} from 'muze-utils';\nimport { SIMPLE } from './enums/cell-type';\n\n/**\n * This file declares a class that is used as an interface to create new\n * SimpleCell elements.\n * @module SimpleCell\n */\n/**\n * Base class for all table cells.\n *\n * @interface\n * @class SimpleCell\n */\nclass SimpleCell {\n\n    /**\n     * Creates an instance of SimpleCell.\n     *\n     * @param {*} config The input configuration.\n     * @memberof SimpleCell\n     */\n    constructor (config) {\n        this._id = getUniqueId();\n\n        const defConfig = mergeRecursive({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(defConfig, config || {});\n\n        this._mount = null;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     */\n    get type () {\n        return SIMPLE;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     * @return {Object} Default config for the placeholder\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the value contained by the SimpleCell.\n     *\n     * @memberof SimpleCell\n     */\n    valueOf () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a unique identifier for the instance used\n     * to control selective rendering.\n     *\n     * @memberof SimpleCell\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized representation of the instance.\n     *\n     * @memberof SimpleCell\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns an object with width and height fields\n     * specifying the space taken up by this metod.\n     *\n     * @memberof SimpleCell\n     */\n    getLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Method used to set the space available to render the SimpleCell\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @memberof SimpleCell\n     */\n    setAvailableSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    remove () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    getMinMeasures (providedMinMeasure = 0) {\n        return providedMinMeasure;\n    }\n\n}\n\nexport default SimpleCell;\n","/**\n * This file exports variables that are used as defaults for\n * the placeholders\n */\nimport * as CONSTANTS from './constants';\n\n /**\n * Default Configuration for the cells\n * @return {Object} Default configuration\n */\nexport const DEFAULT_CONFIG = {\n    [CONSTANTS.MARGIN]: {\n        [CONSTANTS.LEFT]: 0,\n        [CONSTANTS.RIGHT]: 0,\n        [CONSTANTS.TOP]: 0,\n        [CONSTANTS.BOTTOM]: 0\n    },\n    [CONSTANTS.SPACE_FIXER]: 2,\n    [CONSTANTS.IS_OFFSET]: false,\n    [CONSTANTS.VERTICAL_ALIGN]: null,\n    [CONSTANTS.TEXT_ALIGN]: CONSTANTS.CENTER,\n    [CONSTANTS.SHOW]: true,\n    [CONSTANTS.MAX_LINES]: 0,\n    [CONSTANTS.MIN_CHARS]: 0,\n    [CONSTANTS.ROTATION]: null\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { GEOM, TEXT, AXIS, BLANK } from './enums/cell-type';\n\nconst DEFAULT_PROPS = {\n    mount: {},\n    availHeight: {},\n    availWidth: {},\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config, value)\n    },\n    logicalSpace: {},\n    minSpacing: {},\n    source: {}\n};\n\nconst geomProps = {\n    data: {},\n    caption: {},\n    config: {},\n    axes: {},\n    facetByFields: {},\n    fields: {},\n    transform: {},\n    layerDef: {},\n    detailFields: {}\n};\n\nconst textProps = {\n    smartText: {}\n};\nexport const PROPS = {\n    [GEOM]: mergeRecursive(geomProps, DEFAULT_PROPS),\n    [TEXT]: mergeRecursive(textProps, DEFAULT_PROPS),\n    [AXIS]: DEFAULT_PROPS,\n    [BLANK]: DEFAULT_PROPS\n};\n","/**\n * This file declares a class that represents a table cell\n * used to house an axis.\n * @module VisualCell\n */\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport { CLASSPREFIX, HEIGHT, WIDTH, AXIS_CELL, BOTTOM, TOP } from './enums/constants';\nimport SimpleCell from './simple-cell';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { AXIS } from './enums/cell-type';\nimport { PROPS } from './props';\n\n/**\n * Computes the logical space of the an axis instance within an axis cell\n *\n * @param {Object} context Required to get the needed parameters to compute axis space\n * @return {Object} Returns the logical space for axis\n */\nconst computeAxisSpace = (context) => {\n    let logicalWidth;\n    let logicalHeight;\n    const axis = context.source();\n    const {\n        spaceFixer,\n        margin\n    } = context.config();\n    const {\n        width,\n        height\n    } = axis.getLogicalSpace();\n    const {\n            show\n        } = axis.config();\n    if (show === true) {\n        logicalHeight = Math.floor(height + margin.top + margin.bottom + spaceFixer);\n        logicalWidth = Math.floor(width + margin.left + margin.right + spaceFixer);\n    } else {\n        [logicalWidth, logicalHeight] = [width, height];\n    }\n    return {\n        width: logicalWidth,\n        height: logicalHeight\n    };\n};\n\n/**\n * Represents an axis cell.\n *\n * @class Axis\n */\nclass AxisCell extends SimpleCell {\n\n    /**\n     * Creates an instance of AxisCell.\n     *\n     * @param {Object} config The input config.\n     * @memberof AxisCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._axis = null;\n        this._availHeight = null;\n        this._availWidth = null;\n        this._logicalSpace = null;\n\n        generateGetterSetters(this, PROPS[AXIS]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof AxisCell\n     */\n    get type () {\n        return AXIS;\n    }\n\n    /**\n     * This method return the value conatined by this SimpleCell.\n     *\n     * @return {SimpleAxis | ColorAxis} Instance of SimpleAxis or ColorAxis.\n     * @memberof AxisCell\n     */\n    valueOf () {\n        return this.source().id;\n    }\n\n    /**\n     * This method return the unique identififer of the axis\n     *\n     * @return {string} Id of the axis.\n     * @memberof AxisCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Retrns the serialized representation of this cell.\n     *\n     * @return {Object}Object with serializable props.\n     * @memberof AxisCell\n     */\n    serialize () {\n        return {\n            type: AXIS,\n            axis: this.source().serialize()\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof AxisCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * return the space taken up by an axis element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof AxisCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeAxisSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @return {Instance} Returns current Instance\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        const {\n            margin,\n            isOffset\n        } = this.config();\n\n        if (width || height) {\n            this.source().setAvailableSpace(width, height, margin, isOffset);\n            this.source().logicalSpace(null);\n        } else {\n            this.source().resetLogicalSpace();\n        }\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the axis inside the axis cell.\n     *\n     * @param {HTMLElement} mount The mount point.\n     * @return {Selection} node where axis mounted\n     * @memberof AxisCell\n     */\n    /* istanbul ignore next */render (mount) {\n        if (!mount) {\n            return this;\n        }\n        let actualWidth = 0;\n        let actualHeight = 0;\n        const axis = this.source();\n        const availHeight = this.availHeight();\n        const availWidth = this.availWidth();\n        const {\n            margin\n        } = this.config();\n        const {\n            top,\n            bottom,\n            left,\n            right\n        } = margin;\n        const {\n            show,\n            orientation\n        } = axis.config();\n        const wrapperDiv = makeElement(selectElement(mount), 'div', [this], `${CLASSPREFIX}-${AXIS_CELL}`);\n        const selection = makeElement(wrapperDiv, 'svg', [1], `${CLASSPREFIX}-axis-container`);\n        selection.classed(`${CLASSPREFIX}-axis-container-${orientation}`, true);\n\n        this.mount(mount);\n        if (!availWidth) {\n            selection.attr(WIDTH, `${0}px`);\n        }\n        if (!availHeight) {\n            selection.attr(HEIGHT, `${0}px`);\n        }\n        actualWidth = availWidth;\n        actualHeight = availHeight;\n        if (!show) {\n            actualWidth = (orientation === TOP || orientation === BOTTOM) ? availWidth : 0;\n            actualHeight = (orientation === TOP || orientation === BOTTOM) ? 0 : availHeight;\n        }\n        wrapperDiv.style(WIDTH, `${actualWidth}px`)\n                        .style(HEIGHT, `${actualHeight}px`)\n                        .style('margin-top', top)\n                        .style('margin-bottom', bottom)\n                        .style('margin-left', left)\n                        .style('margin-right', right);\n\n        axis.mount(selection.node());\n        return selection;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Current instance of AxisCell\n     * @memberof AxisCell\n     */\n    remove () {\n        this.source() && this.source().remove();\n        this.mount() && this.mount().remove();\n        return this;\n    }\n}\n\nexport default AxisCell;\n\n","/**\n * This file declares a class that represents a BLANK element in a  table.\n * @module VisualCell\n */\nimport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    generateGetterSetters\n    } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { CLASSPREFIX, BLANK_CELL } from './enums/constants';\nimport { BLANK } from './enums/cell-type';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { PROPS } from './props';\n\n/**\n * Represents a table haeder.\n *\n * @class BLANK\n */\nclass BlankCell extends SimpleCell {\n\n    /**\n     * Creates an instance of BLANK.\n     * @param {Object} config The input configuration.\n     * @memberof BLANK\n     */\n    constructor (config) {\n        super(config);\n\n        generateGetterSetters(this, PROPS[BLANK]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof BlankCell\n     */\n    get type () {\n        return BLANK;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof BlankCell\n     */\n    valueOf () {\n        return this.id;\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof BlankCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the BLANK cell.\n     *\n     * @return {string} The unique identifier for the BLANK.\n     * @memberof BlankCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof BLANK\n     */\n    serialize () {\n        return {\n            type: BLANK\n        };\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof BLANK\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            return {\n                width: this.width || 0,\n                height: this.height || 0\n            };\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the BLANK cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof BLANK\n     */\n    /* istanbul ignore next */render (mount) {\n        if (mount) {\n            const { style } = this.config();\n            // append span element to mount point\n            this.mount(mount);\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id]);\n            elem.classed(`${CLASSPREFIX}-${BLANK_CELL}`, true);\n            elem.style('width', `${this.availWidth()}px`);\n            elem.style('height', `${this.availHeight()}px`);\n            elem.html('');\n            // apply style on the returned element\n            if (style) {\n                applyStyle(elem, style);\n            }\n        } return this;\n    }\n\n    /**\n     * Removes the cell(Disposal)\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n\n    getMinMeasures () {\n        return 0;\n    }\n }\nexport default BlankCell;\n","/**\n * This file declares a class that represents a Text element in a  table.\n * @module VisualCell\n */\n\nimport {\n    selectElement,\n    makeElement,\n    getSmartComputedStyle,\n    generateGetterSetters\n} from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { TEXT } from './enums/cell-type';\nimport { PROPS } from './props';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { CLASSPREFIX, TOP, BOTTOM, LEFT, RIGHT, HEADER, WIDTH, TEXT_CELL } from './enums/constants';\nimport './text-cell.scss';\n\nconst setSmartText = (context) => {\n    const source = context.source();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       rotation\n   } = context.config();\n    const {\n        left,\n        right,\n        top,\n        bottom\n     } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const labelManager = context.dependencies().labelManager;\n\n    labelManager.setStyle(context._computedStyle);\n\n    !rotation && context.smartText(labelManager.getSmartText(source, availWidth, availHeight, false));\n    rotation && context.smartText(labelManager.getSmartText(source, availHeight, availWidth, true));\n\n    return context;\n};\n\n/**\n* Computes the Logical Space for the text\n*\n* @param {Object} context Required to get the needed parameters to compute text space\n* @return {Object} Logical space taken up by text\n* @memberof TextCell\n*/\nconst computeTextSpace = (context) => {\n    const { labelManager } = context.dependencies();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       show,\n       maxLines,\n       minCharacters\n   } = context.config();\n    const {\n       left,\n       right,\n       top,\n       bottom\n    } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const source = context.source();\n    const space = context.smartText();\n    const minText = new Array(minCharacters).fill('W').join('');\n    const _minTextSpace = labelManager.getOriSize(minText);\n\n    context.config({ rotation: false });\n    if (space.width > (availWidth || 0) && maxLines) {\n        space.height = space.oriTextHeight * maxLines;\n    }\n    if (availWidth && availWidth < space.width) {\n        space.width = _minTextSpace.width;\n    }\n    if (availWidth && availWidth < Math.min(_minTextSpace.width, space.oriTextWidth)) {\n        const smartSpace = labelManager.getSmartText(source, availHeight, _minTextSpace.height, true);\n        space.width = smartSpace.height;\n        space.height = smartSpace.width;\n        context.config({ rotation: true });\n        context.smartText(smartSpace);\n    }\n\n    if (show) {\n        return {\n            width: Math.ceil(space.width) + paddedWidth,\n            height: Math.ceil(space.height) + paddedHeight\n        };\n    } return {\n        width: 0,\n        height: 0\n    };\n};\n\n/**\n * Represents a table haeder.\n *\n * @class Text\n */\nclass TextCell extends SimpleCell {\n\n    /**\n     * Creates an instance of Text.\n     * @param {Object} config The input configuration.\n     * @param {string} dependencies Dependencies for the class(labelManager)\n     * @memberof Text\n     */\n    constructor (config, dependencies) {\n        super(config);\n\n        this._dependencies = dependencies;\n        this._className = this._config.className ||\n                    (this._config.type === HEADER ? `${CLASSPREFIX}-${HEADER}-cell` : `${CLASSPREFIX}-${TEXT}-cell`);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'), this._className);\n        this._dependencies.labelManager.setStyle(this._computedStyle);\n        generateGetterSetters(this, PROPS[TEXT]);\n        const space = this._dependencies.labelManager.getOriSize('w');\n        this.minSpacing({ width: Math.floor(space.width * 3 / 4), height: Math.floor(space.height / 2) });\n        setSmartText(this);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof TextCell\n     */\n    get type () {\n        return TEXT;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof TextCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the Text cell.\n     *\n     * @return {string} The unique identifier for the Text.\n     * @memberof TextCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the dependencies of the instance\n     *\n     * @return {Object} Dependencies needed by the class\n     * @memberof TextCell\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof TextCell\n     */\n    serialize () {\n        return {\n            text: this.source(),\n            type: TEXT\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof TextCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof Text\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeTextSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        setSmartText(this);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the Text cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof Text\n     */\n    render (mount) {\n        const availWidth = this.availWidth();\n        const availHeight = this.availHeight();\n        const {\n            margin,\n            show,\n            verticalAlign,\n            textAlign,\n            rotation\n        } = this.config();\n\n        this.mount(mount);\n        if (show) {\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id], `${CLASSPREFIX}-${TEXT_CELL}`);\n            const vAlign = verticalAlign || rotation ? 'middle' : 'top';\n            const {\n                width,\n                height\n            } = this.smartText();\n            const {\n                height: minHeightSpace\n            } = this.minSpacing();\n            const translation = {\n                top: width + minHeightSpace / 2,\n                middle: width / 2 + minHeightSpace,\n                bottom: minHeightSpace\n            };\n\n            container.style('vertical-align', vAlign);\n\n            // Set class name\n            elem.classed(this._className, true);\n\n            // Apply styles\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            elem.style('transform', rotation ? `translate(${height / 2}px,\n                ${translation[vAlign]}px) rotate(-90deg)` : '');\n            elem.style(WIDTH, availWidth ? `${availWidth}px` : '100%');\n            [TOP, BOTTOM, LEFT, RIGHT].forEach((type) => {\n                container.style(`margin-${type}`, `${margin[type]}px`);\n            });\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            // set the text as the innerHTML\n            this._dependencies.labelManager.setStyle(this._computedStyle);\n            elem.html(this._dependencies.labelManager.getSmartText(this.source(), availWidth, availHeight, true).text);\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n }\n\nexport default TextCell;\n","/**\n * This file declares a class that is used to represent a table cell\n * that houses a visual unit.\n * @module VisualCell\n */\n\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { GEOM } from './enums/cell-type';\nimport { PROPS } from './props';\nimport {\n    CLASSPREFIX, HEIGHT, WIDTH, DATA, AXES, FACET_BY_FIELDS, FIELDS, TRANSFORM, LAYER_DEF, CONFIG, GEOM_CELL,\n    DETAIL_FIELDS\n} from './enums/constants';\nimport { DEFAULT_CONFIG } from './enums/defaults';\n\n/**\n * Calculates the logical space of the cell\n *\n * @param {Object} context Required to get the needed parameters to compute unit space\n * @return {Object} Logical space taken up by the unit\n * @memberof GeomCell\n */\nconst computeGeomSpace = (context) => {\n    const config = context.source().config();\n    const { width, height } = config;\n    return {\n        width: Math.ceil(width),\n        height: Math.ceil(height + context.getCaptionSpace().height)\n    };\n};\n\n /**\n * This class represents a SimpleCell for visual unit.\n *\n * @class GeomCell\n */\nclass GeomCell extends SimpleCell {\n\n    /**\n     * Creates an instance of GeomCell.\n     * @param {Object} config The input configuration.\n     * @memberof GeomCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._unit = null;\n        this._layers = null;\n        this._axes = {};\n        this._datamodel = {};\n        this._facetByFields = {};\n        this._fields = null;\n        this._transform = null;\n        this._caption = null;\n\n        generateGetterSetters(this, PROPS[GEOM]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof GeomCell\n     */\n    get type () {\n        return GEOM;\n    }\n\n    /**\n     * This method return the value contained by this cell.\n     *\n     * @return {VisualUnit} Instance of visual unit contained by visual unit.\n     * @memberof GeomCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return the id of the\n     * visual unit housed by this cell.\n     *\n     * @return {string} The unique id of the visual unit.\n     * @memberof GeomCell\n     */\n    get id () {\n        return this.source().id();\n    }\n\n    /**\n     * This method return a serialized representation of\n     * this instance.\n     *\n     * @return {Object} Object with serializable props.\n     * @memberof GeomCell\n     */\n    serialize () {\n        return {\n            type: GEOM,\n            unit: this.source().serialize(),\n            caption: this.caption()\n        };\n    }\n\n    /**\n     * return the default configuration for the geom cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof GeomCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * Updates the model based on the changed parameters\n     *\n     * @return {Instance} return instance\n     * @memberof GeomCell\n     */\n    updateModel () {\n        const unit = this.source();\n        unit.clearCaching();\n        [LAYER_DEF, TRANSFORM, AXES, FIELDS, CONFIG, DATA, AXES, FACET_BY_FIELDS, DETAIL_FIELDS].forEach((prop) => {\n            this[prop]() && unit[prop](this[prop]());\n        });\n        return this;\n    }\n\n    /**\n     * It gives the space taken by the caption of the unit\n     *\n     * @return {Object} return the space taken by caption\n     * @memberof GeomCell\n     */\n    getCaptionSpace () {\n        const caption = this.caption();\n\n        let captionSpace = { width: 0, height: 0 };\n        if (caption) {\n            captionSpace = caption.getLogicalSpace();\n        }\n        return captionSpace;\n    }\n\n    /**\n     * return the space taken up by the element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof GeomCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeGeomSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space available to\n     * render the SimpleCell.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    setAvailableSpace (width, height) {\n        const unit = this.source();\n\n        this.availWidth(width);\n        this.availHeight(height);\n        unit.lockModel()\n            .width(width).height(height - this.getCaptionSpace().height)\n            .unlockModel();\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * his method is used to render the visual unit inside the provided cell.\n     *\n     * @param {HTMLElement} mount The mountpoint in the table.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    render (mount) {\n        if (mount) {\n            this.mount(mount);\n            const availHeight = this.availHeight();\n            const availWidth = this.availWidth();\n            const caption = this.caption();\n            const wrapperDiv = makeElement(selectElement(mount), 'div', [1], `${CLASSPREFIX}-${GEOM_CELL}`);\n\n            if (caption) {\n                const captionDom = makeElement(wrapperDiv, 'div', [caption], `${CLASSPREFIX}-unit-caption`).node();\n                caption.render(captionDom);\n            }\n            const selection = makeElement(wrapperDiv, 'div', [1], `${CLASSPREFIX}-unit`);\n            wrapperDiv.style(WIDTH, `${availWidth}px`).style(HEIGHT, `${availHeight}px`);\n            selection.style(WIDTH, `${availWidth}px`)\n                            .style(HEIGHT, `${availHeight - this.getCaptionSpace().height}px`);\n            this.source().mount(selection.node());\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Object} Current instance\n     * @memberof GeomCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        this.source().remove();\n        return this;\n    }\n}\n\nexport default GeomCell;\n","import AxisCell from './axis-cell';\nimport BlankCell from './blank-cell';\nimport TextCell from './text-cell';\nimport GeomCell from './geom-cell';\nimport SimpleCell from './simple-cell';\n\nimport * as CONSTANTS from './constants';\n\nexport const DEFAULT_PLACEHOLDERS = {\n    [CONSTANTS.SIMPLE_CELL]: SimpleCell,\n    [CONSTANTS.TEXT_CELL]: TextCell,\n    [CONSTANTS.AXIS_CELL]: AxisCell,\n    [CONSTANTS.GEOM_CELL]: GeomCell,\n    [CONSTANTS.BLANK_CELL]: BlankCell\n};\n\n","export const SIMPLE_CELL = 'SimpleCell';\nexport const TEXT_CELL = 'TextCell';\nexport const AXIS_CELL = 'AxisCell';\nexport const BLANK_CELL = 'BlankCell';\nexport const GEOM_CELL = 'GeomCell';\n\n","import { DEFAULT_PLACEHOLDERS } from './defaults';\n\n/**\n * Creates a registry for the cells, which can be used for\n * setting a new cell or getting the registered cells\n *\n * @return {Object} Setters and getters for registered cells\n */\nconst cellRegistry = () => {\n    const reg = DEFAULT_PLACEHOLDERS;\n    return {\n        set: (key, def) => {\n            if (key in reg) {\n                reg[key] = def;\n            }\n            return cellRegistry;\n        },\n        get: () => reg\n    };\n};\nexport default cellRegistry;\n","import { TextCell } from '@chartshq/visual-cell';\nimport { escapeHTML } from 'muze-utils';\nimport { TOP } from '../constants';\n\n/**\n *\n *\n * @param {*} rawContent\n *\n */\nconst resolveTitleSubTitleContent = (rawContent) => {\n    if (typeof rawContent === 'function' && !rawContent._sanitize) {\n        return rawContent();\n    }\n    return escapeHTML(rawContent());\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} cellType\n * @param {*} labelManager\n * @param {*} prevCell\n *\n */\nconst headerCreator = (config, cellType, labelManager, prevCell) => {\n    let margin = {};\n    const {\n        content,\n        classPrefix,\n        maxLines\n    } = config;\n    const cell = prevCell || new TextCell(\n        {\n            type: cellType === 'title' ? 'header' : 'text',\n            className: `${classPrefix}-${cellType}-cell`\n        }, {\n            labelManager\n        })\n     .config({ maxLines }).minSpacing({ width: 0, height: 0 });\n\n    cell.source(content);\n    cell._minTickDiff = { height: 0, width: 0 };\n\n    if (config.position === TOP) {\n        margin = { top: 0, bottom: config.padding };\n    } else {\n        margin = { top: config.padding, bottom: 0 };\n    }\n    cell.config({ margin });\n\n    return {\n        height: cell.getLogicalSpace().height,\n        cell\n    };\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} type\n * @param {*} labelManager\n * @param {*} cell\n *\n */\nconst createHeading = (config, type, labelManager, prevCell) => {\n    if (!config) { return ''; }\n\n    return headerCreator(\n        config,\n        type,\n        labelManager,\n        prevCell\n    );\n};\n\n/**\n *\n *\n * @param {*} context\n */\nexport const createHeaders = (context, canvasHeight, canvasWidth) => {\n    let headerHeight = 0;\n    const headers = {};\n    const subtitle = context.subtitle();\n    const isSubtitle = resolveTitleSubTitleContent(subtitle[0]);\n\n    canvasHeight >= 200 && canvasWidth >= 200 && ['title', 'subtitle'].forEach((type) => {\n        const headerOptions = context[type]();\n        const content = resolveTitleSubTitleContent(headerOptions[0]);\n        if (content) {\n            const config = headerOptions[1];\n\n            config.width = context.width();\n            config.height = context.height();\n            config.classPrefix = context.config().classPrefix;\n            config.content = content;\n            config.padding = (type === 'title' && !isSubtitle.length) ? subtitle[1].padding : config.padding;\n\n            const { height, cell } = createHeading(config, type, context.dependencies().smartlabel,\n                context[`${type}Cell`]);\n\n            headers[`${type}Cell`] = cell;\n            context._composition[type] = cell;\n            headerHeight += height;\n        }\n    });\n    return { headerHeight, headers };\n};\n\n","import { TextCell, AxisCell } from '@chartshq/visual-cell';\nimport { getValueParser, retrieveFieldDisplayName, DataModel, getObjProp } from 'muze-utils';\nimport {\n    VERTICAL, HORIZONTAL, LEFT, RIGHT, LEGEND_TYPE_MAP, PADDING, BORDER, MARGIN\n} from '../constants';\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n *\n */\nexport const legendCreator = (canvas) => {\n    let LegendCls;\n    const dataset = [];\n    const axes = canvas.getRetinalAxes();\n\n    Object.entries(axes).forEach((axisInfo) => {\n        const scale = axisInfo[1][0];\n        const scaleType = axisInfo[0];\n        const scaleProps = canvas[scaleType]();\n\n        if (scaleProps.field && scale) {\n            const {\n                type,\n                step\n            } = scale.config();\n\n            const stepMapper = typeof step === 'boolean' ? step : false;\n            LegendCls = LEGEND_TYPE_MAP[`${type}-${stepMapper}-${scaleType}`];\n            dataset.push({\n                scale,\n                canvas,\n                fieldName: scaleProps.field,\n                title: retrieveFieldDisplayName(canvas.data(), scaleProps.field),\n                LegendCls,\n                scaleType\n            });\n        }\n    });\n\n    return dataset;\n};\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n * @param {*} measurement\n * @param {*} prevLegends\n *\n */\nexport const legendInitializer = (legendConfig, canvas, measurement, prevLegends) => {\n    const legends = [];\n    const {\n        height,\n        width,\n        headerHeight\n    } = measurement;\n    const {\n        position,\n        align\n    } = legendConfig;\n\n    const legendInfo = legendCreator(canvas);\n    const { invalidValues } = canvas.config();\n\n    const parser = getValueParser(invalidValues);\n    legendInfo.forEach((dataInfo, index) => {\n        const legendMeasures = {};\n        const {\n                LegendCls,\n                scale,\n                fieldName,\n                title: titleText,\n                scaleType\n            } = dataInfo;\n        const config = legendConfig[scaleType] || {};\n        const title = config.title || {};\n        title.text = title.text || titleText;\n        if (config.show) {\n            config.position = position;\n            config.align = align;\n            let legend = getObjProp(prevLegends[scaleType], index);\n            if (!legend) {\n                legend = LegendCls.create({\n                    labelManager: canvas._dependencies.smartlabel,\n                    cells: {\n                        AxisCell, TextCell\n                    }\n                });\n            }\n            legendMeasures.maxHeight = align === VERTICAL ? (height - headerHeight) : height * 0.2;\n            legendMeasures.maxWidth = align === HORIZONTAL ? width : width * 0.2;\n            legendMeasures.width = Math.min(legendMeasures.maxWidth, config.width);\n            legendMeasures.height = Math.min(legendMeasures.maxHeight, config.height);\n\n            [PADDING, BORDER, MARGIN].forEach((e) => {\n                legendMeasures[e] = config[e];\n            });\n            const metaData = legend.metaData();\n            if (metaData instanceof DataModel) {\n                metaData.dispose();\n            }\n            legend.scale(scale)\n                            .valueParser(parser)\n                            .title(title)\n                            .fieldName(fieldName)\n                            .config(config)\n                            .metaData(canvas.composition().visualGroup.getGroupByData().project([fieldName]))\n                            .measurement(legendMeasures)\n                            .canvasAlias(canvas.alias())\n                            .setLegendMeasures();\n\n            legends.push({ canvas, legend, scaleType });\n        }\n    });\n    return legends;\n};\n\n/**\n *\n *\n * @param {*} legends\n * @param {*} legendConfig\n * @param {*} availableHeight\n * @param {*} availableWidth\n *\n */\nexport const getLegendSpace = (legends, legendConfig, availableHeight, availableWidth) => {\n    const legendMeasures = legends.map(legendInfo => legendInfo.legend.measurement());\n    const legendSpace = { width: 0, height: 0 };\n\n    legendMeasures.forEach((space) => {\n        let height = 0;\n        let width = 0;\n        width = Math.min(space.width, space.maxWidth);\n        height = Math.min(space.height, space.maxHeight);\n\n        if (legendConfig.align === HORIZONTAL) {\n            if (legendSpace.width + width > availableWidth) {\n                legendSpace.width = availableWidth;\n                legendSpace.height += height;\n            } else {\n                legendSpace.width += width;\n                legendSpace.height = Math.max(legendSpace.height, height);\n            }\n        } else if (legendSpace.height + height > availableHeight) {\n            legendSpace.height = height;\n            legendSpace.width += width;\n        } else {\n            legendSpace.height += height;\n            legendSpace.width = Math.max(legendSpace.width, width);\n        }\n    });\n    if (legendConfig.align === HORIZONTAL) {\n        legendSpace.width = availableWidth;\n    }\n    return legendSpace;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} headerHeight\n *\n */\nexport const createLegend = (context, headerHeight, height, width) => {\n    const measurement = {\n        height,\n        width,\n        headerHeight\n    };\n    const { legend } = context.config();\n    const { show, position } = legend;\n\n    legend.classPrefix = context.config().classPrefix;\n    const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n\n    legend.show = show ? ((align === VERTICAL && width > 200) || (align === HORIZONTAL && height > 200)) : show;\n    legend.align = align;\n    return legendInitializer(legend, context, measurement, context.composition().legend || {});\n};\n","import { LayoutComponent } from '../../../../layout/src/tree-layout';\n\nexport default class MuzeComponent extends LayoutComponent {\n    getLogicalSpace () {\n        const { width, height } = this.boundBox();\n        return { width, height };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n    }\n\n    getBoundBox () {\n        return this.boundBox();\n    }\n\n    updateWrapper () {\n        throw Error('Update is not implemented');\n    }\n\n    setParams () {\n        throw Error('set params is not implemented');\n    }\n}\n","import { selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport { LEFT } from '../../constants';\n\nexport default class HeaderComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    renderHeader (container) {\n        const layoutConfig = this.params.config;\n        container = selectElement(container);\n        const { align } = layoutConfig;\n        const sel = container\n          .selectAll(`.${layoutConfig.classPrefix}-inner-container`)\n          .data([this.name]);\n        sel.exit().remove();\n        const selEnter = sel.enter().append('div');\n\n        const cont = selEnter.merge(sel);\n        cont.classed(`${layoutConfig.classPrefix}-inner-container`, true);\n        const { height, width } = this.boundBox();\n        this.component.setAvailableSpace(width, height);\n\n        this.component && this.component.render(cont.node());\n\n        cont.selectAll('div').classed(`${layoutConfig.classPrefix}-inner-content`, true);\n        cont.style('width', `${100}%`);\n\n        if (layoutConfig && this.component) {\n            cont.style('float', LEFT)\n                            .style('text-align', align);\n                            // .style(`padding-${position === TOP ? BOTTOM : TOP}`, `${padding}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderHeader(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.setParams(params);\n        this.name(params.name);\n        this.boundBox(params.component.getLogicalSpace());\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y,\n            left: conf.x,\n            width: conf.width,\n            height: conf.height });\n        this.renderAt(conf.renderAt);\n    }\n}\n","import { makeElement, selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport {\n     LEFT, RIGHT, VERTICAL, HORIZONTAL, TOP, BOTTOM, HORIZONTAL_CENTER, VERTICAL_CENTER\n} from '../../constants';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\n\nfunction defaultAlignmentHelper (position) {\n    let alignment = null;\n    const alignWith = `${ROW_MATRIX_INDEX[1]}-${COLUMN_MATRIX_INDEX[1]}`;\n    switch (position) {\n    case TOP:\n    case BOTTOM:\n        alignment = HORIZONTAL_CENTER;\n        break;\n    case LEFT:\n    case RIGHT:\n        alignment = VERTICAL_CENTER;\n        break;\n    default:\n        alignment = VERTICAL_CENTER;\n    }\n    return { alignment, alignWith };\n}\nexport default class LegendComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.config.measurement.legendSpace, 0);\n        this.setParams(params);\n    }\n\n    renderLegend (container) {\n        container = selectElement(container);\n        const sectionComponents = [];\n        const { position, classPrefix } = this.params.config;\n        const legendMount = makeElement(container, 'div', [this.components],\n                                        `${classPrefix}-inner-content`, {}, d => d);\n        legendMount.classed(`${classPrefix}-legend`, true);\n        const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n        const legWidth = this.newDimensions.width;\n        const legHeight = this.newDimensions.height;\n\n        [container, legendMount].forEach((elem) => {\n            elem.style('width', `${Math.floor(legWidth)}px`)\n                            .style('height', `${legHeight}px`)\n                            .style('float', LEFT);\n        });\n\n        if (align === VERTICAL) {\n            let sections = -1;\n            let currHeight = legHeight;\n            let currWidth = 0;\n\n            this.components.forEach((legendInfo) => {\n                const leg = legendInfo.legend;\n                if (leg.measurement().height > currHeight) {\n                    sections++;\n                    currWidth = 0;\n                    currHeight = legHeight;\n                } else {\n                    sections < 0 && sections++;\n                }\n                sectionComponents[sections] = sectionComponents[sections] || [];\n                currHeight -= Math.min(leg.measurement().height, currHeight);\n                currWidth = Math.max(Math.min(leg.measurement().width, leg.measurement().maxWidth), currWidth);\n                sectionComponents[sections].push({\n                    legend: leg,\n                    legendHeight: legHeight,\n                    legendWidth: currWidth\n                });\n            });\n\n            const mount = makeElement(legendMount, ['div'], sectionComponents, `${classPrefix}-legend-section`);\n            // mount.each((d, i) => selectElement(this).classed(`${classPrefix}-legend-section-${i}`, true));\n            mount.classed(`${classPrefix}-legend-vertical-section`, true)\n                            .style('width', d => `${d[0].legendWidth}px`);\n            makeElement(mount, ['div'], d => d, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) {\n                                d.legend.mount(this);\n                            })\n                            .style('width', d => `${d.legendWidth}px`);\n        } else {\n            const mount = makeElement(legendMount, 'div', [1], `${classPrefix}-legend-section`);\n            mount.classed(`${classPrefix}-legend-horizontal-section`, true);\n            mount.classed(`${classPrefix}-legend-section-${0}`, true)\n                            .style('width', `${legWidth}px`);\n\n            makeElement(mount, 'div', this.components, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) { d.legend.mount(this); })\n                            .style('width', d => `${d.legend.measurement().width}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderLegend(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.measurement.legendSpace);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.components = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        const { alignWith, alignment } = defaultAlignmentHelper(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith || alignWith);\n        this.alignment(params.config.alignment || alignment);\n    }\n\n}\n","import {\n    selectElement,\n    makeElement,\n    getD3Drag,\n    getEvent,\n    getWindow,\n    hasTouch\n} from 'muze-utils';\nimport './scroll-bar.scss';\nimport { WIDTH, HEIGHT } from '../../../constants';\n\nconst d3Drag = getD3Drag();\n\nconst arrowSizeMap = {\n    left: WIDTH,\n    right: WIDTH,\n    top: HEIGHT,\n    bottom: HEIGHT\n};\n\nexport const getUnitPositions = (unitMeasures, totalLength, viewLength) => {\n    let currentLen = 0;\n    const measures = unitMeasures.primary && unitMeasures.primary.length ?\n        unitMeasures.primary : unitMeasures.secondary;\n\n    return measures.map((e) => {\n        const unitPosition = currentLen * 100 / (totalLength - viewLength);\n        currentLen += e;\n        return unitPosition;\n    });\n};\n\nexport const createScrollBarArrow = (mount, type, config) => {\n    const {\n        classPrefix,\n        thickness\n    } = config;\n    const arrow = makeElement(mount, 'div', [type], `${classPrefix}-scroll-arrow-${type}`);\n\n    arrow.classed(`${classPrefix}-scroll-arrow`, true);\n    arrow.style(arrowSizeMap[type], `${thickness}px`);\n\n    const chevron = makeElement(arrow, 'div', [1], `${classPrefix}-scroll-arrow-chevron`);\n\n    chevron.attr('id', `${classPrefix}-scroll-arrow-chevron-${type}`);\n\n    return arrow;\n};\n\nexport const createScrollBarRect = (mount, config) => {\n    const {\n        classPrefix\n    } = config;\n    const rect = makeElement(mount, 'div', [1], `${classPrefix}-scroll-rect`);\n    const mover = makeElement(rect, 'div', [1], `${classPrefix}-scroll-mover`);\n\n    return { rect, mover };\n};\n\nexport const applyRectClick = (scrollMaker, moverRect) => {\n    const {\n        rect\n    } = moverRect;\n\n    rect.on('click', () => {\n        const event = getEvent();\n        scrollMaker.emptyScrollAreaClick(event);\n    });\n};\n\nconst applyMoverDrag = (scrollMaker, moverRect) => {\n    let startPos = {};\n    let moverStartPos = 0;\n    let rectStartPos = 0;\n    let endPos = {};\n    const {\n        mover,\n        rect\n    } = moverRect;\n\n    mover.call(d3Drag()\n                    .on('start', () => {\n                        const event = getEvent();\n\n                        moverStartPos = mover.node().getBoundingClientRect();\n                        rectStartPos = rect.node().getBoundingClientRect();\n                        startPos = {\n                            x: event.x,\n                            y: event.y\n                        };\n                    })\n                    .on('drag', () => {\n                        const event = getEvent();\n                        const window = getWindow();\n\n                        endPos = {\n                            x: event.x,\n                            y: event.y\n                        };\n                        const distanceMoved = {\n                            x: endPos.x - startPos.x,\n                            y: endPos.y - startPos.y\n                        };\n                        const actualPosition = {\n                            x: moverStartPos.x + distanceMoved.x - rectStartPos.x + window.pageXOffset,\n                            y: moverStartPos.y + distanceMoved.y - rectStartPos.y + window.pageYOffset\n                        };\n\n                        scrollMaker.changeMoverPosition(actualPosition);\n                    }));\n};\n\nconst applyScrollMouseDownAction = (moverRect, scrollMaker, speed) => {\n    const {\n        mover,\n        rect\n    } = moverRect;\n    const { x, y } = mover.node().getBoundingClientRect();\n    const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n\n    scrollMaker.changeMoverPosition({ x: x - rectX + speed, y: y - rectY + speed });\n};\n\nconst registerListenerOnArrow = (scrollMaker, moverRect, arrowType, speed) => {\n    let timer = '';\n    const arrow = scrollMaker._components[arrowType];\n    const isTouchDevice = hasTouch();\n\n    arrow.on(isTouchDevice ? 'touchstart' : 'mousedown', () => {\n        const event = getEvent();\n\n        event.preventDefault();\n\n        timer = setInterval(() => {\n            applyScrollMouseDownAction(moverRect, scrollMaker, speed);\n        }, 100);\n    }).on(isTouchDevice ? 'touchend' : 'mouseup', () => {\n        const event = getEvent();\n\n        event.preventDefault();\n\n        clearInterval(timer);\n    }).on('click', () => {\n        applyScrollMouseDownAction(moverRect, scrollMaker, speed);\n    });\n};\n\nexport const registerListeners = (scrollMaker) => {\n    const {\n        moverRect\n    } = scrollMaker._components;\n\n    const speed = scrollMaker.config().speed;\n\n    registerListenerOnArrow(scrollMaker, moverRect, 'prevArrow', -speed);\n    applyMoverDrag(scrollMaker, moverRect);\n    applyRectClick(scrollMaker, moverRect);\n    registerListenerOnArrow(scrollMaker, moverRect, 'nextArrow', speed);\n};\n\nexport const scrollContainerHelper = (mountPoint, config, dimensions, type) => {\n    const {\n        classPrefix\n    } = config;\n    const scrollBarContainer = makeElement(selectElement(mountPoint), 'div', [1], `#${classPrefix}-scroll-bar-${type}`);\n\n    scrollBarContainer.classed(`${classPrefix}-scroll-bar`, true);\n    scrollBarContainer.style(WIDTH, `${dimensions.width}px`);\n    scrollBarContainer.style(HEIGHT, `${dimensions.height}px`);\n    return scrollBarContainer;\n};\n\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n\n    config: {\n        sanitization: (context, value) => {\n            value = mergeRecursive(context._config, value);\n            return value;\n        }\n    },\n    manager: {},\n    unitPositions: {},\n    logicalSpace: {}\n};\n\n","import { ERROR_MSG, generateGetterSetters } from 'muze-utils';\nimport {\n    scrollContainerHelper,\n    registerListeners\n} from './helper';\nimport { PROPS } from './props';\n\nexport class ScrollMaker {\n\n    constructor () {\n        this._components = {};\n        this._logicalSpace = {};\n        this._attachedScrollAction = () => {};\n        this._config = {\n            thickness: 10,\n            speed: 2\n        };\n        this._unitPositions = null;\n\n        generateGetterSetters(this, PROPS);\n    }\n\n    static type () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    emptyScrollAreaClick () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    changeMoverPosition () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    scrollTo () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    scrollDeltaTo () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    createScroll (mountPoint) {\n        const config = this.config();\n\n        return {\n            scrollBarContainer: scrollContainerHelper(mountPoint, config, this.logicalSpace(), this.constructor.type())\n        };\n    }\n\n    attachScrollAction (externalScrollAction) {\n        this._attachedScrollAction = externalScrollAction;\n        return this;\n    }\n\n    detachScrollAction () {\n        this._attachedScrollAction = () => {};\n        return this;\n    }\n\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    registerListeners () {\n        registerListeners(this);\n        return this;\n    }\n\n    remove () {\n        this._components.scrollBarContainer.remove();\n        return this;\n    }\n}\n\n","import MuzeComponent from './muze-chart-component';\nimport { HorizontalScrollMaker } from './scroll-bar-maker/horizontal-scroll-maker';\nimport { VerticalScrollMaker } from './scroll-bar-maker/vertical-scroll-maker';\n\nconst scrollMakerMap = {\n    horizontal: HorizontalScrollMaker,\n    vertical: VerticalScrollMaker\n};\n\n/**\n * Scroll Component acts as a wrapper over the scoll bars created using the respective Scroll Makers\n * This provides a consistent API for layouting using the tree layout system.\n *\n *\n * @class\n * @public\n * @module ScrollComponent\n */\nexport default class ScrollComponent extends MuzeComponent {\n\n    constructor (params) {\n        const ScrollMaker = scrollMakerMap[params.config.type];\n\n        params.component = new ScrollMaker();\n        params.component.config(params.config.scrollBarComponentConfig);\n        params.component.logicalSpace(params.dimensions);\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    manager (...manager) {\n        if (manager.length) {\n            this.component.manager(manager[0]);\n            return this;\n        }\n        return this.component.manager();\n    }\n\n    /**\n     * Scrolls based on the actual pixel value provided. Since it's a delta change, the input will be\n     * a delta between (-Infinity, Infinity), based on which the scroll will occur. Only a delta movement in\n     * scroll occurs\n     *\n     * @public\n     *\n     * @param {number} delta Based on which the scroll will have a delta change in position\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollDeltaTo (delta) {\n        this.component.scrollDeltaTo(delta);\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollTo (scrollPercentage) {\n        this.component.scrollTo(scrollPercentage);\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page based on the unit index.\n     * The input is provided as a number represting the index for the unit.\n     * For vertical scroll, it's the row index that will be required.\n     * For horizontal scroll, it's the column index that will be required\n     *\n     * @public\n     *\n     * @param {number} unitIndex Index of the unit appearing in the grid\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollToUnitIndex (unitIndex) {\n        const unitPositions = this.component.unitPositions();\n        const sanitizedUnitIndex = Math.min(Math.max(0, unitIndex), unitPositions.length - 1);\n        this.component.scrollTo(unitPositions[sanitizedUnitIndex]);\n        return this;\n    }\n\n    /**\n     * Provides the positions of the units(either horizontal or vertical based on the type\n     * of scroll bar it wraps) relative to it's container. The position of the first unit starts at 0\n     *\n     *\n     * @public\n     *\n     * @return {Array} Positions of units either horizontal or vertical\n     */\n    getScrollPositionsForUnits () {\n        return this.component.unitPositions();\n    }\n\n    draw (container) {\n        this.component.createScroll(container || document.getElementById(this.renderAt()));\n        return this;\n    }\n\n    /**\n     * Can be used to attach a scroll action whenever scrolling occurs in the canvas\n     *\n     * @public\n     * @param {number} externalAction Action to be attached during scroll\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    attachScrollAction (externalAction) {\n        this.component.attachScrollAction(externalAction);\n        return this;\n    }\n\n    /**\n     * Can be used to detach the scroll action already bound to the scroll bar\n     *\n     * @public\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    detachScrollAction () {\n        this.component.detachScrollAction();\n        return this;\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.component.config(params.config.scrollBarComponentConfig);\n        this.component.logicalSpace(params.dimensions);\n        this.boundBox(this.component.getLogicalSpace());\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component || this.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n    remove () {\n        this.component.remove();\n    }\n}\n","import { ScrollMaker } from './scroll-maker';\nimport { createScrollBarRect, createScrollBarArrow, getUnitPositions } from './helper';\nimport { HORIZONTAL, HEIGHT, WIDTH, LEFT } from '../../../constants';\n\nexport class HorizontalScrollMaker extends ScrollMaker {\n\n    /**\n     * Describes the type of the ScrollMaker\n     *\n     * @public\n     *\n     * @return {String} Returns the type of scroll maker: horizontal\n     */\n    static type () {\n        return HORIZONTAL;\n    }\n\n    createScroll (mountPoint, dimensions = this.logicalSpace()) {\n        const config = this.config();\n        const { scrollBarContainer } = super.createScroll(mountPoint, config, dimensions);\n        const prevArrow = createScrollBarArrow(scrollBarContainer, 'left', config);\n        const moverRect = createScrollBarRect(scrollBarContainer, config);\n        const nextArrow = createScrollBarArrow(scrollBarContainer, 'right', config);\n        const {\n            mover,\n            rect\n        } = moverRect;\n\n        const { height, width, totalLength, viewLength, unitWidths } = this.logicalSpace();\n        const scrollBarWithouArrowLength = width - height * 2;\n\n        rect.style(WIDTH, `${dimensions.width - height * 2}px`);\n        rect.style(HEIGHT, `${100}%`);\n        mover.style(WIDTH, `${(viewLength * scrollBarWithouArrowLength) / totalLength}px`);\n        mover.style(HEIGHT, `${100}%`);\n        mover.style(LEFT, `${0}px`);\n\n        this._components = {\n            prevArrow,\n            nextArrow,\n            moverRect,\n            scrollBarContainer\n        };\n        this._scrollBarWithouArrowLength = scrollBarWithouArrowLength;\n        this.unitPositions(getUnitPositions(unitWidths, totalLength, viewLength));\n        this.registerListeners();\n    }\n\n    emptyScrollAreaClick (event) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const speed = this.config().speed;\n        const { x, y } = mover.node().getBoundingClientRect();\n        const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n        let positionAdjuster = speed * 10;\n        if (event.x < x) {\n            positionAdjuster = -speed * 10;\n        }\n        this.changeMoverPosition({ x: x - rectX + positionAdjuster, y: y - rectY + positionAdjuster });\n    }\n\n    changeMoverPosition (newPosition) {\n        let currentPos;\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const rectStartPos = rect.node().getBoundingClientRect();\n        const moverPos = mover.node().getBoundingClientRect();\n        const {\n            totalLength\n         } = this.logicalSpace();\n\n        if (newPosition.x < 0) {\n            currentPos = 0;\n        } else if (newPosition.x + moverPos.width > rectStartPos.width) {\n            currentPos = rectStartPos.width - moverPos.width;\n        } else {\n            currentPos = newPosition.x;\n        }\n\n        mover.style(LEFT, `${currentPos}px`);\n        const totalDistance = this._scrollBarWithouArrowLength;\n        const movedViewLength = (currentPos * totalLength) / totalDistance;\n\n        this.manager().performAttachedScrollFunction(this.constructor.type(), movedViewLength);\n    }\n\n    scrollDeltaTo (delta) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const rectStartPos = rect.node().getBoundingClientRect();\n\n        this.changeMoverPosition({ y: 0, x: moverPos.x - rectStartPos.x - delta });\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {HorizontalScrollMaker} Instance of the HorizontalScrollMaker\n     */\n    scrollTo (scrollPercentage) {\n        const {\n            mover\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const movement = (scrollPercentage * (this._scrollBarWithouArrowLength - moverPos.width)) / 100;\n\n        this.changeMoverPosition({ y: 0, x: movement });\n        return this;\n    }\n\n}\n\n","import { ScrollMaker } from './scroll-maker';\nimport { createScrollBarRect, createScrollBarArrow, getUnitPositions } from './helper';\nimport { VERTICAL, TOP, HEIGHT, WIDTH } from '../../../constants';\n\nexport class VerticalScrollMaker extends ScrollMaker {\n\n    /**\n     * Describes the type of the ScrollMaker\n     *\n     * @public\n     *\n     * @return {String} Returns the type of scroll maker: vertical\n     */\n    static type () {\n        return VERTICAL;\n    }\n\n    createScroll (mountPoint, dimensions = this.logicalSpace()) {\n        const config = this.config();\n        const { scrollBarContainer } = super.createScroll(mountPoint, dimensions);\n        const prevArrow = createScrollBarArrow(scrollBarContainer, 'top', config);\n        const moverRect = createScrollBarRect(scrollBarContainer, config);\n        const nextArrow = createScrollBarArrow(scrollBarContainer, 'bottom', config);\n        const {\n            mover,\n            rect\n        } = moverRect;\n        const { height, width, totalLength, viewLength, unitHeights } = this.logicalSpace();\n        const scrollBarWithouArrowLength = height - width * 2;\n\n        rect.style(HEIGHT, `${scrollBarWithouArrowLength}px`);\n        rect.style(WIDTH, `${100}%`);\n        mover.style(WIDTH, `${100}%`);\n        mover.style(HEIGHT, `${(viewLength * scrollBarWithouArrowLength) / totalLength}px`);\n        mover.style(TOP, `${0}px`);\n\n        this._components = {\n            prevArrow,\n            nextArrow,\n            moverRect,\n            scrollBarContainer\n        };\n        this._scrollBarWithouArrowLength = scrollBarWithouArrowLength;\n\n        this.unitPositions(getUnitPositions(unitHeights, totalLength, viewLength));\n        this.registerListeners();\n    }\n\n    emptyScrollAreaClick (event) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const speed = this.config().speed;\n        const { x, y } = mover.node().getBoundingClientRect();\n        const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n\n        let positionAdjuster = speed * 10;\n        if (event.y < y) {\n            positionAdjuster = -speed * 10;\n        }\n        this.changeMoverPosition({ x: x - rectX + positionAdjuster, y: y - rectY + positionAdjuster });\n    }\n\n    changeMoverPosition (newPosition) {\n        let currentPos;\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const {\n            totalLength\n         } = this.logicalSpace();\n        const rectStartPos = rect.node().getBoundingClientRect();\n        const moverPos = mover.node().getBoundingClientRect();\n\n        if (newPosition.y < 0) {\n            currentPos = 0;\n        } else if (newPosition.y + moverPos.height > rectStartPos.height) {\n            currentPos = rectStartPos.height - moverPos.height;\n        } else {\n            currentPos = newPosition.y;\n        }\n        mover.style(TOP, `${currentPos}px`);\n        const totalDistance = this._scrollBarWithouArrowLength;\n        const movedViewLength = (currentPos * totalLength) / totalDistance;\n\n        this.manager().performAttachedScrollFunction(this.constructor.type(), movedViewLength);\n    }\n\n    /**\n     * Scrolls based on the actual pixel value provided. Since it's a delta change, the input will be\n     * a delta between (-Infinity, Infinity), based on which the scroll will occur. Only a delta movement in\n     * scroll occurs\n     *\n     * @public\n     *\n     * @param {number} delta Based on which the scroll will have a delta change in position\n     * @return {VerticalScrollMaker} Instance of the VerticalScrollMaker\n     */\n    scrollDeltaTo (delta) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const rectStartPos = rect.node().getBoundingClientRect();\n\n        this.changeMoverPosition({ y: moverPos.y - rectStartPos.y - delta, x: 0 });\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {VerticalScrollMaker} Instance of the VerticalScrollMaker\n     */\n    scrollTo (scrollPercentage) {\n        const {\n            mover\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const movement = (scrollPercentage * (this._scrollBarWithouArrowLength - moverPos.height)) / 100;\n\n        this.changeMoverPosition({ x: 0, y: movement });\n        return this;\n    }\n\n}\n","import { makeElement } from 'muze-utils';\nimport { cellSpanMaker, applySpans } from '../../../../layout/src/grid-layout/span-maker';\nimport { applyBorders } from '../../../../layout/src/grid-layout/border-helper';\n\nimport {\n     TOP, CENTER\n} from '../../../../layout/src/enums/constants';\nimport MuzeComponent from './muze-chart-component';\nimport { WIDTH, HEIGHT, HIDDEN, OVERFLOW, AUTO, VISIBLE } from '../../constants';\n\nconst renderPlaceholders = (cells) => {\n    // Rendering content within placeholders\n    cells.each(function (cell) {\n        cell.placeholder.render(this);\n    });\n};\n\nexport default class MatrixComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.setParams(params);\n        this.className(params.config.className);\n    }\n\n    applyScroll (container) {\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        const { horizontal, vertical } = this.params.config.scrollInfo;\n        container.style(OVERFLOW, VISIBLE);\n        container.style(WIDTH, AUTO);\n        container.style(HEIGHT, AUTO);\n\n        if (horizontal && column === 1) {\n            container.style(OVERFLOW, HIDDEN);\n            container.style(WIDTH, '100%');\n        }\n\n        if (vertical && row === CENTER) {\n            container.style(OVERFLOW, HIDDEN);\n            container.style(HEIGHT, '100%');\n        }\n    }\n\n    renderMatrix (mountPoint) {\n        // Creating containers for each matrix individually\n        const classPrefix = this.params.config.classPrefix;\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        const dimensions = this.params.config.dimensions;\n        const border = this.params.config.border;\n\n        // Creating containers for each matrix individually\n        const containerForMatrix = makeElement(mountPoint, 'div', [1], `${classPrefix}-grid-${row}-${column + 1}`)\n            .classed(`${classPrefix}-grid-${row}`, true)\n            .classed(`${classPrefix}-grid`, true);\n\n        this.applyScroll(containerForMatrix);\n\n        const {\n            viewMatrix,\n            spans\n        } = cellSpanMaker(this.component, row, column);\n\n        // Rendering the table components\n        const { cells } = this.renderTable(containerForMatrix, `${classPrefix}-grid`, viewMatrix);\n\n        applySpans(cells, spans, { dimensions, border }, `${row}-${column}`);\n        renderPlaceholders(cells);\n\n        cells.exit().each((cell) => {\n            cell.placeholder.remove();\n        });\n\n        applyBorders(cells, border, row, column);\n    }\n\n    renderTable (mount, className, rowData) {\n        const table = makeElement(mount, 'table', ['layout'], `${className}-table`);\n        const body = makeElement(table, 'tbody', ['layout'], `${className}-body`);\n        const rows = makeElement(body, 'tr', rowData, `${className}-tr`);\n        const cells = makeElement(rows, 'td', (d, i) => d.filter(e => e !== null).map(e =>\n                                  ({ placeholder: e, rowIndex: i })), `${className}-td`, {}, key => key.placeholder.id);\n\n        return { table, body, rows, cells };\n    }\n\n    draw (container) {\n        this.renderMatrix(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(TOP);\n        this.className(params.config.className);\n    }\n}\n","import { selectElement, getEvent } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport MatrixComponent from './matrix-component';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\nimport { WHEEL_DELTA_MODIFIER } from '../../enums/constants';\n\n/**\n * Based on the type of scroll, it changes the scrollLeft/scrollTop property of the specific\n * elements based on the scroll distance provided\n *\n *\n */\nconst applyScrollAction = (elem, classPrefix, scollDistance, type) => {\n    selectElement(elem)\n                    .selectAll(`.${classPrefix}-grid`)\n                    .property(type, scollDistance);\n};\n\n/**\n * Applies the action of the scroll by actually scrolling the respective matrices based on the\n * type of scroll. It returns a function which has both the scroll methods available\n *\n * @return {Object} contains the horizontal and vertical scroll actions on the grid component\n */\nconst scrollActionApplier = (movement, context) => {\n    const classPrefix = context.params.config.classPrefix;\n\n    return {\n        horizontal: () => {\n            [0, 1, 2].forEach(e =>\n                applyScrollAction(`#${context.component[e][1].renderAt()}`, classPrefix, movement, 'scrollLeft'));\n        },\n        vertical: () => {\n            [0, 1, 2].forEach(e =>\n                applyScrollAction(`#${context.component[1][e].renderAt()}`, classPrefix, movement, 'scrollTop'));\n        }\n    };\n};\n\nexport default class GridComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.gridComponents = [];\n        this.setParams(params);\n    }\n\n    sanitizeGrid () {\n        let height = 0;\n        let width = 0;\n        const { viewMatricesInfo, layoutDimensions } = this.component.viewInfo();\n        const scrollInfo = this.component.scrollInfo();\n        const {\n            viewHeight,\n            viewWidth,\n            unitHeights,\n            unitWidths\n        } = layoutDimensions;\n\n        for (let i = 0; i < 3; i++) {\n            if (!(this.gridComponents.length && this.gridComponents[i] instanceof Array)) {\n                this.gridComponents[i] = [];\n            }\n            for (let j = 0; j < 3; j++) {\n                const matrixDim = {\n                    height: viewHeight[i],\n                    width: viewWidth[j],\n                    unitHeights,\n                    unitWidths\n                };\n                const matrix = viewMatricesInfo.matrices[`${ROW_MATRIX_INDEX[i]}`][j];\n                const matrixName = `${ROW_MATRIX_INDEX[i]}-${COLUMN_MATRIX_INDEX[j]}`;\n                const matrixConfig = {\n                    dimensions: matrixDim,\n                    border: layoutDimensions.border,\n                    classPrefix: this.params.config.classPrefix,\n                    scrollInfo,\n                    row: ROW_MATRIX_INDEX[i],\n                    column: j\n                };\n                if (this.gridComponents[i][j] instanceof MuzeComponent) {\n                    this.gridComponents[i][j].updateWrapper({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                } else {\n                    const matrixWrapper = new MatrixComponent({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                    this.gridComponents[i].push(matrixWrapper);\n                }\n                if (i === 0) {\n                    width += matrixDim.width;\n                }\n                if (j === 0) {\n                    height += matrixDim.height;\n                }\n            }\n        }\n        this.boundBox({ height, width });\n\n        this.component = this.gridComponents;\n        this.allComponents = this.gridComponents;\n    }\n\n    scrollBarManager (...manager) {\n        if (manager.length) {\n            this._scrollBarManager = manager[0];\n            return this;\n        }\n        return this._scrollBarManager;\n    }\n\n    /**\n     * Attaches a mousewheel listener to the center matrix, based on which the scrolling can occur.\n     * It uses the scroll component to change the position of the scroller, which ultimately scrolls the center matrix\n     *\n     *\n     * @return {GridComponent} Instance of the GridComponent\n     */\n    attachScrollListener () {\n        const scrollBarManager = this.scrollBarManager();\n        selectElement(`#${this.component[1][1].renderAt()}`)\n            .on('wheel', () => {\n                const event = getEvent();\n                const {\n                    wheelDeltaX,\n                    wheelDeltaY\n                } = event;\n\n                // Scrolling horizontally\n                if (wheelDeltaX !== 0 && Math.abs(wheelDeltaX) > Math.abs(wheelDeltaY)) {\n                    scrollBarManager.preventBrowserScroll('horizontal', event)\n                        .triggerScrollBarAction('horizontal', wheelDeltaX / WHEEL_DELTA_MODIFIER);\n                }\n\n                // Scrolling Vertically\n                if (wheelDeltaY !== 0 && Math.abs(wheelDeltaX) < Math.abs(wheelDeltaY)) {\n                    scrollBarManager.preventBrowserScroll('vertical', event)\n                        .triggerScrollBarAction('vertical', wheelDeltaY / WHEEL_DELTA_MODIFIER);\n                }\n            });\n        return this;\n    }\n\n    performScrollAction (direction, movedView) {\n        scrollActionApplier(movedView, this)[direction]();\n        return this;\n    }\n\n    getBoundBox () {\n        const { top, left } = this.component[0][0].boundBox();\n        const { height, width } = this.boundBox();\n\n        return {\n            top,\n            left,\n            height,\n            width\n        };\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.className(params.config.className);\n        this.sanitizeGrid();\n        return this;\n    }\n\n    attachListener () {\n        this.attachScrollListener();\n        return this;\n    }\n}\n","export const SIDE_EFFECT_COMMON = 'common';\nexport const SIDE_EFFECT_INDIVIDUAL = 'individual';\nexport const TOOLTIP_CONSOLIDATED = 'consolidated';\nexport const TOOLTIP_FRAGMENTED = 'fragmented';\nexport const WHEEL_DELTA_MODIFIER = 30;\n","import { selectElement, makeElement, applyStyle } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\n\nexport default class MessageComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.setParams(params);\n    }\n\n    render (container) {\n        const parent = selectElement(container);\n\n        const { config } = this.params;\n        const { className } = config.classPrefix;\n\n        const node = makeElement(parent, 'div', [1], className);\n        const { height, width } = config.dimensions;\n        const { message } = config;\n\n        applyStyle(node, { width: `${width}px`, height: `${height}px` });\n\n        const child = makeElement(node, 'div', [1], `${className}-child`);\n        const textElement = makeElement(child, 'text', [1]);\n\n        textElement.html(message);\n    }\n\n    draw (container) {\n        this.render(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        const { target, className } = params.config;\n        this.target(target);\n        this.className(className);\n        return this;\n    }\n}\n","import {\n    TITLE,\n    SUB_TITLE,\n    LEGEND, VERTICAL,\n    HORIZONTAL,\n    WIDTH,\n    HEIGHT,\n    TOP,\n    LEFT,\n    RIGHT,\n    MESSAGE,\n    GRID,\n    NO_DATA_MESSAGE\n} from '../constants';\nimport HeaderComponent from './components/headerComponent';\nimport LegendComponent from './components/legendComponent';\nimport ScrollComponent from './components/scroll-component';\nimport GridComponent from './components/grid-component';\nimport MessageComponent from './components/message-component';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG, CANVAS, LAYOUT_ALIGN, MESSAGE_CONFIG } from './defaults';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX, CENTER } from '../../../layout/src/enums/constants';\n\n// Mapping between types of headers and their required configs for wrapper creation\nconst headerMap = {\n    title: {\n        headerCell: 'titleCell',\n        configType: TITLE_CONFIG\n    },\n    subtitle: {\n        headerCell: 'subtitleCell',\n        configType: SUB_TITLE_CONFIG\n    }\n};\n/**\n * returns if data is Valid\n *\n *\n * @param {Object} params object where data has to be checked for validity\n * @return {Boolean} Returns true if all of the params are valid\n */\nconst checkParamsValidation = params => Object.keys(params).every((param => params[param]));\n\n/**\n * returns if message Component is needed or not\n *\n *\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Boolean} Returns if grid is present\n */\nconst isGridPresent = (renderDetails) => {\n    const { rows, columns, values } = renderDetails.components;\n    return checkParamsValidation({ rows, columns, values });\n};\n\n/**\n * Creates the wrapper for the header, i.e., title and subtitle to be used in the tree layout\n *\n *\n * @param {string} headerType type of header: title/subtite\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers\n */\nconst createHeaderWrapper = (headerType, layoutManager, renderDetails) => {\n    let wrapper = null;\n\n    const { components, layoutConfig } = renderDetails;\n    const { headerCell, configType } = headerMap[headerType];\n    const target = { target: CANVAS };\n\n    if (components.headers && components.headers[headerCell]) {\n        let headerConfig = layoutConfig[headerType];\n        const header = components.headers[headerCell];\n\n        headerConfig = Object.assign({}, headerConfig, {\n            classPrefix: layoutConfig.classPrefix,\n            ...target,\n            alignWith: `${ROW_MATRIX_INDEX[0]}-${COLUMN_MATRIX_INDEX[1]}`,\n            alignment: LAYOUT_ALIGN.LEFT,\n            className: configType.className\n        });\n\n        if (headerConfig.align === CENTER) {\n            headerConfig.alignment = null;\n            headerConfig.alignWith = null;\n        }\n        if (headerConfig.align === RIGHT) {\n            headerConfig.alignment = RIGHT;\n        }\n\n        const wrapperParams = {\n            name: headerType,\n            component: header,\n            config: headerConfig\n        };\n\n        const existingComponent = layoutManager.getComponent(headerType);\n        if (existingComponent) {\n            wrapper = existingComponent\n                        .updateWrapper(wrapperParams);\n        } else {\n            wrapper = new HeaderComponent(wrapperParams);\n        }\n    }\n    return wrapper;\n};\n\n/**\n * Creates the wrapper for the grid layout to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {GridLayout} canvas canvas instance\n * @return {Instance} Returns the respective wrappers\n */\nconst createMessageWrapper = (layoutManager, canvas, renderDetails, renderGrid) => {\n    let messageWrapper = null;\n\n    if (!renderGrid) {\n        const defaultDimensions = { height: canvas.height(), width: canvas.width() };\n        const gridComponent = layoutManager.getComponent(GRID);\n        const { height, width } = (gridComponent && gridComponent.getBoundBox()) || defaultDimensions;\n        const target = { target: CANVAS };\n        const config = {\n            ...target,\n            dimensions: { height, width },\n            message: NO_DATA_MESSAGE,\n            classPrefix: MESSAGE_CONFIG\n        };\n        const wrapperParams = {\n            name: MESSAGE,\n            component: null,\n            config\n        };\n        const existingComponent = layoutManager.getComponent(MESSAGE);\n\n        if (existingComponent) {\n            messageWrapper = existingComponent\n                                    .updateWrapper(wrapperParams);\n        } else {\n            messageWrapper = new MessageComponent(wrapperParams);\n        }\n        return messageWrapper;\n    }\n    return null;\n};\n\n// Mapping between types of scrollBars and their required configs for wrapper creation\nconst scrollBarMap = config => ({\n    vertical: {\n        componentName: 'verticalScrollBar',\n        width: 'thickness',\n        height: 'layoutBasedMeasure',\n        layoutBasedMeasure: HEIGHT,\n        viewMeasure: 'viewHeight',\n        rowAlign: 1,\n        colAlign: config.align === 'right' ? 2 : 0,\n        position: config.align,\n        alignment: TOP\n    },\n    horizontal: {\n        componentName: 'horizontalScrollBar',\n        width: 'layoutBasedMeasure',\n        layoutBasedMeasure: WIDTH,\n        viewMeasure: 'viewWidth',\n        height: 'thickness',\n        rowAlign: config.align === 'top' ? 0 : 2,\n        colAlign: 1,\n        position: config.align,\n        alignment: LEFT\n    }\n});\n\n/**\n * Creates the wrapper for the scroller, i.e., horizontal and vertical to be used in the tree layout\n *\n *\n * @param {string} scrollBarType type of scrollbar: horizontal/vertical\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @param {GridLayout} grid Instance of the grid layout\n * @return {Instance} Returns the respective wrappers\n */\nconst createScrollBarWrapper = (scrollBarType, layoutManager, renderDetails, grid, renderGrid) => {\n    if (renderGrid) {\n        let scrollBarWrapper = null;\n        const { layoutConfig } = renderDetails;\n        const target = { target: CANVAS };\n        const { scrollBar } = layoutConfig;\n        const { layoutDimensions } = grid.viewInfo();\n        const {\n            actualCenterMeasures,\n            unitHeights,\n            unitWidths\n        } = layoutDimensions;\n        const {\n            componentName, layoutBasedMeasure, width, height, rowAlign, colAlign,\n            viewMeasure, position, alignment\n        } = scrollBarMap(scrollBar[scrollBarType])[scrollBarType];\n        const dimensions = {\n            thickness: scrollBar.thickness,\n            layoutBasedMeasure: layoutDimensions[viewMeasure][1]\n        };\n        const isScroll = grid.scrollInfo()[scrollBarType];\n        const totalLength = actualCenterMeasures[layoutBasedMeasure];\n        const viewLength = layoutDimensions[viewMeasure][1];\n\n        const scrollConfig = Object.assign({}, {\n            classPrefix: layoutConfig.classPrefix,\n            ...target,\n            scrollBarComponentConfig: {\n                ...scrollBar,\n                classPrefix: layoutConfig.classPrefix\n            },\n\n            type: scrollBarType,\n            alignWith: `${ROW_MATRIX_INDEX[rowAlign]}-${COLUMN_MATRIX_INDEX[colAlign]}`,\n            alignment,\n            position\n        });\n\n        const wrapperParams = {\n            name: componentName,\n            config: scrollConfig,\n            dimensions: {\n                width: dimensions[width],\n                height: dimensions[height],\n                totalLength,\n                viewLength,\n                unitHeights,\n                unitWidths\n            }\n        };\n\n        const existingComponent = layoutManager.getComponent(componentName);\n\n        if (!isScroll) {\n            existingComponent && existingComponent.remove();\n            return null;\n        }\n\n        if (existingComponent) {\n            scrollBarWrapper = existingComponent\n                                    .updateWrapper(wrapperParams);\n        } else {\n            scrollBarWrapper = new ScrollComponent(wrapperParams);\n        }\n\n        return scrollBarWrapper;\n    }\n    return null;\n};\n\n/**\n * Creates the wrapper for the legend to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers\n */\nconst createLegendWrapper = (layoutManager, renderDetails, renderGrid) => {\n    if (renderGrid) {\n        let legendWrapper = null;\n        const { components, layoutConfig, measurement } = renderDetails;\n        const target = { target: CANVAS };\n\n        if (components.legends && components.legends.length) {\n            const legendConfig = { ...layoutConfig.legend, ...target, measurement };\n            const wrapperParams = {\n                name: LEGEND,\n                component: components.legends,\n                config: legendConfig\n            };\n\n            const existingComponent = layoutManager.getComponent(LEGEND);\n\n            if (existingComponent) {\n                legendWrapper = existingComponent\n                        .updateWrapper(wrapperParams);\n            } else {\n                legendWrapper = new LegendComponent(wrapperParams);\n            }\n        }\n        return legendWrapper;\n    }\n    return null;\n};\n\n/**\n * Creates the wrapper for the grid layout to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @param {GridLayout} grid Instance of the grid layout\n * @return {Instance} Returns the respective wrappers\n */\nconst gridLayoutWrapper = (layoutManager, renderDetails, grid, renderGrid) => {\n    if (renderGrid) {\n        let gridWrapper = null;\n        const target = { target: CANVAS };\n        const { layoutConfig } = renderDetails;\n\n        const config = {\n            ...target,\n            pagination: layoutConfig.pagination,\n            classPrefix: layoutConfig.classPrefix,\n            dimensions: { height: 0, width: 0 }\n        };\n        const wrapperParams = {\n            name: GRID,\n            component: grid,\n            config\n        };\n        const existingComponent = layoutManager.getComponent(GRID);\n        if (existingComponent) {\n            gridWrapper = existingComponent\n                        .updateWrapper(wrapperParams);\n        } else {\n            gridWrapper = new GridComponent(wrapperParams);\n        }\n        return gridWrapper;\n    }\n    return null;\n};\n/**\n * Responsible for providing the wrapper creators for every component in Muze.\n * This function, when called, returns the set of components and their respective wrappers.\n *\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {GridLayout} grid Instance of the grid layout\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers for each component\n */\nexport const componentWrapperMaker = (canvas, grid, renderDetails) => {\n    const layoutManager = canvas._layoutManager;\n    const renderGrid = isGridPresent(renderDetails);\n    return {\n        title: createHeaderWrapper(TITLE, layoutManager, renderDetails),\n        subtitle: createHeaderWrapper(SUB_TITLE, layoutManager, renderDetails),\n        message: createMessageWrapper(layoutManager, canvas, renderDetails, renderGrid),\n        legend: createLegendWrapper(layoutManager, renderDetails, renderGrid),\n        grid: gridLayoutWrapper(layoutManager, renderDetails, grid, renderGrid),\n        verticalScrollBar: createScrollBarWrapper(VERTICAL, layoutManager, renderDetails, grid, renderGrid),\n        horizontalScrollBar: createScrollBarWrapper(HORIZONTAL, layoutManager, renderDetails, grid, renderGrid)\n    };\n};\n","export class ScrollManager {\n\n    constructor () {\n        this._scrollBarComponents = {};\n        this._attachedComponents = {};\n    }\n\n    scrollBarComponents (...sbc) {\n        if (sbc.length) {\n            this._scrollBarComponents = sbc[0];\n            return this;\n        }\n        return this._scrollBarComponents;\n    }\n\n    attachedComponents (...abc) {\n        if (abc.length) {\n            this._attachedComponents = abc[0];\n            return this;\n        }\n        return this._attachedComponents;\n    }\n\n    preventBrowserScroll (type, event) {\n        if (this.scrollBarComponents()[type]) {\n        // Prevent default behaviour and stop propagating\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        return this;\n    }\n\n    performAttachedScrollFunction (type, movedViewLength) {\n        Object.values(this.attachedComponents()).forEach((e) => {\n            e.performScrollAction(type, movedViewLength);\n        });\n        return this;\n    }\n\n    triggerScrollBarAction (type, delta) {\n        this.scrollBarComponents()[type] && this.scrollBarComponents()[type].scrollDeltaTo(delta);\n        return this;\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\nimport { arrangeComponents } from './component-resolver';\nimport { createHeaders } from './title-maker';\nimport { createLegend, getLegendSpace } from './legend-maker';\nimport { componentWrapperMaker } from './component-wrapper-maker';\nimport {\n    TOP,\n    BOTTOM,\n    LEFT,\n    RIGHT,\n    TITLE,\n    SUB_TITLE,\n    LEGEND,\n    VERTICAL_SCROLL_BAR,\n    HORIZONTAL_SCROLL_BAR,\n    GRID,\n    MESSAGE\n} from '../constants';\nimport { ScrollManager } from './scroll-manager';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const prepareLayout = (layout, renderDetails) => {\n    const { components, layoutConfig, measurement } = renderDetails;\n    const {\n        rows,\n        columns,\n        values,\n        cornerMatrices\n    } = components;\n    const {\n        topLeft,\n        topRight,\n        bottomLeft,\n        bottomRight\n    } = cornerMatrices;\n    if (rows && columns) {\n        layout.measurement(measurement)\n                        .config(layoutConfig)\n                        .matrices({\n                            top: [topLeft, columns[0], topRight],\n                            center: [rows[0], values, rows[1]],\n                            bottom: [bottomLeft, columns[1], bottomRight]\n                        })\n                        .triggerReflow();\n    }\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} mount\n *\n */\nexport const getRenderDetails = (context, mount) => {\n    let layoutConfig = mergeRecursive({}, context.config());\n    // Get height width of the mount point\n    let { height, width } = mount.getBoundingClientRect();\n    const heightAttr = context.height();\n    const widthAttr = context.width();\n    const visGroup = context.composition().visualGroup;\n    const {\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority,\n        rows,\n        columns,\n        values\n    } = visGroup.placeholderInfo();\n    const {\n        minWidth,\n        minHeight,\n        classPrefix,\n        showHeaders,\n        legend,\n        pagination,\n        scrollBar\n    } = context.config();\n\n    // Get title configuration\n    const titleConfig = context.title()[1];\n     // Get subtitle configuration\n    const subtitleConfig = context.subtitle()[1];\n    // Get legend position\n    const legendPosition = legend.position;\n    // Arrange components according to config\n    const layoutArrangement = arrangeComponents(context);\n\n    height = Math.floor(height);\n    width = Math.floor(width);\n\n    const availableHeightForCanvas = Math.max(heightAttr > 0 ? heightAttr : height, minHeight);\n    const availableWidthForCanvas = Math.max(widthAttr > 0 ? widthAttr : width, minWidth);\n\n    // Create headers and determine header height\n    const { headers, headerHeight } = createHeaders(context, availableHeightForCanvas, availableWidthForCanvas);\n\n    // Create legends and determine legend space\n    const legends = createLegend(context, headerHeight, availableHeightForCanvas, availableWidthForCanvas);\n    context._composition.legend = {};\n    legends.forEach((e) => {\n        context._composition.legend[e.scaleType] = e.legend;\n    });\n\n    const legendSpace = getLegendSpace(legends, legend, availableHeightForCanvas, availableWidthForCanvas);\n    const legendWidth = (legendPosition === LEFT || legendPosition === RIGHT) ? legendSpace.width : 0;\n    const legendHeight = (legendPosition === TOP || legendPosition === BOTTOM) ? legendSpace.height : 0;\n\n    // Set components for layouting\n    const components = {\n        headers,\n        legends,\n        canvases: [context],\n        rows,\n        columns,\n        values,\n        cornerMatrices: visGroup.cornerMatrices()\n    };\n\n    const measurement = {\n        mountSpace: {\n            height,\n            width\n        },\n        headerHeight,\n        legendSpace,\n        canvasWidth: availableWidthForCanvas,\n        canvasHeight: availableHeightForCanvas,\n        width: availableWidthForCanvas - legendWidth,\n        height: availableHeightForCanvas - headerHeight - legendHeight,\n        minUnitHeight: context.minUnitHeight(),\n        minUnitWidth: context.minUnitWidth()\n    };\n    layoutConfig = mergeRecursive(layoutConfig, {\n        classPrefix,\n        showHeaders,\n        border: mergeRecursive(visGroup.metaData().border, context.config().border),\n        layoutArrangement,\n        legend,\n        buffer: scrollBar.thickness,\n        pagination,\n        title: titleConfig,\n        subtitle: subtitleConfig,\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        mount,\n        priority\n    });\n    return {\n        layoutConfig,\n        components,\n        measurement\n    };\n};\n\nconst componentIndexes = {\n    title: 0,\n    subtitle: 1,\n    legend: 2,\n    verticalScrollBar: 3,\n    horizontalScrollBar: 4,\n    grid: 5,\n    message: 6\n};\n\nconst componentNames = {\n    0: TITLE,\n    1: SUB_TITLE,\n    2: LEGEND,\n    3: VERTICAL_SCROLL_BAR,\n    4: HORIZONTAL_SCROLL_BAR,\n    5: GRID,\n    6: MESSAGE\n};\n\nconst attachListeners = (componentWrappers) => {\n    componentWrappers.forEach((componentWrapper) => {\n        if (componentWrapper) {\n            componentWrapper.attachListener();\n        }\n    });\n};\n\n/**\n * Responsible for creating a scroll manager that manages interactions between the grid\n * component and the scroll bar components\n *\n * @param {Array} componentWrappers Contains the wrappers for all the components\n * @param {Canvas} canvas Instance of the current canvas\n * @return {Array} Positions of units either horizontal or vertical\n */\nconst createScrollManager = (componentWrappers, canvas) => {\n    const {\n        horizontalScrollBar,\n        verticalScrollBar,\n        grid\n    } = componentIndexes;\n\n    const horizontalScrollWrapper = componentWrappers[horizontalScrollBar];\n    const verticalScrollWrapper = componentWrappers[verticalScrollBar];\n    const gridWrapper = componentWrappers[grid];\n    const scrollBarManager = new ScrollManager();\n    const scrollBarComponents = {};\n\n    verticalScrollWrapper && (scrollBarComponents.vertical = verticalScrollWrapper);\n    horizontalScrollWrapper && (scrollBarComponents.horizontal = horizontalScrollWrapper);\n\n    scrollBarManager\n                    .scrollBarComponents(scrollBarComponents)\n                    .attachedComponents({\n                        grid: gridWrapper\n                    });\n    canvas.composition().hScrollBar = horizontalScrollWrapper;\n    canvas.composition().vScrollBar = verticalScrollWrapper;\n\n    [horizontalScrollWrapper, verticalScrollWrapper].forEach((wrapper) => {\n        wrapper && wrapper.manager(scrollBarManager);\n    });\n\n    gridWrapper.scrollBarManager(scrollBarManager);\n};\n\nexport const renderLayout = (canvas, renderDetails) => {\n    const layoutManager = canvas._layoutManager;\n    const gridLayout = canvas.layout();\n    const {\n\n        grid\n    } = componentIndexes;\n\n    // Get the component wrappers\n    const compWrappers = componentWrapperMaker(canvas, gridLayout, renderDetails);\n    const componentWrappers = Object.keys(componentIndexes).map(e => compWrappers[e]);\n    const gridWrapper = componentWrappers[grid];\n    if (gridWrapper) {\n        createScrollManager(componentWrappers, canvas);\n    }\n\n    componentWrappers.forEach((componentWrapper, index) => {\n        if (!componentWrapper) {\n            const deleteElementName = componentNames[index];\n            layoutManager.removeComponent(deleteElementName);\n        }\n    });\n    layoutManager.registerComponents(componentWrappers).compute();\n    attachListeners(componentWrappers);\n};\n","import {\n    getDataModelFromIdentifiers,\n    FieldType,\n    mergeRecursive,\n    isSimpleObject,\n    CommonProps\n} from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\n\nimport { applyInteractionPolicy } from '../helper';\n\nconst defaultInteractionPolicy = (valueMatrix, firebolt) => {\n    const isMeasure = field => field.type() === FieldType.MEASURE;\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    const xFields = [].concat(...visualGroup.getFieldsFromChannel('x'));\n    const yFields = [].concat(...visualGroup.getFieldsFromChannel('y'));\n    const colDim = xFields.every(field => field.type() === FieldType.DIMENSION);\n    const fieldInf = visualGroup.resolver().getAllFields();\n    const rowFacets = fieldInf.rowFacets;\n    const colFacets = fieldInf.colFacets;\n    valueMatrix.each((cell) => {\n        const unitFireBolt = cell.valueOf().firebolt();\n        if (!(xFields.every(isMeasure) && yFields.every(isMeasure))) {\n            const facetFields = cell.valueOf().facetByFields()[0];\n            const unitColFacets = facetFields.filter(d => colFacets.findIndex(v => v.equals(d)) !== -1);\n            const unitRowFacets = facetFields.filter(d => rowFacets.findIndex(v => v.equals(d)) !== -1);\n            let propFields;\n            if (colDim) {\n                propFields = unitColFacets.map(d => `${d}`);\n            } else {\n                propFields = unitRowFacets.map(d => `${d}`);\n            }\n\n            unitFireBolt.propagateWith('*', propFields, true);\n        }\n    });\n};\n\nconst defaultCrossInteractionPolicy = {\n    behaviours: {\n        '*': (propagationPayload, context) => {\n            const propagationCanvasAlias = propagationPayload.sourceCanvas;\n            const canvasAlias = context.parentAlias();\n            return propagationCanvasAlias ? canvasAlias === propagationCanvasAlias : true;\n        }\n    },\n    sideEffects: {\n        tooltip: (propagationPayload, context) => {\n            const propagationUnit = propagationPayload.sourceUnit;\n            const propagationCanvas = propagationPayload.sourceCanvas;\n            const unitId = context.id();\n            const canvasAlias = context.parentAlias();\n            if (propagationCanvas) {\n                return propagationCanvas !== canvasAlias ? true : unitId === propagationUnit;\n            }\n            return true;\n        }\n    }\n};\n\n/**\n * This class is responsible for dispatching any behavioural action to all the visual units housed by the canvas.\n * It is created by {@link Canvas}. This class does not handle any physical actions. Physical actions get triggered\n * in {@link VisualUnit} which is managed by it's own firebolt instance. The firebolt instance of canvas only\n * propagates the action to all the visual units in it's composition.\n *\n * To get the firebolt instance of {@link Canvas}\n * ```\n *  const firebolt = canvas.firebolt();\n * ```\n *\n * @class GroupFireBolt\n * @public\n */\nexport default class GroupFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this._interactionPolicy = this.constructor.defaultInteractionPolicy();\n        this.crossInteractionPolicy(this.constructor.defaultCrossInteractionPolicy());\n    }\n\n    static defaultInteractionPolicy () {\n        return defaultInteractionPolicy;\n    }\n\n    static defaultCrossInteractionPolicy () {\n        return defaultCrossInteractionPolicy;\n    }\n\n    interactionPolicy (...policy) {\n        if (policy.length) {\n            this._interactionPolicy = policy[0] || this.constructor.defaultInteractionPolicy();\n            return this;\n        }\n        return this._interactionPolicy;\n    }\n\n    crossInteractionPolicy (...policy) {\n        if (policy.length) {\n            this._crossInteractionPolicy = mergeRecursive(mergeRecursive({},\n                this.constructor.defaultCrossInteractionPolicy()), policy[0] || {});\n            const context = this.context;\n            applyInteractionPolicy(this);\n            context._throwback.registerImmediateListener([CommonProps.MATRIX_CREATED], () => {\n                applyInteractionPolicy(this);\n            });\n            return this;\n        }\n        return this._crossInteractionPolicy;\n    }\n\n    /**\n     * Dispatches a behavioural action with a payload. It takes the name of the behavioural action and a payload\n     * object which contains the criteria aend an array of side effects which determines what side effects are\n     * going to be shown in each visual unit of the canvas. It prepares the datamodel from the given criteria\n     * and initiates a propagation from the datamodel of canvas. Then all the visual units of canvas which listens\n     * to the propagation gets informed on which rows got selected and dispatches the behavioural action sent during\n     * propagation.\n     *\n     * To dispatch a behavioural action on the canvas\n     * ```\n     *  // Get the firebolt instance of the canvas\n     *  const firebolt = canvas.firebolt();\n     *  // Dispatch a brush behaviour\n     *  firebolt.dispatchBehaviour('brush', {\n     *      // Selects all the rows with Horsepower having range between 100 and 200.\n     *      criteria: {\n     *          Horsepower: [100, 200]\n     *      }\n     *  });\n     * // On dispatch of this behavioural action, a selection box gets created and plots gets faded out which are the\n     * // default side effects mapped to this behavioural action.\n     * ```\n     *\n     * ```\n     * Additionally, it can also be passed an array of side effects in the payload.\n     *  // Dispatch a select behaviour with only crossline as side effect.\n     *  firebolt.dispatchBehaviour('select', {\n     *      criteria: {\n     *          Cylinders: ['8']\n     *      },\n     *      sideEffects: ['crossline']\n     *  });\n     * ```\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of the behavioural action\n     * @param {Object} payload Object which contains the interaction information.\n     * @param {Object | Array.<Array>} payload.criteria Identifiers by which the selection happens.\n     * @param {Array.<string|Object>} payload.sideEffects Side effects which needs to be shown.\n     *\n     * @return {GroupFireBolt} Instance of firebolt.\n     */\n    dispatchBehaviour (behaviour, payload) {\n        const propPayload = Object.assign(payload);\n        const criteria = propPayload.criteria;\n        const data = this.context.composition().visualGroup.getGroupByData();\n        const fieldsConfig = data.getFieldsConfig();\n        const model = getDataModelFromIdentifiers(data, criteria);\n        const behaviouralAction = this._actions.behavioural[behaviour];\n\n        if (behaviouralAction) {\n            const fields = isSimpleObject(criteria) ? Object.keys(criteria) : (criteria ? criteria[0] : []);\n            const validFields = fields.filter(field => field in fieldsConfig);\n            const mutates = behaviouralAction.constructor.mutates();\n            const propConfig = {\n                payload: propPayload,\n                action: behaviour,\n                criteria: model,\n                sourceId: this.context.alias(),\n                isMutableAction: mutates,\n                propagateInterpolatedValues: validFields.every(field => fieldsConfig[field].def.type ===\n                    FieldType.MEASURE)\n            };\n            data.propagate(model, propConfig, true);\n        }\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        return this;\n    }\n}\n","import GroupFireBolt from './group-firebolt';\n\nexport default GroupFireBolt;\n","export const APP_INITIAL_STATE = {\n    app: {\n        group: {},\n        units: {},\n        layers: {},\n        canvas: {}\n    },\n    local: {\n        canvas: {},\n        group: {},\n        units: {},\n        layers: {}\n    }\n};\n\n","import { GridLayout } from '@chartshq/layout';\nimport { transactor, Store, getUniqueId, selectElement, STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { RETINAL } from '../constants';\nimport TransactionSupport from '../transaction-support';\nimport { getRenderDetails, prepareLayout, renderLayout } from './layout-maker';\nimport { localOptions, canvasOptions } from './local-options';\nimport GroupFireBolt from './firebolt';\nimport options from '../options';\nimport { APP_INITIAL_STATE } from './app-state';\nimport { initCanvas,\n        setupChangeListener,\n        setLabelRotationForAxes,\n        createGroupState,\n        createLayoutManager,\n        setLayoutInfForUnits\n} from './helper';\n/**\n * Canvas is a logical component which houses a visualization by taking multiple variable in different encoding channel.\n * Canvas manages lifecycle of many other logical component and exposes one consistent interface for creation of chart.\n * Canvas is intialized from environment with settings from environment and singleton dependencies.\n *\n * To create an instance of canvas\n * ```\n *  const env = Muze();\n *  const canvas = env.canvas()\n * ```\n *\n *\n * @class\n * @public\n * @module Canvas\n */\nexport default class Canvas extends TransactionSupport {\n\n    /**\n     * Creates reactive property accessors.\n     * - data\n     * - height\n     * - width\n     * - config\n     * This configs are retrieved from options.\n     */\n    constructor (globalDependencies) {\n        super();\n\n        this._allOptions = Object.assign({}, options, localOptions);\n        this._registry = {};\n        this._composition = {};\n        this._cachedProps = {};\n        this._alias = null;\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        this._composition.layout = new GridLayout();\n        this._store = new Store(APP_INITIAL_STATE);\n\n        this._throwback = new Store({\n            [CommonProps.MATRIX_CREATED]: false,\n            [CommonProps.ON_LAYER_DRAW]: null\n        });\n\n        // Setters and getters will be mounted on this. The object will be mutated.\n        const namespace = STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE;\n        const allOptions = Object.assign({}, options, localOptions, canvasOptions);\n\n        transactor(this, allOptions, this._store, {\n            namespace\n        });\n\n        this.dependencies(Object.assign({}, globalDependencies, this._dependencies));\n        this.firebolt(new GroupFireBolt(this, {\n            behavioural: behaviouralActions,\n            physical: physicalActions,\n            physicalBehaviouralMap: {}\n        }, sideEffects, behaviourEffectMap));\n        this.alias(`canvas-${getUniqueId()}`);\n        this.title('', {});\n        this.subtitle('', {});\n        this.legend({});\n        this.color({});\n        this.shape({});\n        this.size({});\n        setupChangeListener(this);\n         // init layoutManager\n        this._layoutManager = createLayoutManager();\n    }\n\n    /**\n     * Retrieves an instance of layout which is responsible for layouting. Layout is responsible for creating faceted\n     * presentation using table layout.\n     *\n     * @public\n     *\n     * @return {GridLayout} Instance of layout attached to canvas.\n     */\n    layout (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().layout;\n    }\n\n    /**\n     * Retrieves the composition for a canvas\n     *\n     * @public\n     *\n     * @return {object} Instances of the components which canvas requires to draw the full visualization.\n     *      ```\n     *          {\n     *              layout: // Instance of {@link GridLayout}\n     *              legend: // Instance of {@link Legend}\n     *              subtitle: // Instance of {@link TextCell} using which the title is rendered\n     *              title: // Instance of {@link TextCell} using which the title is rendered\n     *              visualGroup: // Instance of {@link visualGroup}\n     *          }\n     *      ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Sets or gets the alias of the canvas. Alias is a name by which the canvas can be referred.\n     *\n     * When setter\n     * @param {string} alias Name of the alias.\n     *\n     * @return {Canvas} Instance of the canvas.\n     *\n     * When getter\n     *\n     * @return {string} Alias of canvas.\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            const visualGroup = this.composition().visualGroup;\n            this._alias = params[0];\n            visualGroup && visualGroup.alias(this.alias());\n            return this;\n        }\n        return this._alias;\n    }\n\n    /**\n     * Creates an instance initiated with given settings.\n     *\n     * @param {Object} initialSettings Initial settings to be populated in the model\n     * @param {Object} regEntry newly created instance with the initial settings\n     * @param {Object} globalDependencies dependencies which will be created only once in the page\n     *\n     * @return {Object} newly created instance with the initial settings\n     */\n    static withSettings (initialSettings, regEntry, globalDependencies) {\n        const instance = new Canvas(globalDependencies);\n\n        for (const key in initialSettings) {\n            instance[key](initialSettings[key]);\n        }\n        // set registry for instance\n        instance.registry(regEntry);\n        return instance;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof Canvas\n     */\n    static formalName () {\n        return 'canvas';\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this canvas. The firebolt instance can be used to dispatch a\n     * behaviour dynamically on the canvas. This firebolt does not handle any physical actions. It is just used to\n     * propagate the action to all the visual units in it's composition.\n     *\n     * @public\n     *\n     * @return {GroupFireBolt} Instance of firebolt associated with canvas.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Registry peoperty accessor\n     *\n     * @param {Object} reg plain old javascript object keyvalue pairs. Key containing module name and value contains\n     * module definition class. The reg object has to be flat object of level 1.\n     */\n    registry (...params) {\n        if (params.length) {\n            const components = Object.assign({}, params[0].components);\n            const componentSubRegistry = Object.assign({}, params[0].componentSubRegistry);\n\n            this._registry = { components, componentSubRegistry };\n            const initedComponents = initCanvas(this);\n            // @todo is it okay to continue this tight behaviour? If not use a resolver to resolve diff component type.\n            this._composition.visualGroup = initedComponents[0];\n            createGroupState(this);\n            this.composition().visualGroup.alias(this.alias()).store(this._store);\n            return this;\n        }\n        return this._registry;\n    }\n\n    /*\n     * Prepare dependencies for top level elements\n     */\n    dependencies (...param) {\n        if (param.length) {\n            this._dependencies = param[0];\n            return this;\n        }\n        // @todo prepare dependencies here.\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     * @param {*} lifeCycles\n     *\n     * @memberof Canvas\n     */\n    lifeCycle (lifeCycles) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        if (lifeCycles) {\n            lifeCycleManager.register(lifeCycles);\n            return this;\n        }\n        return lifeCycleManager;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof Canvas\n     */\n    legend (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().legend;\n    }\n\n    /**\n     * Returns a promise for various {@link LifecycleEvents} of the various components of canvas. The promise gets\n     * resolved once the particular event gets completed.\n     *\n     * To use this,\n     * ```\n     *      canvas.once('layer.drawn').then(() => {\n     *          // Do any post drawing work here.\n     *      });\n     * ```\n     * @public\n     *\n     * @param {string} eventName Name of the lifecycle event.\n     *\n     * @return {Promise} A pending promise waiting for resolve to be called.\n     */\n    once (eventName) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        return lifeCycleManager.retrieve(eventName);\n    }\n\n    /**\n     * Internal function to trigger render, this method is cognizant of all the properties of the core modules and\n     * establish a passive reactivity. Passive reactivity is not always a bad thing :)\n     * @internal\n     */\n    render () {\n        const mount = this.mount();\n        // removeChild(mount);\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        // Get render details including arrangement and measurement\n        const renderDetails = getRenderDetails(this, mount);\n        lifeCycleManager.notify({ client: this, action: 'beforedraw' });\n        // Prepare the layout by triggering the matrix calculation\n        prepareLayout(this.layout(), renderDetails);\n\n        this._layoutManager.dimension({\n            height: renderDetails.measurement.canvasHeight,\n            width: renderDetails.measurement.canvasWidth\n        });\n\n        this._layoutManager.renderAt(mount);\n\n        // Render each component\n        renderLayout(this, renderDetails);\n\n        setLayoutInfForUnits(this);\n\n        // setLabelRotation\n        setLabelRotationForAxes(this);\n    }\n\n    /**\n     * Returns the instances of x axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the top axis and the second element represents the bottom\n     *   // axis.\n     *   [\n     *      [X1, X2],\n     *      [X3, X4]\n     *   ]\n     * ```\n     * @public\n     *\n     * @return {Array.<Array>} Instances of x axis.\n     */\n    xAxes () {\n        return this.composition().visualGroup.getAxes('x');\n    }\n\n    /**\n     * Returns the instances of y axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the left axis and the second element represents the right\n     *   // axis.\n     *   [\n     *      [Y1, Y2],\n     *      [Y3, Y4]\n     *   ]\n     * ```\n     * @public\n     * @return {Array.<Array>} Instances of y axis.\n     */\n    yAxes () {\n        return this.composition().visualGroup.getAxes('y');\n    }\n\n    /**\n     * Returns all the retinal axis of the canvas. Color, shape and size axis are combinedly called retinal axis.\n     *\n     * @public\n     * @return {Object} Instances of retinal axis.\n     *          ```\n     *              {\n     *                  color: [ColorAxis], // Array of color axis.\n     *                  shape: [ShapeAxis], // Array of shape axis.\n     *                  size: [SizeAxis] // Array of size axis.\n     *              }\n     *          ```\n     */\n    getRetinalAxes () {\n        const visualGroup = this.composition().visualGroup;\n        return visualGroup.getAxes(RETINAL);\n    }\n\n    mount (...params) {\n        if (params.length) {\n            let value = params[0];\n            if (typeof params[0] === 'string') {\n                value = selectElement(params[0]).node();\n            }\n            this._mount = value;\n            return this;\n        }\n        return this._mount;\n    }\n}\n","import { cellRegistry, SimpleCell } from '@chartshq/visual-cell';\nimport { VisualUnit } from '@chartshq/visual-unit';\nimport { layerRegistry } from '@chartshq/visual-layer';\nimport { SimpleGroup, VisualGroup } from '@chartshq/visual-group';\n\nexport const COMPONENTS = {\n    VisualGroup,\n    VisualUnit\n};\nexport const SUBREGISTRIES = {\n    cellRegistry,\n    layerRegistry\n};\nexport const INTERFACES = {\n    SimpleGroup,\n    SimpleCell\n};\n\n","import { DEFAULT_LAYERS } from './defaults';\n\nexport default () => {\n    const reg = DEFAULT_LAYERS;\n    const regObj = {\n        set: (key, def) => {\n            reg[key] = def;\n            return regObj;\n        },\n        get: () => reg\n    };\n    return regObj;\n};\n","import {\n    transactor,\n    Smartlabel,\n    enableChainedTransaction,\n    LifeCycleManager,\n    DataModel,\n    makeElement,\n    getClientPoint,\n    selectElement,\n    getEvent,\n    require,\n    DateTimeFormatter,\n    Store\n} from 'muze-utils';\n\nimport {\n    SurrogateSideEffect,\n    SpawnableSideEffect,\n    sideEffects,\n    PersistentBehaviour,\n    GenericBehaviour,\n    VolatileBehaviour,\n    behaviouralActions,\n    GenericSideEffect\n} from '@chartshq/muze-firebolt';\nimport { layerFactory } from '@chartshq/visual-layer';\nimport pkg from '../package.json';\nimport * as operators from './operators';\nimport { actionModel as ActionModel } from './action-model';\nimport options from './options';\nimport { Canvas } from './canvas';\nimport { COMPONENTS, SUBREGISTRIES } from './default-registry';\nimport './muze.scss';\n\n// Cache singleton instances which should be included only once in a page\nconst globalCache = {};\nconst defaultRegistry = COMPONENTS;\n\nconst overrideRegistryDefinitions = (overrideRegistry, registry) => {\n    for (const prop in overrideRegistry) {\n        registry.set(prop, overrideRegistry[prop]);\n    }\n};\n\n/**\n * Entry point to renderer. Initializes an environment with settings and registries for canvas. This is a simple wrapper\n * over {@link Canvas} which enables common configuration passing to multiple such canvases.\n *\n * Everytime `muze()` is called it creates an environment. These environment supports subset of APIs of Canvas. If\n * common configuration is used to render multiple canvases then it can be set directly in the env. Like if data is\n * common across all the visulization then its better to set the data in env. When a canvas is created it receives all\n * those configuration from env.\n *\n * ```\n *  // Creates an environment\n *  const env = muze()\n *  // Set data property in environment, so that all the canvas created from the same environment gets this data\n *  // automatically\n *  env.data(dm);\n *  // Creates canvas, by default env pushes data to canvas instance\n *  const canvas = env.canvas();\n * ```\n *\n * If a property is set on both environment and canvas instance, property set on canvas instance gets more priority.\n *\n * @public\n * @module muze\n * @namespace Muze\n *\n * @return {Env} Instance of an environment\n */\nconst muze = () => {\n    // Setters and getters will be mounted on this. Object will be mutated.\n    const [env, globalStore] = transactor({}, options);\n    const components = Object.assign({}, COMPONENTS);\n    const componentSubRegistryDef = Object.assign(SUBREGISTRIES);\n    const componentSubRegistry = {};\n\n    for (const prop in componentSubRegistryDef) {\n        componentSubRegistry[prop] = componentSubRegistryDef[prop]();\n    }\n\n    // Apart form the setter getter, an instance method is injected to create real renderer instances\n    env.canvas = () => {\n        // Create a canvas instance with this settings\n        const settings = globalStore.serialize();\n        const canvas = Canvas.withSettings(settings, { /* registry */\n            components,\n            componentSubRegistry\n        }, env.globalDependencies());\n\n        // Whenever settings is changed canvas is updated\n        enableChainedTransaction(globalStore, canvas, Object.keys(settings));\n\n        return canvas;\n    };\n\n    // Global dependencies for for compositions. Only one copy of the same should be in the page\n    env.globalDependencies = () => {\n        if (!globalCache.smartlabel) {\n            globalCache.smartlabel = new Smartlabel(1, 'body');\n        }\n        return {\n            smartlabel: globalCache.smartlabel,\n            lifeCycleManager: new LifeCycleManager()\n        };\n    };\n\n    // Retrieves global settings. This getter is readonly so that user can't change this as change should happen\n    // only from setter to avoid unwanted sync issues.\n    env.settings = () => globalStore.serialize();\n\n    env.registry = (...overrideRegistry) => {\n        // Selectively copy the properties from COMPONENTS\n        if (overrideRegistry.length) {\n            for (const prop in overrideRegistry) {\n                if (prop in defaultRegistry) {\n                    components[prop] = overrideRegistry[prop];\n                }\n            }\n            return env;\n        }\n        return components;\n    };\n\n    env.cellRegistry = (...overrideRegistry) => {\n        const cellRegistry = componentSubRegistry.cellRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], cellRegistry);\n            return env;\n        }\n        return cellRegistry.get();\n    };\n\n    env.layerRegistry = (...overrideRegistry) => {\n        const layerRegistry = componentSubRegistry.layerRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], layerRegistry);\n            return env;\n        }\n        return layerRegistry.get();\n    };\n\n    return env;\n};\n\nconst SideEffects = {\n    sideEffects,\n    standards: {\n        SurrogateSideEffect,\n        SpawnableSideEffect,\n        GenericSideEffect\n    }\n};\n\nconst Behaviours = {\n    behaviouralActions,\n    standards: {\n        GenericBehaviour,\n        PersistentBehaviour,\n        VolatileBehaviour\n    }\n};\n\nmuze.DataModel = DataModel;\nmuze.version = pkg.version;\nmuze.SideEffects = SideEffects;\nmuze.ActionModel = ActionModel;\nmuze.layerFactory = layerFactory;\nmuze.Operators = operators;\nmuze.Behaviours = Behaviours;\nmuze.utils = {\n    getClientPoint,\n    getEvent,\n    makeElement,\n    selectElement,\n    DateTimeFormatter,\n    require\n};\nmuze.Model = new Store().model.constructor;\nexport default muze;\n"],"sourceRoot":""}